{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"themes/fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/fluid.png","path":"img/fluid.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"source/3-year-birth/DSC04844.JPG","path":"3-year-birth/DSC04844.JPG","modified":0,"renderable":0},{"_id":"source/3-year-birth/DSC04844_sy.jpg","path":"3-year-birth/DSC04844_sy.jpg","modified":0,"renderable":0},{"_id":"source/images/pasted-0.png","path":"images/pasted-0.png","modified":0,"renderable":0},{"_id":"source/res/default.jpg","path":"res/default.jpg","modified":0,"renderable":0},{"_id":"source/images/少数/1689417979359.png","path":"images/少数/1689417979359.png","modified":0,"renderable":0},{"_id":"source/images/少数/1689419458540.png","path":"images/少数/1689419458540.png","modified":0,"renderable":0},{"_id":"source/images/少数/1689418106164.png","path":"images/少数/1689418106164.png","modified":0,"renderable":0},{"_id":"source/images/少数/1689419453277.png","path":"images/少数/1689419453277.png","modified":0,"renderable":0},{"_id":"source/res/d1.jpg","path":"res/d1.jpg","modified":0,"renderable":0},{"_id":"source/res/d2.jpg","path":"res/d2.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"source/res/index.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1673945738590},{"_id":"source/robots.txt","hash":"71e2eb50e2ca0c6f0d569acbbda60c9b116de013","modified":1658293456772},{"_id":"source/_discarded/Hexo-Theme-Sakura.md","hash":"c20da70307d03c654719aba88241c735292f6caf","modified":1658293456754},{"_id":"source/_discarded/Untitled.md","hash":"3e0196128318798a6e51eabef12811ce1077e27f","modified":1658293456754},{"_id":"source/3-year-birth/index.md","hash":"e23317c8ce041a9d65fcc2207926ab3341812fd8","modified":1673945738562},{"_id":"source/_discarded/[08-1202K-08-1203J]Extra.md","hash":"2180ed6522e1ef599aef45e5bf5821b8a3ea06b7","modified":1658293456754},{"_id":"source/_drafts/0000-D-2021gk.md","hash":"5fa60a20c6b9647b21b2512eea1b7f9149cedb4b","modified":1673945738563},{"_id":"source/_drafts/08-0902-A.md","hash":"9a5a41083ca88014a0b00b1853387a7d3c628a65","modified":1658293456754},{"_id":"source/_drafts/08-1202G-08-1203E.md","hash":"886f8b0bee71a17188f60e23fb5a67273485dc89","modified":1673945738564},{"_id":"source/_drafts/08-1202H-08-1203G.md","hash":"617ad2280fb2a43a1f786c00511b818ad7dddfdc","modified":1673945738564},{"_id":"source/_drafts/2d-animate-line.md","hash":"c61da78862f7c83ceeb530acec316d9408d57824","modified":1658293456759},{"_id":"source/_drafts/3-year-birth.md","hash":"c93f75fdceb545896e4311c9305b20bf8780c490","modified":1673945738570},{"_id":"source/_drafts/AS2022.md","hash":"cc655294c401d80e143f60ce49510ea1f116df50","modified":1673945738571},{"_id":"source/_drafts/[08-1202-08-1203]D.md","hash":"15bf39dbe3b8cdebd6584f6e593e21b14dd88e4b","modified":1673945738573},{"_id":"source/_drafts/SLA2020.md","hash":"b5818abb65f9cb497eb4348b1722eb6c67242093","modified":1658293456760},{"_id":"source/_drafts/announcement-202109.md","hash":"75f15d52cd339fa8a22492601cfbe0e2416a8a06","modified":1673945738573},{"_id":"source/_drafts/ar-sr-na学习中心-影视后期篇：001-必要工具准备.md","hash":"199894fde33e536d9b696feb05a58f6680c1e79a","modified":1658293456761},{"_id":"source/_drafts/aaaaa.md","hash":"f8857b51281101d23558e9339f8f89b1a1371835","modified":1658293456754},{"_id":"source/_drafts/ar-sr-na学习中心-影视后期篇：002-开始第一个项目.md","hash":"cdd1e353fcb99ecc1058241a5fc54ab4dfad72c7","modified":1658293456761},{"_id":"source/_drafts/blender-Festivity-render.md","hash":"c787ba87c0f11db0600592d056edb82a50043adc","modified":1673945738573},{"_id":"source/_drafts/cpu爆炸帧抠二值化后的辉夜大小姐想让我告白ed-分帧.md","hash":"cf7779b7aa6a999c69214bf6d3671ef933c4bd5f","modified":1658293456761},{"_id":"source/_drafts/level-upper.md","hash":"857d7de3d787a325d834602cb68ba8061d129b10","modified":1673945738574},{"_id":"source/_drafts/hamr55.md","hash":"25055afc787f620ac8042296a225e95d39e8df41","modified":1658293456762},{"_id":"source/_drafts/pr-start-1前言re-从零开始，up主的初衷与愿景-素材归档.md","hash":"2eb13a7422216663e80b061fa9638ef307669348","modified":1658293456762},{"_id":"source/_drafts/pr入门教程006关键帧使用操作方法-素材归档.md","hash":"ad30d91fa0f0829a7f8361a43de55c9315dac814","modified":1658293456763},{"_id":"source/_drafts/pr基础教程003变速，倒放效果.md","hash":"4dce450b9b376f734ae5e2a6190af0c0bef568d0","modified":1658293456763},{"_id":"source/_drafts/pr基础教程032防止帕金森-pr防抖教程-素材归档.md","hash":"fc36ba998b74b01b046877009341af77988c25c9","modified":1658293456763},{"_id":"source/_drafts/pr教程-extra-扩展篇001画质基础-素材.md","hash":"a7da268c6a3fa3c77ebd5def8fa85f2f67350c59","modified":1658293456763},{"_id":"source/_drafts/pr进阶教程004视频线稿风格化-素材.md","hash":"c54e20f767ed8e0c971e146b992ca41877091226","modified":1658293456763},{"_id":"source/_drafts/standred.md","hash":"e90dd77f4c9b8ba7ef4e03758a7da3bd2f8b30d5","modified":1658293456763},{"_id":"source/_drafts/vlog-0012019南宁月邪动漫广西行-素材归档.md","hash":"bee4efad5d5b52775d435b0c88b4fc9b16e95945","modified":1658293456764},{"_id":"source/_drafts/vol024.md","hash":"b984b3b5bd915933873a7d3d0e710787ede7e619","modified":1673945738575},{"_id":"source/_drafts/加密通话.md","hash":"b7fe2a70a89ab6b9f709e09e3e14e3085c081de7","modified":1658293456755},{"_id":"source/_drafts/博客全站迁移至Serverless架构.md","hash":"c0897b6fffc5f57bd48c1a1396f78eb0ad84923d","modified":1658293456765},{"_id":"source/_drafts/关于近期被喷事件的后续以及警告.md","hash":"31da3e8a3f7d836a437a030f97bb9fa8681c2d46","modified":1658293456755},{"_id":"source/_drafts/少数.md","hash":"f33065790036ebc4bdec3cfb30aa627f6a3fa464","modified":1689420284501},{"_id":"source/_posts/08-0902-E-LA3600.md","hash":"bdcd75e4218d15fa11888f1d6813463a2fdde78d","modified":1673945738564},{"_id":"source/_drafts/帧扣二值化紫罗兰的永恒花园op.md","hash":"0b9e90970da24acd182c532d23c05b5e449c502f","modified":1658293456765},{"_id":"source/_drafts/爱奇艺网络大电影《木马》众筹商业计划.md","hash":"7169ba3bcacaec50e19d4f5b8b4d1727de50042f","modified":1658293456766},{"_id":"source/_posts/08-0902P-A.md","hash":"f462a4e0dab2b3ee83cabb37d4810afac7bf5c40","modified":1673945738564},{"_id":"source/_drafts/我也不知道写些什么.md","hash":"12b05f1c1b3fa48d548943352f37d94e5933a128","modified":1658293456755},{"_id":"source/_posts/08-1202L-08-1203K.md","hash":"5f004190dd6092b2a6a60e3bb0958f126bb1f529","modified":1673945738565},{"_id":"source/_posts/08-1202S-08-1203R.md","hash":"9611367aa561e57a583b6f0cfd1c2bba4462c29f","modified":1673945738566},{"_id":"source/_posts/1928176.md","hash":"981a6533b882490ed9986a918909e112b38fc1e6","modified":1673945738566},{"_id":"source/_posts/1961325.md","hash":"5a8d8595e08852ffca9246c692f063169d43a749","modified":1673945738567},{"_id":"source/_posts/1972305.md","hash":"03a0a603a900453e7196173e1ea352eb6edbf223","modified":1673945738567},{"_id":"source/_posts/1976489.md","hash":"8005b7f060c84f844186a5a9de79a54b181ee367","modified":1673945738567},{"_id":"source/_posts/2008264.md","hash":"1031950dd1a73f9da2e0b63d2fe0de17df77068b","modified":1673945738568},{"_id":"source/_posts/2021-4ybirth.md","hash":"b61c3537910fa232f904fdb85d52cb697c551184","modified":1673945738570},{"_id":"source/_posts/2011313.md","hash":"1ffa5c16659eb650a58cbc7d00287297c5ac5de8","modified":1673945738569},{"_id":"source/_posts/2066053.md","hash":"5af7b829022b8e3052ab11fd75eebafc92655bac","modified":1673945738570},{"_id":"source/_posts/2277385.md","hash":"4a21257845e7b37357fa736d3eeb3d3b12952fdc","modified":1682955448837},{"_id":"source/_posts/2348693.md","hash":"15c4da39377bfcfd98417ed8f8159fb1becaa655","modified":1698157162580},{"_id":"source/_posts/[08-1202-08-1203]A.md","hash":"78abc6c26ce07d897a9cbb7b627803ec1186767d","modified":1673945738571},{"_id":"source/_posts/[08-120308-010308-0300]A.md","hash":"694839a8bd5fcf90ba6113412d7b6447f01836d8","modified":1673945738573},{"_id":"source/_posts/[08-1202-08-1203]B.md","hash":"72e9fc86593082cdac314902f1dfa97e8d60406b","modified":1673945738572},{"_id":"source/_posts/前端中的live2d与技术.md","hash":"4601ba98a9541d11d8b74e965016209fe8829316","modified":1658293456765},{"_id":"source/_posts/关于arri的那位美女isabella.md","hash":"89366595332bb83cc73b89ae7b1ec2b513b12957","modified":1658293456764},{"_id":"source/_posts/摄影师必读-为什么焦距如此重要？.md","hash":"570af6e57cbdf3e8e68476511a9437c9f47d4558","modified":1658293456765},{"_id":"source/_posts/斯坦尼康m1-volt系统简介steadicam微电影摄影师专业技术论坛.md","hash":"3b7e98a72430913f6cfa1e84b8a3868ceb1180c9","modified":1658293456766},{"_id":"source/_posts/航天精神.md","hash":"8d015c641ecc11e002ef2b8492afe2edfae6ecd1","modified":1673945738576},{"_id":"source/images/pasted-0.png","hash":"9c36fb6c8c38ccb71ec589426f4e07728c2a1990","modified":1658293456769},{"_id":"source/bhphoto/index.md","hash":"0cb8a118515fc923e79ae0cd86ac2899388b38da","modified":1658293456767},{"_id":"source/jslearn/app.md","hash":"15cc0c651f16e94cea07aed979e4199acd9cf506","modified":1658293456770},{"_id":"source/links/index.md","hash":"f7932da59a254e19d58bc3de0d5bfb0833ca484a","modified":1725696485661},{"_id":"source/jslearn/index.md","hash":"def03ac86c2e12eff4ac976dc5e14059c6d2465f","modified":1658293456770},{"_id":"source/policies/private.md","hash":"44806c13fabe30e96f809e5d44a1aa370da4c9a1","modified":1725696833333},{"_id":"source/policies/copyright.md","hash":"67bc011397d0f81705142f837060c756a2c3d72e","modified":1725696835848},{"_id":"source/res/index.js","hash":"796fab4a3f331c0551f1a753ca88da6e3a771784","modified":1673945738590},{"_id":"source/images/少数/1689417979359.png","hash":"62d171fa66aabdfcd98cb237ad8ba6710cca5ae1","modified":1689417979761},{"_id":"source/images/少数/1689418106164.png","hash":"e94094ed8a95daadb42df80d4e7607110b64b26a","modified":1689418106474},{"_id":"source/images/少数/1689419453277.png","hash":"18928b1a261e63076ae82069a1ea2dde2cbc615e","modified":1689419453569},{"_id":"source/res/default.jpg","hash":"455a0df86730dce8e0760cc5c5eaf52b9467a6c0","modified":1673945738583},{"_id":"source/images/少数/1689419458540.png","hash":"e06c226778e4e2a3dcb1a81316a4e78dc772ea3d","modified":1689419458836},{"_id":"themes/fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1673945738636},{"_id":"themes/fluid/.gitignore","hash":"9ede98b8d9dca802f82f651afb3b0366d69f05f1","modified":1673945738595},{"_id":"themes/fluid/.editorconfig","hash":"b595159772f3ee1ef5e6780ce307270e741cb309","modified":1673945738591},{"_id":"themes/fluid/.eslintrc","hash":"3df89453e1f63051fafc90f16a8d83951050e316","modified":1673945738591},{"_id":"themes/fluid/.gitattributes","hash":"3e00e1fb043438cd820d94ee3dc9ffb6718996f3","modified":1673945738591},{"_id":"themes/fluid/README.md","hash":"2ec6a89d66f8e41fded68aa8ec3b3363a20ea48c","modified":1673945738595},{"_id":"themes/fluid/README_en.md","hash":"10ff41f4b3cf24ad0fece6555b77f61694916133","modified":1673945738596},{"_id":"themes/fluid/LICENSE","hash":"511e49f0bd8282a0d002c527474da8e1e5add393","modified":1673945738595},{"_id":"themes/fluid/package.json","hash":"826213e18dee24a24d8ce4f34fb981b7d4021b54","modified":1673945738615},{"_id":"themes/fluid/_config.yml","hash":"fa8b306c857ee7b5262d06ac1ac6f75df81002f9","modified":1673945738596},{"_id":"themes/fluid/languages/de.yml","hash":"c52ce73a291fa50953edbd11c1dfb1cc7cab52c2","modified":1673945738597},{"_id":"themes/fluid/languages/eo.yml","hash":"76d2920b49c8d2489c37514489545d0fc4eac834","modified":1673945738597},{"_id":"themes/fluid/languages/es.yml","hash":"7fcd16cd363f1a166a3270c23c0660eff7475744","modified":1673945738597},{"_id":"themes/fluid/languages/en.yml","hash":"2839da328f197cf90cafdf2b538fcd027ab6cfba","modified":1673945738597},{"_id":"themes/fluid/languages/ja.yml","hash":"411aa49e2e8dea90a6d8cc2dc92f264609ea273b","modified":1673945738597},{"_id":"themes/fluid/languages/ru.yml","hash":"02d8ad186a2d52c20b76b35f406a728c6486f820","modified":1673945738598},{"_id":"themes/fluid/languages/zh-HK.yml","hash":"676b3ee8a16d796b4a898a9e5be2f52c372055ed","modified":1673945738598},{"_id":"themes/fluid/languages/zh-CN.yml","hash":"b05d1a43516dc6886d65631d90d6995acae673db","modified":1673945738598},{"_id":"themes/fluid/languages/zh-TW.yml","hash":"aac765cccef9f9044c4a88941fd01ba1883178fc","modified":1673945738599},{"_id":"themes/fluid/layout/404.ejs","hash":"0a589faccde6c2c9572e8d3d359e7c8fb166335e","modified":1673945738599},{"_id":"themes/fluid/layout/about.ejs","hash":"bd3ede2a5f45c5256cf8f883bb8fcca645834869","modified":1673945738613},{"_id":"themes/fluid/layout/categories.ejs","hash":"838a68e210bddfca6d4ba070e1e2f1ca53cb7d06","modified":1673945738614},{"_id":"themes/fluid/layout/archive.ejs","hash":"c524ce76747042ec2f9ed8d5025f80e01b462b3b","modified":1673945738613},{"_id":"themes/fluid/layout/category.ejs","hash":"264f68cbf826787e683a30e1377c56c0895c7386","modified":1673945738614},{"_id":"themes/fluid/layout/layout.ejs","hash":"20a118362da100842537b0bfbd6730c7381bb1c6","modified":1694877897437},{"_id":"themes/fluid/layout/index.ejs","hash":"e22ef1bdd06603863ae9ef3c62bcc326dee4f078","modified":1694877894040},{"_id":"themes/fluid/layout/page.ejs","hash":"8ba210724c023d45a4564415762f3da299bd1d0e","modified":1673945738615},{"_id":"themes/fluid/layout/links.ejs","hash":"fbed4b3d1e475b3de9d8ce05362abcc658a53408","modified":1694877624088},{"_id":"themes/fluid/layout/post.ejs","hash":"5a712dded014ff5a5ffea79fb0e30b429ae715c7","modified":1673945738615},{"_id":"themes/fluid/layout/tag.ejs","hash":"e87fc58829ea214ac16e8e4f13cd5c389133697b","modified":1673945738615},{"_id":"themes/fluid/layout/tags.ejs","hash":"b7c1a6d8fc1097fc16d2300260297013cb692153","modified":1673945738615},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report.md","hash":"7d7c1e5a1da6b4f7be6685beb4798ec76d5efd31","modified":1673945738591},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question.md","hash":"102213e5d6790d060c0e26b4a3a7ec744d753c52","modified":1673945738593},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request_zh.md","hash":"7db378613df2b7d13e8c428c006399a879a4a852","modified":1673945738593},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report_zh.md","hash":"fea63a9a5c3befd8783705eed09adf1b596a6203","modified":1673945738592},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request.md","hash":"5cc30e7b6e7b77c8b40b182ba02a5d93d37d2fc2","modified":1673945738592},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question_zh.md","hash":"07e24578c25fcaca94618fd86569887dadf7a276","modified":1673945738594},{"_id":"themes/fluid/.github/workflows/limit.yaml","hash":"bdbdb66da69ab7353b546f02150a6792f4787975","modified":1673945738594},{"_id":"themes/fluid/.github/workflows/publish.yaml","hash":"dcdbe1698a6ee61f741c29ef560f859f66ffa32c","modified":1673945738595},{"_id":"themes/fluid/layout/_partials/category-list.ejs","hash":"0c14869e15f7dc615c8353765569644238f38f2d","modified":1673945738600},{"_id":"themes/fluid/layout/_partials/category-chains.ejs","hash":"508254a648d8597e62e4012c8beab44bfa82e904","modified":1673945738600},{"_id":"themes/fluid/layout/_partials/css.ejs","hash":"70646e7f7a7684e12b298cd8a36fbea2814c3635","modified":1673945738603},{"_id":"themes/fluid/layout/_partials/footer.ejs","hash":"52b8954ae0eff5eb66a3841b37f144336b8f0866","modified":1673945738604},{"_id":"themes/fluid/layout/_partials/comments.ejs","hash":"bfea4674af78eb72b3a6baaa7ec9fc3c3db55ebd","modified":1673945738600},{"_id":"themes/fluid/layout/_partials/header.ejs","hash":"3668304d08c48b68d532532921a12069a2736150","modified":1673945738606},{"_id":"themes/fluid/layout/_partials/head.ejs","hash":"3431a4c8c8d9b6e860c7144123991477ee5f4c53","modified":1694877900727},{"_id":"themes/fluid/layout/_partials/markdown-plugins.ejs","hash":"b5cd435b27f090939b6051bef41a38a3376044ac","modified":1673945738606},{"_id":"themes/fluid/layout/_partials/archive-list.ejs","hash":"78c34e32746041f23678669bbadfbede15e4c6d2","modified":1673945738600},{"_id":"themes/fluid/layout/_partials/paginator.ejs","hash":"0d443f23c459787338917900f50fec1c8b3b3bdd","modified":1673945738606},{"_id":"themes/fluid/scripts/events/index.js","hash":"6c3b24207e4ea3ae4edeb715af40ef23711b92b9","modified":1673945738616},{"_id":"themes/fluid/layout/_partials/search.ejs","hash":"57a0f61242d9ce2bd2c51b2f84193f6dc1377ef9","modified":1673945738612},{"_id":"themes/fluid/scripts/generators/pages.js","hash":"a2a15ea722863aba09dcad578558432682a3b6b3","modified":1673945738620},{"_id":"themes/fluid/layout/_partials/scripts.ejs","hash":"89fc9f663a1091911b79ab9697c09446d16184f9","modified":1673945738612},{"_id":"themes/fluid/scripts/filters/default-injects.js","hash":"3d30c722b9e24c33577d6fab822628841fadf992","modified":1673945738618},{"_id":"themes/fluid/scripts/filters/locals.js","hash":"2340a576635b16fd2456b3494f5afe89cd7764db","modified":1673945738618},{"_id":"themes/fluid/scripts/filters/post-filter.js","hash":"1c9156e12030fa2219a933edde460ec563836047","modified":1673945738619},{"_id":"themes/fluid/scripts/generators/local-search.js","hash":"bda7fbe58082a2a02c0db066794b791b14462271","modified":1673945738619},{"_id":"themes/fluid/scripts/helpers/engine.js","hash":"96af7e55fdbe0819bacc554ecbfe42375a088df6","modified":1673945738620},{"_id":"themes/fluid/scripts/helpers/export-config.js","hash":"00a41768fe258bb8f3323bf4bb0b862d6e2d97c0","modified":1673945738621},{"_id":"themes/fluid/scripts/helpers/date.js","hash":"9bc9ba08d1d871394ee1c3a1cc2f21dc343f515a","modified":1673945738620},{"_id":"themes/fluid/scripts/helpers/import.js","hash":"f9821f7789ea6f069977a8c642aa5ccb6d19077c","modified":1673945738621},{"_id":"themes/fluid/scripts/helpers/injects.js","hash":"9219d59c51930c7a82fcde918d6efbc5aa572ea2","modified":1673945738621},{"_id":"themes/fluid/scripts/helpers/page.js","hash":"49b2c6449d7be35739c6cfea3cab4e790580983a","modified":1673945738621},{"_id":"themes/fluid/scripts/tags/button.js","hash":"e1d0caed12e7cd9a35cf64272c41854b2901a58f","modified":1673945738622},{"_id":"themes/fluid/scripts/helpers/scope.js","hash":"3b67d50050158423c8fa47f1de6aedcfe916637b","modified":1673945738621},{"_id":"themes/fluid/scripts/helpers/url.js","hash":"f713ddb6c8018ec7b96d3567057f1f932609beea","modified":1673945738621},{"_id":"themes/fluid/scripts/helpers/wordcount.js","hash":"9f88c9149e8e7c4f90a5cf833373e4d18ecb2500","modified":1673945738622},{"_id":"themes/fluid/scripts/tags/checkbox.js","hash":"aa03d0b914d87b9194ee3a0612ab5827a8dedbdd","modified":1673945738623},{"_id":"themes/fluid/scripts/helpers/utils.js","hash":"d7ff7cf5e721dfeafe0c2a77a5929b2c3f8fee2a","modified":1673945738622},{"_id":"themes/fluid/scripts/tags/group-image.js","hash":"cc176cc1d7e7cc28cedf8397ae748c691d140be2","modified":1673945738623},{"_id":"themes/fluid/scripts/tags/mermaid.js","hash":"dbfe59fde77d87b1d7d0c46480a2a729010988eb","modified":1673945738624},{"_id":"themes/fluid/scripts/utils/compare-versions.js","hash":"37f90bd4e35ce49457dc2a348b9f66e0b242c014","modified":1673945738625},{"_id":"themes/fluid/scripts/tags/label.js","hash":"6c5916d86c63795c7e910bf614b0e7ece5073702","modified":1673945738624},{"_id":"themes/fluid/scripts/tags/note.js","hash":"8020acc2c4bb3a2054e3cb349fac7cd10b79a0be","modified":1673945738624},{"_id":"themes/fluid/scripts/utils/object.js","hash":"3e03b534e2e92a6e17567b006d7e3eaad4b37598","modified":1673945738625},{"_id":"themes/fluid/scripts/utils/resolve.js","hash":"a5d70005913ab03cea0a0dc601097628b4dbd5a8","modified":1673945738625},{"_id":"themes/fluid/scripts/utils/url-join.js","hash":"dbdb10b23fcd3928e86a4cb46fa3455e060b4aa0","modified":1673945738626},{"_id":"themes/fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1673945738638},{"_id":"themes/fluid/source/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1673945738641},{"_id":"themes/fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1673945738642},{"_id":"themes/fluid/source/css/gitalk.css","hash":"1fe60b2ab1d704f5a4f55e700dca5b8785fb390e","modified":1673945738638},{"_id":"themes/fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1673945738642},{"_id":"themes/fluid/source/css/highlight-dark.styl","hash":"c74d7aed425d20f2fa096f386a9521b67b9ab269","modified":1673945738638},{"_id":"themes/fluid/source/css/highlight.styl","hash":"57ce8b8f95ab1f40612a9dce1793de5ab9b4bbfc","modified":1673945738638},{"_id":"themes/fluid/source/js/boot.js","hash":"33bb7c8255d2e3c93a1bea8c9221399b3a868a63","modified":1673945738643},{"_id":"themes/fluid/source/css/main.styl","hash":"9e9171325bb7148c11ceee283d00c137c8a1c5c5","modified":1673945738638},{"_id":"themes/fluid/source/js/color-schema.js","hash":"31d35fe044ad01dda7975d47c99d636eaa81bfc8","modified":1673945738644},{"_id":"themes/fluid/source/js/img-lazyload.js","hash":"67f6250f98b36a6599ea982d11cbb060c5ffb92a","modified":1673945738644},{"_id":"themes/fluid/source/js/events.js","hash":"0eda8690b8e3912d90afe987ea6e80e881338c1f","modified":1673945738644},{"_id":"themes/fluid/source/js/leancloud.js","hash":"e9ad1b5659f0af867174687daa0ecf4375e40b75","modified":1673945738644},{"_id":"themes/fluid/source/js/plugins.js","hash":"5f33939016d0a7bb72d4376af46ebb28fbf85c04","modified":1673945738645},{"_id":"themes/fluid/source/js/local-search.js","hash":"1ab61ed47ec88c876e447872342fed9be560b0f0","modified":1673945738644},{"_id":"themes/fluid/source/js/utils.js","hash":"61e8108fe16fbf19ce13ea89b3120c1191bb4665","modified":1673945738645},{"_id":"themes/fluid/source/xml/local-search.xml","hash":"85fcc23b4db654a7f91fc55b6fb0442bb3ed3a9a","modified":1673945738646},{"_id":"themes/fluid/layout/_partials/comments/changyan.ejs","hash":"0c410ef79785897c8de3da333b057a2936fd569b","modified":1673945738600},{"_id":"themes/fluid/layout/_partials/comments/cusdis.ejs","hash":"1e93ca89777e4beb0f0e5cb70e03aab48e958542","modified":1673945738601},{"_id":"themes/fluid/layout/_partials/comments/disqus.ejs","hash":"79ec17eec6e15076c685688e740230e92c66efa9","modified":1673945738601},{"_id":"themes/fluid/layout/_partials/comments/giscus.ejs","hash":"66995ec9dab10ed35c2a775010c447113c6848d4","modified":1673945738602},{"_id":"themes/fluid/layout/_partials/comments/gitalk.ejs","hash":"7f04e5c22821bb94da791973d9c6692b03bac81d","modified":1673945738602},{"_id":"themes/fluid/layout/_partials/comments/livere.ejs","hash":"bcceafab01fe695c59951d939f7cef502f3d7b48","modified":1673945738602},{"_id":"themes/fluid/layout/_partials/comments/remark42.ejs","hash":"45c879768b40ba56af62e18ad54bffbf73a6f3a1","modified":1673945738603},{"_id":"themes/fluid/layout/_partials/comments/twikoo.ejs","hash":"1568d377cd1d214be50a6560197c185ead0f7740","modified":1673945738603},{"_id":"themes/fluid/layout/_partials/comments/utterances.ejs","hash":"d7bcc183fc31af643e7835b13da10fe2ab8614ce","modified":1673945738603},{"_id":"themes/fluid/layout/_partials/comments/valine.ejs","hash":"ef04d4fc3f26588ae9d8712938d648304fc05455","modified":1673945738603},{"_id":"themes/fluid/layout/_partials/footer/beian.ejs","hash":"77d0c9df31a22ed8a3e341637bde4165a11a7ce9","modified":1673945738604},{"_id":"themes/fluid/layout/_partials/footer/statistics.ejs","hash":"ed2348bd9f56d19836b508c52ce9cc9122471f51","modified":1673945738605},{"_id":"themes/fluid/layout/_partials/comments/waline.ejs","hash":"99fe072ec17e83332325b3c59464bd39ea1f5a96","modified":1673945738603},{"_id":"themes/fluid/layout/_partials/header/banner.ejs","hash":"a84d8dcb44f5f6289ef09db4d02ab14de72c2c87","modified":1673945738606},{"_id":"themes/fluid/layout/_partials/header/navigation.ejs","hash":"1560b1ca7f1f40fe1e18047ab68a3576f6613619","modified":1673945738606},{"_id":"themes/fluid/layout/_partials/plugins/analytics.ejs","hash":"ea10caef2e655200e275b70d40d464e34123d10b","modified":1673945738607},{"_id":"themes/fluid/layout/_partials/plugins/anchorjs.ejs","hash":"8a4ea62c46f9a75c94096a27b2d3f5c10a2f82e5","modified":1673945738607},{"_id":"themes/fluid/layout/_partials/plugins/code-widget.ejs","hash":"03c7c69fbb1754fdccfa18671aac23b8637b869e","modified":1673945738608},{"_id":"themes/fluid/layout/_partials/plugins/encrypt.ejs","hash":"b40422f56442cd693220652ef4ecec78dca2158f","modified":1673945738608},{"_id":"themes/fluid/layout/_partials/plugins/highlight.ejs","hash":"502b99e19e496825df7032ca2b0b1a95ebb2b357","modified":1673945738609},{"_id":"themes/fluid/layout/_partials/post/category-bar.ejs","hash":"551ffae43844925beb099c85a9e6d8d9fcbf8086","modified":1673945738610},{"_id":"themes/fluid/layout/_partials/plugins/mermaid.ejs","hash":"dd2691c5d7c01c90718a11be3768b9f3d55d066d","modified":1673945738609},{"_id":"themes/fluid/layout/_partials/plugins/math.ejs","hash":"d0f06fb482e3a8f9a53dfd94c4e4a65a43f1ff34","modified":1673945738609},{"_id":"themes/fluid/layout/_partials/plugins/nprogress.ejs","hash":"47c1df255aa552ad71ef3e57deca46530a8f2802","modified":1673945738609},{"_id":"themes/fluid/layout/_partials/post/copyright.ejs","hash":"fd1d586b11c7b9f1850da7963ef593e2a7739cf7","modified":1673945738610},{"_id":"themes/fluid/layout/_partials/plugins/typed.ejs","hash":"7bf29bd9faf12030e19993576299936a999c0e46","modified":1673945738610},{"_id":"themes/fluid/layout/_partials/post/meta-bottom.ejs","hash":"f9c0f25eee37cc6e72a5fbefb2cd7284a9fd16d7","modified":1673945738611},{"_id":"themes/fluid/layout/_partials/post/meta-top.ejs","hash":"cef058fd6f33651118b5bdaa3c814757f5c82154","modified":1673945738611},{"_id":"themes/fluid/layout/_partials/post/sidebar-left.ejs","hash":"db4ecdcc762bb1b1bae5060f0baa6115174779ff","modified":1673945738612},{"_id":"themes/fluid/layout/_partials/post/sidebar-right.ejs","hash":"2507cdad08f61cf8c1d9b0ca7f4f1dc8c4e5841b","modified":1673945738612},{"_id":"themes/fluid/layout/_partials/post/toc.ejs","hash":"3bd541ea8ead8feff8acd44e35274ae5bbfe2a88","modified":1673945738612},{"_id":"themes/fluid/scripts/events/lib/compatible-configs.js","hash":"31208a0db986ba864f756a8ec806b7d254440f9b","modified":1673945738617},{"_id":"themes/fluid/scripts/events/lib/footnote.js","hash":"235dc1c2f7086dcdb9a2091cd219ef2a37aebfa4","modified":1673945738617},{"_id":"themes/fluid/scripts/events/lib/highlight.js","hash":"3f06fd3a865a703eed67aac30692d2c4b348d3a6","modified":1673945738618},{"_id":"themes/fluid/layout/_partials/plugins/fancybox.ejs","hash":"3900e54ade140e0e49c571a1955f0b1f3a59b281","modified":1673945738608},{"_id":"themes/fluid/scripts/events/lib/injects.js","hash":"92123b7280695b4ac6650f5e1d7fa0d772c71f5b","modified":1673945738618},{"_id":"themes/fluid/scripts/events/lib/hello.js","hash":"c9efdd41b8606969e5b55f49a2f6df596641b995","modified":1673945738617},{"_id":"themes/fluid/scripts/events/lib/merge-configs.js","hash":"ec6bf395ccad3dd41f29dc0080aeabf413e30fd9","modified":1673945738618},{"_id":"themes/fluid/scripts/events/lib/lazyload.js","hash":"c9696633f77dd8055e900497469f9e64eca4d97f","modified":1673945738618},{"_id":"themes/fluid/source/css/_mixins/base.styl","hash":"046979dbd8cdabd21d89f9c1d8f1bb3f2fd06d6f","modified":1673945738627},{"_id":"themes/fluid/source/css/_variables/base.styl","hash":"9ea66cf79f1e4356b6b402bc3dc5fb55c9862f1f","modified":1673945738637},{"_id":"themes/fluid/source/css/_functions/base.styl","hash":"171697018fd384fce0834875ca94b91f16564cac","modified":1673945738626},{"_id":"themes/fluid/source/css/_pages/pages.styl","hash":"92c062cf55457b6549497244d09ec34e9c0c95c2","modified":1673945738636},{"_id":"themes/fluid/source/css/_pages/_archive/archive.styl","hash":"e3846fb429f6732bd15fde40f7c28b3492d786c8","modified":1673945738628},{"_id":"themes/fluid/source/css/_pages/_about/about.styl","hash":"8ba5fb6a8ced1de6f7893184bf12f4021fe22595","modified":1673945738628},{"_id":"themes/fluid/source/css/_pages/_base/base.styl","hash":"cd255079553985722ee80fb1833f6507dde52194","modified":1673945738632},{"_id":"themes/fluid/source/css/_pages/_category/category-chain.styl","hash":"4263f7b930e6b57e13295d17fd3745a9e5c52494","modified":1673945738633},{"_id":"themes/fluid/source/css/_pages/_base/color-schema.styl","hash":"577f3289d7f3851d4eeb867db3d92f1313a431da","modified":1673945738632},{"_id":"themes/fluid/source/css/_pages/_base/inline.styl","hash":"96c3bb95dea4b3d3ecd20b810a674bfcef04870c","modified":1673945738632},{"_id":"themes/fluid/source/css/_pages/_base/keyframes.styl","hash":"58a7f8f2baea2d58cf5f7edfc91314ee5d7156ca","modified":1673945738632},{"_id":"themes/fluid/source/css/_pages/_category/category-list.styl","hash":"d3aeb7bf22d52d7dde59b292090ef8b46943718a","modified":1673945738634},{"_id":"themes/fluid/source/css/_pages/_index/index.styl","hash":"7d50d2ae4b8b736a764fcce21ec456fa6b72518c","modified":1673945738634},{"_id":"themes/fluid/source/css/_pages/_category/category-bar.styl","hash":"f35415bd86b5c26fbc71728048d9e1481263554f","modified":1673945738633},{"_id":"themes/fluid/source/css/_pages/_post/comment.styl","hash":"1fc96d09d52d9502e84e4e2a8d482ea45e8b81ea","modified":1673945738635},{"_id":"themes/fluid/source/css/_pages/_post/highlight.styl","hash":"d73cccb65eaa804910884df17442e34736b3f4fb","modified":1673945738635},{"_id":"themes/fluid/source/css/_pages/_post/post-page.styl","hash":"2e44047b9fecf662696b9cfce5c77ac3376cda85","modified":1673945738635},{"_id":"themes/fluid/source/css/_pages/_post/markdown.styl","hash":"2d12f23b46d0ce07ae810bc4f5635c490a098fa4","modified":1673945738635},{"_id":"themes/fluid/source/css/_pages/_post/post-tag.styl","hash":"e8fe053ef8734e54fae12e46acd0087bcd67f8a2","modified":1673945738635},{"_id":"themes/fluid/source/css/_pages/_links/links.styl","hash":"d3ef491fd449d89a1b95801dee788a5d9bec4320","modified":1673945738634},{"_id":"themes/fluid/source/css/_pages/_base/_widget/banner.styl","hash":"80301db38e448e40e88bb34d0128628b0809b243","modified":1673945738628},{"_id":"themes/fluid/source/css/_pages/_tag/tags.styl","hash":"29e9b72cfda2f2baf9cf2597fcd7f9e66303a9bd","modified":1673945738636},{"_id":"themes/fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"26d65475b1c52a61115044db8883df6739c3a473","modified":1673945738628},{"_id":"themes/fluid/source/css/_pages/_base/_widget/board.styl","hash":"1068d71721baeed76bf0176f9b964d36b5764c9f","modified":1673945738628},{"_id":"themes/fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"417a7388b39c0203178b0032e151febd66a0e9f3","modified":1673945738629},{"_id":"themes/fluid/source/css/_pages/_base/_widget/header.styl","hash":"9001c53b52c339bc052cd1a8334e8185f5b03538","modified":1673945738630},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footer.styl","hash":"e6f5921ff9009c1853e7db30c482bc1682433ed9","modified":1673945738630},{"_id":"themes/fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"3ac1eb36e124adef607775aa505386d5680960e2","modified":1673945738629},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"41935973a66c14ab2bea0539d4b1f15c62534fa4","modified":1673945738630},{"_id":"themes/fluid/source/css/_pages/_base/_widget/modal.styl","hash":"0ca6171ce262339e0e36cfea0978b554d87ae7fc","modified":1673945738631},{"_id":"themes/fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"04447d3b673be84a1af1dc57933a3c41dd7c0cfe","modified":1673945738631},{"_id":"themes/fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"48799d3148ef6493be0e05897c635124e9b05d03","modified":1673945738631},{"_id":"themes/fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"8fad325e411bc83c8ebdc4115015477eed5f60da","modified":1673945738631},{"_id":"themes/fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"f4ae7cbf2f10f459de7864f8e642553b587df889","modified":1673945738631},{"_id":"themes/fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"e4dbbbb1a2508a72bc04680552d7ebbea0eed0fe","modified":1673945738631},{"_id":"themes/fluid/source/css/_pages/_base/_widget/toc.styl","hash":"5defef321e3e933fe84f3f2ca481c88f55381fb0","modified":1673945738631},{"_id":"themes/fluid/source/css/_pages/_base/_widget/search.styl","hash":"1f4e678d7219815ab62de1b92ec75e021247f90b","modified":1673945738631},{"_id":"source/res/default1.jpg","hash":"88e74968ec3ecdeb1751557e0e45bb1f86b58150","modified":1673945738590},{"_id":"themes/fluid/source/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1673945738641},{"_id":"source/res/default2.jpg","hash":"455a0df86730dce8e0760cc5c5eaf52b9467a6c0","modified":1673945738583},{"_id":"source/3-year-birth/DSC04844_sy.jpg","hash":"55ee473271ce67ce4322ab8ae1752efe8d69ebbf","modified":1658293456753},{"_id":"source/3-year-birth/DSC04844.JPG","hash":"d79d62a6a8a0f2ba9c0c657b1ebfd60a9e4f9fda","modified":1658293456744},{"_id":"public/res/index.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1698676896696},{"_id":"public/res/index.js","hash":"c18b6f3582d4034986d1a765adbc8acabfbaf5a6","modified":1698676896696},{"_id":"public/baidusitemap.xml","hash":"d90b93e0ba3f4edc681d4eaa723f0c0f97491e97","modified":1725704113211},{"_id":"public/atom.xml","hash":"60f59a51e481fa51996a1e3af82b3b0d02b7d6f8","modified":1725704113211},{"_id":"public/content.json","hash":"bcd56ff385fb24d89e6fca44054f5518cacb818e","modified":1725704113211},{"_id":"public/sitemap.xml","hash":"7e910745818714071894b642b5eeb0adf646bf0f","modified":1725704113211},{"_id":"public/local-search.xml","hash":"ba6e6661f493017890fe58ec478b9948ba13c1d1","modified":1725704113211},{"_id":"public/links/index.html","hash":"c918c972e60ec77f921442b9c3f12372b1e84e82","modified":1725704113211},{"_id":"public/archives/page/2/index.html","hash":"7ce6be158c0f840109f40f010d0a655a4920ccf6","modified":1725704113211},{"_id":"public/archives/page/3/index.html","hash":"72d50fb03e04e6754bd1c04c4cd32b948f733bb1","modified":1725704113211},{"_id":"public/3-year-birth/index.html","hash":"780793db17bdcab71316648e31213efa151f74ce","modified":1708236146872},{"_id":"public/bhphoto/index.html","hash":"219414c7fd9ae1114f9921c193ed20f4745d57a7","modified":1708236146872},{"_id":"public/jslearn/app.html","hash":"ce2d501942bb120f9e2dd9947f696df20f5b3210","modified":1708236146872},{"_id":"public/jslearn/index.html","hash":"373aca4228cd94ceafc9fa6a230ffad3e3ab712a","modified":1708236146872},{"_id":"public/policies/private.html","hash":"4d4670e882be126caba9d16e10e5b7e9c2c33d0f","modified":1725704113211},{"_id":"public/policies/copyright.html","hash":"d73a7239d20fe24453f392079e50138de3d8dfd6","modified":1725704113211},{"_id":"public/posts/2348693/index.html","hash":"113031bcfa7452b4bd31b8d0268346bc1e581ade","modified":1708236146872},{"_id":"public/posts/2066053/index.html","hash":"56dd890f8fe5845d7f66ea0f2ee3de0244d386f1","modified":1708236146872},{"_id":"public/posts/2277385/index.html","hash":"e3ee76c14e23419dc14bfe0c978f5cbaf5d92670","modified":1708236146872},{"_id":"public/posts/2011313/index.html","hash":"00098c4ba021805f943a4bb3d7d1ec3b7cee75b3","modified":1708236146872},{"_id":"public/posts/2008264/index.html","hash":"bc834afd886d246cec198ef9a3966177efca1f17","modified":1708236146872},{"_id":"public/posts/1961325/index.html","hash":"b7771f1f4ddd137e7451f35f7a47bae7dc47c8b0","modified":1708236146872},{"_id":"public/posts/1976489/index.html","hash":"8c397aef1fba39bafd381206c1a33cc305a1b2f6","modified":1708236146872},{"_id":"public/posts/1972305/index.html","hash":"e96c750c7b9eff5961ed8656854e3ac2827560b5","modified":1708236146872},{"_id":"public/posts/1928176/index.html","hash":"53813a95f642fc1d0228123151bb6981ce5c9d38","modified":1708236146872},{"_id":"public/posts/08-1202S-08-1203R/index.html","hash":"9adc01923426a8090d7f116b273f5a799ea8e441","modified":1708236146872},{"_id":"public/posts/08-0902P-A/index.html","hash":"32f8e79048c1ff0d3d1b2423932529e45d59ad84","modified":1708236146872},{"_id":"public/posts/2021-4ybirth/index.html","hash":"ae44d957e78b33e7550e16015932bf0307c0995f","modified":1708236146872},{"_id":"public/posts/08-1202L-08-1203K/index.html","hash":"cfd1eb782abed88556cc5a579e0226775485351e","modified":1708236146872},{"_id":"public/posts/[08-1202-08-1203]B/index.html","hash":"299223dd19dd62a9f22b990ef3c9b7c1d4bd79d7","modified":1708236146872},{"_id":"public/posts/08-0902-E-LA3600/index.html","hash":"14280e3eb8714982a2ef784ec3a3a3a503d58bc4","modified":1708236146872},{"_id":"public/posts/[08-120308-010308-0300]A/index.html","hash":"2141c10abaf6c4c9930feeffd32e73634528dd09","modified":1708236146872},{"_id":"public/posts/航天精神/index.html","hash":"3f34b5a31e8f2fd8497156893be4421a8b5d6773","modified":1708236146872},{"_id":"public/posts/[08-1202-08-1203]A/index.html","hash":"a4a64b8fbebacc721ba937c10706e333f4d899b6","modified":1708236146872},{"_id":"public/posts/前端中的live2d与技术/index.html","hash":"412b67b62b6779651a5b86db0d5b5f78093c689f","modified":1708236146872},{"_id":"public/posts/摄影师必读-为什么焦距如此重要？/index.html","hash":"f631745a04d0c033c993f542cce3e7237c00f319","modified":1708236146872},{"_id":"public/posts/关于arri的那位美女isabella/index.html","hash":"3731efde667e798f5e29d12c478a564190345706","modified":1708236146872},{"_id":"public/posts/斯坦尼康m1-volt系统简介steadicam微电影摄影师专业技术论坛/index.html","hash":"82f5f880a5c497f5e627c78115837e89260ee59c","modified":1708236146872},{"_id":"public/archives/index.html","hash":"82053f7b6b55374446dfc15a55c226ad74ff1810","modified":1725704113211},{"_id":"public/archives/2019/index.html","hash":"98e099a4d46a666c3467f8c833b092696ec291c3","modified":1725704113211},{"_id":"public/archives/2020/index.html","hash":"0e893f7de0775a519623e9bd2d92e55d22c9e48a","modified":1725704113211},{"_id":"public/archives/2019/05/index.html","hash":"aca291900a2b086645240382af1305870a9d134d","modified":1725704113211},{"_id":"public/archives/2020/07/index.html","hash":"e24c06e1c8fd3a5be18702a342313317cd29ec11","modified":1725704113211},{"_id":"public/archives/2020/08/index.html","hash":"e85373739763ac72a8f3bd8fedc75d9828315cfb","modified":1725704113211},{"_id":"public/archives/2021/index.html","hash":"d0d94a118e20a91a7bf0d7d6da58ac2c230de355","modified":1725704113211},{"_id":"public/archives/2021/01/index.html","hash":"0fe6bd49e9e4c6b77c6b3f81d1c18c628624b936","modified":1725704113211},{"_id":"public/archives/2021/05/index.html","hash":"cb8e7d09b0e62e1bb64e11f99f78381f33d6812e","modified":1725704113211},{"_id":"public/archives/2021/08/index.html","hash":"39fed91ca28cab47e07c03162cc7624831d24056","modified":1725704113211},{"_id":"public/archives/2021/02/index.html","hash":"38d0edde740de945017a2cae5602ce7cde36e67a","modified":1725704113211},{"_id":"public/archives/2021/09/index.html","hash":"15a50ad1b0ae4e28527c78bf9ed118b5be8aae9a","modified":1725704113211},{"_id":"public/archives/2021/10/index.html","hash":"50d5f59cb9dd52b7a0db85d54f91d69166a246dc","modified":1725704113211},{"_id":"public/archives/2022/index.html","hash":"ff836acc1662e01a84f7e6a7986de7cc4008cb4e","modified":1725704113211},{"_id":"public/archives/2022/01/index.html","hash":"44924ab4f3086b29f8c606ba7bac059d819c666a","modified":1725704113211},{"_id":"public/archives/2022/04/index.html","hash":"f55ea9c07a1f2b0312c63a65e089fd1fc443f3cc","modified":1725704113211},{"_id":"public/archives/2022/03/index.html","hash":"3ccdfc5930dce7b6198976fc13ece94b403fccd5","modified":1725704113211},{"_id":"public/archives/2022/06/index.html","hash":"e9f7252f7e3da17e82efa7a868ee9878703afd8f","modified":1725704113211},{"_id":"public/archives/2022/12/index.html","hash":"f08ead62ecd96f199054ea8ecf71423e651cab61","modified":1725704113211},{"_id":"public/archives/2023/index.html","hash":"30cc9daf992b0c4b565d06d8de245db01149748a","modified":1725704113211},{"_id":"public/archives/2023/10/index.html","hash":"17aa9b8d17b448daa519d0d83c9c403bcea92acd","modified":1725704113211},{"_id":"public/categories/技术/page/2/index.html","hash":"f07f7e42c44a20787e3d23e295791f73c149f458","modified":1725704113211},{"_id":"public/archives/2023/05/index.html","hash":"4b67f885edd5f2f4104294a80ef0256337d1b011","modified":1725704113211},{"_id":"public/categories/技术/index.html","hash":"e9abbe91cf6005dd14933e827346532a142b8f32","modified":1725704113211},{"_id":"public/tags/未分类/index.html","hash":"497b79d515031dd67aa8bc67bc03ac13f0852191","modified":1708236146872},{"_id":"public/page/3/index.html","hash":"c3554a84135fe471f55e4490a30712375bac72eb","modified":1725704113211},{"_id":"public/tags/电子-设计-前级-HiFi/index.html","hash":"99b98cb3cb8238d81f784607935bd050dea2f9a8","modified":1708236146872},{"_id":"public/tags/摄影-渲染-跟踪-对焦-3d-blender-焦距/index.html","hash":"d6b187a3ab23401f748a7c301cb845bce51262c2","modified":1708236146872},{"_id":"public/tags/硬件-电子-EDA-EDA软件-科技-二值化-技术/index.html","hash":"57feac33c45068324b3bdebb37b85d2d524b0529","modified":1708236146872},{"_id":"public/tags/数据万象-对象存储-图像处理-大数据解决方案/index.html","hash":"ea0626e63c92008e318e25480d520b75867d5dc9","modified":1708236146872},{"_id":"public/tags/DNS-解析-Node-js-JavaScript-我永远喜欢布洛妮娅-DDNS-动态DNS-编程-公网-DNSPod-categories-技术/index.html","hash":"5c878064fe3a344ff13ecb5c925bab401fb06945","modified":1708236146872},{"_id":"public/tags/GPU-云服务器渲染-blender/index.html","hash":"cda00a2d22645331ab6cac0cffbc373c2074dcda","modified":1708236146872},{"_id":"public/tags/总结/index.html","hash":"cff35de52ad9a1247739e8ce952b3a669c94f23b","modified":1708236146872},{"_id":"public/tags/AI-人工智能-GPU服务器-渲染-图像放大-加速-分布式-我永远喜欢布洛妮娅/index.html","hash":"2cb82a46401182299036cc8d48c8159f3ff5b9b5","modified":1708236146872},{"_id":"public/tags/无缝加载-技术-websocket-前端-js/index.html","hash":"da9b66c900958f33e684d25fb447d29dee345b42","modified":1708236146872},{"_id":"public/tags/js-cos-scf-edgeone-缓存-自动化-刷新-加速-静态网站/index.html","hash":"efcf6f1731d974645d60661bcdff85e78a4bb72c","modified":1708236146872},{"_id":"public/tags/Java-学习-Serverless-技术/index.html","hash":"b82a5819c9dab12ac50cf434fd1894941f0cda34","modified":1708236146872},{"_id":"public/tags/CDN-COS-CVM-传输-成本优化/index.html","hash":"a7a454ddfd7909a12e509e49a3e99582a196453e","modified":1708236146872},{"_id":"public/404.html","hash":"dc63ebb076e7078ed1e47078d48354fe49a4e121","modified":1708236146872},{"_id":"public/tags/index.html","hash":"9aeb6fad8e75c1f67ac963f53af82d01bf8fef01","modified":1725704113211},{"_id":"public/categories/index.html","hash":"b71f58080517974468a9f7f80684b0def2155f57","modified":1725704113211},{"_id":"public/tags/MMD-3D-教程-物理-C4D-Blender/index.html","hash":"df323950b0d57b1ed7a56f24a2c8269930b11a95","modified":1708236146872},{"_id":"public/index.html","hash":"c4f3ce17002ae5d63f293ff76fa46875b7048d58","modified":1725704113211},{"_id":"public/page/2/index.html","hash":"0dc4da915e6612c5b5029f3445d37d1378c62764","modified":1725704113211},{"_id":"public/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1698676896696},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1698676896696},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1698676896696},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1698676896696},{"_id":"public/xml/local-search.xml","hash":"85fcc23b4db654a7f91fc55b6fb0442bb3ed3a9a","modified":1698676896696},{"_id":"public/robots.txt","hash":"71e2eb50e2ca0c6f0d569acbbda60c9b116de013","modified":1698676896696},{"_id":"public/images/pasted-0.png","hash":"9c36fb6c8c38ccb71ec589426f4e07728c2a1990","modified":1698676896696},{"_id":"public/images/少数/1689417979359.png","hash":"62d171fa66aabdfcd98cb237ad8ba6710cca5ae1","modified":1698676896696},{"_id":"public/images/少数/1689418106164.png","hash":"e94094ed8a95daadb42df80d4e7607110b64b26a","modified":1698676896696},{"_id":"public/images/少数/1689419453277.png","hash":"18928b1a261e63076ae82069a1ea2dde2cbc615e","modified":1698676896696},{"_id":"public/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1698676896696},{"_id":"public/css/highlight-dark.css","hash":"2b0daa6e5343da9dbb26d617d224b8397e48556b","modified":1698676896696},{"_id":"public/css/highlight.css","hash":"0f9a477d33d3b15ebe7e163e756fb7c54c7ded6b","modified":1698676896696},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1698676896696},{"_id":"public/js/color-schema.js","hash":"ba63f7c3324bc1fdd050a90add9d8faaffc27e07","modified":1698676896696},{"_id":"public/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1698676896696},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1698676896696},{"_id":"public/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1698676896696},{"_id":"public/js/local-search.js","hash":"cebcda5991b6a9ab9307c69542389ce9013f04f7","modified":1698676896696},{"_id":"public/js/plugins.js","hash":"2333494add51e5e1374602a4e81f0be36a05d4c2","modified":1698676896696},{"_id":"public/js/utils.js","hash":"45cc86f099db0a2c36ad49711ce66c2d598a2ab1","modified":1698676896696},{"_id":"public/css/main.css","hash":"d3b6eb3ef0e222271f1453d3d1214f3ba053792d","modified":1698676896696},{"_id":"public/res/default.jpg","hash":"316d9721aeb30896693539537f87f82616dffa4c","modified":1698676896696},{"_id":"public/images/少数/1689419458540.png","hash":"e06c226778e4e2a3dcb1a81316a4e78dc772ea3d","modified":1698676896696},{"_id":"public/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1698676896696},{"_id":"public/res/default1.jpg","hash":"88e74968ec3ecdeb1751557e0e45bb1f86b58150","modified":1698676896696},{"_id":"public/res/default2.jpg","hash":"455a0df86730dce8e0760cc5c5eaf52b9467a6c0","modified":1698676896696},{"_id":"public/3-year-birth/DSC04844_sy.jpg","hash":"55ee473271ce67ce4322ab8ae1752efe8d69ebbf","modified":1698676896696},{"_id":"public/3-year-birth/DSC04844.JPG","hash":"d79d62a6a8a0f2ba9c0c657b1ebfd60a9e4f9fda","modified":1698676896696},{"_id":"source/_posts/2384500.md","hash":"f7705ceca4f1ac088873c8cde22ae5b89200b88c","modified":1706597594926},{"_id":"public/posts/2384500/index.html","hash":"479a4d27cf481a558f71cb6fe0aaeebb968a9b3b","modified":1711899158114},{"_id":"public/archives/2024/index.html","hash":"556bcc67eda84a098eacb57afeb58e96f457ae54","modified":1725704113211},{"_id":"public/archives/2024/01/index.html","hash":"004b663ae55372bd48c110aa71d5077b92bca5d3","modified":1725704113211},{"_id":"public/tags/前端-网络-技术-xhr-ajax-js/index.html","hash":"432f162b490c7e27e32ae9db8f467cb6224f1d75","modified":1708236146872},{"_id":"source/_posts/2403534.md","hash":"8877891a50f80d006b52fd4fdda85857b1b521ac","modified":1711899123843},{"_id":"source/_posts/2403362.md","hash":"65349129c4b34a58961c0a60130cba7bb420934e","modified":1711899085315},{"_id":"public/posts/2403362/index.html","hash":"5673976c9d0607a0ae0a9fa1468b815cc0b86dd1","modified":1711899158114},{"_id":"public/posts/2403534/index.html","hash":"681b1ef9f6273d9bf8403aefda2425941b48b894","modified":1725704113211},{"_id":"public/archives/2024/03/index.html","hash":"527a551cee781e3ff46008eb18ce5df287ab0566","modified":1725704113211},{"_id":"public/tags/前端-网络-技术-全栈-jwt-后端-js/index.html","hash":"66873d20640510ad11b6481614c62535642447d8","modified":1711899158114},{"_id":"public/tags/前端-网络-技术-全栈-CORS-js-ajax/index.html","hash":"479318992792f116707dc50abf3370b689861aae","modified":1711899158114},{"_id":"source/res/d1.jpg","hash":"88e74968ec3ecdeb1751557e0e45bb1f86b58150","modified":1673945738590},{"_id":"source/res/d3.jpg","hash":"455a0df86730dce8e0760cc5c5eaf52b9467a6c0","modified":1673945738583},{"_id":"public/res/d1.jpg","hash":"88e74968ec3ecdeb1751557e0e45bb1f86b58150","modified":1720370222933},{"_id":"public/res/d3.jpg","hash":"455a0df86730dce8e0760cc5c5eaf52b9467a6c0","modified":1720370222933},{"_id":"source/_posts/2424242.md","hash":"c5576d30855361cbc3e6b6014e4a37a0e1e63821","modified":1725703462921},{"_id":"source/_posts/2448677.md","hash":"6dd2e09eab4ea1b98ec906e22c6f79abb9761223","modified":1725703587867},{"_id":"source/res/d2.jpg","hash":"316d9721aeb30896693539537f87f82616dffa4c","modified":1689085982922},{"_id":"public/posts/2448677/index.html","hash":"29678982b176d453f33ebd0b838e028d7d5af08c","modified":1725704113211},{"_id":"public/posts/2424242/index.html","hash":"fe31ba2b4b358d1d17b2a7e5ba78e3d0d67435eb","modified":1725704113211},{"_id":"public/archives/2024/06/index.html","hash":"d4873f8673bf41ddf7214c018d2bca8c7c8eb654","modified":1725704113211},{"_id":"public/archives/2024/08/index.html","hash":"38043759f1253cd4aa51296c6449b46a53e60f17","modified":1725704113211},{"_id":"public/categories/技术/page/3/index.html","hash":"eb5fdce353c565c74584f275b564efd29d45e28c","modified":1725704113211},{"_id":"public/tags/对象存储-备份-数据安全/index.html","hash":"8f2111eec6e878f23cfb1e940a8cc085c9752b5f","modified":1725704113211},{"_id":"public/tags/云函数-CORS-跨域-后端/index.html","hash":"eaafb18981b3b9dd68869dfeff23fe6167aa51a1","modified":1725704113211},{"_id":"public/res/d2.jpg","hash":"316d9721aeb30896693539537f87f82616dffa4c","modified":1725704113211}],"Category":[{"name":"技术","_id":"clod0d6wq0004c0nd6qychgb9"},{"name":"年度总结","_id":"clod0d6x1000nc0nd0hvb6szv"},{"name":"通告","_id":"clod0d6x4000xc0nd2tsdeqb8"},{"name":"杂谈","_id":"clod0d6xi002ac0nd0wp538k7"}],"Data":[],"Page":[{"title":"建站两周年，运行三周年庆祝","author":"Ar-Sr-Na","avatar":"https://arsrnasitefr-1257609559.cos.ap-guangzhou.myqcloud.com/icon2.jpg","authorLink":"www.arsrna.cn","authorAbout":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；绿城漫展，使命必达，个人网站www.arsrna.cn","authorDesc":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；绿城漫展，使命必达，个人网站www.arsrna.cn","categories":"技术","comments":1,"date":"2020-09-11T17:04:00.000Z","tags":null,"keywords":"网站,建站,庆祝,周年","description":null,"index_img":"https://arsrnablog-1257609559.cos.ap-guangzhou.myqcloud.com/photos/3-year-birth/DSC04844_sy.jpg","_content":"还记得当初的主页吗？\n\n![2018](https://i.loli.net/2018/09/09/5b94a94363cc9.png)\n\n还记得当初的ID吗？\n\n![2018id](https://i.loli.net/2018/09/09/5b94a94695e9a.png)\n\n当年那个粗糙的，报纸一般的UI，就是我第一个正式对外发布的第一个网站，并且给了它第一个版本：Beta 0.0\n\n# 艰辛\n\n2018年，当时个人网站已经不是什么值得把弄的东西了，在互联网这么一个庞大的集体中，一个个人网站只不过是海滩上的一颗普通沙子罢了，不足为奇，百度，bilibili等更大的社交网站比个人网站新鲜多了，所以没必要再弄个个人网站了\n\n## 那我为什么要浪费这个时间呢\n\n事情可以从小学微机课说起，当时在大屁股电脑面前用着WindowsXP配着古老的课本，用着微软的FrontPage，老师教我们怎么写出一个简单的网页，并且让其他人都看见\n\n到了初中，网页不再是一个文件，它伴随着图片，音乐，直到高中必修1，我才认识到，原来制作出来的网站，在别人电脑上打不开，如果需要打开，还得配置服务器\n\n### 但这难不倒我\n\n2016年，我学习了html，深入学习css+html，学习了Adobe Dreamweaver\n\n2018年，网站的雏形有了，可是没有载体给他在互联网传播\n\n于是在2018年底我和几个朋友，利用免费主机建了第一个正式对外发布的网站：hqxxsb47.usa3v.net（现在访问不了了）\n\n2018-8-6 网站js，css，html完成\n\n2018-8-8 第一轮测试，开放网页\n\n......\n\nBeta0.1,0.2,0.3......版本一直在不断更新更新再更新，页面越来越多，壁纸站，教程，科普等一系列功能迅速发布\n\n我把网址发给了同学，发给了朋友，发给了当年的老师\n\n# 超越\n\n得到了大家的认可后，我决定搞盘大的，学习PHP，但是需要服务器进行运行，所以，自己在家搞，frp打通网络\n\n于是第一个域名bilibili24749747.wang就诞生了，当然他也与后天到期，我最终选择放弃这个域名\n\n2019年，网站发生了巨大变化，主流的https支持了，ui也改变了，不过我没得保留下当时的截图\n\n19年上旬，因为了解了wordpress，所以建了个个人博客，www.saten.top，现在已经改为www.arsrna.ltd\n\n因为2月份ID改为了Ar-Sr-Na，就注册了个arsrna.cn的域名，发展从此开始\n\n年底UI变换（Release-5.0,6.0......)，功能增加，主页变得越来越漂亮了，长得就像现在这样\n\n![2020](https://arsrnablog-1257609559.cos.ap-guangzhou.myqcloud.com/photos/3-year-birth/QQ%E6%88%AA%E5%9B%BE20200912013349.png)\n\n各种应用飞速发展，我已经无法用语言描述，Serverless，Serverless Framework......\n\n# 初心\n\n为什么要建站？兴趣吗？是的\n\n成本那么高，确定值得？建站的初衷不是为了赚钱，而是自己写点代码，发布到互联网，让此时此刻素未相识的网友点开这个页面，又或许是给人际交往提供一个新的渠道\n\n写网页需要html，css，不仅能对这两门语言有一个了解，同时还学到了云计算相关内容\n\n从第一个html开始，我知道了，他的语言与书籍多么类似，他的排版与我当年写的易语言多么类似\n\n云计算也是现在发展的潮流，尤其是今年疫情期间我被大规模DDoS攻击，这甚至让我对云计算有了更深的认识，没有攻击者，我写不出ArRTC，做不出直播站，做不出云渲染解决方案，今年年初获得了腾讯云top100，优质作者奖，正是因为有这些攻击者们\n![](https://arsrnasite.cn-gd.ufileos.com/1.webp)\n\n服务器的费用到目前为止也有好几万了，但是，一个全新的FaaS架构-Serverless让我在2020年5月份有缘地认识了她，通过学习后，真正开始把网页Serverless化，成本一下从30元每月变到了5元每月，算上CloudFlare的减速服务，一分钱不花，也能享受到优质的网站体验\n\n为什么我要说Serverless那句话呢？建站的目的是网站，网站是传递信息的媒介，传递快慢不重要，重要的是信息是否优质，她能让开发者专注于内容，而不是纠结于服务器和成本，极大提高写码体验\n\n这两年经历了风风雨雨，正是这些风风雨雨见证了我们的成长，未来网站会一直坚持更新下去；html，它陪伴了我初中三年，也陪伴了高中三年，也让我在这个互联网上认识了志同道合的朋友，在此感谢以下开发者对网站提供的大力支持：\n\n网站站长，前端，后端，应用支持：Ar-Sr-Na\n\n技术支持：Miruko，Ar-Sr-Na，WhiteNX，腾讯云\n\n网站移动端优化：Ar-Sr-Na，WhiteNX\n\nServerless架构支持：阿里云，腾讯云\n\n测试，研发：Ar-Sr-Na\n\n数据支持：微软去哦怕\n\n成长支持：所有正在打开这个页面的小伙伴\n\n![](https://arsrnablog-1257609559.cos.ap-guangzhou.myqcloud.com/photos/3-year-birth/ApStaff.jpg)\n\n### 感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！\n\n# 感谢大家的支持！\n","source":"3-year-birth/index.md","raw":"---\ntitle: 建站两周年，运行三周年庆祝\nauthor: Ar-Sr-Na\navatar: 'https://arsrnasitefr-1257609559.cos.ap-guangzhou.myqcloud.com/icon2.jpg'\nauthorLink: www.arsrna.cn\nauthorAbout: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；绿城漫展，使命必达，个人网站www.arsrna.cn\nauthorDesc: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；绿城漫展，使命必达，个人网站www.arsrna.cn\ncategories: 技术\ncomments: true\ndate: 2020-09-12 01:04\ntags:\nkeywords: 网站,建站,庆祝,周年\ndescription:\nindex_img: 'https://arsrnablog-1257609559.cos.ap-guangzhou.myqcloud.com/photos/3-year-birth/DSC04844_sy.jpg'\n---\n还记得当初的主页吗？\n\n![2018](https://i.loli.net/2018/09/09/5b94a94363cc9.png)\n\n还记得当初的ID吗？\n\n![2018id](https://i.loli.net/2018/09/09/5b94a94695e9a.png)\n\n当年那个粗糙的，报纸一般的UI，就是我第一个正式对外发布的第一个网站，并且给了它第一个版本：Beta 0.0\n\n# 艰辛\n\n2018年，当时个人网站已经不是什么值得把弄的东西了，在互联网这么一个庞大的集体中，一个个人网站只不过是海滩上的一颗普通沙子罢了，不足为奇，百度，bilibili等更大的社交网站比个人网站新鲜多了，所以没必要再弄个个人网站了\n\n## 那我为什么要浪费这个时间呢\n\n事情可以从小学微机课说起，当时在大屁股电脑面前用着WindowsXP配着古老的课本，用着微软的FrontPage，老师教我们怎么写出一个简单的网页，并且让其他人都看见\n\n到了初中，网页不再是一个文件，它伴随着图片，音乐，直到高中必修1，我才认识到，原来制作出来的网站，在别人电脑上打不开，如果需要打开，还得配置服务器\n\n### 但这难不倒我\n\n2016年，我学习了html，深入学习css+html，学习了Adobe Dreamweaver\n\n2018年，网站的雏形有了，可是没有载体给他在互联网传播\n\n于是在2018年底我和几个朋友，利用免费主机建了第一个正式对外发布的网站：hqxxsb47.usa3v.net（现在访问不了了）\n\n2018-8-6 网站js，css，html完成\n\n2018-8-8 第一轮测试，开放网页\n\n......\n\nBeta0.1,0.2,0.3......版本一直在不断更新更新再更新，页面越来越多，壁纸站，教程，科普等一系列功能迅速发布\n\n我把网址发给了同学，发给了朋友，发给了当年的老师\n\n# 超越\n\n得到了大家的认可后，我决定搞盘大的，学习PHP，但是需要服务器进行运行，所以，自己在家搞，frp打通网络\n\n于是第一个域名bilibili24749747.wang就诞生了，当然他也与后天到期，我最终选择放弃这个域名\n\n2019年，网站发生了巨大变化，主流的https支持了，ui也改变了，不过我没得保留下当时的截图\n\n19年上旬，因为了解了wordpress，所以建了个个人博客，www.saten.top，现在已经改为www.arsrna.ltd\n\n因为2月份ID改为了Ar-Sr-Na，就注册了个arsrna.cn的域名，发展从此开始\n\n年底UI变换（Release-5.0,6.0......)，功能增加，主页变得越来越漂亮了，长得就像现在这样\n\n![2020](https://arsrnablog-1257609559.cos.ap-guangzhou.myqcloud.com/photos/3-year-birth/QQ%E6%88%AA%E5%9B%BE20200912013349.png)\n\n各种应用飞速发展，我已经无法用语言描述，Serverless，Serverless Framework......\n\n# 初心\n\n为什么要建站？兴趣吗？是的\n\n成本那么高，确定值得？建站的初衷不是为了赚钱，而是自己写点代码，发布到互联网，让此时此刻素未相识的网友点开这个页面，又或许是给人际交往提供一个新的渠道\n\n写网页需要html，css，不仅能对这两门语言有一个了解，同时还学到了云计算相关内容\n\n从第一个html开始，我知道了，他的语言与书籍多么类似，他的排版与我当年写的易语言多么类似\n\n云计算也是现在发展的潮流，尤其是今年疫情期间我被大规模DDoS攻击，这甚至让我对云计算有了更深的认识，没有攻击者，我写不出ArRTC，做不出直播站，做不出云渲染解决方案，今年年初获得了腾讯云top100，优质作者奖，正是因为有这些攻击者们\n![](https://arsrnasite.cn-gd.ufileos.com/1.webp)\n\n服务器的费用到目前为止也有好几万了，但是，一个全新的FaaS架构-Serverless让我在2020年5月份有缘地认识了她，通过学习后，真正开始把网页Serverless化，成本一下从30元每月变到了5元每月，算上CloudFlare的减速服务，一分钱不花，也能享受到优质的网站体验\n\n为什么我要说Serverless那句话呢？建站的目的是网站，网站是传递信息的媒介，传递快慢不重要，重要的是信息是否优质，她能让开发者专注于内容，而不是纠结于服务器和成本，极大提高写码体验\n\n这两年经历了风风雨雨，正是这些风风雨雨见证了我们的成长，未来网站会一直坚持更新下去；html，它陪伴了我初中三年，也陪伴了高中三年，也让我在这个互联网上认识了志同道合的朋友，在此感谢以下开发者对网站提供的大力支持：\n\n网站站长，前端，后端，应用支持：Ar-Sr-Na\n\n技术支持：Miruko，Ar-Sr-Na，WhiteNX，腾讯云\n\n网站移动端优化：Ar-Sr-Na，WhiteNX\n\nServerless架构支持：阿里云，腾讯云\n\n测试，研发：Ar-Sr-Na\n\n数据支持：微软去哦怕\n\n成长支持：所有正在打开这个页面的小伙伴\n\n![](https://arsrnablog-1257609559.cos.ap-guangzhou.myqcloud.com/photos/3-year-birth/ApStaff.jpg)\n\n### 感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！\n\n# 感谢大家的支持！\n","updated":"2023-01-17T08:55:38.562Z","path":"3-year-birth/index.html","layout":"page","_id":"clod0d6wi0000c0ndep7fdlex","content":"<p>还记得当初的主页吗？</p>\n<p><img src=\"https://i.loli.net/2018/09/09/5b94a94363cc9.png\" alt=\"2018\"></p>\n<p>还记得当初的ID吗？</p>\n<p><img src=\"https://i.loli.net/2018/09/09/5b94a94695e9a.png\" alt=\"2018id\"></p>\n<p>当年那个粗糙的，报纸一般的UI，就是我第一个正式对外发布的第一个网站，并且给了它第一个版本：Beta 0.0</p>\n<h1 id=\"艰辛\"><a href=\"#艰辛\" class=\"headerlink\" title=\"艰辛\"></a>艰辛</h1><p>2018年，当时个人网站已经不是什么值得把弄的东西了，在互联网这么一个庞大的集体中，一个个人网站只不过是海滩上的一颗普通沙子罢了，不足为奇，百度，bilibili等更大的社交网站比个人网站新鲜多了，所以没必要再弄个个人网站了</p>\n<h2 id=\"那我为什么要浪费这个时间呢\"><a href=\"#那我为什么要浪费这个时间呢\" class=\"headerlink\" title=\"那我为什么要浪费这个时间呢\"></a>那我为什么要浪费这个时间呢</h2><p>事情可以从小学微机课说起，当时在大屁股电脑面前用着WindowsXP配着古老的课本，用着微软的FrontPage，老师教我们怎么写出一个简单的网页，并且让其他人都看见</p>\n<p>到了初中，网页不再是一个文件，它伴随着图片，音乐，直到高中必修1，我才认识到，原来制作出来的网站，在别人电脑上打不开，如果需要打开，还得配置服务器</p>\n<h3 id=\"但这难不倒我\"><a href=\"#但这难不倒我\" class=\"headerlink\" title=\"但这难不倒我\"></a>但这难不倒我</h3><p>2016年，我学习了html，深入学习css+html，学习了Adobe Dreamweaver</p>\n<p>2018年，网站的雏形有了，可是没有载体给他在互联网传播</p>\n<p>于是在2018年底我和几个朋友，利用免费主机建了第一个正式对外发布的网站：hqxxsb47.usa3v.net（现在访问不了了）</p>\n<p>2018-8-6 网站js，css，html完成</p>\n<p>2018-8-8 第一轮测试，开放网页</p>\n<p>……</p>\n<p>Beta0.1,0.2,0.3……版本一直在不断更新更新再更新，页面越来越多，壁纸站，教程，科普等一系列功能迅速发布</p>\n<p>我把网址发给了同学，发给了朋友，发给了当年的老师</p>\n<h1 id=\"超越\"><a href=\"#超越\" class=\"headerlink\" title=\"超越\"></a>超越</h1><p>得到了大家的认可后，我决定搞盘大的，学习PHP，但是需要服务器进行运行，所以，自己在家搞，frp打通网络</p>\n<p>于是第一个域名bilibili24749747.wang就诞生了，当然他也与后天到期，我最终选择放弃这个域名</p>\n<p>2019年，网站发生了巨大变化，主流的https支持了，ui也改变了，不过我没得保留下当时的截图</p>\n<p>19年上旬，因为了解了wordpress，所以建了个个人博客，<a href=\"http://www.saten.top,现在已经改为www.arsrna.ltd/\">www.saten.top，现在已经改为www.arsrna.ltd</a></p>\n<p>因为2月份ID改为了Ar-Sr-Na，就注册了个arsrna.cn的域名，发展从此开始</p>\n<p>年底UI变换（Release-5.0,6.0……)，功能增加，主页变得越来越漂亮了，长得就像现在这样</p>\n<p><img src=\"https://arsrnablog-1257609559.cos.ap-guangzhou.myqcloud.com/photos/3-year-birth/QQ%E6%88%AA%E5%9B%BE20200912013349.png\" alt=\"2020\"></p>\n<p>各种应用飞速发展，我已经无法用语言描述，Serverless，Serverless Framework……</p>\n<h1 id=\"初心\"><a href=\"#初心\" class=\"headerlink\" title=\"初心\"></a>初心</h1><p>为什么要建站？兴趣吗？是的</p>\n<p>成本那么高，确定值得？建站的初衷不是为了赚钱，而是自己写点代码，发布到互联网，让此时此刻素未相识的网友点开这个页面，又或许是给人际交往提供一个新的渠道</p>\n<p>写网页需要html，css，不仅能对这两门语言有一个了解，同时还学到了云计算相关内容</p>\n<p>从第一个html开始，我知道了，他的语言与书籍多么类似，他的排版与我当年写的易语言多么类似</p>\n<p>云计算也是现在发展的潮流，尤其是今年疫情期间我被大规模DDoS攻击，这甚至让我对云计算有了更深的认识，没有攻击者，我写不出ArRTC，做不出直播站，做不出云渲染解决方案，今年年初获得了腾讯云top100，优质作者奖，正是因为有这些攻击者们<br><img src=\"https://arsrnasite.cn-gd.ufileos.com/1.webp\"></p>\n<p>服务器的费用到目前为止也有好几万了，但是，一个全新的FaaS架构-Serverless让我在2020年5月份有缘地认识了她，通过学习后，真正开始把网页Serverless化，成本一下从30元每月变到了5元每月，算上CloudFlare的减速服务，一分钱不花，也能享受到优质的网站体验</p>\n<p>为什么我要说Serverless那句话呢？建站的目的是网站，网站是传递信息的媒介，传递快慢不重要，重要的是信息是否优质，她能让开发者专注于内容，而不是纠结于服务器和成本，极大提高写码体验</p>\n<p>这两年经历了风风雨雨，正是这些风风雨雨见证了我们的成长，未来网站会一直坚持更新下去；html，它陪伴了我初中三年，也陪伴了高中三年，也让我在这个互联网上认识了志同道合的朋友，在此感谢以下开发者对网站提供的大力支持：</p>\n<p>网站站长，前端，后端，应用支持：Ar-Sr-Na</p>\n<p>技术支持：Miruko，Ar-Sr-Na，WhiteNX，腾讯云</p>\n<p>网站移动端优化：Ar-Sr-Na，WhiteNX</p>\n<p>Serverless架构支持：阿里云，腾讯云</p>\n<p>测试，研发：Ar-Sr-Na</p>\n<p>数据支持：微软去哦怕</p>\n<p>成长支持：所有正在打开这个页面的小伙伴</p>\n<p><img src=\"https://arsrnablog-1257609559.cos.ap-guangzhou.myqcloud.com/photos/3-year-birth/ApStaff.jpg\"></p>\n<h3 id=\"感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！\"><a href=\"#感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！\" class=\"headerlink\" title=\"感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！\"></a>感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！</h3><h1 id=\"感谢大家的支持！\"><a href=\"#感谢大家的支持！\" class=\"headerlink\" title=\"感谢大家的支持！\"></a>感谢大家的支持！</h1>","site":{"data":{}},"excerpt":"","more":"<p>还记得当初的主页吗？</p>\n<p><img src=\"https://i.loli.net/2018/09/09/5b94a94363cc9.png\" alt=\"2018\"></p>\n<p>还记得当初的ID吗？</p>\n<p><img src=\"https://i.loli.net/2018/09/09/5b94a94695e9a.png\" alt=\"2018id\"></p>\n<p>当年那个粗糙的，报纸一般的UI，就是我第一个正式对外发布的第一个网站，并且给了它第一个版本：Beta 0.0</p>\n<h1 id=\"艰辛\"><a href=\"#艰辛\" class=\"headerlink\" title=\"艰辛\"></a>艰辛</h1><p>2018年，当时个人网站已经不是什么值得把弄的东西了，在互联网这么一个庞大的集体中，一个个人网站只不过是海滩上的一颗普通沙子罢了，不足为奇，百度，bilibili等更大的社交网站比个人网站新鲜多了，所以没必要再弄个个人网站了</p>\n<h2 id=\"那我为什么要浪费这个时间呢\"><a href=\"#那我为什么要浪费这个时间呢\" class=\"headerlink\" title=\"那我为什么要浪费这个时间呢\"></a>那我为什么要浪费这个时间呢</h2><p>事情可以从小学微机课说起，当时在大屁股电脑面前用着WindowsXP配着古老的课本，用着微软的FrontPage，老师教我们怎么写出一个简单的网页，并且让其他人都看见</p>\n<p>到了初中，网页不再是一个文件，它伴随着图片，音乐，直到高中必修1，我才认识到，原来制作出来的网站，在别人电脑上打不开，如果需要打开，还得配置服务器</p>\n<h3 id=\"但这难不倒我\"><a href=\"#但这难不倒我\" class=\"headerlink\" title=\"但这难不倒我\"></a>但这难不倒我</h3><p>2016年，我学习了html，深入学习css+html，学习了Adobe Dreamweaver</p>\n<p>2018年，网站的雏形有了，可是没有载体给他在互联网传播</p>\n<p>于是在2018年底我和几个朋友，利用免费主机建了第一个正式对外发布的网站：hqxxsb47.usa3v.net（现在访问不了了）</p>\n<p>2018-8-6 网站js，css，html完成</p>\n<p>2018-8-8 第一轮测试，开放网页</p>\n<p>……</p>\n<p>Beta0.1,0.2,0.3……版本一直在不断更新更新再更新，页面越来越多，壁纸站，教程，科普等一系列功能迅速发布</p>\n<p>我把网址发给了同学，发给了朋友，发给了当年的老师</p>\n<h1 id=\"超越\"><a href=\"#超越\" class=\"headerlink\" title=\"超越\"></a>超越</h1><p>得到了大家的认可后，我决定搞盘大的，学习PHP，但是需要服务器进行运行，所以，自己在家搞，frp打通网络</p>\n<p>于是第一个域名bilibili24749747.wang就诞生了，当然他也与后天到期，我最终选择放弃这个域名</p>\n<p>2019年，网站发生了巨大变化，主流的https支持了，ui也改变了，不过我没得保留下当时的截图</p>\n<p>19年上旬，因为了解了wordpress，所以建了个个人博客，<a href=\"http://www.saten.top,现在已经改为www.arsrna.ltd/\">www.saten.top，现在已经改为www.arsrna.ltd</a></p>\n<p>因为2月份ID改为了Ar-Sr-Na，就注册了个arsrna.cn的域名，发展从此开始</p>\n<p>年底UI变换（Release-5.0,6.0……)，功能增加，主页变得越来越漂亮了，长得就像现在这样</p>\n<p><img src=\"https://arsrnablog-1257609559.cos.ap-guangzhou.myqcloud.com/photos/3-year-birth/QQ%E6%88%AA%E5%9B%BE20200912013349.png\" alt=\"2020\"></p>\n<p>各种应用飞速发展，我已经无法用语言描述，Serverless，Serverless Framework……</p>\n<h1 id=\"初心\"><a href=\"#初心\" class=\"headerlink\" title=\"初心\"></a>初心</h1><p>为什么要建站？兴趣吗？是的</p>\n<p>成本那么高，确定值得？建站的初衷不是为了赚钱，而是自己写点代码，发布到互联网，让此时此刻素未相识的网友点开这个页面，又或许是给人际交往提供一个新的渠道</p>\n<p>写网页需要html，css，不仅能对这两门语言有一个了解，同时还学到了云计算相关内容</p>\n<p>从第一个html开始，我知道了，他的语言与书籍多么类似，他的排版与我当年写的易语言多么类似</p>\n<p>云计算也是现在发展的潮流，尤其是今年疫情期间我被大规模DDoS攻击，这甚至让我对云计算有了更深的认识，没有攻击者，我写不出ArRTC，做不出直播站，做不出云渲染解决方案，今年年初获得了腾讯云top100，优质作者奖，正是因为有这些攻击者们<br><img src=\"https://arsrnasite.cn-gd.ufileos.com/1.webp\"></p>\n<p>服务器的费用到目前为止也有好几万了，但是，一个全新的FaaS架构-Serverless让我在2020年5月份有缘地认识了她，通过学习后，真正开始把网页Serverless化，成本一下从30元每月变到了5元每月，算上CloudFlare的减速服务，一分钱不花，也能享受到优质的网站体验</p>\n<p>为什么我要说Serverless那句话呢？建站的目的是网站，网站是传递信息的媒介，传递快慢不重要，重要的是信息是否优质，她能让开发者专注于内容，而不是纠结于服务器和成本，极大提高写码体验</p>\n<p>这两年经历了风风雨雨，正是这些风风雨雨见证了我们的成长，未来网站会一直坚持更新下去；html，它陪伴了我初中三年，也陪伴了高中三年，也让我在这个互联网上认识了志同道合的朋友，在此感谢以下开发者对网站提供的大力支持：</p>\n<p>网站站长，前端，后端，应用支持：Ar-Sr-Na</p>\n<p>技术支持：Miruko，Ar-Sr-Na，WhiteNX，腾讯云</p>\n<p>网站移动端优化：Ar-Sr-Na，WhiteNX</p>\n<p>Serverless架构支持：阿里云，腾讯云</p>\n<p>测试，研发：Ar-Sr-Na</p>\n<p>数据支持：微软去哦怕</p>\n<p>成长支持：所有正在打开这个页面的小伙伴</p>\n<p><img src=\"https://arsrnablog-1257609559.cos.ap-guangzhou.myqcloud.com/photos/3-year-birth/ApStaff.jpg\"></p>\n<h3 id=\"感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！\"><a href=\"#感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！\" class=\"headerlink\" title=\"感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！\"></a>感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！</h3><h1 id=\"感谢大家的支持！\"><a href=\"#感谢大家的支持！\" class=\"headerlink\" title=\"感谢大家的支持！\"></a>感谢大家的支持！</h1>"},{"title":"人类首张黑洞照片发布","id":"231","tags":[],"date":"2019-04-10T14:39:12.000Z","_content":"\n来自  \n[表象的本质](https://space.bilibili.com/363584502) https://www.bilibili.com/video/av48924373/\n\n图片来自中国科学院上海天文台\n\n文章转自 中国科学院上海天文台http://www.shao.ac.cn/xwzx/ttxw/201904/t20190410\\_5272456.html\n\n![](https://i.loli.net/2019/04/10/5cadfa0f19ace.jpg)\n\n《天体物理学杂志通信》于4月10日以特刊的形式通过六篇论文发表了这一重大结果。该黑洞图像揭示了室女座星系团中超大质量星系Messier 87【1】中心的黑洞。该黑洞距离地球5500万光年，质量为太阳的65亿倍【2】。\n\nEHT把地球上的望远镜“组合”起来形成一个口径如地球大小的“虚拟”望远镜，所达到的灵敏度和分辨本领【3】都是前所未有的。百年之前，爱因斯坦广义相对论得到了首次试验验证【4】。如今，作为多年国际合作的结果，EHT为科学家们提供了研究宇宙中最极端天体的新方法。\n\n“我们捕获到了黑洞的首张照片”，来自天体物理中心|哈佛大学及史密松宁学会的EHT项目主任Sheperd S. Doeleman说,“这是一项由200多位科研人员组成的团队完成的非凡的科研成果。”\n\n黑洞是一种被极度压缩的宇宙天体，在一个很小的区域内包含着令人难以置信的质量。这种天体的存在以极端的方式影响着周围的环境，让时空弯曲，并将周围的气体吸引进来。在此过程中，气体的引力能转化成热能，因此气体的温度变得很高，会发出强烈的辐射。\n\n“如此一来，黑洞就像沉浸在一片类似发光气体的明亮区域内，我们期望着黑洞会形成一个类似阴影的黑暗区域。这正是爱因斯坦广义相对论所预言的，可我们以前从未见过。”EHT科学委员会主席、来自荷兰Radbound大学的Heino Falcke解释。“这个暗影的形成，源于光线的引力弯曲和黑洞视界对光子的捕获。暗影揭示了黑洞这类迷人天体的很多本质，也使得我们能够测量M87黑洞的巨大质量。”\n\n多次独立的EHT观测通过多个校准以及不同的成像方法均揭示了一个环状的结构及其中心的暗弱区域，即黑洞阴影。\n\n“一旦我们成功对黑洞阴影成像，就可以将观测结果与理论预言相比较，检验考虑了时空弯曲、超高温及超强磁场等物理性质在内的大量模型。令人惊讶的是，我们所观测到图像的许多特征与理论预言相匹配”，EHT 董事会成员贺曾朴评论道，“这使得我们对观测的理论解释，包括对黑洞质量的测量，都充满信心。”\n\n创建EHT是一项艰巨的挑战，需要升级和连接部署八个现有的射电望远镜来组成全球网络，而这些望远镜分布在各种具有挑战性的高海拔地区，包括夏威夷和墨西哥的火山、亚利桑那州的山脉、西班牙的内华达山脉、智利的阿塔卡马沙漠以及南极点。\n\nEHT观测使用了甚长基线干涉测量（VLBI）技术，观测波段是1.3毫米。世界各地的射电望远镜同步观测，同时利用地球自转，形成一个口径如地球大小的“虚拟”望远镜，达到的分辨率约20微角秒，足以在巴黎的一家路边咖啡馆阅读纽约的报纸【5】。\n\n参与此次观测的望远镜包括ALMA、APEX、IRAM 30米望远镜、James Clerk Maxwell望远镜、大毫米波望远镜（LMT）、亚毫米波阵（SMA）、亚毫米波望远镜（SMT）和南极望远镜（SPT）。马普射电所和麻省理工学院Haystack天文台的专用超级计算机负责了对原始观测数据的互相关工作。\n\nEHT的建设和今天宣布的观测结果源于数十年观测、技术和理论工作的坚持和积累。这与来自世界各地的研究人员的密切合作是分不开的，是全球团队合作的典范。13个合作机构共同创建了EHT，使用了既有的基础设施并获得了各种机构的支持。主要资金由美国国家科学基金会（NSF）、欧盟欧洲研究理事会（ERC）和东亚资助机构提供。\n\n这一激动人心的成果受到了中国科学院天文大科学中心（CAMS）的支持，CAMS由中国国家天文台、紫金山天文台和上海天文台共同建立，是EHT的一个合作机构（EHT共有3个合作机构）的成员。上海天文台台牵头组织协调国内学者通过该合作机构参与此次EHT项目合作。\n\n“对M87中心黑洞的顺利成像绝不是EHT国际合作的终点站”,上海天文台台长沈志强研究员说。“ 我们期望也相信在不久的将来EHT会有更多令人兴奋的结果。”\n\n\"我们已经取得了一代人以前认为不可能做到的事情”，Doeleman总结到。“技术的突破、世界上最好的射电天文台之间的合作、创新的算法都汇聚到一起，打开了一个关于黑洞和事件视界的全新窗口。”\n\n注释：\n\n【1】黑洞阴影是我们能看到的最接近黑洞本身的图像，黑洞是一个完全黑暗的天体，连光线也没法逃离它的势力范围。黑洞的势力范围——事件视界（EHT便以此为名）——比黑洞阴影的尺寸小约2.5倍，大小约400亿千米（对M87中心的超大质量黑洞来说）。\n\n【2】超大质量黑洞是相当小的天体，以至于几乎很难被直接看到。由于黑洞的尺寸正比于它的质量，黑洞质量越大，黑洞阴影越大。M87中心的黑洞质量巨大，又相对接近我们，是从地球上看过去角尺寸最大的黑洞之一，也因此成为EHT的一个完美目标。\n\n【3】虽然这些射电望远镜没有物理上连接，但借助氢原子钟精确计时，各台望远镜实现了数据记录的同时性。在2017年的全球观测中，观测波段是1.3毫米。EHT的每一台望远镜都产生了大量的数据，每天约生成350太字节的数据。这些数据被存储在高性能的充氦硬盘上。随后，这些数据被空运至被称作相关器的高度专业化超级计算机进行合并处理，这些超级计算机位于马普射电所和麻省理工学员海斯塔克天文台。在那里，合作开发的新型计算工具将精心处理数据并转换为图像。\n\n【4】100年前，为了通过观测星光是否会因太阳引力弯曲来检验广义相对论，两支科学探险队前往非洲海岸的普林西比岛和巴西的索布拉开展1919年的日食观测。作为1个世纪后的回应，EHT已经派遣团队成员前往世界上最高和最偏僻的射电观测台站，去再一次检验我们对引力的理解。\n\n【5】随着IRAM NOEMA天文台、格陵兰望远镜和基特峰望远镜加入EHT，未来EHT的灵敏度将显着提高。\n\n来自http://www.shao.ac.cn/xwzx/ttxw/201904/t20190410\\_5272456.html\n\n##### 直播站STAFF\n\n开发，设计，解决方案：bilibili@Ar-Sr-Na\n\n技术支持：cloudflare CDN，直播提供：中科院上海天文台\n\n本次直播从直播的网站找出iframe，嵌入到我的网站，相当于是我的网站直播，占的是我的带宽，我这里在重新编码直播出去，用的是我的资源，也就是说我服务器那边相当于一个访客访问那个直播，分担源站压力","source":"bhphoto/index.md","raw":"---\ntitle: 人类首张黑洞照片发布\nid: '231'\ntags: []\ndate: 2019-04-10 22:39:12\n---\n\n来自  \n[表象的本质](https://space.bilibili.com/363584502) https://www.bilibili.com/video/av48924373/\n\n图片来自中国科学院上海天文台\n\n文章转自 中国科学院上海天文台http://www.shao.ac.cn/xwzx/ttxw/201904/t20190410\\_5272456.html\n\n![](https://i.loli.net/2019/04/10/5cadfa0f19ace.jpg)\n\n《天体物理学杂志通信》于4月10日以特刊的形式通过六篇论文发表了这一重大结果。该黑洞图像揭示了室女座星系团中超大质量星系Messier 87【1】中心的黑洞。该黑洞距离地球5500万光年，质量为太阳的65亿倍【2】。\n\nEHT把地球上的望远镜“组合”起来形成一个口径如地球大小的“虚拟”望远镜，所达到的灵敏度和分辨本领【3】都是前所未有的。百年之前，爱因斯坦广义相对论得到了首次试验验证【4】。如今，作为多年国际合作的结果，EHT为科学家们提供了研究宇宙中最极端天体的新方法。\n\n“我们捕获到了黑洞的首张照片”，来自天体物理中心|哈佛大学及史密松宁学会的EHT项目主任Sheperd S. Doeleman说,“这是一项由200多位科研人员组成的团队完成的非凡的科研成果。”\n\n黑洞是一种被极度压缩的宇宙天体，在一个很小的区域内包含着令人难以置信的质量。这种天体的存在以极端的方式影响着周围的环境，让时空弯曲，并将周围的气体吸引进来。在此过程中，气体的引力能转化成热能，因此气体的温度变得很高，会发出强烈的辐射。\n\n“如此一来，黑洞就像沉浸在一片类似发光气体的明亮区域内，我们期望着黑洞会形成一个类似阴影的黑暗区域。这正是爱因斯坦广义相对论所预言的，可我们以前从未见过。”EHT科学委员会主席、来自荷兰Radbound大学的Heino Falcke解释。“这个暗影的形成，源于光线的引力弯曲和黑洞视界对光子的捕获。暗影揭示了黑洞这类迷人天体的很多本质，也使得我们能够测量M87黑洞的巨大质量。”\n\n多次独立的EHT观测通过多个校准以及不同的成像方法均揭示了一个环状的结构及其中心的暗弱区域，即黑洞阴影。\n\n“一旦我们成功对黑洞阴影成像，就可以将观测结果与理论预言相比较，检验考虑了时空弯曲、超高温及超强磁场等物理性质在内的大量模型。令人惊讶的是，我们所观测到图像的许多特征与理论预言相匹配”，EHT 董事会成员贺曾朴评论道，“这使得我们对观测的理论解释，包括对黑洞质量的测量，都充满信心。”\n\n创建EHT是一项艰巨的挑战，需要升级和连接部署八个现有的射电望远镜来组成全球网络，而这些望远镜分布在各种具有挑战性的高海拔地区，包括夏威夷和墨西哥的火山、亚利桑那州的山脉、西班牙的内华达山脉、智利的阿塔卡马沙漠以及南极点。\n\nEHT观测使用了甚长基线干涉测量（VLBI）技术，观测波段是1.3毫米。世界各地的射电望远镜同步观测，同时利用地球自转，形成一个口径如地球大小的“虚拟”望远镜，达到的分辨率约20微角秒，足以在巴黎的一家路边咖啡馆阅读纽约的报纸【5】。\n\n参与此次观测的望远镜包括ALMA、APEX、IRAM 30米望远镜、James Clerk Maxwell望远镜、大毫米波望远镜（LMT）、亚毫米波阵（SMA）、亚毫米波望远镜（SMT）和南极望远镜（SPT）。马普射电所和麻省理工学院Haystack天文台的专用超级计算机负责了对原始观测数据的互相关工作。\n\nEHT的建设和今天宣布的观测结果源于数十年观测、技术和理论工作的坚持和积累。这与来自世界各地的研究人员的密切合作是分不开的，是全球团队合作的典范。13个合作机构共同创建了EHT，使用了既有的基础设施并获得了各种机构的支持。主要资金由美国国家科学基金会（NSF）、欧盟欧洲研究理事会（ERC）和东亚资助机构提供。\n\n这一激动人心的成果受到了中国科学院天文大科学中心（CAMS）的支持，CAMS由中国国家天文台、紫金山天文台和上海天文台共同建立，是EHT的一个合作机构（EHT共有3个合作机构）的成员。上海天文台台牵头组织协调国内学者通过该合作机构参与此次EHT项目合作。\n\n“对M87中心黑洞的顺利成像绝不是EHT国际合作的终点站”,上海天文台台长沈志强研究员说。“ 我们期望也相信在不久的将来EHT会有更多令人兴奋的结果。”\n\n\"我们已经取得了一代人以前认为不可能做到的事情”，Doeleman总结到。“技术的突破、世界上最好的射电天文台之间的合作、创新的算法都汇聚到一起，打开了一个关于黑洞和事件视界的全新窗口。”\n\n注释：\n\n【1】黑洞阴影是我们能看到的最接近黑洞本身的图像，黑洞是一个完全黑暗的天体，连光线也没法逃离它的势力范围。黑洞的势力范围——事件视界（EHT便以此为名）——比黑洞阴影的尺寸小约2.5倍，大小约400亿千米（对M87中心的超大质量黑洞来说）。\n\n【2】超大质量黑洞是相当小的天体，以至于几乎很难被直接看到。由于黑洞的尺寸正比于它的质量，黑洞质量越大，黑洞阴影越大。M87中心的黑洞质量巨大，又相对接近我们，是从地球上看过去角尺寸最大的黑洞之一，也因此成为EHT的一个完美目标。\n\n【3】虽然这些射电望远镜没有物理上连接，但借助氢原子钟精确计时，各台望远镜实现了数据记录的同时性。在2017年的全球观测中，观测波段是1.3毫米。EHT的每一台望远镜都产生了大量的数据，每天约生成350太字节的数据。这些数据被存储在高性能的充氦硬盘上。随后，这些数据被空运至被称作相关器的高度专业化超级计算机进行合并处理，这些超级计算机位于马普射电所和麻省理工学员海斯塔克天文台。在那里，合作开发的新型计算工具将精心处理数据并转换为图像。\n\n【4】100年前，为了通过观测星光是否会因太阳引力弯曲来检验广义相对论，两支科学探险队前往非洲海岸的普林西比岛和巴西的索布拉开展1919年的日食观测。作为1个世纪后的回应，EHT已经派遣团队成员前往世界上最高和最偏僻的射电观测台站，去再一次检验我们对引力的理解。\n\n【5】随着IRAM NOEMA天文台、格陵兰望远镜和基特峰望远镜加入EHT，未来EHT的灵敏度将显着提高。\n\n来自http://www.shao.ac.cn/xwzx/ttxw/201904/t20190410\\_5272456.html\n\n##### 直播站STAFF\n\n开发，设计，解决方案：bilibili@Ar-Sr-Na\n\n技术支持：cloudflare CDN，直播提供：中科院上海天文台\n\n本次直播从直播的网站找出iframe，嵌入到我的网站，相当于是我的网站直播，占的是我的带宽，我这里在重新编码直播出去，用的是我的资源，也就是说我服务器那边相当于一个访客访问那个直播，分担源站压力","updated":"2022-07-20T05:04:16.767Z","path":"bhphoto/index.html","comments":1,"layout":"page","_id":"clod0d6wo0002c0nda8cwdk4t","content":"<p>来自<br><a href=\"https://space.bilibili.com/363584502\">表象的本质</a> <a href=\"https://www.bilibili.com/video/av48924373/\">https://www.bilibili.com/video/av48924373/</a></p>\n<p>图片来自中国科学院上海天文台</p>\n<p>文章转自 中国科学院上海天文台<a href=\"http://www.shao.ac.cn/xwzx/ttxw/201904/t20190410/_5272456.html\">http://www.shao.ac.cn/xwzx/ttxw/201904/t20190410\\_5272456.html</a></p>\n<p><img src=\"https://i.loli.net/2019/04/10/5cadfa0f19ace.jpg\"></p>\n<p>《天体物理学杂志通信》于4月10日以特刊的形式通过六篇论文发表了这一重大结果。该黑洞图像揭示了室女座星系团中超大质量星系Messier 87【1】中心的黑洞。该黑洞距离地球5500万光年，质量为太阳的65亿倍【2】。</p>\n<p>EHT把地球上的望远镜“组合”起来形成一个口径如地球大小的“虚拟”望远镜，所达到的灵敏度和分辨本领【3】都是前所未有的。百年之前，爱因斯坦广义相对论得到了首次试验验证【4】。如今，作为多年国际合作的结果，EHT为科学家们提供了研究宇宙中最极端天体的新方法。</p>\n<p>“我们捕获到了黑洞的首张照片”，来自天体物理中心|哈佛大学及史密松宁学会的EHT项目主任Sheperd S. Doeleman说,“这是一项由200多位科研人员组成的团队完成的非凡的科研成果。”</p>\n<p>黑洞是一种被极度压缩的宇宙天体，在一个很小的区域内包含着令人难以置信的质量。这种天体的存在以极端的方式影响着周围的环境，让时空弯曲，并将周围的气体吸引进来。在此过程中，气体的引力能转化成热能，因此气体的温度变得很高，会发出强烈的辐射。</p>\n<p>“如此一来，黑洞就像沉浸在一片类似发光气体的明亮区域内，我们期望着黑洞会形成一个类似阴影的黑暗区域。这正是爱因斯坦广义相对论所预言的，可我们以前从未见过。”EHT科学委员会主席、来自荷兰Radbound大学的Heino Falcke解释。“这个暗影的形成，源于光线的引力弯曲和黑洞视界对光子的捕获。暗影揭示了黑洞这类迷人天体的很多本质，也使得我们能够测量M87黑洞的巨大质量。”</p>\n<p>多次独立的EHT观测通过多个校准以及不同的成像方法均揭示了一个环状的结构及其中心的暗弱区域，即黑洞阴影。</p>\n<p>“一旦我们成功对黑洞阴影成像，就可以将观测结果与理论预言相比较，检验考虑了时空弯曲、超高温及超强磁场等物理性质在内的大量模型。令人惊讶的是，我们所观测到图像的许多特征与理论预言相匹配”，EHT 董事会成员贺曾朴评论道，“这使得我们对观测的理论解释，包括对黑洞质量的测量，都充满信心。”</p>\n<p>创建EHT是一项艰巨的挑战，需要升级和连接部署八个现有的射电望远镜来组成全球网络，而这些望远镜分布在各种具有挑战性的高海拔地区，包括夏威夷和墨西哥的火山、亚利桑那州的山脉、西班牙的内华达山脉、智利的阿塔卡马沙漠以及南极点。</p>\n<p>EHT观测使用了甚长基线干涉测量（VLBI）技术，观测波段是1.3毫米。世界各地的射电望远镜同步观测，同时利用地球自转，形成一个口径如地球大小的“虚拟”望远镜，达到的分辨率约20微角秒，足以在巴黎的一家路边咖啡馆阅读纽约的报纸【5】。</p>\n<p>参与此次观测的望远镜包括ALMA、APEX、IRAM 30米望远镜、James Clerk Maxwell望远镜、大毫米波望远镜（LMT）、亚毫米波阵（SMA）、亚毫米波望远镜（SMT）和南极望远镜（SPT）。马普射电所和麻省理工学院Haystack天文台的专用超级计算机负责了对原始观测数据的互相关工作。</p>\n<p>EHT的建设和今天宣布的观测结果源于数十年观测、技术和理论工作的坚持和积累。这与来自世界各地的研究人员的密切合作是分不开的，是全球团队合作的典范。13个合作机构共同创建了EHT，使用了既有的基础设施并获得了各种机构的支持。主要资金由美国国家科学基金会（NSF）、欧盟欧洲研究理事会（ERC）和东亚资助机构提供。</p>\n<p>这一激动人心的成果受到了中国科学院天文大科学中心（CAMS）的支持，CAMS由中国国家天文台、紫金山天文台和上海天文台共同建立，是EHT的一个合作机构（EHT共有3个合作机构）的成员。上海天文台台牵头组织协调国内学者通过该合作机构参与此次EHT项目合作。</p>\n<p>“对M87中心黑洞的顺利成像绝不是EHT国际合作的终点站”,上海天文台台长沈志强研究员说。“ 我们期望也相信在不久的将来EHT会有更多令人兴奋的结果。”</p>\n<p>“我们已经取得了一代人以前认为不可能做到的事情”，Doeleman总结到。“技术的突破、世界上最好的射电天文台之间的合作、创新的算法都汇聚到一起，打开了一个关于黑洞和事件视界的全新窗口。”</p>\n<p>注释：</p>\n<p>【1】黑洞阴影是我们能看到的最接近黑洞本身的图像，黑洞是一个完全黑暗的天体，连光线也没法逃离它的势力范围。黑洞的势力范围——事件视界（EHT便以此为名）——比黑洞阴影的尺寸小约2.5倍，大小约400亿千米（对M87中心的超大质量黑洞来说）。</p>\n<p>【2】超大质量黑洞是相当小的天体，以至于几乎很难被直接看到。由于黑洞的尺寸正比于它的质量，黑洞质量越大，黑洞阴影越大。M87中心的黑洞质量巨大，又相对接近我们，是从地球上看过去角尺寸最大的黑洞之一，也因此成为EHT的一个完美目标。</p>\n<p>【3】虽然这些射电望远镜没有物理上连接，但借助氢原子钟精确计时，各台望远镜实现了数据记录的同时性。在2017年的全球观测中，观测波段是1.3毫米。EHT的每一台望远镜都产生了大量的数据，每天约生成350太字节的数据。这些数据被存储在高性能的充氦硬盘上。随后，这些数据被空运至被称作相关器的高度专业化超级计算机进行合并处理，这些超级计算机位于马普射电所和麻省理工学员海斯塔克天文台。在那里，合作开发的新型计算工具将精心处理数据并转换为图像。</p>\n<p>【4】100年前，为了通过观测星光是否会因太阳引力弯曲来检验广义相对论，两支科学探险队前往非洲海岸的普林西比岛和巴西的索布拉开展1919年的日食观测。作为1个世纪后的回应，EHT已经派遣团队成员前往世界上最高和最偏僻的射电观测台站，去再一次检验我们对引力的理解。</p>\n<p>【5】随着IRAM NOEMA天文台、格陵兰望远镜和基特峰望远镜加入EHT，未来EHT的灵敏度将显着提高。</p>\n<p>来自<a href=\"http://www.shao.ac.cn/xwzx/ttxw/201904/t20190410/_5272456.html\">http://www.shao.ac.cn/xwzx/ttxw/201904/t20190410\\_5272456.html</a></p>\n<h5 id=\"直播站STAFF\"><a href=\"#直播站STAFF\" class=\"headerlink\" title=\"直播站STAFF\"></a>直播站STAFF</h5><p>开发，设计，解决方案：bilibili@Ar-Sr-Na</p>\n<p>技术支持：cloudflare CDN，直播提供：中科院上海天文台</p>\n<p>本次直播从直播的网站找出iframe，嵌入到我的网站，相当于是我的网站直播，占的是我的带宽，我这里在重新编码直播出去，用的是我的资源，也就是说我服务器那边相当于一个访客访问那个直播，分担源站压力</p>\n","site":{"data":{}},"excerpt":"","more":"<p>来自<br><a href=\"https://space.bilibili.com/363584502\">表象的本质</a> <a href=\"https://www.bilibili.com/video/av48924373/\">https://www.bilibili.com/video/av48924373/</a></p>\n<p>图片来自中国科学院上海天文台</p>\n<p>文章转自 中国科学院上海天文台<a href=\"http://www.shao.ac.cn/xwzx/ttxw/201904/t20190410/_5272456.html\">http://www.shao.ac.cn/xwzx/ttxw/201904/t20190410\\_5272456.html</a></p>\n<p><img src=\"https://i.loli.net/2019/04/10/5cadfa0f19ace.jpg\"></p>\n<p>《天体物理学杂志通信》于4月10日以特刊的形式通过六篇论文发表了这一重大结果。该黑洞图像揭示了室女座星系团中超大质量星系Messier 87【1】中心的黑洞。该黑洞距离地球5500万光年，质量为太阳的65亿倍【2】。</p>\n<p>EHT把地球上的望远镜“组合”起来形成一个口径如地球大小的“虚拟”望远镜，所达到的灵敏度和分辨本领【3】都是前所未有的。百年之前，爱因斯坦广义相对论得到了首次试验验证【4】。如今，作为多年国际合作的结果，EHT为科学家们提供了研究宇宙中最极端天体的新方法。</p>\n<p>“我们捕获到了黑洞的首张照片”，来自天体物理中心|哈佛大学及史密松宁学会的EHT项目主任Sheperd S. Doeleman说,“这是一项由200多位科研人员组成的团队完成的非凡的科研成果。”</p>\n<p>黑洞是一种被极度压缩的宇宙天体，在一个很小的区域内包含着令人难以置信的质量。这种天体的存在以极端的方式影响着周围的环境，让时空弯曲，并将周围的气体吸引进来。在此过程中，气体的引力能转化成热能，因此气体的温度变得很高，会发出强烈的辐射。</p>\n<p>“如此一来，黑洞就像沉浸在一片类似发光气体的明亮区域内，我们期望着黑洞会形成一个类似阴影的黑暗区域。这正是爱因斯坦广义相对论所预言的，可我们以前从未见过。”EHT科学委员会主席、来自荷兰Radbound大学的Heino Falcke解释。“这个暗影的形成，源于光线的引力弯曲和黑洞视界对光子的捕获。暗影揭示了黑洞这类迷人天体的很多本质，也使得我们能够测量M87黑洞的巨大质量。”</p>\n<p>多次独立的EHT观测通过多个校准以及不同的成像方法均揭示了一个环状的结构及其中心的暗弱区域，即黑洞阴影。</p>\n<p>“一旦我们成功对黑洞阴影成像，就可以将观测结果与理论预言相比较，检验考虑了时空弯曲、超高温及超强磁场等物理性质在内的大量模型。令人惊讶的是，我们所观测到图像的许多特征与理论预言相匹配”，EHT 董事会成员贺曾朴评论道，“这使得我们对观测的理论解释，包括对黑洞质量的测量，都充满信心。”</p>\n<p>创建EHT是一项艰巨的挑战，需要升级和连接部署八个现有的射电望远镜来组成全球网络，而这些望远镜分布在各种具有挑战性的高海拔地区，包括夏威夷和墨西哥的火山、亚利桑那州的山脉、西班牙的内华达山脉、智利的阿塔卡马沙漠以及南极点。</p>\n<p>EHT观测使用了甚长基线干涉测量（VLBI）技术，观测波段是1.3毫米。世界各地的射电望远镜同步观测，同时利用地球自转，形成一个口径如地球大小的“虚拟”望远镜，达到的分辨率约20微角秒，足以在巴黎的一家路边咖啡馆阅读纽约的报纸【5】。</p>\n<p>参与此次观测的望远镜包括ALMA、APEX、IRAM 30米望远镜、James Clerk Maxwell望远镜、大毫米波望远镜（LMT）、亚毫米波阵（SMA）、亚毫米波望远镜（SMT）和南极望远镜（SPT）。马普射电所和麻省理工学院Haystack天文台的专用超级计算机负责了对原始观测数据的互相关工作。</p>\n<p>EHT的建设和今天宣布的观测结果源于数十年观测、技术和理论工作的坚持和积累。这与来自世界各地的研究人员的密切合作是分不开的，是全球团队合作的典范。13个合作机构共同创建了EHT，使用了既有的基础设施并获得了各种机构的支持。主要资金由美国国家科学基金会（NSF）、欧盟欧洲研究理事会（ERC）和东亚资助机构提供。</p>\n<p>这一激动人心的成果受到了中国科学院天文大科学中心（CAMS）的支持，CAMS由中国国家天文台、紫金山天文台和上海天文台共同建立，是EHT的一个合作机构（EHT共有3个合作机构）的成员。上海天文台台牵头组织协调国内学者通过该合作机构参与此次EHT项目合作。</p>\n<p>“对M87中心黑洞的顺利成像绝不是EHT国际合作的终点站”,上海天文台台长沈志强研究员说。“ 我们期望也相信在不久的将来EHT会有更多令人兴奋的结果。”</p>\n<p>“我们已经取得了一代人以前认为不可能做到的事情”，Doeleman总结到。“技术的突破、世界上最好的射电天文台之间的合作、创新的算法都汇聚到一起，打开了一个关于黑洞和事件视界的全新窗口。”</p>\n<p>注释：</p>\n<p>【1】黑洞阴影是我们能看到的最接近黑洞本身的图像，黑洞是一个完全黑暗的天体，连光线也没法逃离它的势力范围。黑洞的势力范围——事件视界（EHT便以此为名）——比黑洞阴影的尺寸小约2.5倍，大小约400亿千米（对M87中心的超大质量黑洞来说）。</p>\n<p>【2】超大质量黑洞是相当小的天体，以至于几乎很难被直接看到。由于黑洞的尺寸正比于它的质量，黑洞质量越大，黑洞阴影越大。M87中心的黑洞质量巨大，又相对接近我们，是从地球上看过去角尺寸最大的黑洞之一，也因此成为EHT的一个完美目标。</p>\n<p>【3】虽然这些射电望远镜没有物理上连接，但借助氢原子钟精确计时，各台望远镜实现了数据记录的同时性。在2017年的全球观测中，观测波段是1.3毫米。EHT的每一台望远镜都产生了大量的数据，每天约生成350太字节的数据。这些数据被存储在高性能的充氦硬盘上。随后，这些数据被空运至被称作相关器的高度专业化超级计算机进行合并处理，这些超级计算机位于马普射电所和麻省理工学员海斯塔克天文台。在那里，合作开发的新型计算工具将精心处理数据并转换为图像。</p>\n<p>【4】100年前，为了通过观测星光是否会因太阳引力弯曲来检验广义相对论，两支科学探险队前往非洲海岸的普林西比岛和巴西的索布拉开展1919年的日食观测。作为1个世纪后的回应，EHT已经派遣团队成员前往世界上最高和最偏僻的射电观测台站，去再一次检验我们对引力的理解。</p>\n<p>【5】随着IRAM NOEMA天文台、格陵兰望远镜和基特峰望远镜加入EHT，未来EHT的灵敏度将显着提高。</p>\n<p>来自<a href=\"http://www.shao.ac.cn/xwzx/ttxw/201904/t20190410/_5272456.html\">http://www.shao.ac.cn/xwzx/ttxw/201904/t20190410\\_5272456.html</a></p>\n<h5 id=\"直播站STAFF\"><a href=\"#直播站STAFF\" class=\"headerlink\" title=\"直播站STAFF\"></a>直播站STAFF</h5><p>开发，设计，解决方案：bilibili@Ar-Sr-Na</p>\n<p>技术支持：cloudflare CDN，直播提供：中科院上海天文台</p>\n<p>本次直播从直播的网站找出iframe，嵌入到我的网站，相当于是我的网站直播，占的是我的带宽，我这里在重新编码直播出去，用的是我的资源，也就是说我服务器那边相当于一个访客访问那个直播，分担源站压力</p>\n"},{"title":"Ar-Sr-Na Javascript 实践 | 博客站","date":"2021-07-05T15:31:15.000Z","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"https://www.arsrna.cn","authorAbout":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","authorDesc":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","categories":"技术","comments":1,"tags":null,"keywords":"JavaScript,学习","description":"与java完全不同","photos":"https://www.arsrna.cn/images/DSC08095_cop.jpg","_content":"# 制作一个考场时钟\n\n首先，这个时钟要能刷新时间，显示正确，也要显示科目\n\n完工后大概长这样子：\n\n![](https://www.arlearn.ltd/javascript/docs/images/app-7-5/mpfyn70nam.png)\n\n整体只有简单的几部分：\n\n| 内容 | 实现方式 |\n|:----|:----|\n| 标语 | `<h1 class=\"display-1\">`标签 |\n| 时间 | 利用setInterval() 以及date()对象进行更新时间 |\n| 科目 | 进行更新时间的同时不断判断科目与时间是否对准 |\n| 装饰 | 花里胡哨，符合考场要求就行 |\n\n\n## 准备部分\n\n为了美观，这里使用bootstrap css：\n\n首行加入：`<link href=\"https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.6.0/css/bootstrap.min.css\" rel=\"stylesheet\">`\n\n这里建议保存为本地css，然后更改路径，毕竟有些考场没通网\n\n## 内容\n\n整个内容要包括在一个容器，不仅美观也方便布局，我使用jumbotron，container两个组件\n\n```html\n<div class=\"jumbotron container\">\n```\n\n再在里面添加基本的控件即可\n\n## 标语\n\n因为它24小时都不变，所以用静态标签就好\n\nbootstrap的alert就很不错\n\n```html\n<div class=\"alert alert-danger\" role=\"alert\">\n<h3 id=\"title1\">遵守纪律，认真考试</h3>\n</div>\n```\n\n## 核心部分：时间与科目\n\n### 时间的刷新\n\nJavaScript可以动态控制DOM，之前也有讲过 [开始第一个项目-hello world](https://www.arlearn.ltd/javascript/docs/#/?id=%e5%bc%80%e5%a7%8b%e7%ac%ac%e4%b8%80%e4%b8%aa%e9%a1%b9%e7%9b%ae-hello-world)[ | arlearn.ltd](https://www.arlearn.ltd/javascript/docs/#/?id=%e5%bc%80%e5%a7%8b%e7%ac%ac%e4%b8%80%e4%b8%aa%e9%a1%b9%e7%9b%ae-hello-world)\n\n首先建立一个div用于显示时间（为了放大字号设置了font-size: 1000%）\n\n要设置好id，这里为time\n\n```html\n<h1 class=\"display-1\" style=\"font-size: 1000%\" id=\"time\"></h1>\n```\n\n利用js的Date()对象显示时间，其基本方法参考：[JavaScript Date 参考手册 (w3school.com.cn)](https://www.w3school.com.cn/jsref/jsref_obj_date.asp)\n\n这里使用getHours()，getMinutes()，getSeconds()\n\n首先新建一个对象，并赋值\n\n```js\nvar time = new Date()\n```\n\n然后变成 小时：分钟：秒 的形式\n\n```js\nvar timeStr = time.getHours()+':'+time.getMinutes()+':'+time.getSeconds();\n```\n\n最后更改DOM：\n\n```js\ndocument.getElementById('time').innerHTML=timeStr\n```\n\n为了让时间自动刷新，用setInterval来一秒刷新一次：结合起来就是这样\n\n```js\nsetInterval(function() {\nvar time = new Date();\nvar timeStr = time.getHours()+':'+time.getMinutes()+':'+time.getSeconds();\ndocument.getElementById('time').innerHTML = timeStr\n},1000)//这里是毫秒\n```\n\n这时候回到浏览器，时间就会自己刷新了，只不过个位数的时候只能显示一位，鉴于判断比较复杂，我就懒得整了\n\n### 科目的改变\n\n既然是实用教程，那就实用些，让电脑自己判断自动改变\n\n目前实现的方法如下，\n\nReference/参考：[【教程】纯前端做一个歌词显示的音乐播放器 | Ar-Sr-Na 博客站 (arsrna.ltd)](https://www.arsrna.ltd/posts/08-1202L-08-1203K/#%E5%8C%B9%E9%85%8D%E9%9F%B3%E9%A2%91%E5%92%8C%E6%AD%8C%E8%AF%8D%E6%97%B6%E9%97%B4%E7%82%B9)\n\n不断遍历时间数组来匹配科目，首先新建一个json文件：建议使用Excel再转json：\n\n[在线Excel、CSV转JSON格式-BeJSON.com](https://www.bejson.com/json/col2json/)\n\n要注意，这里的time一定要和timeStr格式一样，个位数的时候只能显示一位，这里也要严格对照\n\n| time | subject |\n|:----|:----|\n| 23:0:0 | 熬夜 |\n| 23:15:0 | 写代码 |\n| 23:20:0 | 求求你们 |\n| 23:21:0 | 给个支持吧 |\n| 23:22:0 | Ar-Sr-Na |\n| 23:23:0 | 我永远喜欢御坂美琴 |\n\n\n```json\n[\n{\"time\":\"23:0:0\",\"subject\":\"熬夜\"},\n{\"time\":\"23:15:0\",\"subject\":\"写代码\"},\n{\"time\":\"23:20:0\",\"subject\":\"求求你们\"},\n{\"time\":\"23:21:0\",\"subject\":\"给个支持吧\"},\n{\"time\":\"23:22:0\",\"subject\":\"Ar-Sr-Na\"},\n{\"time\":\"23:23:0\",\"subject\":\"我永远喜欢御坂美琴\"},\n]\n```\n\n时间流动的同时不断查找数组遍历数组，匹配科目\n\n但是注意，我们最好把 时：分：秒 的格式换为js读得出来的格式，秒，也就是num类\n\nExcel中很好处理\n\n| h | m | s | time | subject |\n|:----|:----|:----|:----|:----|\n| 23 | 0 | 0 | 82800 | 熬夜 |\n| 23 | 1 | 0 | 82860 | 写代码 |\n| 23 | 2 | 0 | 82920 | 求求你们 |\n| 23 | 5 | 0 | 83100 | 给个支持吧 |\n| 23 | 33 | 33 | 84813 | Ar-Sr-Na |\n| 23 | 33 | 34 | 84814 | 我永远喜欢御坂美琴 |\n\n\n```json\n[{\"time\":82800 ,\"subject\":\"熬夜\"},\n{\"time\":82860 ,\"subject\":\"写代码\"},\n{\"time\":82920 ,\"subject\":\"求求你们\"},\n{\"time\":83100 ,\"subject\":\"给个支持吧\"},\n{\"time\":84813 ,\"subject\":\"Ar-Sr-Na\"},\n{\"time\":84814 ,\"subject\":\"我永远喜欢御坂美琴\"},]\n```\n\n除此之外，我们的js时间也要进行更改，另外赋值一个变量\n\n```js\nvar timeJS = (time.getHours()*3600)+(time.getMinutes()*60)+time.getSeconds();\n```\n\n然后可以继续了\n\n给json赋值\n\n```javascript\nvar subject = xxx(刚刚那一段)\n```\n\n```js\nfor(i1=0;i1<subject.length;i1++) {\n    if (timeJS > subject[i1].time) {\n   //改变科目的dom\n    }\n   }\n```\n\n当匹配到时改变科目：\n\n```html\n科目组件：<h2 id=\"subject\">当前科目：语文</h2>\n```\n\n```js\ndocument.getElementById('subject').innerHTML =\n```\n\n## 总代码\n\nHTML：\n\n```html\n<div class=\"jumbotron container\">\n  <!--script type=\"text/javascript\" src=\"https://api.xygeng.cn/one/get/\"></script-->\n  <div class=\"alert alert-danger\" role=\"alert\">\n    <h3 id=\"title1\">遵守纪律，认真考试</h3>\n  </div>\n  <h1 class=\"display-1\" style=\"font-size: 1000%\" id=\"time\">\n  </h1>\n  <div class=\"alert alert-primary\" role=\"alert\">\n    <h2 id=\"subject\">当前科目：语文</h2>\n  </div>\n  <p>Copyright © Ar-Sr-Na. All rights reserved.</p>\n</div>\n```\n\n```js\nsubject = [{\"time\":82800 ,\"subject\":\"熬夜\"},\n{\"time\":82860 ,\"subject\":\"写代码\"},\n{\"time\":82920 ,\"subject\":\"求求你们\"},\n{\"time\":83100 ,\"subject\":\"给个支持吧\"},\n{\"time\":84813 ,\"subject\":\"Ar-Sr-Na\"},\n{\"time\":84814 ,\"subject\":\"我永远喜欢御坂美琴\"},]\n\nsetInterval(function() {\nvar time = new Date();\nvar timeStr = time.getHours()+':'+time.getMinutes()+':'+time.getSeconds();\ndocument.getElementById('time').innerHTML = timeStr;\n\nvar timeJS = (time.getHours()*3600)+(time.getMinutes()*60)+time.getSeconds();\nfor(i1=0;i1<subject.length;i1++) { \nif (timeJS > subject[i1].time) {\ndocument.getElementById('subject').innerHTML = subject[i1].subject\n//改变科目的dom\n  }\n }\n   \n},1000)\n```\n\nDEMO地址：[考场时钟 | Ar-Learning](https://codepen.io/arsrna/pen/YzVwZWG)\n\n# 制作一个广播系统\n\n未完待续","source":"jslearn/app.md","raw":"---\ntitle: Ar-Sr-Na Javascript 实践 | 博客站\ndate: 2021-07-05 23:31:15\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: https://www.arsrna.cn\nauthorAbout: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\nauthorDesc: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\ncategories: 技术\ncomments: true\ntags: \nkeywords: JavaScript,学习\ndescription: 与java完全不同\nphotos: 'https://www.arsrna.cn/images/DSC08095_cop.jpg'\n---\n# 制作一个考场时钟\n\n首先，这个时钟要能刷新时间，显示正确，也要显示科目\n\n完工后大概长这样子：\n\n![](https://www.arlearn.ltd/javascript/docs/images/app-7-5/mpfyn70nam.png)\n\n整体只有简单的几部分：\n\n| 内容 | 实现方式 |\n|:----|:----|\n| 标语 | `<h1 class=\"display-1\">`标签 |\n| 时间 | 利用setInterval() 以及date()对象进行更新时间 |\n| 科目 | 进行更新时间的同时不断判断科目与时间是否对准 |\n| 装饰 | 花里胡哨，符合考场要求就行 |\n\n\n## 准备部分\n\n为了美观，这里使用bootstrap css：\n\n首行加入：`<link href=\"https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.6.0/css/bootstrap.min.css\" rel=\"stylesheet\">`\n\n这里建议保存为本地css，然后更改路径，毕竟有些考场没通网\n\n## 内容\n\n整个内容要包括在一个容器，不仅美观也方便布局，我使用jumbotron，container两个组件\n\n```html\n<div class=\"jumbotron container\">\n```\n\n再在里面添加基本的控件即可\n\n## 标语\n\n因为它24小时都不变，所以用静态标签就好\n\nbootstrap的alert就很不错\n\n```html\n<div class=\"alert alert-danger\" role=\"alert\">\n<h3 id=\"title1\">遵守纪律，认真考试</h3>\n</div>\n```\n\n## 核心部分：时间与科目\n\n### 时间的刷新\n\nJavaScript可以动态控制DOM，之前也有讲过 [开始第一个项目-hello world](https://www.arlearn.ltd/javascript/docs/#/?id=%e5%bc%80%e5%a7%8b%e7%ac%ac%e4%b8%80%e4%b8%aa%e9%a1%b9%e7%9b%ae-hello-world)[ | arlearn.ltd](https://www.arlearn.ltd/javascript/docs/#/?id=%e5%bc%80%e5%a7%8b%e7%ac%ac%e4%b8%80%e4%b8%aa%e9%a1%b9%e7%9b%ae-hello-world)\n\n首先建立一个div用于显示时间（为了放大字号设置了font-size: 1000%）\n\n要设置好id，这里为time\n\n```html\n<h1 class=\"display-1\" style=\"font-size: 1000%\" id=\"time\"></h1>\n```\n\n利用js的Date()对象显示时间，其基本方法参考：[JavaScript Date 参考手册 (w3school.com.cn)](https://www.w3school.com.cn/jsref/jsref_obj_date.asp)\n\n这里使用getHours()，getMinutes()，getSeconds()\n\n首先新建一个对象，并赋值\n\n```js\nvar time = new Date()\n```\n\n然后变成 小时：分钟：秒 的形式\n\n```js\nvar timeStr = time.getHours()+':'+time.getMinutes()+':'+time.getSeconds();\n```\n\n最后更改DOM：\n\n```js\ndocument.getElementById('time').innerHTML=timeStr\n```\n\n为了让时间自动刷新，用setInterval来一秒刷新一次：结合起来就是这样\n\n```js\nsetInterval(function() {\nvar time = new Date();\nvar timeStr = time.getHours()+':'+time.getMinutes()+':'+time.getSeconds();\ndocument.getElementById('time').innerHTML = timeStr\n},1000)//这里是毫秒\n```\n\n这时候回到浏览器，时间就会自己刷新了，只不过个位数的时候只能显示一位，鉴于判断比较复杂，我就懒得整了\n\n### 科目的改变\n\n既然是实用教程，那就实用些，让电脑自己判断自动改变\n\n目前实现的方法如下，\n\nReference/参考：[【教程】纯前端做一个歌词显示的音乐播放器 | Ar-Sr-Na 博客站 (arsrna.ltd)](https://www.arsrna.ltd/posts/08-1202L-08-1203K/#%E5%8C%B9%E9%85%8D%E9%9F%B3%E9%A2%91%E5%92%8C%E6%AD%8C%E8%AF%8D%E6%97%B6%E9%97%B4%E7%82%B9)\n\n不断遍历时间数组来匹配科目，首先新建一个json文件：建议使用Excel再转json：\n\n[在线Excel、CSV转JSON格式-BeJSON.com](https://www.bejson.com/json/col2json/)\n\n要注意，这里的time一定要和timeStr格式一样，个位数的时候只能显示一位，这里也要严格对照\n\n| time | subject |\n|:----|:----|\n| 23:0:0 | 熬夜 |\n| 23:15:0 | 写代码 |\n| 23:20:0 | 求求你们 |\n| 23:21:0 | 给个支持吧 |\n| 23:22:0 | Ar-Sr-Na |\n| 23:23:0 | 我永远喜欢御坂美琴 |\n\n\n```json\n[\n{\"time\":\"23:0:0\",\"subject\":\"熬夜\"},\n{\"time\":\"23:15:0\",\"subject\":\"写代码\"},\n{\"time\":\"23:20:0\",\"subject\":\"求求你们\"},\n{\"time\":\"23:21:0\",\"subject\":\"给个支持吧\"},\n{\"time\":\"23:22:0\",\"subject\":\"Ar-Sr-Na\"},\n{\"time\":\"23:23:0\",\"subject\":\"我永远喜欢御坂美琴\"},\n]\n```\n\n时间流动的同时不断查找数组遍历数组，匹配科目\n\n但是注意，我们最好把 时：分：秒 的格式换为js读得出来的格式，秒，也就是num类\n\nExcel中很好处理\n\n| h | m | s | time | subject |\n|:----|:----|:----|:----|:----|\n| 23 | 0 | 0 | 82800 | 熬夜 |\n| 23 | 1 | 0 | 82860 | 写代码 |\n| 23 | 2 | 0 | 82920 | 求求你们 |\n| 23 | 5 | 0 | 83100 | 给个支持吧 |\n| 23 | 33 | 33 | 84813 | Ar-Sr-Na |\n| 23 | 33 | 34 | 84814 | 我永远喜欢御坂美琴 |\n\n\n```json\n[{\"time\":82800 ,\"subject\":\"熬夜\"},\n{\"time\":82860 ,\"subject\":\"写代码\"},\n{\"time\":82920 ,\"subject\":\"求求你们\"},\n{\"time\":83100 ,\"subject\":\"给个支持吧\"},\n{\"time\":84813 ,\"subject\":\"Ar-Sr-Na\"},\n{\"time\":84814 ,\"subject\":\"我永远喜欢御坂美琴\"},]\n```\n\n除此之外，我们的js时间也要进行更改，另外赋值一个变量\n\n```js\nvar timeJS = (time.getHours()*3600)+(time.getMinutes()*60)+time.getSeconds();\n```\n\n然后可以继续了\n\n给json赋值\n\n```javascript\nvar subject = xxx(刚刚那一段)\n```\n\n```js\nfor(i1=0;i1<subject.length;i1++) {\n    if (timeJS > subject[i1].time) {\n   //改变科目的dom\n    }\n   }\n```\n\n当匹配到时改变科目：\n\n```html\n科目组件：<h2 id=\"subject\">当前科目：语文</h2>\n```\n\n```js\ndocument.getElementById('subject').innerHTML =\n```\n\n## 总代码\n\nHTML：\n\n```html\n<div class=\"jumbotron container\">\n  <!--script type=\"text/javascript\" src=\"https://api.xygeng.cn/one/get/\"></script-->\n  <div class=\"alert alert-danger\" role=\"alert\">\n    <h3 id=\"title1\">遵守纪律，认真考试</h3>\n  </div>\n  <h1 class=\"display-1\" style=\"font-size: 1000%\" id=\"time\">\n  </h1>\n  <div class=\"alert alert-primary\" role=\"alert\">\n    <h2 id=\"subject\">当前科目：语文</h2>\n  </div>\n  <p>Copyright © Ar-Sr-Na. All rights reserved.</p>\n</div>\n```\n\n```js\nsubject = [{\"time\":82800 ,\"subject\":\"熬夜\"},\n{\"time\":82860 ,\"subject\":\"写代码\"},\n{\"time\":82920 ,\"subject\":\"求求你们\"},\n{\"time\":83100 ,\"subject\":\"给个支持吧\"},\n{\"time\":84813 ,\"subject\":\"Ar-Sr-Na\"},\n{\"time\":84814 ,\"subject\":\"我永远喜欢御坂美琴\"},]\n\nsetInterval(function() {\nvar time = new Date();\nvar timeStr = time.getHours()+':'+time.getMinutes()+':'+time.getSeconds();\ndocument.getElementById('time').innerHTML = timeStr;\n\nvar timeJS = (time.getHours()*3600)+(time.getMinutes()*60)+time.getSeconds();\nfor(i1=0;i1<subject.length;i1++) { \nif (timeJS > subject[i1].time) {\ndocument.getElementById('subject').innerHTML = subject[i1].subject\n//改变科目的dom\n  }\n }\n   \n},1000)\n```\n\nDEMO地址：[考场时钟 | Ar-Learning](https://codepen.io/arsrna/pen/YzVwZWG)\n\n# 制作一个广播系统\n\n未完待续","updated":"2022-07-20T05:04:16.770Z","path":"jslearn/app.html","layout":"page","_id":"clod0d6wr0005c0nd7suk2e7f","content":"<h1 id=\"制作一个考场时钟\"><a href=\"#制作一个考场时钟\" class=\"headerlink\" title=\"制作一个考场时钟\"></a>制作一个考场时钟</h1><p>首先，这个时钟要能刷新时间，显示正确，也要显示科目</p>\n<p>完工后大概长这样子：</p>\n<p><img src=\"https://www.arlearn.ltd/javascript/docs/images/app-7-5/mpfyn70nam.png\"></p>\n<p>整体只有简单的几部分：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">内容</th>\n<th align=\"left\">实现方式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">标语</td>\n<td align=\"left\"><code>&lt;h1 class=&quot;display-1&quot;&gt;</code>标签</td>\n</tr>\n<tr>\n<td align=\"left\">时间</td>\n<td align=\"left\">利用setInterval() 以及date()对象进行更新时间</td>\n</tr>\n<tr>\n<td align=\"left\">科目</td>\n<td align=\"left\">进行更新时间的同时不断判断科目与时间是否对准</td>\n</tr>\n<tr>\n<td align=\"left\">装饰</td>\n<td align=\"left\">花里胡哨，符合考场要求就行</td>\n</tr>\n</tbody></table>\n<h2 id=\"准备部分\"><a href=\"#准备部分\" class=\"headerlink\" title=\"准备部分\"></a>准备部分</h2><p>为了美观，这里使用bootstrap css：</p>\n<p>首行加入：<code>&lt;link href=&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.6.0/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;</code></p>\n<p>这里建议保存为本地css，然后更改路径，毕竟有些考场没通网</p>\n<h2 id=\"内容\"><a href=\"#内容\" class=\"headerlink\" title=\"内容\"></a>内容</h2><p>整个内容要包括在一个容器，不仅美观也方便布局，我使用jumbotron，container两个组件</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;jumbotron container&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>再在里面添加基本的控件即可</p>\n<h2 id=\"标语\"><a href=\"#标语\" class=\"headerlink\" title=\"标语\"></a>标语</h2><p>因为它24小时都不变，所以用静态标签就好</p>\n<p>bootstrap的alert就很不错</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;alert alert-danger&quot;</span> <span class=\"hljs-attr\">role</span>=<span class=\"hljs-string\">&quot;alert&quot;</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;title1&quot;</span>&gt;</span>遵守纪律，认真考试<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"核心部分：时间与科目\"><a href=\"#核心部分：时间与科目\" class=\"headerlink\" title=\"核心部分：时间与科目\"></a>核心部分：时间与科目</h2><h3 id=\"时间的刷新\"><a href=\"#时间的刷新\" class=\"headerlink\" title=\"时间的刷新\"></a>时间的刷新</h3><p>JavaScript可以动态控制DOM，之前也有讲过 <a href=\"https://www.arlearn.ltd/javascript/docs/#/?id=%e5%bc%80%e5%a7%8b%e7%ac%ac%e4%b8%80%e4%b8%aa%e9%a1%b9%e7%9b%ae-hello-world\">开始第一个项目-hello world</a><a href=\"https://www.arlearn.ltd/javascript/docs/#/?id=%e5%bc%80%e5%a7%8b%e7%ac%ac%e4%b8%80%e4%b8%aa%e9%a1%b9%e7%9b%ae-hello-world\"> | arlearn.ltd</a></p>\n<p>首先建立一个div用于显示时间（为了放大字号设置了font-size: 1000%）</p>\n<p>要设置好id，这里为time</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;display-1&quot;</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;font-size: 1000%&quot;</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;time&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>利用js的Date()对象显示时间，其基本方法参考：<a href=\"https://www.w3school.com.cn/jsref/jsref_obj_date.asp\">JavaScript Date 参考手册 (w3school.com.cn)</a></p>\n<p>这里使用getHours()，getMinutes()，getSeconds()</p>\n<p>首先新建一个对象，并赋值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">var</span> time = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>()<br></code></pre></td></tr></table></figure>\n\n<p>然后变成 小时：分钟：秒 的形式</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">var</span> timeStr = time.<span class=\"hljs-title function_\">getHours</span>()+<span class=\"hljs-string\">&#x27;:&#x27;</span>+time.<span class=\"hljs-title function_\">getMinutes</span>()+<span class=\"hljs-string\">&#x27;:&#x27;</span>+time.<span class=\"hljs-title function_\">getSeconds</span>();<br></code></pre></td></tr></table></figure>\n\n<p>最后更改DOM：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&#x27;time&#x27;</span>).<span class=\"hljs-property\">innerHTML</span>=timeStr<br></code></pre></td></tr></table></figure>\n\n<p>为了让时间自动刷新，用setInterval来一秒刷新一次：结合起来就是这样</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-built_in\">setInterval</span>(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) &#123;<br><span class=\"hljs-keyword\">var</span> time = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>();<br><span class=\"hljs-keyword\">var</span> timeStr = time.<span class=\"hljs-title function_\">getHours</span>()+<span class=\"hljs-string\">&#x27;:&#x27;</span>+time.<span class=\"hljs-title function_\">getMinutes</span>()+<span class=\"hljs-string\">&#x27;:&#x27;</span>+time.<span class=\"hljs-title function_\">getSeconds</span>();<br><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&#x27;time&#x27;</span>).<span class=\"hljs-property\">innerHTML</span> = timeStr<br>&#125;,<span class=\"hljs-number\">1000</span>)<span class=\"hljs-comment\">//这里是毫秒</span><br></code></pre></td></tr></table></figure>\n\n<p>这时候回到浏览器，时间就会自己刷新了，只不过个位数的时候只能显示一位，鉴于判断比较复杂，我就懒得整了</p>\n<h3 id=\"科目的改变\"><a href=\"#科目的改变\" class=\"headerlink\" title=\"科目的改变\"></a>科目的改变</h3><p>既然是实用教程，那就实用些，让电脑自己判断自动改变</p>\n<p>目前实现的方法如下，</p>\n<p>Reference&#x2F;参考：<a href=\"https://www.arsrna.ltd/posts/08-1202L-08-1203K/#%E5%8C%B9%E9%85%8D%E9%9F%B3%E9%A2%91%E5%92%8C%E6%AD%8C%E8%AF%8D%E6%97%B6%E9%97%B4%E7%82%B9\">【教程】纯前端做一个歌词显示的音乐播放器 | Ar-Sr-Na 博客站 (arsrna.ltd)</a></p>\n<p>不断遍历时间数组来匹配科目，首先新建一个json文件：建议使用Excel再转json：</p>\n<p><a href=\"https://www.bejson.com/json/col2json/\">在线Excel、CSV转JSON格式-BeJSON.com</a></p>\n<p>要注意，这里的time一定要和timeStr格式一样，个位数的时候只能显示一位，这里也要严格对照</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">time</th>\n<th align=\"left\">subject</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">23:0:0</td>\n<td align=\"left\">熬夜</td>\n</tr>\n<tr>\n<td align=\"left\">23:15:0</td>\n<td align=\"left\">写代码</td>\n</tr>\n<tr>\n<td align=\"left\">23:20:0</td>\n<td align=\"left\">求求你们</td>\n</tr>\n<tr>\n<td align=\"left\">23:21:0</td>\n<td align=\"left\">给个支持吧</td>\n</tr>\n<tr>\n<td align=\"left\">23:22:0</td>\n<td align=\"left\">Ar-Sr-Na</td>\n</tr>\n<tr>\n<td align=\"left\">23:23:0</td>\n<td align=\"left\">我永远喜欢御坂美琴</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">[</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;23:0:0&quot;</span><span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;熬夜&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;23:15:0&quot;</span><span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;写代码&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;23:20:0&quot;</span><span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;求求你们&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;23:21:0&quot;</span><span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;给个支持吧&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;23:22:0&quot;</span><span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;Ar-Sr-Na&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;23:23:0&quot;</span><span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;我永远喜欢御坂美琴&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">]</span><br></code></pre></td></tr></table></figure>\n\n<p>时间流动的同时不断查找数组遍历数组，匹配科目</p>\n<p>但是注意，我们最好把 时：分：秒 的格式换为js读得出来的格式，秒，也就是num类</p>\n<p>Excel中很好处理</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">h</th>\n<th align=\"left\">m</th>\n<th align=\"left\">s</th>\n<th align=\"left\">time</th>\n<th align=\"left\">subject</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">23</td>\n<td align=\"left\">0</td>\n<td align=\"left\">0</td>\n<td align=\"left\">82800</td>\n<td align=\"left\">熬夜</td>\n</tr>\n<tr>\n<td align=\"left\">23</td>\n<td align=\"left\">1</td>\n<td align=\"left\">0</td>\n<td align=\"left\">82860</td>\n<td align=\"left\">写代码</td>\n</tr>\n<tr>\n<td align=\"left\">23</td>\n<td align=\"left\">2</td>\n<td align=\"left\">0</td>\n<td align=\"left\">82920</td>\n<td align=\"left\">求求你们</td>\n</tr>\n<tr>\n<td align=\"left\">23</td>\n<td align=\"left\">5</td>\n<td align=\"left\">0</td>\n<td align=\"left\">83100</td>\n<td align=\"left\">给个支持吧</td>\n</tr>\n<tr>\n<td align=\"left\">23</td>\n<td align=\"left\">33</td>\n<td align=\"left\">33</td>\n<td align=\"left\">84813</td>\n<td align=\"left\">Ar-Sr-Na</td>\n</tr>\n<tr>\n<td align=\"left\">23</td>\n<td align=\"left\">33</td>\n<td align=\"left\">34</td>\n<td align=\"left\">84814</td>\n<td align=\"left\">我永远喜欢御坂美琴</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">82800</span> <span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;熬夜&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">82860</span> <span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;写代码&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">82920</span> <span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;求求你们&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">83100</span> <span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;给个支持吧&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">84813</span> <span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;Ar-Sr-Na&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">84814</span> <span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;我永远喜欢御坂美琴&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><span class=\"hljs-punctuation\">]</span><br></code></pre></td></tr></table></figure>\n\n<p>除此之外，我们的js时间也要进行更改，另外赋值一个变量</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">var</span> timeJS = (time.<span class=\"hljs-title function_\">getHours</span>()*<span class=\"hljs-number\">3600</span>)+(time.<span class=\"hljs-title function_\">getMinutes</span>()*<span class=\"hljs-number\">60</span>)+time.<span class=\"hljs-title function_\">getSeconds</span>();<br></code></pre></td></tr></table></figure>\n\n<p>然后可以继续了</p>\n<p>给json赋值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">var</span> subject = <span class=\"hljs-title function_\">xxx</span>(刚刚那一段)<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">for</span>(i1=<span class=\"hljs-number\">0</span>;i1&lt;subject.<span class=\"hljs-property\">length</span>;i1++) &#123;<br>    <span class=\"hljs-keyword\">if</span> (timeJS &gt; subject[i1].<span class=\"hljs-property\">time</span>) &#123;<br>   <span class=\"hljs-comment\">//改变科目的dom</span><br>    &#125;<br>   &#125;<br></code></pre></td></tr></table></figure>\n\n<p>当匹配到时改变科目：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\">科目组件：<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;subject&quot;</span>&gt;</span>当前科目：语文<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&#x27;subject&#x27;</span>).<span class=\"hljs-property\">innerHTML</span> =<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"总代码\"><a href=\"#总代码\" class=\"headerlink\" title=\"总代码\"></a>总代码</h2><p>HTML：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;jumbotron container&quot;</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--script type=&quot;text/javascript&quot; src=&quot;https://api.xygeng.cn/one/get/&quot;&gt;&lt;/script--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;alert alert-danger&quot;</span> <span class=\"hljs-attr\">role</span>=<span class=\"hljs-string\">&quot;alert&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;title1&quot;</span>&gt;</span>遵守纪律，认真考试<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;display-1&quot;</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;font-size: 1000%&quot;</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;time&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;alert alert-primary&quot;</span> <span class=\"hljs-attr\">role</span>=<span class=\"hljs-string\">&quot;alert&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;subject&quot;</span>&gt;</span>当前科目：语文<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Copyright © Ar-Sr-Na. All rights reserved.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">subject = [&#123;<span class=\"hljs-string\">&quot;time&quot;</span>:<span class=\"hljs-number\">82800</span> ,<span class=\"hljs-string\">&quot;subject&quot;</span>:<span class=\"hljs-string\">&quot;熬夜&quot;</span>&#125;,<br>&#123;<span class=\"hljs-string\">&quot;time&quot;</span>:<span class=\"hljs-number\">82860</span> ,<span class=\"hljs-string\">&quot;subject&quot;</span>:<span class=\"hljs-string\">&quot;写代码&quot;</span>&#125;,<br>&#123;<span class=\"hljs-string\">&quot;time&quot;</span>:<span class=\"hljs-number\">82920</span> ,<span class=\"hljs-string\">&quot;subject&quot;</span>:<span class=\"hljs-string\">&quot;求求你们&quot;</span>&#125;,<br>&#123;<span class=\"hljs-string\">&quot;time&quot;</span>:<span class=\"hljs-number\">83100</span> ,<span class=\"hljs-string\">&quot;subject&quot;</span>:<span class=\"hljs-string\">&quot;给个支持吧&quot;</span>&#125;,<br>&#123;<span class=\"hljs-string\">&quot;time&quot;</span>:<span class=\"hljs-number\">84813</span> ,<span class=\"hljs-string\">&quot;subject&quot;</span>:<span class=\"hljs-string\">&quot;Ar-Sr-Na&quot;</span>&#125;,<br>&#123;<span class=\"hljs-string\">&quot;time&quot;</span>:<span class=\"hljs-number\">84814</span> ,<span class=\"hljs-string\">&quot;subject&quot;</span>:<span class=\"hljs-string\">&quot;我永远喜欢御坂美琴&quot;</span>&#125;,]<br><br><span class=\"hljs-built_in\">setInterval</span>(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) &#123;<br><span class=\"hljs-keyword\">var</span> time = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>();<br><span class=\"hljs-keyword\">var</span> timeStr = time.<span class=\"hljs-title function_\">getHours</span>()+<span class=\"hljs-string\">&#x27;:&#x27;</span>+time.<span class=\"hljs-title function_\">getMinutes</span>()+<span class=\"hljs-string\">&#x27;:&#x27;</span>+time.<span class=\"hljs-title function_\">getSeconds</span>();<br><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&#x27;time&#x27;</span>).<span class=\"hljs-property\">innerHTML</span> = timeStr;<br><br><span class=\"hljs-keyword\">var</span> timeJS = (time.<span class=\"hljs-title function_\">getHours</span>()*<span class=\"hljs-number\">3600</span>)+(time.<span class=\"hljs-title function_\">getMinutes</span>()*<span class=\"hljs-number\">60</span>)+time.<span class=\"hljs-title function_\">getSeconds</span>();<br><span class=\"hljs-keyword\">for</span>(i1=<span class=\"hljs-number\">0</span>;i1&lt;subject.<span class=\"hljs-property\">length</span>;i1++) &#123; <br><span class=\"hljs-keyword\">if</span> (timeJS &gt; subject[i1].<span class=\"hljs-property\">time</span>) &#123;<br><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&#x27;subject&#x27;</span>).<span class=\"hljs-property\">innerHTML</span> = subject[i1].<span class=\"hljs-property\">subject</span><br><span class=\"hljs-comment\">//改变科目的dom</span><br>  &#125;<br> &#125;<br>   <br>&#125;,<span class=\"hljs-number\">1000</span>)<br></code></pre></td></tr></table></figure>\n\n<p>DEMO地址：<a href=\"https://codepen.io/arsrna/pen/YzVwZWG\">考场时钟 | Ar-Learning</a></p>\n<h1 id=\"制作一个广播系统\"><a href=\"#制作一个广播系统\" class=\"headerlink\" title=\"制作一个广播系统\"></a>制作一个广播系统</h1><p>未完待续</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"制作一个考场时钟\"><a href=\"#制作一个考场时钟\" class=\"headerlink\" title=\"制作一个考场时钟\"></a>制作一个考场时钟</h1><p>首先，这个时钟要能刷新时间，显示正确，也要显示科目</p>\n<p>完工后大概长这样子：</p>\n<p><img src=\"https://www.arlearn.ltd/javascript/docs/images/app-7-5/mpfyn70nam.png\"></p>\n<p>整体只有简单的几部分：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">内容</th>\n<th align=\"left\">实现方式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">标语</td>\n<td align=\"left\"><code>&lt;h1 class=&quot;display-1&quot;&gt;</code>标签</td>\n</tr>\n<tr>\n<td align=\"left\">时间</td>\n<td align=\"left\">利用setInterval() 以及date()对象进行更新时间</td>\n</tr>\n<tr>\n<td align=\"left\">科目</td>\n<td align=\"left\">进行更新时间的同时不断判断科目与时间是否对准</td>\n</tr>\n<tr>\n<td align=\"left\">装饰</td>\n<td align=\"left\">花里胡哨，符合考场要求就行</td>\n</tr>\n</tbody></table>\n<h2 id=\"准备部分\"><a href=\"#准备部分\" class=\"headerlink\" title=\"准备部分\"></a>准备部分</h2><p>为了美观，这里使用bootstrap css：</p>\n<p>首行加入：<code>&lt;link href=&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.6.0/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;</code></p>\n<p>这里建议保存为本地css，然后更改路径，毕竟有些考场没通网</p>\n<h2 id=\"内容\"><a href=\"#内容\" class=\"headerlink\" title=\"内容\"></a>内容</h2><p>整个内容要包括在一个容器，不仅美观也方便布局，我使用jumbotron，container两个组件</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;jumbotron container&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>再在里面添加基本的控件即可</p>\n<h2 id=\"标语\"><a href=\"#标语\" class=\"headerlink\" title=\"标语\"></a>标语</h2><p>因为它24小时都不变，所以用静态标签就好</p>\n<p>bootstrap的alert就很不错</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;alert alert-danger&quot;</span> <span class=\"hljs-attr\">role</span>=<span class=\"hljs-string\">&quot;alert&quot;</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;title1&quot;</span>&gt;</span>遵守纪律，认真考试<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"核心部分：时间与科目\"><a href=\"#核心部分：时间与科目\" class=\"headerlink\" title=\"核心部分：时间与科目\"></a>核心部分：时间与科目</h2><h3 id=\"时间的刷新\"><a href=\"#时间的刷新\" class=\"headerlink\" title=\"时间的刷新\"></a>时间的刷新</h3><p>JavaScript可以动态控制DOM，之前也有讲过 <a href=\"https://www.arlearn.ltd/javascript/docs/#/?id=%e5%bc%80%e5%a7%8b%e7%ac%ac%e4%b8%80%e4%b8%aa%e9%a1%b9%e7%9b%ae-hello-world\">开始第一个项目-hello world</a><a href=\"https://www.arlearn.ltd/javascript/docs/#/?id=%e5%bc%80%e5%a7%8b%e7%ac%ac%e4%b8%80%e4%b8%aa%e9%a1%b9%e7%9b%ae-hello-world\"> | arlearn.ltd</a></p>\n<p>首先建立一个div用于显示时间（为了放大字号设置了font-size: 1000%）</p>\n<p>要设置好id，这里为time</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;display-1&quot;</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;font-size: 1000%&quot;</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;time&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>利用js的Date()对象显示时间，其基本方法参考：<a href=\"https://www.w3school.com.cn/jsref/jsref_obj_date.asp\">JavaScript Date 参考手册 (w3school.com.cn)</a></p>\n<p>这里使用getHours()，getMinutes()，getSeconds()</p>\n<p>首先新建一个对象，并赋值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">var</span> time = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>()<br></code></pre></td></tr></table></figure>\n\n<p>然后变成 小时：分钟：秒 的形式</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">var</span> timeStr = time.<span class=\"hljs-title function_\">getHours</span>()+<span class=\"hljs-string\">&#x27;:&#x27;</span>+time.<span class=\"hljs-title function_\">getMinutes</span>()+<span class=\"hljs-string\">&#x27;:&#x27;</span>+time.<span class=\"hljs-title function_\">getSeconds</span>();<br></code></pre></td></tr></table></figure>\n\n<p>最后更改DOM：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&#x27;time&#x27;</span>).<span class=\"hljs-property\">innerHTML</span>=timeStr<br></code></pre></td></tr></table></figure>\n\n<p>为了让时间自动刷新，用setInterval来一秒刷新一次：结合起来就是这样</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-built_in\">setInterval</span>(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) &#123;<br><span class=\"hljs-keyword\">var</span> time = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>();<br><span class=\"hljs-keyword\">var</span> timeStr = time.<span class=\"hljs-title function_\">getHours</span>()+<span class=\"hljs-string\">&#x27;:&#x27;</span>+time.<span class=\"hljs-title function_\">getMinutes</span>()+<span class=\"hljs-string\">&#x27;:&#x27;</span>+time.<span class=\"hljs-title function_\">getSeconds</span>();<br><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&#x27;time&#x27;</span>).<span class=\"hljs-property\">innerHTML</span> = timeStr<br>&#125;,<span class=\"hljs-number\">1000</span>)<span class=\"hljs-comment\">//这里是毫秒</span><br></code></pre></td></tr></table></figure>\n\n<p>这时候回到浏览器，时间就会自己刷新了，只不过个位数的时候只能显示一位，鉴于判断比较复杂，我就懒得整了</p>\n<h3 id=\"科目的改变\"><a href=\"#科目的改变\" class=\"headerlink\" title=\"科目的改变\"></a>科目的改变</h3><p>既然是实用教程，那就实用些，让电脑自己判断自动改变</p>\n<p>目前实现的方法如下，</p>\n<p>Reference&#x2F;参考：<a href=\"https://www.arsrna.ltd/posts/08-1202L-08-1203K/#%E5%8C%B9%E9%85%8D%E9%9F%B3%E9%A2%91%E5%92%8C%E6%AD%8C%E8%AF%8D%E6%97%B6%E9%97%B4%E7%82%B9\">【教程】纯前端做一个歌词显示的音乐播放器 | Ar-Sr-Na 博客站 (arsrna.ltd)</a></p>\n<p>不断遍历时间数组来匹配科目，首先新建一个json文件：建议使用Excel再转json：</p>\n<p><a href=\"https://www.bejson.com/json/col2json/\">在线Excel、CSV转JSON格式-BeJSON.com</a></p>\n<p>要注意，这里的time一定要和timeStr格式一样，个位数的时候只能显示一位，这里也要严格对照</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">time</th>\n<th align=\"left\">subject</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">23:0:0</td>\n<td align=\"left\">熬夜</td>\n</tr>\n<tr>\n<td align=\"left\">23:15:0</td>\n<td align=\"left\">写代码</td>\n</tr>\n<tr>\n<td align=\"left\">23:20:0</td>\n<td align=\"left\">求求你们</td>\n</tr>\n<tr>\n<td align=\"left\">23:21:0</td>\n<td align=\"left\">给个支持吧</td>\n</tr>\n<tr>\n<td align=\"left\">23:22:0</td>\n<td align=\"left\">Ar-Sr-Na</td>\n</tr>\n<tr>\n<td align=\"left\">23:23:0</td>\n<td align=\"left\">我永远喜欢御坂美琴</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">[</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;23:0:0&quot;</span><span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;熬夜&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;23:15:0&quot;</span><span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;写代码&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;23:20:0&quot;</span><span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;求求你们&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;23:21:0&quot;</span><span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;给个支持吧&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;23:22:0&quot;</span><span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;Ar-Sr-Na&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;23:23:0&quot;</span><span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;我永远喜欢御坂美琴&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">]</span><br></code></pre></td></tr></table></figure>\n\n<p>时间流动的同时不断查找数组遍历数组，匹配科目</p>\n<p>但是注意，我们最好把 时：分：秒 的格式换为js读得出来的格式，秒，也就是num类</p>\n<p>Excel中很好处理</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">h</th>\n<th align=\"left\">m</th>\n<th align=\"left\">s</th>\n<th align=\"left\">time</th>\n<th align=\"left\">subject</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">23</td>\n<td align=\"left\">0</td>\n<td align=\"left\">0</td>\n<td align=\"left\">82800</td>\n<td align=\"left\">熬夜</td>\n</tr>\n<tr>\n<td align=\"left\">23</td>\n<td align=\"left\">1</td>\n<td align=\"left\">0</td>\n<td align=\"left\">82860</td>\n<td align=\"left\">写代码</td>\n</tr>\n<tr>\n<td align=\"left\">23</td>\n<td align=\"left\">2</td>\n<td align=\"left\">0</td>\n<td align=\"left\">82920</td>\n<td align=\"left\">求求你们</td>\n</tr>\n<tr>\n<td align=\"left\">23</td>\n<td align=\"left\">5</td>\n<td align=\"left\">0</td>\n<td align=\"left\">83100</td>\n<td align=\"left\">给个支持吧</td>\n</tr>\n<tr>\n<td align=\"left\">23</td>\n<td align=\"left\">33</td>\n<td align=\"left\">33</td>\n<td align=\"left\">84813</td>\n<td align=\"left\">Ar-Sr-Na</td>\n</tr>\n<tr>\n<td align=\"left\">23</td>\n<td align=\"left\">33</td>\n<td align=\"left\">34</td>\n<td align=\"left\">84814</td>\n<td align=\"left\">我永远喜欢御坂美琴</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">82800</span> <span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;熬夜&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">82860</span> <span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;写代码&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">82920</span> <span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;求求你们&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">83100</span> <span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;给个支持吧&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">84813</span> <span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;Ar-Sr-Na&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;time&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">84814</span> <span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;subject&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;我永远喜欢御坂美琴&quot;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><span class=\"hljs-punctuation\">]</span><br></code></pre></td></tr></table></figure>\n\n<p>除此之外，我们的js时间也要进行更改，另外赋值一个变量</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">var</span> timeJS = (time.<span class=\"hljs-title function_\">getHours</span>()*<span class=\"hljs-number\">3600</span>)+(time.<span class=\"hljs-title function_\">getMinutes</span>()*<span class=\"hljs-number\">60</span>)+time.<span class=\"hljs-title function_\">getSeconds</span>();<br></code></pre></td></tr></table></figure>\n\n<p>然后可以继续了</p>\n<p>给json赋值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">var</span> subject = <span class=\"hljs-title function_\">xxx</span>(刚刚那一段)<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">for</span>(i1=<span class=\"hljs-number\">0</span>;i1&lt;subject.<span class=\"hljs-property\">length</span>;i1++) &#123;<br>    <span class=\"hljs-keyword\">if</span> (timeJS &gt; subject[i1].<span class=\"hljs-property\">time</span>) &#123;<br>   <span class=\"hljs-comment\">//改变科目的dom</span><br>    &#125;<br>   &#125;<br></code></pre></td></tr></table></figure>\n\n<p>当匹配到时改变科目：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\">科目组件：<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;subject&quot;</span>&gt;</span>当前科目：语文<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&#x27;subject&#x27;</span>).<span class=\"hljs-property\">innerHTML</span> =<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"总代码\"><a href=\"#总代码\" class=\"headerlink\" title=\"总代码\"></a>总代码</h2><p>HTML：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;jumbotron container&quot;</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--script type=&quot;text/javascript&quot; src=&quot;https://api.xygeng.cn/one/get/&quot;&gt;&lt;/script--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;alert alert-danger&quot;</span> <span class=\"hljs-attr\">role</span>=<span class=\"hljs-string\">&quot;alert&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;title1&quot;</span>&gt;</span>遵守纪律，认真考试<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;display-1&quot;</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;font-size: 1000%&quot;</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;time&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;alert alert-primary&quot;</span> <span class=\"hljs-attr\">role</span>=<span class=\"hljs-string\">&quot;alert&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;subject&quot;</span>&gt;</span>当前科目：语文<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Copyright © Ar-Sr-Na. All rights reserved.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">subject = [&#123;<span class=\"hljs-string\">&quot;time&quot;</span>:<span class=\"hljs-number\">82800</span> ,<span class=\"hljs-string\">&quot;subject&quot;</span>:<span class=\"hljs-string\">&quot;熬夜&quot;</span>&#125;,<br>&#123;<span class=\"hljs-string\">&quot;time&quot;</span>:<span class=\"hljs-number\">82860</span> ,<span class=\"hljs-string\">&quot;subject&quot;</span>:<span class=\"hljs-string\">&quot;写代码&quot;</span>&#125;,<br>&#123;<span class=\"hljs-string\">&quot;time&quot;</span>:<span class=\"hljs-number\">82920</span> ,<span class=\"hljs-string\">&quot;subject&quot;</span>:<span class=\"hljs-string\">&quot;求求你们&quot;</span>&#125;,<br>&#123;<span class=\"hljs-string\">&quot;time&quot;</span>:<span class=\"hljs-number\">83100</span> ,<span class=\"hljs-string\">&quot;subject&quot;</span>:<span class=\"hljs-string\">&quot;给个支持吧&quot;</span>&#125;,<br>&#123;<span class=\"hljs-string\">&quot;time&quot;</span>:<span class=\"hljs-number\">84813</span> ,<span class=\"hljs-string\">&quot;subject&quot;</span>:<span class=\"hljs-string\">&quot;Ar-Sr-Na&quot;</span>&#125;,<br>&#123;<span class=\"hljs-string\">&quot;time&quot;</span>:<span class=\"hljs-number\">84814</span> ,<span class=\"hljs-string\">&quot;subject&quot;</span>:<span class=\"hljs-string\">&quot;我永远喜欢御坂美琴&quot;</span>&#125;,]<br><br><span class=\"hljs-built_in\">setInterval</span>(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) &#123;<br><span class=\"hljs-keyword\">var</span> time = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>();<br><span class=\"hljs-keyword\">var</span> timeStr = time.<span class=\"hljs-title function_\">getHours</span>()+<span class=\"hljs-string\">&#x27;:&#x27;</span>+time.<span class=\"hljs-title function_\">getMinutes</span>()+<span class=\"hljs-string\">&#x27;:&#x27;</span>+time.<span class=\"hljs-title function_\">getSeconds</span>();<br><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&#x27;time&#x27;</span>).<span class=\"hljs-property\">innerHTML</span> = timeStr;<br><br><span class=\"hljs-keyword\">var</span> timeJS = (time.<span class=\"hljs-title function_\">getHours</span>()*<span class=\"hljs-number\">3600</span>)+(time.<span class=\"hljs-title function_\">getMinutes</span>()*<span class=\"hljs-number\">60</span>)+time.<span class=\"hljs-title function_\">getSeconds</span>();<br><span class=\"hljs-keyword\">for</span>(i1=<span class=\"hljs-number\">0</span>;i1&lt;subject.<span class=\"hljs-property\">length</span>;i1++) &#123; <br><span class=\"hljs-keyword\">if</span> (timeJS &gt; subject[i1].<span class=\"hljs-property\">time</span>) &#123;<br><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&#x27;subject&#x27;</span>).<span class=\"hljs-property\">innerHTML</span> = subject[i1].<span class=\"hljs-property\">subject</span><br><span class=\"hljs-comment\">//改变科目的dom</span><br>  &#125;<br> &#125;<br>   <br>&#125;,<span class=\"hljs-number\">1000</span>)<br></code></pre></td></tr></table></figure>\n\n<p>DEMO地址：<a href=\"https://codepen.io/arsrna/pen/YzVwZWG\">考场时钟 | Ar-Learning</a></p>\n<h1 id=\"制作一个广播系统\"><a href=\"#制作一个广播系统\" class=\"headerlink\" title=\"制作一个广播系统\"></a>制作一个广播系统</h1><p>未完待续</p>\n"},{"title":"Ar-Sr-Na Javascript Learn 博客站","date":"2021-07-05T15:31:15.000Z","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"https://www.arsrna.cn","authorAbout":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","authorDesc":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","categories":"技术","comments":1,"tags":null,"keywords":"JavaScript,学习","description":"与java完全不同","photos":"https://www.arsrna.cn/images/DSC08095_cop.jpg","_content":"\n# Ar-Sr-Na JavaScript Learn项目\n\n节目编号：[08-1202K/08-1203J]：Ar-Sr-Na JavaScript Learn项目\n\n!> 2021-5-16 注意js与java为老婆与老婆饼的关系！\n\n### 项目在不断完善中，希望大家多多支持：QQ群：1097347557 <!-- {docsify-ignore-all} -->\n\n# 准备\n\n## 编辑软件\n\n推荐 [Sublime](https://www.sublimetext.com/) | [VS Code（推荐）](https://code.visualstudio.com/)\n\n### 如何选择编辑器？\n\n首先这个编辑器要能够符合代码的习惯，比如在该换行的地方换行，高亮的地方高亮，括号成对打，引号也要成对打，必要时还自带格式化功能，纠错功能，并且对方法名有定位，哪里用了它，用它来做什么，这样效率会成倍提升\n\n高亮对不对？字体是不是等宽等高字体？有高亮，不仅能让代码可读性提升，对一些错误，例如少打了引号括号，正则表达式等问题都可以快速定位；等宽等高字体，能让代码整齐划一，阅读起来也顺眼\n\n## 调试软件\n\n推荐 Chrome | Edge | Firefox Developer Edition\nJavaScript和其他语言一样，有一个控制台，运行在浏览器，电脑端按下F12打开开发者工具，点击Console或控制台就看见了\n\nJavaScript执行代码的地方：浏览器 | 服务端node.js | 其他app\n\n想要运行代码，就必须有个平台，这里推荐使用Edge\n直接在浏览器栏输入：javascript:这里是你的代码\n就可以直接运行\n\n如果是.js文件，必须依靠DOM，不推荐直接拖入浏览器，有两种方式：引入 | 嵌入\n引入：\n\n````html\n<script src=\".js的路径\"></script>\n````\n\n嵌入：\n\n````html\n<script>\n代码\n</script>\n````\n\n# 开始第一个项目-hello world\n\nJavaScript输出消息的方式：控制台输出 | 控制DOM输出 | 弹窗/用户控制输出\n我们选择从控制台输出：console方法\n\n````js\nconsole.log('这里输入内容');\n````\n\n![](images/p1/console.png)\n\n按下F12在控制台输入 console.log('这里输入内容');\n或直接在浏览器地址栏输入 javascript:console.log('这里输入内容');\n就可以看到输出了\n\n除此之外，还有弹窗\n\n````js\nalert('弹窗内容')\n````\n\n![](images/p1/alert.png)\n\n如果是嵌入到html文档，控制DOM：\n\n````html\n<p id=\"text\">测试</p>\n````\n\n![](images/p1/text1.png)\n\n我们想让这段文字变成“我永远喜欢御坂美琴”\n就要用到document控制dom对象\n常见方法有：\n\n| 方法 | 描述 |\n| --- | --- |\n| close() | 关闭用 document.open() 方法打开的输出流，并显示选定的数据。 |\n| getElementById() | 返回对拥有指定 id 的第一个对象的引用。 |\n| getElementsByName() | 返回带有指定名称的对象集合。 |\n| getElementsByTagName() | 返回带有指定标签名的对象集合。 |\n| open() | 打开一个流，以收集来自任何 document.write() 或 document.writeln() 方法的输出。 |\n| write() | 向文档写 HTML 表达式 或 JavaScript 代码。 |\n| writeln() | 等同于 write() 方法，不同的是在每个表达式之后写一个换行符。 |\n\n首先要获取这段html的dom，可以看到我给他定义了id=\"text\"\n所以我们就用获取id的方法-getElementById('控件id')\n获取到了dom，就要修改dom，`<p></p>`里面的标签就是显示出来的内容，可以是innerText（里面的文字），如果里面不内嵌其他元素，也可以是innerHTML（标签里的内容）\n\n我们使用innerHTML = '文字'\n\n在这段html里插入\n\n````html\n<script>\ndocument.getElementById('text').innerHTML = '我永远喜欢御坂美琴';\n</script>\n````\n\n![images/p1/text2.png]()\n\n刷新浏览器看看，效果出来了\n\n# 更新日志\n\n## 文档更新!\n\n2021-2-26 项目建立\n\n2021-5-16 项目开始编辑\n2021-5-16 完成第一章节\n2021-7-15 完成最佳实践","source":"jslearn/index.md","raw":"---\ntitle: Ar-Sr-Na Javascript Learn 博客站\ndate: 2021-07-05 23:31:15\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: https://www.arsrna.cn\nauthorAbout: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\nauthorDesc: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\ncategories: 技术\ncomments: true\ntags: \nkeywords: JavaScript,学习\ndescription: 与java完全不同\nphotos: 'https://www.arsrna.cn/images/DSC08095_cop.jpg'\n---\n\n# Ar-Sr-Na JavaScript Learn项目\n\n节目编号：[08-1202K/08-1203J]：Ar-Sr-Na JavaScript Learn项目\n\n!> 2021-5-16 注意js与java为老婆与老婆饼的关系！\n\n### 项目在不断完善中，希望大家多多支持：QQ群：1097347557 <!-- {docsify-ignore-all} -->\n\n# 准备\n\n## 编辑软件\n\n推荐 [Sublime](https://www.sublimetext.com/) | [VS Code（推荐）](https://code.visualstudio.com/)\n\n### 如何选择编辑器？\n\n首先这个编辑器要能够符合代码的习惯，比如在该换行的地方换行，高亮的地方高亮，括号成对打，引号也要成对打，必要时还自带格式化功能，纠错功能，并且对方法名有定位，哪里用了它，用它来做什么，这样效率会成倍提升\n\n高亮对不对？字体是不是等宽等高字体？有高亮，不仅能让代码可读性提升，对一些错误，例如少打了引号括号，正则表达式等问题都可以快速定位；等宽等高字体，能让代码整齐划一，阅读起来也顺眼\n\n## 调试软件\n\n推荐 Chrome | Edge | Firefox Developer Edition\nJavaScript和其他语言一样，有一个控制台，运行在浏览器，电脑端按下F12打开开发者工具，点击Console或控制台就看见了\n\nJavaScript执行代码的地方：浏览器 | 服务端node.js | 其他app\n\n想要运行代码，就必须有个平台，这里推荐使用Edge\n直接在浏览器栏输入：javascript:这里是你的代码\n就可以直接运行\n\n如果是.js文件，必须依靠DOM，不推荐直接拖入浏览器，有两种方式：引入 | 嵌入\n引入：\n\n````html\n<script src=\".js的路径\"></script>\n````\n\n嵌入：\n\n````html\n<script>\n代码\n</script>\n````\n\n# 开始第一个项目-hello world\n\nJavaScript输出消息的方式：控制台输出 | 控制DOM输出 | 弹窗/用户控制输出\n我们选择从控制台输出：console方法\n\n````js\nconsole.log('这里输入内容');\n````\n\n![](images/p1/console.png)\n\n按下F12在控制台输入 console.log('这里输入内容');\n或直接在浏览器地址栏输入 javascript:console.log('这里输入内容');\n就可以看到输出了\n\n除此之外，还有弹窗\n\n````js\nalert('弹窗内容')\n````\n\n![](images/p1/alert.png)\n\n如果是嵌入到html文档，控制DOM：\n\n````html\n<p id=\"text\">测试</p>\n````\n\n![](images/p1/text1.png)\n\n我们想让这段文字变成“我永远喜欢御坂美琴”\n就要用到document控制dom对象\n常见方法有：\n\n| 方法 | 描述 |\n| --- | --- |\n| close() | 关闭用 document.open() 方法打开的输出流，并显示选定的数据。 |\n| getElementById() | 返回对拥有指定 id 的第一个对象的引用。 |\n| getElementsByName() | 返回带有指定名称的对象集合。 |\n| getElementsByTagName() | 返回带有指定标签名的对象集合。 |\n| open() | 打开一个流，以收集来自任何 document.write() 或 document.writeln() 方法的输出。 |\n| write() | 向文档写 HTML 表达式 或 JavaScript 代码。 |\n| writeln() | 等同于 write() 方法，不同的是在每个表达式之后写一个换行符。 |\n\n首先要获取这段html的dom，可以看到我给他定义了id=\"text\"\n所以我们就用获取id的方法-getElementById('控件id')\n获取到了dom，就要修改dom，`<p></p>`里面的标签就是显示出来的内容，可以是innerText（里面的文字），如果里面不内嵌其他元素，也可以是innerHTML（标签里的内容）\n\n我们使用innerHTML = '文字'\n\n在这段html里插入\n\n````html\n<script>\ndocument.getElementById('text').innerHTML = '我永远喜欢御坂美琴';\n</script>\n````\n\n![images/p1/text2.png]()\n\n刷新浏览器看看，效果出来了\n\n# 更新日志\n\n## 文档更新!\n\n2021-2-26 项目建立\n\n2021-5-16 项目开始编辑\n2021-5-16 完成第一章节\n2021-7-15 完成最佳实践","updated":"2022-07-20T05:04:16.770Z","path":"jslearn/index.html","layout":"page","_id":"clod0d6ws0008c0nd0p913qvx","content":"<h1 id=\"Ar-Sr-Na-JavaScript-Learn项目\"><a href=\"#Ar-Sr-Na-JavaScript-Learn项目\" class=\"headerlink\" title=\"Ar-Sr-Na JavaScript Learn项目\"></a>Ar-Sr-Na JavaScript Learn项目</h1><p>节目编号：[08-1202K&#x2F;08-1203J]：Ar-Sr-Na JavaScript Learn项目</p>\n<p>!&gt; 2021-5-16 注意js与java为老婆与老婆饼的关系！</p>\n<h3 id=\"项目在不断完善中，希望大家多多支持：QQ群：1097347557\"><a href=\"#项目在不断完善中，希望大家多多支持：QQ群：1097347557\" class=\"headerlink\" title=\"项目在不断完善中，希望大家多多支持：QQ群：1097347557 \"></a>项目在不断完善中，希望大家多多支持：QQ群：1097347557 <!-- {docsify-ignore-all} --></h3><h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><h2 id=\"编辑软件\"><a href=\"#编辑软件\" class=\"headerlink\" title=\"编辑软件\"></a>编辑软件</h2><p>推荐 <a href=\"https://www.sublimetext.com/\">Sublime</a> | <a href=\"https://code.visualstudio.com/\">VS Code（推荐）</a></p>\n<h3 id=\"如何选择编辑器？\"><a href=\"#如何选择编辑器？\" class=\"headerlink\" title=\"如何选择编辑器？\"></a>如何选择编辑器？</h3><p>首先这个编辑器要能够符合代码的习惯，比如在该换行的地方换行，高亮的地方高亮，括号成对打，引号也要成对打，必要时还自带格式化功能，纠错功能，并且对方法名有定位，哪里用了它，用它来做什么，这样效率会成倍提升</p>\n<p>高亮对不对？字体是不是等宽等高字体？有高亮，不仅能让代码可读性提升，对一些错误，例如少打了引号括号，正则表达式等问题都可以快速定位；等宽等高字体，能让代码整齐划一，阅读起来也顺眼</p>\n<h2 id=\"调试软件\"><a href=\"#调试软件\" class=\"headerlink\" title=\"调试软件\"></a>调试软件</h2><p>推荐 Chrome | Edge | Firefox Developer Edition<br>JavaScript和其他语言一样，有一个控制台，运行在浏览器，电脑端按下F12打开开发者工具，点击Console或控制台就看见了</p>\n<p>JavaScript执行代码的地方：浏览器 | 服务端node.js | 其他app</p>\n<p>想要运行代码，就必须有个平台，这里推荐使用Edge<br>直接在浏览器栏输入：javascript:这里是你的代码<br>就可以直接运行</p>\n<p>如果是.js文件，必须依靠DOM，不推荐直接拖入浏览器，有两种方式：引入 | 嵌入<br>引入：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;.js的路径&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>嵌入：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><br>代码<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"开始第一个项目-hello-world\"><a href=\"#开始第一个项目-hello-world\" class=\"headerlink\" title=\"开始第一个项目-hello world\"></a>开始第一个项目-hello world</h1><p>JavaScript输出消息的方式：控制台输出 | 控制DOM输出 | 弹窗&#x2F;用户控制输出<br>我们选择从控制台输出：console方法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;这里输入内容&#x27;</span>);<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/images/p1/console.png\"></p>\n<p>按下F12在控制台输入 console.log(‘这里输入内容’);<br>或直接在浏览器地址栏输入 javascript:console.log(‘这里输入内容’);<br>就可以看到输出了</p>\n<p>除此之外，还有弹窗</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-title function_\">alert</span>(<span class=\"hljs-string\">&#x27;弹窗内容&#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/images/p1/alert.png\"></p>\n<p>如果是嵌入到html文档，控制DOM：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;text&quot;</span>&gt;</span>测试<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/images/p1/text1.png\"></p>\n<p>我们想让这段文字变成“我永远喜欢御坂美琴”<br>就要用到document控制dom对象<br>常见方法有：</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>close()</td>\n<td>关闭用 document.open() 方法打开的输出流，并显示选定的数据。</td>\n</tr>\n<tr>\n<td>getElementById()</td>\n<td>返回对拥有指定 id 的第一个对象的引用。</td>\n</tr>\n<tr>\n<td>getElementsByName()</td>\n<td>返回带有指定名称的对象集合。</td>\n</tr>\n<tr>\n<td>getElementsByTagName()</td>\n<td>返回带有指定标签名的对象集合。</td>\n</tr>\n<tr>\n<td>open()</td>\n<td>打开一个流，以收集来自任何 document.write() 或 document.writeln() 方法的输出。</td>\n</tr>\n<tr>\n<td>write()</td>\n<td>向文档写 HTML 表达式 或 JavaScript 代码。</td>\n</tr>\n<tr>\n<td>writeln()</td>\n<td>等同于 write() 方法，不同的是在每个表达式之后写一个换行符。</td>\n</tr>\n</tbody></table>\n<p>首先要获取这段html的dom，可以看到我给他定义了id&#x3D;”text”<br>所以我们就用获取id的方法-getElementById(‘控件id’)<br>获取到了dom，就要修改dom，<code>&lt;p&gt;&lt;/p&gt;</code>里面的标签就是显示出来的内容，可以是innerText（里面的文字），如果里面不内嵌其他元素，也可以是innerHTML（标签里的内容）</p>\n<p>我们使用innerHTML &#x3D; ‘文字’</p>\n<p>在这段html里插入</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&#x27;text&#x27;</span>).<span class=\"hljs-property\">innerHTML</span> = <span class=\"hljs-string\">&#x27;我永远喜欢御坂美琴&#x27;</span>;</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/\" alt=\"images/p1/text2.png\"></p>\n<p>刷新浏览器看看，效果出来了</p>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><h2 id=\"文档更新\"><a href=\"#文档更新\" class=\"headerlink\" title=\"文档更新!\"></a>文档更新!</h2><p>2021-2-26 项目建立</p>\n<p>2021-5-16 项目开始编辑<br>2021-5-16 完成第一章节<br>2021-7-15 完成最佳实践</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Ar-Sr-Na-JavaScript-Learn项目\"><a href=\"#Ar-Sr-Na-JavaScript-Learn项目\" class=\"headerlink\" title=\"Ar-Sr-Na JavaScript Learn项目\"></a>Ar-Sr-Na JavaScript Learn项目</h1><p>节目编号：[08-1202K&#x2F;08-1203J]：Ar-Sr-Na JavaScript Learn项目</p>\n<p>!&gt; 2021-5-16 注意js与java为老婆与老婆饼的关系！</p>\n<h3 id=\"项目在不断完善中，希望大家多多支持：QQ群：1097347557\"><a href=\"#项目在不断完善中，希望大家多多支持：QQ群：1097347557\" class=\"headerlink\" title=\"项目在不断完善中，希望大家多多支持：QQ群：1097347557 \"></a>项目在不断完善中，希望大家多多支持：QQ群：1097347557 <!-- {docsify-ignore-all} --></h3><h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><h2 id=\"编辑软件\"><a href=\"#编辑软件\" class=\"headerlink\" title=\"编辑软件\"></a>编辑软件</h2><p>推荐 <a href=\"https://www.sublimetext.com/\">Sublime</a> | <a href=\"https://code.visualstudio.com/\">VS Code（推荐）</a></p>\n<h3 id=\"如何选择编辑器？\"><a href=\"#如何选择编辑器？\" class=\"headerlink\" title=\"如何选择编辑器？\"></a>如何选择编辑器？</h3><p>首先这个编辑器要能够符合代码的习惯，比如在该换行的地方换行，高亮的地方高亮，括号成对打，引号也要成对打，必要时还自带格式化功能，纠错功能，并且对方法名有定位，哪里用了它，用它来做什么，这样效率会成倍提升</p>\n<p>高亮对不对？字体是不是等宽等高字体？有高亮，不仅能让代码可读性提升，对一些错误，例如少打了引号括号，正则表达式等问题都可以快速定位；等宽等高字体，能让代码整齐划一，阅读起来也顺眼</p>\n<h2 id=\"调试软件\"><a href=\"#调试软件\" class=\"headerlink\" title=\"调试软件\"></a>调试软件</h2><p>推荐 Chrome | Edge | Firefox Developer Edition<br>JavaScript和其他语言一样，有一个控制台，运行在浏览器，电脑端按下F12打开开发者工具，点击Console或控制台就看见了</p>\n<p>JavaScript执行代码的地方：浏览器 | 服务端node.js | 其他app</p>\n<p>想要运行代码，就必须有个平台，这里推荐使用Edge<br>直接在浏览器栏输入：javascript:这里是你的代码<br>就可以直接运行</p>\n<p>如果是.js文件，必须依靠DOM，不推荐直接拖入浏览器，有两种方式：引入 | 嵌入<br>引入：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;.js的路径&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>嵌入：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><br>代码<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"开始第一个项目-hello-world\"><a href=\"#开始第一个项目-hello-world\" class=\"headerlink\" title=\"开始第一个项目-hello world\"></a>开始第一个项目-hello world</h1><p>JavaScript输出消息的方式：控制台输出 | 控制DOM输出 | 弹窗&#x2F;用户控制输出<br>我们选择从控制台输出：console方法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;这里输入内容&#x27;</span>);<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/images/p1/console.png\"></p>\n<p>按下F12在控制台输入 console.log(‘这里输入内容’);<br>或直接在浏览器地址栏输入 javascript:console.log(‘这里输入内容’);<br>就可以看到输出了</p>\n<p>除此之外，还有弹窗</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-title function_\">alert</span>(<span class=\"hljs-string\">&#x27;弹窗内容&#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/images/p1/alert.png\"></p>\n<p>如果是嵌入到html文档，控制DOM：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;text&quot;</span>&gt;</span>测试<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/images/p1/text1.png\"></p>\n<p>我们想让这段文字变成“我永远喜欢御坂美琴”<br>就要用到document控制dom对象<br>常见方法有：</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>close()</td>\n<td>关闭用 document.open() 方法打开的输出流，并显示选定的数据。</td>\n</tr>\n<tr>\n<td>getElementById()</td>\n<td>返回对拥有指定 id 的第一个对象的引用。</td>\n</tr>\n<tr>\n<td>getElementsByName()</td>\n<td>返回带有指定名称的对象集合。</td>\n</tr>\n<tr>\n<td>getElementsByTagName()</td>\n<td>返回带有指定标签名的对象集合。</td>\n</tr>\n<tr>\n<td>open()</td>\n<td>打开一个流，以收集来自任何 document.write() 或 document.writeln() 方法的输出。</td>\n</tr>\n<tr>\n<td>write()</td>\n<td>向文档写 HTML 表达式 或 JavaScript 代码。</td>\n</tr>\n<tr>\n<td>writeln()</td>\n<td>等同于 write() 方法，不同的是在每个表达式之后写一个换行符。</td>\n</tr>\n</tbody></table>\n<p>首先要获取这段html的dom，可以看到我给他定义了id&#x3D;”text”<br>所以我们就用获取id的方法-getElementById(‘控件id’)<br>获取到了dom，就要修改dom，<code>&lt;p&gt;&lt;/p&gt;</code>里面的标签就是显示出来的内容，可以是innerText（里面的文字），如果里面不内嵌其他元素，也可以是innerHTML（标签里的内容）</p>\n<p>我们使用innerHTML &#x3D; ‘文字’</p>\n<p>在这段html里插入</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&#x27;text&#x27;</span>).<span class=\"hljs-property\">innerHTML</span> = <span class=\"hljs-string\">&#x27;我永远喜欢御坂美琴&#x27;</span>;</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/\" alt=\"images/p1/text2.png\"></p>\n<p>刷新浏览器看看，效果出来了</p>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><h2 id=\"文档更新\"><a href=\"#文档更新\" class=\"headerlink\" title=\"文档更新!\"></a>文档更新!</h2><p>2021-2-26 项目建立</p>\n<p>2021-5-16 项目开始编辑<br>2021-5-16 完成第一章节<br>2021-7-15 完成最佳实践</p>\n"},{"layout":"links","title":"links","date":"2021-08-08T16:00:00.000Z","keywords":"友人帐","description":null,"comments":1,"photos":"https://res.arsrna.cn/%E5%B4%A9%E5%9D%8F3/20200928115009_18836.jpg_optimization.png_web","links":[{"group":"本站其他站点","desc":"其他","items":[{"url":"https://www.arsrna.cn","img":"https://www.arsrna.cn/elec/logo.ico","name":"Ar-Sr-Na 主站","desc":"主站"},{"url":"https://os.arsrna.cn","img":"https://www.arsrna.cn/elec/logo.ico","name":"Ar-Sr-Na 资源与开源资源","desc":"字面意思"}]},{"group":"互链","desc":"欢迎交换友链 <a href=\"https://wj.qq.com/s2/3677282/eb48/\" target=\"_blank\">点此</a>","items":[{"url":"https://tsukisou.ink/","img":"https://video.drblack-system.com/logo.jpg","name":"DrBlackの自言自语","desc":"「その手を離すのでしょう 優しい笑みできっと」"},{"url":"https://www.saroin.com","img":"https://cdn.jsdelivr.net/gh/ArSrNa/CDN/linkv_img/cop/saroin.com.webp","name":"鲸一","desc":"希望是件美好的事，也许是世间最美好的东西，而美好的事物永不消逝!"},{"url":"https://wxory.com/","img":"https://st1-res.arsrna.cn/linkv_img/wxory.com.jpg","name":"我的网上邻居","desc":"自由追逐，勇敢而赤诚"},{"url":"https://choubaguai.net/","img":null,"name":"丑八怪","desc":"云原生技术小栈"},{"url":"https://ouyangqiqi.cn","img":"https://cdn.ouyangqiqi.cn/images/qiqi.jpg","name":"欧阳淇淇の小屋","desc":"「大切な人と再会できる日を」"},{"url":"https://hvril.cn/","img":"https://cdn.ouyangqiqi.cn/images/hvril.cn.jpg","name":"烨然Hvril","desc":"屏蔽力+钝感力==人生无敌"}]}],"_content":"","source":"links/index.md","raw":"---\nlayout: links\ntitle: links\ndate: 2021-8-9\nkeywords: 友人帐\ndescription: \ncomments: true\nphotos: https://res.arsrna.cn/%E5%B4%A9%E5%9D%8F3/20200928115009_18836.jpg_optimization.png_web\nlinks:\n  - group: 本站其他站点\n    desc: 其他\n    items:\n    - url: https://www.arsrna.cn\n      img: https://www.arsrna.cn/elec/logo.ico\n      name: Ar-Sr-Na 主站\n      desc: 主站\n\n    - url: https://os.arsrna.cn\n      img: https://www.arsrna.cn/elec/logo.ico\n      name: Ar-Sr-Na 资源与开源资源\n      desc: 字面意思\n\n\n\n  \n  - group: 互链\n    desc: 欢迎交换友链 <a href=\"https://wj.qq.com/s2/3677282/eb48/\" target=\"_blank\">点此</a>\n    items:\n    - url: https://tsukisou.ink/\n      img: https://video.drblack-system.com/logo.jpg\n      name: DrBlackの自言自语\n      desc: 「その手を離すのでしょう 優しい笑みできっと」\n\n    - url: https://www.saroin.com\n      img: https://cdn.jsdelivr.net/gh/ArSrNa/CDN/linkv_img/cop/saroin.com.webp\n      name: 鲸一\n      desc: 希望是件美好的事，也许是世间最美好的东西，而美好的事物永不消逝!\n\n    - url: https://wxory.com/\n      img: https://st1-res.arsrna.cn/linkv_img/wxory.com.jpg\n      name: 我的网上邻居\n      desc: 自由追逐，勇敢而赤诚\n\n    - url: https://choubaguai.net/\n      img: \n      name: 丑八怪\n      desc: 云原生技术小栈\n\n    - url: https://ouyangqiqi.cn\n      img: https://cdn.ouyangqiqi.cn/images/qiqi.jpg\n      name: 欧阳淇淇の小屋\n      desc: 「大切な人と再会できる日を」\n\n    - url: https://hvril.cn/\n      img: https://cdn.ouyangqiqi.cn/images/hvril.cn.jpg\n      name: 烨然Hvril\n      desc: 屏蔽力+钝感力==人生无敌\n\n---\n","updated":"2024-09-07T08:08:05.661Z","path":"links/index.html","_id":"clod0d6wt000ac0ndctd7gw98","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"隐私协议","comments":1,"date":"2022-07-07T06:52:28.000Z","keywords":null,"description":null,"photos":"https://www.arsrna.cn/images/DSC08095_cop.jpg","_content":"版本 2024-9-7\n\n# 1.隐私协议\n\n我们非常注重访问者的任何隐私，并保证不会在用户不同意的前提下越权。\n\n访问本站的用户（下称“您”），本站作者（下称“作者”），本站需遵守如下条文\n\n## 1.1 保护范围\n\n仅在本站域名和子域名内，该条文才会生效。\n\n站点域名为：arsrna.cn、arsrna.com、arirs.cn及其子域。\n\n## 1.2 我们收集何种及为何收集个人数据\n\n### 1.2.1访问数据\n\n本站接入腾讯云前端性能监控（RUM）产品，会收集用户访问本站时，网络指标（运营商，省级地理位置，ping，首屏加载耗时，资源加载耗时等），浏览器性能（加载占用资源量，加载时间，浏览器版本），访问设备型号，浏览器控制台内容（您在控制台输入的指令，本站响应或执行的指令）\n\n更多数据，请前往 [腾讯云前端性能监控产品](https://cloud.tencent.com/document/product/1464) 文档查看\n\n这些数据用于分析为何访问出错以及为何无法访问，包括浏览本站的交互行为（例如点击链接，Ajax请求），用于改进本站开发优化。\n\n### 1.2.2 评论\n\n当访客留下评论时，我们会收集评论表单所显示的数据，和访客的IP地址及浏览器的user agent字符串来帮助检查垃圾评论。\n\n评论发布后，直接展示在网站上，请注意言行，对此的一切后果由发布者自行承担\n\n### 1.2.3 媒体\n\n如果您向此网站上传图片，您应当避免上传那些有嵌入地理位置信息（EXIF GPS）的图片。此网站的访客将可以下载并提取此网站的图片中的位置信息。\n\n### 1.2.4 联系表单\n\n#### 1.2.4.1 Cookies\n\n如果您在我们的站点上留下评论，您可以选择用cookies保存您的姓名、电子邮件地址和网站。这是通过让您可以不用在评论时再次填写相关内容而向您提供方便。这些cookies会保留一年。\n\n如果您有此站点的账户并且您登录了此站点，我们会设置一个临时的cookie来确认您的浏览器是否接受cookies。此cookie不包含个人数据且会在您关闭浏览器时被丢弃。\n\n当您登录时，我们也会设置多个cookies来保存您的登录信息及屏幕显示选项。登录cookies会保留两天，而屏幕显示选项cookies会保留一年。如果您选择了“记住我”，您的登录状态则会保留两周。如果您登出您的账户，用于登录的cookies将会被移除。\n\n如果您编辑或发布文章，我们会在您的浏览器中保存一个额外的cookie。这个cookie不包含个人数据而只记录了您刚才编辑的文章的ID。这个cookie会保留一天。\n\n## 1.3 其他站点的嵌入内容\n\n此站点上的文章可能会包含嵌入的内容（如视频、图像、文章等）。来自其他站点的嵌入内容的行为和您直接访问这些其他站点没有区别。\n\n这些站点可能会收集关于您的数据、使用cookies、嵌入额外的第三方跟踪程序及监视您与这些嵌入内容的交互，包括在您有这些站点的账户并登录了这些站点时，跟踪您与嵌入内容的交互。\n\n## 1.4 我们与谁共享您的信息\n\n本网站开放申请了友链，可能友链处站长会相应地迁移评论或截图。\n\n## 1.5 我们保留多久您的信息\n\n如果您留下评论，评论和其元数据将被无限期保存。我们这样做以便能识别并自动批准任何后续评论，而不用将这些后续评论加入待审队列。\n\n对于本网站的注册用户，我们也会保存用户在个人资料中提供的个人信息。所有用户可以在任何时候查看、编辑或删除他们的个人信息（除了不能变更用户名外）、站点管理员也可以查看及编辑那些信息。\n\n## 1.6 您对您的信息有什么权利\n\n如果您有此站点的账户，或曾经留下评论，您可以请求我们提供我们所拥有的您的个人数据的导出文件，这也包括了所有您提供给我们的数据。您也可以要求我们抹除所有关于您的个人数据。这不包括我们因管理、法规或安全需要而必须保留的数据。\n\n## 1.7 我们将您的信息发送到哪\n\n任何数据最终只会点对点流向TDSQL数据库，并保证所有用户信息保密，同时不会将数据传输给第三方\n\n# 2.站长联系信息\n\n邮箱：root@arsrna.cn\n\nQQ:2459405337\n\n更多请前往 [https://www.arsrna.com/contact](https://www.arsrna.com/contact) 查看\n\n# 3.其他信息\n\n## 3.1 我们如何保护您的数据\n\n本站前端由腾讯云对象存储提供托管，后端Serverless由阿里云提供，请参照腾讯云及阿里云相关协议。\n\n我们使用加密技术（例如，TLS、SSL）、匿名化处理等手段来保护您的个人信息。\n\n## 3.2 关于登录\n\n本站在2022-2-17 接入了腾讯云CIAM（数字身份管控）系统（现改名为账号风控平台）。您在注册本站账号时，填入的信息将会脱敏在后端展现\n\n### 3.2.1 我们能看到的内容\n\n* 您的完整用户名\n* 邮箱前两位和邮箱域名\n* 手机号前三位和后一位\n* 省级地区\n* 唯一识别码（UniqueID）\n\n您在进行实名认证时产生的任何数据，本站均无权限查看，数据API由腾讯云天御提供，请参照相应的协议。\n\n### 3.2.2 本站可以对您账户进行的操作\n\n本站有权冻结，封禁，删除您的账户，可以重置密码\n\n这一切的前提，除非违反了相关法律或政策而要求强制执行的，其余操作均需要征得您的同意。\n\n### 3.2.3 您的账户会被共享吗\n\n会与本站相关站点及其镜像站共享一个账户体系，本站CIAM的APPID，Secret和本站相关站点相同步，您的数据将会在这些站点间共享，这些站点均为本站长所创建和维护的。\n\n本站头像来源为 cravatar.cn ，您的邮箱会被md5加密后传入 cravatar.cn 返回头像\n\n此致\n上海绫中信息技术有限公司\n","source":"policies/private.md","raw":"---\ntitle: 隐私协议\ncomments: true\ndate: 2022-7-7 14:52:28\nkeywords:\ndescription:\nphotos: https://www.arsrna.cn/images/DSC08095_cop.jpg\n---\n版本 2024-9-7\n\n# 1.隐私协议\n\n我们非常注重访问者的任何隐私，并保证不会在用户不同意的前提下越权。\n\n访问本站的用户（下称“您”），本站作者（下称“作者”），本站需遵守如下条文\n\n## 1.1 保护范围\n\n仅在本站域名和子域名内，该条文才会生效。\n\n站点域名为：arsrna.cn、arsrna.com、arirs.cn及其子域。\n\n## 1.2 我们收集何种及为何收集个人数据\n\n### 1.2.1访问数据\n\n本站接入腾讯云前端性能监控（RUM）产品，会收集用户访问本站时，网络指标（运营商，省级地理位置，ping，首屏加载耗时，资源加载耗时等），浏览器性能（加载占用资源量，加载时间，浏览器版本），访问设备型号，浏览器控制台内容（您在控制台输入的指令，本站响应或执行的指令）\n\n更多数据，请前往 [腾讯云前端性能监控产品](https://cloud.tencent.com/document/product/1464) 文档查看\n\n这些数据用于分析为何访问出错以及为何无法访问，包括浏览本站的交互行为（例如点击链接，Ajax请求），用于改进本站开发优化。\n\n### 1.2.2 评论\n\n当访客留下评论时，我们会收集评论表单所显示的数据，和访客的IP地址及浏览器的user agent字符串来帮助检查垃圾评论。\n\n评论发布后，直接展示在网站上，请注意言行，对此的一切后果由发布者自行承担\n\n### 1.2.3 媒体\n\n如果您向此网站上传图片，您应当避免上传那些有嵌入地理位置信息（EXIF GPS）的图片。此网站的访客将可以下载并提取此网站的图片中的位置信息。\n\n### 1.2.4 联系表单\n\n#### 1.2.4.1 Cookies\n\n如果您在我们的站点上留下评论，您可以选择用cookies保存您的姓名、电子邮件地址和网站。这是通过让您可以不用在评论时再次填写相关内容而向您提供方便。这些cookies会保留一年。\n\n如果您有此站点的账户并且您登录了此站点，我们会设置一个临时的cookie来确认您的浏览器是否接受cookies。此cookie不包含个人数据且会在您关闭浏览器时被丢弃。\n\n当您登录时，我们也会设置多个cookies来保存您的登录信息及屏幕显示选项。登录cookies会保留两天，而屏幕显示选项cookies会保留一年。如果您选择了“记住我”，您的登录状态则会保留两周。如果您登出您的账户，用于登录的cookies将会被移除。\n\n如果您编辑或发布文章，我们会在您的浏览器中保存一个额外的cookie。这个cookie不包含个人数据而只记录了您刚才编辑的文章的ID。这个cookie会保留一天。\n\n## 1.3 其他站点的嵌入内容\n\n此站点上的文章可能会包含嵌入的内容（如视频、图像、文章等）。来自其他站点的嵌入内容的行为和您直接访问这些其他站点没有区别。\n\n这些站点可能会收集关于您的数据、使用cookies、嵌入额外的第三方跟踪程序及监视您与这些嵌入内容的交互，包括在您有这些站点的账户并登录了这些站点时，跟踪您与嵌入内容的交互。\n\n## 1.4 我们与谁共享您的信息\n\n本网站开放申请了友链，可能友链处站长会相应地迁移评论或截图。\n\n## 1.5 我们保留多久您的信息\n\n如果您留下评论，评论和其元数据将被无限期保存。我们这样做以便能识别并自动批准任何后续评论，而不用将这些后续评论加入待审队列。\n\n对于本网站的注册用户，我们也会保存用户在个人资料中提供的个人信息。所有用户可以在任何时候查看、编辑或删除他们的个人信息（除了不能变更用户名外）、站点管理员也可以查看及编辑那些信息。\n\n## 1.6 您对您的信息有什么权利\n\n如果您有此站点的账户，或曾经留下评论，您可以请求我们提供我们所拥有的您的个人数据的导出文件，这也包括了所有您提供给我们的数据。您也可以要求我们抹除所有关于您的个人数据。这不包括我们因管理、法规或安全需要而必须保留的数据。\n\n## 1.7 我们将您的信息发送到哪\n\n任何数据最终只会点对点流向TDSQL数据库，并保证所有用户信息保密，同时不会将数据传输给第三方\n\n# 2.站长联系信息\n\n邮箱：root@arsrna.cn\n\nQQ:2459405337\n\n更多请前往 [https://www.arsrna.com/contact](https://www.arsrna.com/contact) 查看\n\n# 3.其他信息\n\n## 3.1 我们如何保护您的数据\n\n本站前端由腾讯云对象存储提供托管，后端Serverless由阿里云提供，请参照腾讯云及阿里云相关协议。\n\n我们使用加密技术（例如，TLS、SSL）、匿名化处理等手段来保护您的个人信息。\n\n## 3.2 关于登录\n\n本站在2022-2-17 接入了腾讯云CIAM（数字身份管控）系统（现改名为账号风控平台）。您在注册本站账号时，填入的信息将会脱敏在后端展现\n\n### 3.2.1 我们能看到的内容\n\n* 您的完整用户名\n* 邮箱前两位和邮箱域名\n* 手机号前三位和后一位\n* 省级地区\n* 唯一识别码（UniqueID）\n\n您在进行实名认证时产生的任何数据，本站均无权限查看，数据API由腾讯云天御提供，请参照相应的协议。\n\n### 3.2.2 本站可以对您账户进行的操作\n\n本站有权冻结，封禁，删除您的账户，可以重置密码\n\n这一切的前提，除非违反了相关法律或政策而要求强制执行的，其余操作均需要征得您的同意。\n\n### 3.2.3 您的账户会被共享吗\n\n会与本站相关站点及其镜像站共享一个账户体系，本站CIAM的APPID，Secret和本站相关站点相同步，您的数据将会在这些站点间共享，这些站点均为本站长所创建和维护的。\n\n本站头像来源为 cravatar.cn ，您的邮箱会被md5加密后传入 cravatar.cn 返回头像\n\n此致\n上海绫中信息技术有限公司\n","updated":"2024-09-07T08:13:53.333Z","path":"policies/private.html","_id":"clod0d6wv000dc0ndes4y2kv7","layout":"page","content":"<p>版本 2024-9-7</p>\n<h1 id=\"1-隐私协议\"><a href=\"#1-隐私协议\" class=\"headerlink\" title=\"1.隐私协议\"></a>1.隐私协议</h1><p>我们非常注重访问者的任何隐私，并保证不会在用户不同意的前提下越权。</p>\n<p>访问本站的用户（下称“您”），本站作者（下称“作者”），本站需遵守如下条文</p>\n<h2 id=\"1-1-保护范围\"><a href=\"#1-1-保护范围\" class=\"headerlink\" title=\"1.1 保护范围\"></a>1.1 保护范围</h2><p>仅在本站域名和子域名内，该条文才会生效。</p>\n<p>站点域名为：arsrna.cn、arsrna.com、arirs.cn及其子域。</p>\n<h2 id=\"1-2-我们收集何种及为何收集个人数据\"><a href=\"#1-2-我们收集何种及为何收集个人数据\" class=\"headerlink\" title=\"1.2 我们收集何种及为何收集个人数据\"></a>1.2 我们收集何种及为何收集个人数据</h2><h3 id=\"1-2-1访问数据\"><a href=\"#1-2-1访问数据\" class=\"headerlink\" title=\"1.2.1访问数据\"></a>1.2.1访问数据</h3><p>本站接入腾讯云前端性能监控（RUM）产品，会收集用户访问本站时，网络指标（运营商，省级地理位置，ping，首屏加载耗时，资源加载耗时等），浏览器性能（加载占用资源量，加载时间，浏览器版本），访问设备型号，浏览器控制台内容（您在控制台输入的指令，本站响应或执行的指令）</p>\n<p>更多数据，请前往 <a href=\"https://cloud.tencent.com/document/product/1464\">腾讯云前端性能监控产品</a> 文档查看</p>\n<p>这些数据用于分析为何访问出错以及为何无法访问，包括浏览本站的交互行为（例如点击链接，Ajax请求），用于改进本站开发优化。</p>\n<h3 id=\"1-2-2-评论\"><a href=\"#1-2-2-评论\" class=\"headerlink\" title=\"1.2.2 评论\"></a>1.2.2 评论</h3><p>当访客留下评论时，我们会收集评论表单所显示的数据，和访客的IP地址及浏览器的user agent字符串来帮助检查垃圾评论。</p>\n<p>评论发布后，直接展示在网站上，请注意言行，对此的一切后果由发布者自行承担</p>\n<h3 id=\"1-2-3-媒体\"><a href=\"#1-2-3-媒体\" class=\"headerlink\" title=\"1.2.3 媒体\"></a>1.2.3 媒体</h3><p>如果您向此网站上传图片，您应当避免上传那些有嵌入地理位置信息（EXIF GPS）的图片。此网站的访客将可以下载并提取此网站的图片中的位置信息。</p>\n<h3 id=\"1-2-4-联系表单\"><a href=\"#1-2-4-联系表单\" class=\"headerlink\" title=\"1.2.4 联系表单\"></a>1.2.4 联系表单</h3><h4 id=\"1-2-4-1-Cookies\"><a href=\"#1-2-4-1-Cookies\" class=\"headerlink\" title=\"1.2.4.1 Cookies\"></a>1.2.4.1 Cookies</h4><p>如果您在我们的站点上留下评论，您可以选择用cookies保存您的姓名、电子邮件地址和网站。这是通过让您可以不用在评论时再次填写相关内容而向您提供方便。这些cookies会保留一年。</p>\n<p>如果您有此站点的账户并且您登录了此站点，我们会设置一个临时的cookie来确认您的浏览器是否接受cookies。此cookie不包含个人数据且会在您关闭浏览器时被丢弃。</p>\n<p>当您登录时，我们也会设置多个cookies来保存您的登录信息及屏幕显示选项。登录cookies会保留两天，而屏幕显示选项cookies会保留一年。如果您选择了“记住我”，您的登录状态则会保留两周。如果您登出您的账户，用于登录的cookies将会被移除。</p>\n<p>如果您编辑或发布文章，我们会在您的浏览器中保存一个额外的cookie。这个cookie不包含个人数据而只记录了您刚才编辑的文章的ID。这个cookie会保留一天。</p>\n<h2 id=\"1-3-其他站点的嵌入内容\"><a href=\"#1-3-其他站点的嵌入内容\" class=\"headerlink\" title=\"1.3 其他站点的嵌入内容\"></a>1.3 其他站点的嵌入内容</h2><p>此站点上的文章可能会包含嵌入的内容（如视频、图像、文章等）。来自其他站点的嵌入内容的行为和您直接访问这些其他站点没有区别。</p>\n<p>这些站点可能会收集关于您的数据、使用cookies、嵌入额外的第三方跟踪程序及监视您与这些嵌入内容的交互，包括在您有这些站点的账户并登录了这些站点时，跟踪您与嵌入内容的交互。</p>\n<h2 id=\"1-4-我们与谁共享您的信息\"><a href=\"#1-4-我们与谁共享您的信息\" class=\"headerlink\" title=\"1.4 我们与谁共享您的信息\"></a>1.4 我们与谁共享您的信息</h2><p>本网站开放申请了友链，可能友链处站长会相应地迁移评论或截图。</p>\n<h2 id=\"1-5-我们保留多久您的信息\"><a href=\"#1-5-我们保留多久您的信息\" class=\"headerlink\" title=\"1.5 我们保留多久您的信息\"></a>1.5 我们保留多久您的信息</h2><p>如果您留下评论，评论和其元数据将被无限期保存。我们这样做以便能识别并自动批准任何后续评论，而不用将这些后续评论加入待审队列。</p>\n<p>对于本网站的注册用户，我们也会保存用户在个人资料中提供的个人信息。所有用户可以在任何时候查看、编辑或删除他们的个人信息（除了不能变更用户名外）、站点管理员也可以查看及编辑那些信息。</p>\n<h2 id=\"1-6-您对您的信息有什么权利\"><a href=\"#1-6-您对您的信息有什么权利\" class=\"headerlink\" title=\"1.6 您对您的信息有什么权利\"></a>1.6 您对您的信息有什么权利</h2><p>如果您有此站点的账户，或曾经留下评论，您可以请求我们提供我们所拥有的您的个人数据的导出文件，这也包括了所有您提供给我们的数据。您也可以要求我们抹除所有关于您的个人数据。这不包括我们因管理、法规或安全需要而必须保留的数据。</p>\n<h2 id=\"1-7-我们将您的信息发送到哪\"><a href=\"#1-7-我们将您的信息发送到哪\" class=\"headerlink\" title=\"1.7 我们将您的信息发送到哪\"></a>1.7 我们将您的信息发送到哪</h2><p>任何数据最终只会点对点流向TDSQL数据库，并保证所有用户信息保密，同时不会将数据传输给第三方</p>\n<h1 id=\"2-站长联系信息\"><a href=\"#2-站长联系信息\" class=\"headerlink\" title=\"2.站长联系信息\"></a>2.站长联系信息</h1><p>邮箱：<a href=\"mailto:&#x72;&#x6f;&#111;&#x74;&#x40;&#x61;&#x72;&#x73;&#x72;&#x6e;&#97;&#x2e;&#x63;&#110;\">&#x72;&#x6f;&#111;&#x74;&#x40;&#x61;&#x72;&#x73;&#x72;&#x6e;&#97;&#x2e;&#x63;&#110;</a></p>\n<p>QQ:2459405337</p>\n<p>更多请前往 <a href=\"https://www.arsrna.com/contact\">https://www.arsrna.com/contact</a> 查看</p>\n<h1 id=\"3-其他信息\"><a href=\"#3-其他信息\" class=\"headerlink\" title=\"3.其他信息\"></a>3.其他信息</h1><h2 id=\"3-1-我们如何保护您的数据\"><a href=\"#3-1-我们如何保护您的数据\" class=\"headerlink\" title=\"3.1 我们如何保护您的数据\"></a>3.1 我们如何保护您的数据</h2><p>本站前端由腾讯云对象存储提供托管，后端Serverless由阿里云提供，请参照腾讯云及阿里云相关协议。</p>\n<p>我们使用加密技术（例如，TLS、SSL）、匿名化处理等手段来保护您的个人信息。</p>\n<h2 id=\"3-2-关于登录\"><a href=\"#3-2-关于登录\" class=\"headerlink\" title=\"3.2 关于登录\"></a>3.2 关于登录</h2><p>本站在2022-2-17 接入了腾讯云CIAM（数字身份管控）系统（现改名为账号风控平台）。您在注册本站账号时，填入的信息将会脱敏在后端展现</p>\n<h3 id=\"3-2-1-我们能看到的内容\"><a href=\"#3-2-1-我们能看到的内容\" class=\"headerlink\" title=\"3.2.1 我们能看到的内容\"></a>3.2.1 我们能看到的内容</h3><ul>\n<li>您的完整用户名</li>\n<li>邮箱前两位和邮箱域名</li>\n<li>手机号前三位和后一位</li>\n<li>省级地区</li>\n<li>唯一识别码（UniqueID）</li>\n</ul>\n<p>您在进行实名认证时产生的任何数据，本站均无权限查看，数据API由腾讯云天御提供，请参照相应的协议。</p>\n<h3 id=\"3-2-2-本站可以对您账户进行的操作\"><a href=\"#3-2-2-本站可以对您账户进行的操作\" class=\"headerlink\" title=\"3.2.2 本站可以对您账户进行的操作\"></a>3.2.2 本站可以对您账户进行的操作</h3><p>本站有权冻结，封禁，删除您的账户，可以重置密码</p>\n<p>这一切的前提，除非违反了相关法律或政策而要求强制执行的，其余操作均需要征得您的同意。</p>\n<h3 id=\"3-2-3-您的账户会被共享吗\"><a href=\"#3-2-3-您的账户会被共享吗\" class=\"headerlink\" title=\"3.2.3 您的账户会被共享吗\"></a>3.2.3 您的账户会被共享吗</h3><p>会与本站相关站点及其镜像站共享一个账户体系，本站CIAM的APPID，Secret和本站相关站点相同步，您的数据将会在这些站点间共享，这些站点均为本站长所创建和维护的。</p>\n<p>本站头像来源为 cravatar.cn ，您的邮箱会被md5加密后传入 cravatar.cn 返回头像</p>\n<p>此致<br>上海绫中信息技术有限公司</p>\n","site":{"data":{}},"excerpt":"","more":"<p>版本 2024-9-7</p>\n<h1 id=\"1-隐私协议\"><a href=\"#1-隐私协议\" class=\"headerlink\" title=\"1.隐私协议\"></a>1.隐私协议</h1><p>我们非常注重访问者的任何隐私，并保证不会在用户不同意的前提下越权。</p>\n<p>访问本站的用户（下称“您”），本站作者（下称“作者”），本站需遵守如下条文</p>\n<h2 id=\"1-1-保护范围\"><a href=\"#1-1-保护范围\" class=\"headerlink\" title=\"1.1 保护范围\"></a>1.1 保护范围</h2><p>仅在本站域名和子域名内，该条文才会生效。</p>\n<p>站点域名为：arsrna.cn、arsrna.com、arirs.cn及其子域。</p>\n<h2 id=\"1-2-我们收集何种及为何收集个人数据\"><a href=\"#1-2-我们收集何种及为何收集个人数据\" class=\"headerlink\" title=\"1.2 我们收集何种及为何收集个人数据\"></a>1.2 我们收集何种及为何收集个人数据</h2><h3 id=\"1-2-1访问数据\"><a href=\"#1-2-1访问数据\" class=\"headerlink\" title=\"1.2.1访问数据\"></a>1.2.1访问数据</h3><p>本站接入腾讯云前端性能监控（RUM）产品，会收集用户访问本站时，网络指标（运营商，省级地理位置，ping，首屏加载耗时，资源加载耗时等），浏览器性能（加载占用资源量，加载时间，浏览器版本），访问设备型号，浏览器控制台内容（您在控制台输入的指令，本站响应或执行的指令）</p>\n<p>更多数据，请前往 <a href=\"https://cloud.tencent.com/document/product/1464\">腾讯云前端性能监控产品</a> 文档查看</p>\n<p>这些数据用于分析为何访问出错以及为何无法访问，包括浏览本站的交互行为（例如点击链接，Ajax请求），用于改进本站开发优化。</p>\n<h3 id=\"1-2-2-评论\"><a href=\"#1-2-2-评论\" class=\"headerlink\" title=\"1.2.2 评论\"></a>1.2.2 评论</h3><p>当访客留下评论时，我们会收集评论表单所显示的数据，和访客的IP地址及浏览器的user agent字符串来帮助检查垃圾评论。</p>\n<p>评论发布后，直接展示在网站上，请注意言行，对此的一切后果由发布者自行承担</p>\n<h3 id=\"1-2-3-媒体\"><a href=\"#1-2-3-媒体\" class=\"headerlink\" title=\"1.2.3 媒体\"></a>1.2.3 媒体</h3><p>如果您向此网站上传图片，您应当避免上传那些有嵌入地理位置信息（EXIF GPS）的图片。此网站的访客将可以下载并提取此网站的图片中的位置信息。</p>\n<h3 id=\"1-2-4-联系表单\"><a href=\"#1-2-4-联系表单\" class=\"headerlink\" title=\"1.2.4 联系表单\"></a>1.2.4 联系表单</h3><h4 id=\"1-2-4-1-Cookies\"><a href=\"#1-2-4-1-Cookies\" class=\"headerlink\" title=\"1.2.4.1 Cookies\"></a>1.2.4.1 Cookies</h4><p>如果您在我们的站点上留下评论，您可以选择用cookies保存您的姓名、电子邮件地址和网站。这是通过让您可以不用在评论时再次填写相关内容而向您提供方便。这些cookies会保留一年。</p>\n<p>如果您有此站点的账户并且您登录了此站点，我们会设置一个临时的cookie来确认您的浏览器是否接受cookies。此cookie不包含个人数据且会在您关闭浏览器时被丢弃。</p>\n<p>当您登录时，我们也会设置多个cookies来保存您的登录信息及屏幕显示选项。登录cookies会保留两天，而屏幕显示选项cookies会保留一年。如果您选择了“记住我”，您的登录状态则会保留两周。如果您登出您的账户，用于登录的cookies将会被移除。</p>\n<p>如果您编辑或发布文章，我们会在您的浏览器中保存一个额外的cookie。这个cookie不包含个人数据而只记录了您刚才编辑的文章的ID。这个cookie会保留一天。</p>\n<h2 id=\"1-3-其他站点的嵌入内容\"><a href=\"#1-3-其他站点的嵌入内容\" class=\"headerlink\" title=\"1.3 其他站点的嵌入内容\"></a>1.3 其他站点的嵌入内容</h2><p>此站点上的文章可能会包含嵌入的内容（如视频、图像、文章等）。来自其他站点的嵌入内容的行为和您直接访问这些其他站点没有区别。</p>\n<p>这些站点可能会收集关于您的数据、使用cookies、嵌入额外的第三方跟踪程序及监视您与这些嵌入内容的交互，包括在您有这些站点的账户并登录了这些站点时，跟踪您与嵌入内容的交互。</p>\n<h2 id=\"1-4-我们与谁共享您的信息\"><a href=\"#1-4-我们与谁共享您的信息\" class=\"headerlink\" title=\"1.4 我们与谁共享您的信息\"></a>1.4 我们与谁共享您的信息</h2><p>本网站开放申请了友链，可能友链处站长会相应地迁移评论或截图。</p>\n<h2 id=\"1-5-我们保留多久您的信息\"><a href=\"#1-5-我们保留多久您的信息\" class=\"headerlink\" title=\"1.5 我们保留多久您的信息\"></a>1.5 我们保留多久您的信息</h2><p>如果您留下评论，评论和其元数据将被无限期保存。我们这样做以便能识别并自动批准任何后续评论，而不用将这些后续评论加入待审队列。</p>\n<p>对于本网站的注册用户，我们也会保存用户在个人资料中提供的个人信息。所有用户可以在任何时候查看、编辑或删除他们的个人信息（除了不能变更用户名外）、站点管理员也可以查看及编辑那些信息。</p>\n<h2 id=\"1-6-您对您的信息有什么权利\"><a href=\"#1-6-您对您的信息有什么权利\" class=\"headerlink\" title=\"1.6 您对您的信息有什么权利\"></a>1.6 您对您的信息有什么权利</h2><p>如果您有此站点的账户，或曾经留下评论，您可以请求我们提供我们所拥有的您的个人数据的导出文件，这也包括了所有您提供给我们的数据。您也可以要求我们抹除所有关于您的个人数据。这不包括我们因管理、法规或安全需要而必须保留的数据。</p>\n<h2 id=\"1-7-我们将您的信息发送到哪\"><a href=\"#1-7-我们将您的信息发送到哪\" class=\"headerlink\" title=\"1.7 我们将您的信息发送到哪\"></a>1.7 我们将您的信息发送到哪</h2><p>任何数据最终只会点对点流向TDSQL数据库，并保证所有用户信息保密，同时不会将数据传输给第三方</p>\n<h1 id=\"2-站长联系信息\"><a href=\"#2-站长联系信息\" class=\"headerlink\" title=\"2.站长联系信息\"></a>2.站长联系信息</h1><p>邮箱：<a href=\"mailto:&#x72;&#x6f;&#111;&#x74;&#x40;&#x61;&#x72;&#x73;&#x72;&#x6e;&#97;&#x2e;&#x63;&#110;\">&#x72;&#x6f;&#111;&#x74;&#x40;&#x61;&#x72;&#x73;&#x72;&#x6e;&#97;&#x2e;&#x63;&#110;</a></p>\n<p>QQ:2459405337</p>\n<p>更多请前往 <a href=\"https://www.arsrna.com/contact\">https://www.arsrna.com/contact</a> 查看</p>\n<h1 id=\"3-其他信息\"><a href=\"#3-其他信息\" class=\"headerlink\" title=\"3.其他信息\"></a>3.其他信息</h1><h2 id=\"3-1-我们如何保护您的数据\"><a href=\"#3-1-我们如何保护您的数据\" class=\"headerlink\" title=\"3.1 我们如何保护您的数据\"></a>3.1 我们如何保护您的数据</h2><p>本站前端由腾讯云对象存储提供托管，后端Serverless由阿里云提供，请参照腾讯云及阿里云相关协议。</p>\n<p>我们使用加密技术（例如，TLS、SSL）、匿名化处理等手段来保护您的个人信息。</p>\n<h2 id=\"3-2-关于登录\"><a href=\"#3-2-关于登录\" class=\"headerlink\" title=\"3.2 关于登录\"></a>3.2 关于登录</h2><p>本站在2022-2-17 接入了腾讯云CIAM（数字身份管控）系统（现改名为账号风控平台）。您在注册本站账号时，填入的信息将会脱敏在后端展现</p>\n<h3 id=\"3-2-1-我们能看到的内容\"><a href=\"#3-2-1-我们能看到的内容\" class=\"headerlink\" title=\"3.2.1 我们能看到的内容\"></a>3.2.1 我们能看到的内容</h3><ul>\n<li>您的完整用户名</li>\n<li>邮箱前两位和邮箱域名</li>\n<li>手机号前三位和后一位</li>\n<li>省级地区</li>\n<li>唯一识别码（UniqueID）</li>\n</ul>\n<p>您在进行实名认证时产生的任何数据，本站均无权限查看，数据API由腾讯云天御提供，请参照相应的协议。</p>\n<h3 id=\"3-2-2-本站可以对您账户进行的操作\"><a href=\"#3-2-2-本站可以对您账户进行的操作\" class=\"headerlink\" title=\"3.2.2 本站可以对您账户进行的操作\"></a>3.2.2 本站可以对您账户进行的操作</h3><p>本站有权冻结，封禁，删除您的账户，可以重置密码</p>\n<p>这一切的前提，除非违反了相关法律或政策而要求强制执行的，其余操作均需要征得您的同意。</p>\n<h3 id=\"3-2-3-您的账户会被共享吗\"><a href=\"#3-2-3-您的账户会被共享吗\" class=\"headerlink\" title=\"3.2.3 您的账户会被共享吗\"></a>3.2.3 您的账户会被共享吗</h3><p>会与本站相关站点及其镜像站共享一个账户体系，本站CIAM的APPID，Secret和本站相关站点相同步，您的数据将会在这些站点间共享，这些站点均为本站长所创建和维护的。</p>\n<p>本站头像来源为 cravatar.cn ，您的邮箱会被md5加密后传入 cravatar.cn 返回头像</p>\n<p>此致<br>上海绫中信息技术有限公司</p>\n"},{"title":"版权协议","comments":1,"date":"2022-07-07T13:24:00.000Z","keywords":null,"description":null,"photos":"https://www.arsrna.cn/images/DSC08095_cop.jpg","_content":"*版本：2024-9-7*\n\n# 1.为什么要执行该协议？\n\n1. 为了保护作者权益，维护作品创作时的价值，同时保护辛苦创作的作品保存，本站设置了如下协议，访问本站的用户（下称“您”），本站作者（下称“作者”），本站需遵守如下条文：\n2. 本站文章、帖子等仅代表作者或站长的观点，本站不保证文章内容为官方新闻内容。\n3. 属在本网站发表的文章(包括转帖)，版权归原作者所有。\n4. 本站存在镜像站，所有条文协议和著作权仍然参照源站（本站）。\n5. 本网站部分内容转载于合作站点或其他站点，但都会注明作者和原出处。若转载之前有协议的，被转载方提出任何要求，一律按照协议进行；若没有协议但已同意转载的，任何要求将酌情考虑，若需要下架的，后果由被转载方自负。\n6. 本网站开放评论，评论内容不代表作者或本站的观点，您所发表的任何言论带来的后果由您本人自负\n7. 在征得本网站，以及作者同意的情况下，本网站的作品允许非盈利性引用，并请注明出处：“作者：____转载自____”字样，以尊重作者的劳动成果。版权归原作/译者所有。未经允许，严禁转载。对非法转载者，本站和作者保留采用法律手段追究的权利。\n8. 本站之声明以及其修改权、更新权及最终解释权均属原站长所有\n9. 本站部分资源拥有著作权，下文查看具有著作权的作品，若您侵犯了本站特定作品作者的权益，本站站长将采取法律手段维护权益。\n10. 您若需要本站部分版权权益的，请联系站长 [点击进入](https://www.arsrna.com/contact/) 签订相关协议并按要求履行责任。\n11. 以上声明的解释权归本站站长所有。\n\n# 2.本站什么作品受到什么保护？\n\n## 2.1 保护范围说明\n\n1. 视频作品（视频，网站源代码）依据《中华人民共和国著作权法》第三条中保护作品中的（九）法律、行政法规规定的其他作品和计算机软件。是受到法律保护的，其余内容参考《中华人民共和国著作权法》。\n2. 本站源代码非开源代码，但也并未申请计算机软件著作权，即使如此，仍然受到著作权法的保护，您可以在法律允许范围内使用源代码，但是源代码出现的问题一律由您自己负责。\n3. 本站开源项目的代码按照对应开源协议进行，目前以GPL3.0为主，协议请到对应项目查看LICENSE\n4. 本站部分视频与图文资源愿意以共享的方式公开，遵守CC BY-NC-SA 4.0的协议，详细请看下文 **CC协议内容**\n5. 本站截止至本文版本起，共有 4 件作品登记了著作权。\n6. 本站截止至本文版本起，共有 12 份代码登记了软件著作权。\n\n## 2.2 本站已登记并允许公示的著作权的作品\n\n## 2.3 CC协议内容：\n\n[https://creativecommons.org/licenses/](https://creativecommons.org/licenses/)\n\n[https://creativecommons.org/licenses/by/4.0/](https://creativecommons.org/licenses/by/4.0/)\n\n### 2.3.1 CC0协议是什么？\n\n自己可以放弃CC BY的所有权利，最大化将权利放给读者，置于公共领域\n\n[https://creativecommons.org/share-your-work/public-domain/cc0](https://creativecommons.org/share-your-work/public-domain/cc0)\n\n注：目前该站没有任何具有CC0协议的作品和条件\n\n**要注意的是，本站及附属站点所有内容不适用CC协议**\n\n# 3.本站如何维护版权\n\n## 3.1 根据著作权的以下条款维护版权：\n\n第三十条、图书出版者出版图书应当和著作权人订立出版合同，并支付报酬。\n\n第三十一条、图书出版者对著作权人交付出版的作品，按照合同约定享有的专有出版权受法律保护，他人不得出版该作品。\n\n第三十二条、著作权人应当按照合同约定期限交付作品。图书出版者应当按照合同约定的出版质量、期限出版图书。图书出版者不按照合同约定期限出版，应当依照本法第五十四条的规定承担民事责任。图书出版者重印、再版作品的，应当通知著作权人，并支付报酬。图书脱销后，图书出版者拒绝重印、再版的，著作权人有权终止合同。\n\n第三十三条、著作权人向报社、期刊社投稿的，自稿件发出之日起十五日内未收到报社通知决定刊登的，或者自稿件发出之日起三十日内未收到期刊社通知决定刊登的，可以将同一作品向其他报社、期刊社投稿。双方另有约定的除外。作品刊登后，除著作权人声明不得转载、摘编的外，其他报刊可以转载或者作为文摘、资料刊登，但应当按照规定向著作权人支付报酬。\n\n第三十四条、图书出版者经作者许可，可以对作品修改、删节。报社、期刊社可以对作品作文字性修改、删节。对内容的修改，应当经作者许可。\n\n第三十五条、出版改编、翻译、注释、整理、汇编已有作品而产生的作品，应当取得改编、翻译、注释、整理、汇编作品的著作权人和原作品的著作权人许可，并支付报酬。\n\n---\n\n此致\n上海绫中信息技术有限公司\n","source":"policies/copyright.md","raw":"---\ntitle: 版权协议\ncomments: true\ndate: 2022-7-7 21:24\nkeywords:\ndescription:\nphotos: https://www.arsrna.cn/images/DSC08095_cop.jpg\n---\n*版本：2024-9-7*\n\n# 1.为什么要执行该协议？\n\n1. 为了保护作者权益，维护作品创作时的价值，同时保护辛苦创作的作品保存，本站设置了如下协议，访问本站的用户（下称“您”），本站作者（下称“作者”），本站需遵守如下条文：\n2. 本站文章、帖子等仅代表作者或站长的观点，本站不保证文章内容为官方新闻内容。\n3. 属在本网站发表的文章(包括转帖)，版权归原作者所有。\n4. 本站存在镜像站，所有条文协议和著作权仍然参照源站（本站）。\n5. 本网站部分内容转载于合作站点或其他站点，但都会注明作者和原出处。若转载之前有协议的，被转载方提出任何要求，一律按照协议进行；若没有协议但已同意转载的，任何要求将酌情考虑，若需要下架的，后果由被转载方自负。\n6. 本网站开放评论，评论内容不代表作者或本站的观点，您所发表的任何言论带来的后果由您本人自负\n7. 在征得本网站，以及作者同意的情况下，本网站的作品允许非盈利性引用，并请注明出处：“作者：____转载自____”字样，以尊重作者的劳动成果。版权归原作/译者所有。未经允许，严禁转载。对非法转载者，本站和作者保留采用法律手段追究的权利。\n8. 本站之声明以及其修改权、更新权及最终解释权均属原站长所有\n9. 本站部分资源拥有著作权，下文查看具有著作权的作品，若您侵犯了本站特定作品作者的权益，本站站长将采取法律手段维护权益。\n10. 您若需要本站部分版权权益的，请联系站长 [点击进入](https://www.arsrna.com/contact/) 签订相关协议并按要求履行责任。\n11. 以上声明的解释权归本站站长所有。\n\n# 2.本站什么作品受到什么保护？\n\n## 2.1 保护范围说明\n\n1. 视频作品（视频，网站源代码）依据《中华人民共和国著作权法》第三条中保护作品中的（九）法律、行政法规规定的其他作品和计算机软件。是受到法律保护的，其余内容参考《中华人民共和国著作权法》。\n2. 本站源代码非开源代码，但也并未申请计算机软件著作权，即使如此，仍然受到著作权法的保护，您可以在法律允许范围内使用源代码，但是源代码出现的问题一律由您自己负责。\n3. 本站开源项目的代码按照对应开源协议进行，目前以GPL3.0为主，协议请到对应项目查看LICENSE\n4. 本站部分视频与图文资源愿意以共享的方式公开，遵守CC BY-NC-SA 4.0的协议，详细请看下文 **CC协议内容**\n5. 本站截止至本文版本起，共有 4 件作品登记了著作权。\n6. 本站截止至本文版本起，共有 12 份代码登记了软件著作权。\n\n## 2.2 本站已登记并允许公示的著作权的作品\n\n## 2.3 CC协议内容：\n\n[https://creativecommons.org/licenses/](https://creativecommons.org/licenses/)\n\n[https://creativecommons.org/licenses/by/4.0/](https://creativecommons.org/licenses/by/4.0/)\n\n### 2.3.1 CC0协议是什么？\n\n自己可以放弃CC BY的所有权利，最大化将权利放给读者，置于公共领域\n\n[https://creativecommons.org/share-your-work/public-domain/cc0](https://creativecommons.org/share-your-work/public-domain/cc0)\n\n注：目前该站没有任何具有CC0协议的作品和条件\n\n**要注意的是，本站及附属站点所有内容不适用CC协议**\n\n# 3.本站如何维护版权\n\n## 3.1 根据著作权的以下条款维护版权：\n\n第三十条、图书出版者出版图书应当和著作权人订立出版合同，并支付报酬。\n\n第三十一条、图书出版者对著作权人交付出版的作品，按照合同约定享有的专有出版权受法律保护，他人不得出版该作品。\n\n第三十二条、著作权人应当按照合同约定期限交付作品。图书出版者应当按照合同约定的出版质量、期限出版图书。图书出版者不按照合同约定期限出版，应当依照本法第五十四条的规定承担民事责任。图书出版者重印、再版作品的，应当通知著作权人，并支付报酬。图书脱销后，图书出版者拒绝重印、再版的，著作权人有权终止合同。\n\n第三十三条、著作权人向报社、期刊社投稿的，自稿件发出之日起十五日内未收到报社通知决定刊登的，或者自稿件发出之日起三十日内未收到期刊社通知决定刊登的，可以将同一作品向其他报社、期刊社投稿。双方另有约定的除外。作品刊登后，除著作权人声明不得转载、摘编的外，其他报刊可以转载或者作为文摘、资料刊登，但应当按照规定向著作权人支付报酬。\n\n第三十四条、图书出版者经作者许可，可以对作品修改、删节。报社、期刊社可以对作品作文字性修改、删节。对内容的修改，应当经作者许可。\n\n第三十五条、出版改编、翻译、注释、整理、汇编已有作品而产生的作品，应当取得改编、翻译、注释、整理、汇编作品的著作权人和原作品的著作权人许可，并支付报酬。\n\n---\n\n此致\n上海绫中信息技术有限公司\n","updated":"2024-09-07T08:13:55.848Z","path":"policies/copyright.html","_id":"clod0d6wy000hc0ndgbmzev5t","layout":"page","content":"<p><em>版本：2024-9-7</em></p>\n<h1 id=\"1-为什么要执行该协议？\"><a href=\"#1-为什么要执行该协议？\" class=\"headerlink\" title=\"1.为什么要执行该协议？\"></a>1.为什么要执行该协议？</h1><ol>\n<li>为了保护作者权益，维护作品创作时的价值，同时保护辛苦创作的作品保存，本站设置了如下协议，访问本站的用户（下称“您”），本站作者（下称“作者”），本站需遵守如下条文：</li>\n<li>本站文章、帖子等仅代表作者或站长的观点，本站不保证文章内容为官方新闻内容。</li>\n<li>属在本网站发表的文章(包括转帖)，版权归原作者所有。</li>\n<li>本站存在镜像站，所有条文协议和著作权仍然参照源站（本站）。</li>\n<li>本网站部分内容转载于合作站点或其他站点，但都会注明作者和原出处。若转载之前有协议的，被转载方提出任何要求，一律按照协议进行；若没有协议但已同意转载的，任何要求将酌情考虑，若需要下架的，后果由被转载方自负。</li>\n<li>本网站开放评论，评论内容不代表作者或本站的观点，您所发表的任何言论带来的后果由您本人自负</li>\n<li>在征得本网站，以及作者同意的情况下，本网站的作品允许非盈利性引用，并请注明出处：“作者：____转载自____”字样，以尊重作者的劳动成果。版权归原作&#x2F;译者所有。未经允许，严禁转载。对非法转载者，本站和作者保留采用法律手段追究的权利。</li>\n<li>本站之声明以及其修改权、更新权及最终解释权均属原站长所有</li>\n<li>本站部分资源拥有著作权，下文查看具有著作权的作品，若您侵犯了本站特定作品作者的权益，本站站长将采取法律手段维护权益。</li>\n<li>您若需要本站部分版权权益的，请联系站长 <a href=\"https://www.arsrna.com/contact/\">点击进入</a> 签订相关协议并按要求履行责任。</li>\n<li>以上声明的解释权归本站站长所有。</li>\n</ol>\n<h1 id=\"2-本站什么作品受到什么保护？\"><a href=\"#2-本站什么作品受到什么保护？\" class=\"headerlink\" title=\"2.本站什么作品受到什么保护？\"></a>2.本站什么作品受到什么保护？</h1><h2 id=\"2-1-保护范围说明\"><a href=\"#2-1-保护范围说明\" class=\"headerlink\" title=\"2.1 保护范围说明\"></a>2.1 保护范围说明</h2><ol>\n<li>视频作品（视频，网站源代码）依据《中华人民共和国著作权法》第三条中保护作品中的（九）法律、行政法规规定的其他作品和计算机软件。是受到法律保护的，其余内容参考《中华人民共和国著作权法》。</li>\n<li>本站源代码非开源代码，但也并未申请计算机软件著作权，即使如此，仍然受到著作权法的保护，您可以在法律允许范围内使用源代码，但是源代码出现的问题一律由您自己负责。</li>\n<li>本站开源项目的代码按照对应开源协议进行，目前以GPL3.0为主，协议请到对应项目查看LICENSE</li>\n<li>本站部分视频与图文资源愿意以共享的方式公开，遵守CC BY-NC-SA 4.0的协议，详细请看下文 <strong>CC协议内容</strong></li>\n<li>本站截止至本文版本起，共有 4 件作品登记了著作权。</li>\n<li>本站截止至本文版本起，共有 12 份代码登记了软件著作权。</li>\n</ol>\n<h2 id=\"2-2-本站已登记并允许公示的著作权的作品\"><a href=\"#2-2-本站已登记并允许公示的著作权的作品\" class=\"headerlink\" title=\"2.2 本站已登记并允许公示的著作权的作品\"></a>2.2 本站已登记并允许公示的著作权的作品</h2><h2 id=\"2-3-CC协议内容：\"><a href=\"#2-3-CC协议内容：\" class=\"headerlink\" title=\"2.3 CC协议内容：\"></a>2.3 CC协议内容：</h2><p><a href=\"https://creativecommons.org/licenses/\">https://creativecommons.org/licenses/</a></p>\n<p><a href=\"https://creativecommons.org/licenses/by/4.0/\">https://creativecommons.org/licenses/by/4.0/</a></p>\n<h3 id=\"2-3-1-CC0协议是什么？\"><a href=\"#2-3-1-CC0协议是什么？\" class=\"headerlink\" title=\"2.3.1 CC0协议是什么？\"></a>2.3.1 CC0协议是什么？</h3><p>自己可以放弃CC BY的所有权利，最大化将权利放给读者，置于公共领域</p>\n<p><a href=\"https://creativecommons.org/share-your-work/public-domain/cc0\">https://creativecommons.org/share-your-work/public-domain/cc0</a></p>\n<p>注：目前该站没有任何具有CC0协议的作品和条件</p>\n<p><strong>要注意的是，本站及附属站点所有内容不适用CC协议</strong></p>\n<h1 id=\"3-本站如何维护版权\"><a href=\"#3-本站如何维护版权\" class=\"headerlink\" title=\"3.本站如何维护版权\"></a>3.本站如何维护版权</h1><h2 id=\"3-1-根据著作权的以下条款维护版权：\"><a href=\"#3-1-根据著作权的以下条款维护版权：\" class=\"headerlink\" title=\"3.1 根据著作权的以下条款维护版权：\"></a>3.1 根据著作权的以下条款维护版权：</h2><p>第三十条、图书出版者出版图书应当和著作权人订立出版合同，并支付报酬。</p>\n<p>第三十一条、图书出版者对著作权人交付出版的作品，按照合同约定享有的专有出版权受法律保护，他人不得出版该作品。</p>\n<p>第三十二条、著作权人应当按照合同约定期限交付作品。图书出版者应当按照合同约定的出版质量、期限出版图书。图书出版者不按照合同约定期限出版，应当依照本法第五十四条的规定承担民事责任。图书出版者重印、再版作品的，应当通知著作权人，并支付报酬。图书脱销后，图书出版者拒绝重印、再版的，著作权人有权终止合同。</p>\n<p>第三十三条、著作权人向报社、期刊社投稿的，自稿件发出之日起十五日内未收到报社通知决定刊登的，或者自稿件发出之日起三十日内未收到期刊社通知决定刊登的，可以将同一作品向其他报社、期刊社投稿。双方另有约定的除外。作品刊登后，除著作权人声明不得转载、摘编的外，其他报刊可以转载或者作为文摘、资料刊登，但应当按照规定向著作权人支付报酬。</p>\n<p>第三十四条、图书出版者经作者许可，可以对作品修改、删节。报社、期刊社可以对作品作文字性修改、删节。对内容的修改，应当经作者许可。</p>\n<p>第三十五条、出版改编、翻译、注释、整理、汇编已有作品而产生的作品，应当取得改编、翻译、注释、整理、汇编作品的著作权人和原作品的著作权人许可，并支付报酬。</p>\n<hr>\n<p>此致<br>上海绫中信息技术有限公司</p>\n","site":{"data":{}},"excerpt":"","more":"<p><em>版本：2024-9-7</em></p>\n<h1 id=\"1-为什么要执行该协议？\"><a href=\"#1-为什么要执行该协议？\" class=\"headerlink\" title=\"1.为什么要执行该协议？\"></a>1.为什么要执行该协议？</h1><ol>\n<li>为了保护作者权益，维护作品创作时的价值，同时保护辛苦创作的作品保存，本站设置了如下协议，访问本站的用户（下称“您”），本站作者（下称“作者”），本站需遵守如下条文：</li>\n<li>本站文章、帖子等仅代表作者或站长的观点，本站不保证文章内容为官方新闻内容。</li>\n<li>属在本网站发表的文章(包括转帖)，版权归原作者所有。</li>\n<li>本站存在镜像站，所有条文协议和著作权仍然参照源站（本站）。</li>\n<li>本网站部分内容转载于合作站点或其他站点，但都会注明作者和原出处。若转载之前有协议的，被转载方提出任何要求，一律按照协议进行；若没有协议但已同意转载的，任何要求将酌情考虑，若需要下架的，后果由被转载方自负。</li>\n<li>本网站开放评论，评论内容不代表作者或本站的观点，您所发表的任何言论带来的后果由您本人自负</li>\n<li>在征得本网站，以及作者同意的情况下，本网站的作品允许非盈利性引用，并请注明出处：“作者：____转载自____”字样，以尊重作者的劳动成果。版权归原作&#x2F;译者所有。未经允许，严禁转载。对非法转载者，本站和作者保留采用法律手段追究的权利。</li>\n<li>本站之声明以及其修改权、更新权及最终解释权均属原站长所有</li>\n<li>本站部分资源拥有著作权，下文查看具有著作权的作品，若您侵犯了本站特定作品作者的权益，本站站长将采取法律手段维护权益。</li>\n<li>您若需要本站部分版权权益的，请联系站长 <a href=\"https://www.arsrna.com/contact/\">点击进入</a> 签订相关协议并按要求履行责任。</li>\n<li>以上声明的解释权归本站站长所有。</li>\n</ol>\n<h1 id=\"2-本站什么作品受到什么保护？\"><a href=\"#2-本站什么作品受到什么保护？\" class=\"headerlink\" title=\"2.本站什么作品受到什么保护？\"></a>2.本站什么作品受到什么保护？</h1><h2 id=\"2-1-保护范围说明\"><a href=\"#2-1-保护范围说明\" class=\"headerlink\" title=\"2.1 保护范围说明\"></a>2.1 保护范围说明</h2><ol>\n<li>视频作品（视频，网站源代码）依据《中华人民共和国著作权法》第三条中保护作品中的（九）法律、行政法规规定的其他作品和计算机软件。是受到法律保护的，其余内容参考《中华人民共和国著作权法》。</li>\n<li>本站源代码非开源代码，但也并未申请计算机软件著作权，即使如此，仍然受到著作权法的保护，您可以在法律允许范围内使用源代码，但是源代码出现的问题一律由您自己负责。</li>\n<li>本站开源项目的代码按照对应开源协议进行，目前以GPL3.0为主，协议请到对应项目查看LICENSE</li>\n<li>本站部分视频与图文资源愿意以共享的方式公开，遵守CC BY-NC-SA 4.0的协议，详细请看下文 <strong>CC协议内容</strong></li>\n<li>本站截止至本文版本起，共有 4 件作品登记了著作权。</li>\n<li>本站截止至本文版本起，共有 12 份代码登记了软件著作权。</li>\n</ol>\n<h2 id=\"2-2-本站已登记并允许公示的著作权的作品\"><a href=\"#2-2-本站已登记并允许公示的著作权的作品\" class=\"headerlink\" title=\"2.2 本站已登记并允许公示的著作权的作品\"></a>2.2 本站已登记并允许公示的著作权的作品</h2><h2 id=\"2-3-CC协议内容：\"><a href=\"#2-3-CC协议内容：\" class=\"headerlink\" title=\"2.3 CC协议内容：\"></a>2.3 CC协议内容：</h2><p><a href=\"https://creativecommons.org/licenses/\">https://creativecommons.org/licenses/</a></p>\n<p><a href=\"https://creativecommons.org/licenses/by/4.0/\">https://creativecommons.org/licenses/by/4.0/</a></p>\n<h3 id=\"2-3-1-CC0协议是什么？\"><a href=\"#2-3-1-CC0协议是什么？\" class=\"headerlink\" title=\"2.3.1 CC0协议是什么？\"></a>2.3.1 CC0协议是什么？</h3><p>自己可以放弃CC BY的所有权利，最大化将权利放给读者，置于公共领域</p>\n<p><a href=\"https://creativecommons.org/share-your-work/public-domain/cc0\">https://creativecommons.org/share-your-work/public-domain/cc0</a></p>\n<p>注：目前该站没有任何具有CC0协议的作品和条件</p>\n<p><strong>要注意的是，本站及附属站点所有内容不适用CC协议</strong></p>\n<h1 id=\"3-本站如何维护版权\"><a href=\"#3-本站如何维护版权\" class=\"headerlink\" title=\"3.本站如何维护版权\"></a>3.本站如何维护版权</h1><h2 id=\"3-1-根据著作权的以下条款维护版权：\"><a href=\"#3-1-根据著作权的以下条款维护版权：\" class=\"headerlink\" title=\"3.1 根据著作权的以下条款维护版权：\"></a>3.1 根据著作权的以下条款维护版权：</h2><p>第三十条、图书出版者出版图书应当和著作权人订立出版合同，并支付报酬。</p>\n<p>第三十一条、图书出版者对著作权人交付出版的作品，按照合同约定享有的专有出版权受法律保护，他人不得出版该作品。</p>\n<p>第三十二条、著作权人应当按照合同约定期限交付作品。图书出版者应当按照合同约定的出版质量、期限出版图书。图书出版者不按照合同约定期限出版，应当依照本法第五十四条的规定承担民事责任。图书出版者重印、再版作品的，应当通知著作权人，并支付报酬。图书脱销后，图书出版者拒绝重印、再版的，著作权人有权终止合同。</p>\n<p>第三十三条、著作权人向报社、期刊社投稿的，自稿件发出之日起十五日内未收到报社通知决定刊登的，或者自稿件发出之日起三十日内未收到期刊社通知决定刊登的，可以将同一作品向其他报社、期刊社投稿。双方另有约定的除外。作品刊登后，除著作权人声明不得转载、摘编的外，其他报刊可以转载或者作为文摘、资料刊登，但应当按照规定向著作权人支付报酬。</p>\n<p>第三十四条、图书出版者经作者许可，可以对作品修改、删节。报社、期刊社可以对作品作文字性修改、删节。对内容的修改，应当经作者许可。</p>\n<p>第三十五条、出版改编、翻译、注释、整理、汇编已有作品而产生的作品，应当取得改编、翻译、注释、整理、汇编作品的著作权人和原作品的著作权人许可，并支付报酬。</p>\n<hr>\n<p>此致<br>上海绫中信息技术有限公司</p>\n"},{"_content":"","source":"res/index.css","raw":"","date":"2023-01-17T08:55:38.590Z","updated":"2023-01-17T08:55:38.590Z","path":"res/index.css","layout":"false","title":"","comments":1,"_id":"clod0d6x0000kc0nd2wcm7mu6","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"const aegis = new Aegis({\n    id: 'PR8Q4VBmZvWyA3gmKO', // 上报 id\n    uin: 'xxx', // 用户唯一 ID（可选）\n    reportApiSpeed: true, // 接口测速\n    reportAssetSpeed: true, // 静态资源测速\n    spa: true, // spa 应用页面跳转的时候开启 pv 计算\n  });","source":"res/index.js","raw":"const aegis = new Aegis({\n    id: 'PR8Q4VBmZvWyA3gmKO', // 上报 id\n    uin: 'xxx', // 用户唯一 ID（可选）\n    reportApiSpeed: true, // 接口测速\n    reportAssetSpeed: true, // 静态资源测速\n    spa: true, // spa 应用页面跳转的时候开启 pv 计算\n  });","date":"2023-01-17T08:55:38.590Z","updated":"2023-01-17T08:55:38.590Z","path":"res/index.js","layout":"false","title":"","comments":1,"_id":"clod0d6x1000oc0nd5j855fdx","content":"const aegis = new Aegis({\n    id: 'PR8Q4VBmZvWyA3gmKO', // 上报 id\n    uin: 'xxx', // 用户唯一 ID（可选）\n    reportApiSpeed: true, // 接口测速\n    reportAssetSpeed: true, // 静态资源测速\n    spa: true, // spa 应用页面跳转的时候开启 pv 计算\n  });","site":{"data":{}},"excerpt":"","more":"const aegis = new Aegis({\n    id: 'PR8Q4VBmZvWyA3gmKO', // 上报 id\n    uin: 'xxx', // 用户唯一 ID（可选）\n    reportApiSpeed: true, // 接口测速\n    reportAssetSpeed: true, // 静态资源测速\n    spa: true, // spa 应用页面跳转的时候开启 pv 计算\n  });"}],"Post":[{"title":"【Ar-Sr-Na X 南宁十中】继续前行-2021高考加油！","date":"2021-06-06T15:05:00.000Z","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"https://www.arsrna.cn","authorAbout":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","authorDesc":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","comments":1,"keywords":"高考,励志,应援","description":"愿所有中高考学子都能无怨无悔，都能实现自己心里最大的梦想！","index_img":"https://res.arsrna.cn/blogs/0000-D-2021gk/fm.jpg","_content":"在南宁十中上津校区进行1星期的拍摄，捕捉高三学子最真实的一面\n\n无论大风大雨，大家都在不断前行\n\n感谢：南宁市第十中学提供场地与拍摄环境\n\n明天就是高三学子们踏入战场的时刻，十年铸剑，只为炉火纯青，一朝出鞘，定当倚天长鸣！\n\n待到金榜题名时，何人笑我曾痴狂；愿所有中高考学子都能无怨无悔，都能实现自己心里最大的梦想！\n\n制作时长：17小时\n\n个人网站www.arsrna.cn、www.arsrna.ltd\n\n<div id=\"player\"></div>\n<script src=\"https://player.dogecloud.com/js/loader\"></script>\n<script>\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: '358b2023498c2e15',\n    autoPlay: false\n});\n</script>\n","source":"_drafts/0000-D-2021gk.md","raw":"---\ntitle: 【Ar-Sr-Na X 南宁十中】继续前行-2021高考加油！\ndate: 2021-6-6 23:05\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: https://www.arsrna.cn\nauthorAbout: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\nauthorDesc: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\ncategories: 技术\ncomments: true\ntags: \nkeywords: 高考,励志,应援\ndescription: 愿所有中高考学子都能无怨无悔，都能实现自己心里最大的梦想！\nindex_img: 'https://res.arsrna.cn/blogs/0000-D-2021gk/fm.jpg'\n---\n在南宁十中上津校区进行1星期的拍摄，捕捉高三学子最真实的一面\n\n无论大风大雨，大家都在不断前行\n\n感谢：南宁市第十中学提供场地与拍摄环境\n\n明天就是高三学子们踏入战场的时刻，十年铸剑，只为炉火纯青，一朝出鞘，定当倚天长鸣！\n\n待到金榜题名时，何人笑我曾痴狂；愿所有中高考学子都能无怨无悔，都能实现自己心里最大的梦想！\n\n制作时长：17小时\n\n个人网站www.arsrna.cn、www.arsrna.ltd\n\n<div id=\"player\"></div>\n<script src=\"https://player.dogecloud.com/js/loader\"></script>\n<script>\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: '358b2023498c2e15',\n    autoPlay: false\n});\n</script>\n","slug":"0000-D-2021gk","published":0,"updated":"2023-01-17T08:55:38.563Z","layout":"post","photos":[],"link":"","_id":"clod0d6wk0001c0nd4yqohhw1","content":"<p>在南宁十中上津校区进行1星期的拍摄，捕捉高三学子最真实的一面</p>\n<p>无论大风大雨，大家都在不断前行</p>\n<p>感谢：南宁市第十中学提供场地与拍摄环境</p>\n<p>明天就是高三学子们踏入战场的时刻，十年铸剑，只为炉火纯青，一朝出鞘，定当倚天长鸣！</p>\n<p>待到金榜题名时，何人笑我曾痴狂；愿所有中高考学子都能无怨无悔，都能实现自己心里最大的梦想！</p>\n<p>制作时长：17小时</p>\n<p>个人网站<a href=\"http://www.arsrna.cn、www.arsrna.ltd/\">www.arsrna.cn、www.arsrna.ltd</a></p>\n<div id=\"player\"></div>\n<script src=\"https://player.dogecloud.com/js/loader\"></script>\n<script>\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: '358b2023498c2e15',\n    autoPlay: false\n});\n</script>\n","site":{"data":{}},"excerpt":"","more":"<p>在南宁十中上津校区进行1星期的拍摄，捕捉高三学子最真实的一面</p>\n<p>无论大风大雨，大家都在不断前行</p>\n<p>感谢：南宁市第十中学提供场地与拍摄环境</p>\n<p>明天就是高三学子们踏入战场的时刻，十年铸剑，只为炉火纯青，一朝出鞘，定当倚天长鸣！</p>\n<p>待到金榜题名时，何人笑我曾痴狂；愿所有中高考学子都能无怨无悔，都能实现自己心里最大的梦想！</p>\n<p>制作时长：17小时</p>\n<p>个人网站<a href=\"http://www.arsrna.cn、www.arsrna.ltd/\">www.arsrna.cn、www.arsrna.ltd</a></p>\n<div id=\"player\"></div>\n<script src=\"https://player.dogecloud.com/js/loader\"></script>\n<script>\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: '358b2023498c2e15',\n    autoPlay: false\n});\n</script>\n"},{"title":"我们为每一颗电子注入热情","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"https://www.arsrna.cn","authorAbout":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","authorDesc":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","comments":1,"keywords":"电子,科技","photos":["https://www.arsrna.com/elec/images/3600.png"],"date":"2021-08-06T07:47:49.000Z","description":null,"_content":"\n[https://www.ysncir.cn](Ar-Sr-Na电子)\n\n2021年6月，我买了一台6声道功放，一条均衡器\n\n<div id=\"player\"></div>\n<script type=\"text/javascript\" src=\"https://player.dogecloud.com/js/loader\"></script>\n<script type=\"text/javascript\">\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: 'eab156cc9074c19b',\n    autoPlay: false\n});\n</script>\n\n看到右边那一排灯了么，故事就从这8只led开始\n\n我去网上找了很多音频指示灯套件，但是他们都太贵了，10块左右一个，而且不美观，也有便宜的，但是效果看起来不好，所以我都没买\n\n偶然间b站大数据推荐了一个视频，lm3915的\n\n<iframe src=\"//player.bilibili.com/player.html?aid=546048453&bvid=BV1mq4y157Ar&cid=353878919&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n然后我去淘宝看了下这颗芯片的价格，2块一颗，然后，根据这位up主提供的电路图我去立创eda画出来，并且将原理图转为了pcb\n只是那时候不熟练，一个很简单的电路搞了一周，因为我想要插件的却给我贴片的，我也不知道怎么改，我的led也是贴片的，所以我只好放了一堆孔(通孔)然后去打板\n\n却没想到这个不是所谓焊插件的孔，收到货之后怎么焊都不行，只好飞线\n\n花了一下午飞好线一通电看到第一颗led亮起来时，我的内心无比激动，哪怕只是一颗led，而且这个电路是错误的，但这颗led却让我走进电子世界的大门，随后我看了教程，做了第二块板\n\n<div id=\"player\"></div>\n<script type=\"text/javascript\" src=\"https://player.dogecloud.com/js/loader\"></script>\n<script type=\"text/javascript\">\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: '6312f10f9f22e8ad',\n    autoPlay: false\n});\n</script>\n\n2021-7-9 因为一次封装问题咨询立创eda客服，在最后客服给我推荐了他们立创商城的活动，我并没有拒绝这个活动，也没有把他当做广告，这是一次宝贵的机会，那就是立创设计大赛，我认识了刘工，立创的员工都很热情\n\n下图是做硬件的桌面，就这一张不到2m²的桌子给予了我对电子的深入探索\n\n![](https://arsrnasitehk-1257609559.cos.ap-hongkong.myqcloud.com/blogs/08-0902A/IMG_20210730_221934.jpg_copwh)","source":"_drafts/08-0902-A.md","raw":"title: 我们为每一颗电子注入热情\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: 'https://www.arsrna.cn'\nauthorAbout: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\nauthorDesc: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\ncomments: true\ntags: '电子,科技'\nkeywords: '电子,科技'\nphotos: 'https://www.arsrna.com/elec/images/3600.png'\ndate: 2021-08-06 15:47:49\ncategories:\ndescription:\n---\n\n[https://www.ysncir.cn](Ar-Sr-Na电子)\n\n2021年6月，我买了一台6声道功放，一条均衡器\n\n<div id=\"player\"></div>\n<script type=\"text/javascript\" src=\"https://player.dogecloud.com/js/loader\"></script>\n<script type=\"text/javascript\">\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: 'eab156cc9074c19b',\n    autoPlay: false\n});\n</script>\n\n看到右边那一排灯了么，故事就从这8只led开始\n\n我去网上找了很多音频指示灯套件，但是他们都太贵了，10块左右一个，而且不美观，也有便宜的，但是效果看起来不好，所以我都没买\n\n偶然间b站大数据推荐了一个视频，lm3915的\n\n<iframe src=\"//player.bilibili.com/player.html?aid=546048453&bvid=BV1mq4y157Ar&cid=353878919&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n然后我去淘宝看了下这颗芯片的价格，2块一颗，然后，根据这位up主提供的电路图我去立创eda画出来，并且将原理图转为了pcb\n只是那时候不熟练，一个很简单的电路搞了一周，因为我想要插件的却给我贴片的，我也不知道怎么改，我的led也是贴片的，所以我只好放了一堆孔(通孔)然后去打板\n\n却没想到这个不是所谓焊插件的孔，收到货之后怎么焊都不行，只好飞线\n\n花了一下午飞好线一通电看到第一颗led亮起来时，我的内心无比激动，哪怕只是一颗led，而且这个电路是错误的，但这颗led却让我走进电子世界的大门，随后我看了教程，做了第二块板\n\n<div id=\"player\"></div>\n<script type=\"text/javascript\" src=\"https://player.dogecloud.com/js/loader\"></script>\n<script type=\"text/javascript\">\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: '6312f10f9f22e8ad',\n    autoPlay: false\n});\n</script>\n\n2021-7-9 因为一次封装问题咨询立创eda客服，在最后客服给我推荐了他们立创商城的活动，我并没有拒绝这个活动，也没有把他当做广告，这是一次宝贵的机会，那就是立创设计大赛，我认识了刘工，立创的员工都很热情\n\n下图是做硬件的桌面，就这一张不到2m²的桌子给予了我对电子的深入探索\n\n![](https://arsrnasitehk-1257609559.cos.ap-hongkong.myqcloud.com/blogs/08-0902A/IMG_20210730_221934.jpg_copwh)","slug":"08-0902-A","published":0,"updated":"2022-07-20T05:04:16.754Z","layout":"post","link":"","_id":"clod0d6wo0003c0nd67gseag9","content":"<p><a href=\"Ar-Sr-Na%E7%94%B5%E5%AD%90\">https://www.ysncir.cn</a></p>\n<p>2021年6月，我买了一台6声道功放，一条均衡器</p>\n<div id=\"player\"></div>\n<script type=\"text/javascript\" src=\"https://player.dogecloud.com/js/loader\"></script>\n<script type=\"text/javascript\">\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: 'eab156cc9074c19b',\n    autoPlay: false\n});\n</script>\n\n<p>看到右边那一排灯了么，故事就从这8只led开始</p>\n<p>我去网上找了很多音频指示灯套件，但是他们都太贵了，10块左右一个，而且不美观，也有便宜的，但是效果看起来不好，所以我都没买</p>\n<p>偶然间b站大数据推荐了一个视频，lm3915的</p>\n<iframe src=\"//player.bilibili.com/player.html?aid=546048453&bvid=BV1mq4y157Ar&cid=353878919&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<p>然后我去淘宝看了下这颗芯片的价格，2块一颗，然后，根据这位up主提供的电路图我去立创eda画出来，并且将原理图转为了pcb<br>只是那时候不熟练，一个很简单的电路搞了一周，因为我想要插件的却给我贴片的，我也不知道怎么改，我的led也是贴片的，所以我只好放了一堆孔(通孔)然后去打板</p>\n<p>却没想到这个不是所谓焊插件的孔，收到货之后怎么焊都不行，只好飞线</p>\n<p>花了一下午飞好线一通电看到第一颗led亮起来时，我的内心无比激动，哪怕只是一颗led，而且这个电路是错误的，但这颗led却让我走进电子世界的大门，随后我看了教程，做了第二块板</p>\n<div id=\"player\"></div>\n<script type=\"text/javascript\" src=\"https://player.dogecloud.com/js/loader\"></script>\n<script type=\"text/javascript\">\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: '6312f10f9f22e8ad',\n    autoPlay: false\n});\n</script>\n\n<p>2021-7-9 因为一次封装问题咨询立创eda客服，在最后客服给我推荐了他们立创商城的活动，我并没有拒绝这个活动，也没有把他当做广告，这是一次宝贵的机会，那就是立创设计大赛，我认识了刘工，立创的员工都很热情</p>\n<p>下图是做硬件的桌面，就这一张不到2m²的桌子给予了我对电子的深入探索</p>\n<p><img src=\"https://arsrnasitehk-1257609559.cos.ap-hongkong.myqcloud.com/blogs/08-0902A/IMG_20210730_221934.jpg_copwh\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"Ar-Sr-Na%E7%94%B5%E5%AD%90\">https://www.ysncir.cn</a></p>\n<p>2021年6月，我买了一台6声道功放，一条均衡器</p>\n<div id=\"player\"></div>\n<script type=\"text/javascript\" src=\"https://player.dogecloud.com/js/loader\"></script>\n<script type=\"text/javascript\">\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: 'eab156cc9074c19b',\n    autoPlay: false\n});\n</script>\n\n<p>看到右边那一排灯了么，故事就从这8只led开始</p>\n<p>我去网上找了很多音频指示灯套件，但是他们都太贵了，10块左右一个，而且不美观，也有便宜的，但是效果看起来不好，所以我都没买</p>\n<p>偶然间b站大数据推荐了一个视频，lm3915的</p>\n<iframe src=\"//player.bilibili.com/player.html?aid=546048453&bvid=BV1mq4y157Ar&cid=353878919&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<p>然后我去淘宝看了下这颗芯片的价格，2块一颗，然后，根据这位up主提供的电路图我去立创eda画出来，并且将原理图转为了pcb<br>只是那时候不熟练，一个很简单的电路搞了一周，因为我想要插件的却给我贴片的，我也不知道怎么改，我的led也是贴片的，所以我只好放了一堆孔(通孔)然后去打板</p>\n<p>却没想到这个不是所谓焊插件的孔，收到货之后怎么焊都不行，只好飞线</p>\n<p>花了一下午飞好线一通电看到第一颗led亮起来时，我的内心无比激动，哪怕只是一颗led，而且这个电路是错误的，但这颗led却让我走进电子世界的大门，随后我看了教程，做了第二块板</p>\n<div id=\"player\"></div>\n<script type=\"text/javascript\" src=\"https://player.dogecloud.com/js/loader\"></script>\n<script type=\"text/javascript\">\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: '6312f10f9f22e8ad',\n    autoPlay: false\n});\n</script>\n\n<p>2021-7-9 因为一次封装问题咨询立创eda客服，在最后客服给我推荐了他们立创商城的活动，我并没有拒绝这个活动，也没有把他当做广告，这是一次宝贵的机会，那就是立创设计大赛，我认识了刘工，立创的员工都很热情</p>\n<p>下图是做硬件的桌面，就这一张不到2m²的桌子给予了我对电子的深入探索</p>\n<p><img src=\"https://arsrnasitehk-1257609559.cos.ap-hongkong.myqcloud.com/blogs/08-0902A/IMG_20210730_221934.jpg_copwh\"></p>\n"},{"title":"我开发了一根进度条 [08-1202H/08-1203G]","date":"2021-03-27T16:00:00.000Z","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"https://www.arsrna.cn","authorAbout":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","authorDesc":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","comments":1,"keywords":"程序,开发","description":null,"index_img":"https://res.arsrna.cn/images/0d984241d34683b83f0de9ec3f00231d920df77a.png_WH","_content":"<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.css\">\n<link href=\"https://cdn.bootcdn.net/ajax/libs/font-awesome/5.15.3/css/all.css\" rel=\"stylesheet\">\n<link href=\"https://cdn.jsdelivr.net/gh/ArSrNa/ArUI-Progress/arloading.css\" rel=\"stylesheet\">\n<script src=\"https://cdn.jsdelivr.net/gh/ArSrNa/ArUI-Progress/arloading.js\"></script>\n<div id='test'></div>\n<link rel=\"stylesheet\" href=\"arloading.css\">\n<script src=\"arloading.js\"></script>\n\n`<button class=\"btn btn-primary\" onclick=\"arLoading({text:'Ar-Sr-Na (SAO) Serverless Automatic Organization',color: '#DDDDDD',id:'test'})\">`点我查看效果`</button>`\n\n效果↑\n\n地址： [github](https://github.com/ArSrNa/ArUI-Progress) | [gitee](https://gitee.com/arsrna/ArUI-Progress)\n\n# ArUI-Progress\n\n一根非常简单的进度条\n\n# 准备\n\n必要模块：Bootstrap CSS，FontAwsome\n\n```html\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.css\">\n<link href=\"https://cdn.bootcdn.net/ajax/libs/font-awesome/5.15.3/css/all.css\" rel=\"stylesheet\">\n```\n\n引入ArUI-Progress js与css：\n\n```html\n<link href=\"https://cdn.jsdelivr.net/gh/ArSrNa/ArUI-Progress/arloading.css\" rel=\"stylesheet\">\n<script src=\"https://cdn.jsdelivr.net/gh/ArSrNa/ArUI-Progress/arloading.js\"></script>\n```\n\n# 使用\n\n首先在div里创建一个div，包含id\n\n`<div id=\"test\"></div>`\n\n然后执行函数\n\n```JavaScript\narLoading({\n\ttext:'Ar-Sr-Na SAO-Serverless Automatic Organization',\n\tcolor: '#DDDDDD',\n\tid: 'test'\n\tsize: '3',\n\ticon: 'fa-info-circle'})\n```\n\n其中：\n\n| 字段  | 类型          | 描述                                                                                                | 注意                 | 默认值         |\n| ----- | ------------- | --------------------------------------------------------------------------------------------------- | -------------------- | -------------- |\n| text  | String        | 显示的文本，可以使用html格式，例如 `\"我永远喜欢御坂美琴\"或\"我永远喜欢御坂美琴<br>其他都是我小号`\" | 内置了 `<h5>`标签  | /              |\n| color | String        | 背景颜色，支持css格式                                                                               | 例如white或#66CCFF   | white          |\n| id    | String        | 创建进度条的控件id                                                                                  | 仅支持DIV            | /              |\n| size  | number/String | 图标大小                                                                                            | Fontawsome的fa-*x    | 3              |\n| icon  | String        | 图标，Fontawsome的fa-xxxxx                                                                          | 仅支持FontAwsome图标 | fa-info-circle |\n\n# example\n\n```html\n<div id='test'></div>\n<link rel=\"stylesheet\" href=\"arloading.css\">\n<script src=\"arloading.js\"></script>\n<script>\narLoading({\n\ttext:'Ar-Sr-Na SAO-Serverless Automatic Organization',\n\tcolor: '#DDDDDD',\n\tid:'test'})\n</script>\n```\n\n## Powered By Ar-Sr-Na 云计算项目团队\n","source":"_drafts/08-1202H-08-1203G.md","raw":"---\ntitle: 我开发了一根进度条 [08-1202H/08-1203G]\ndate: 2021-3-28\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: https://www.arsrna.cn\nauthorAbout: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\nauthorDesc: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\ncategories: 技术\ncomments: true\ntags: \nkeywords: 程序,开发\ndescription: \nindex_img: 'https://res.arsrna.cn/images/0d984241d34683b83f0de9ec3f00231d920df77a.png_WH'\n---\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.css\">\n<link href=\"https://cdn.bootcdn.net/ajax/libs/font-awesome/5.15.3/css/all.css\" rel=\"stylesheet\">\n<link href=\"https://cdn.jsdelivr.net/gh/ArSrNa/ArUI-Progress/arloading.css\" rel=\"stylesheet\">\n<script src=\"https://cdn.jsdelivr.net/gh/ArSrNa/ArUI-Progress/arloading.js\"></script>\n<div id='test'></div>\n<link rel=\"stylesheet\" href=\"arloading.css\">\n<script src=\"arloading.js\"></script>\n\n`<button class=\"btn btn-primary\" onclick=\"arLoading({text:'Ar-Sr-Na (SAO) Serverless Automatic Organization',color: '#DDDDDD',id:'test'})\">`点我查看效果`</button>`\n\n效果↑\n\n地址： [github](https://github.com/ArSrNa/ArUI-Progress) | [gitee](https://gitee.com/arsrna/ArUI-Progress)\n\n# ArUI-Progress\n\n一根非常简单的进度条\n\n# 准备\n\n必要模块：Bootstrap CSS，FontAwsome\n\n```html\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.css\">\n<link href=\"https://cdn.bootcdn.net/ajax/libs/font-awesome/5.15.3/css/all.css\" rel=\"stylesheet\">\n```\n\n引入ArUI-Progress js与css：\n\n```html\n<link href=\"https://cdn.jsdelivr.net/gh/ArSrNa/ArUI-Progress/arloading.css\" rel=\"stylesheet\">\n<script src=\"https://cdn.jsdelivr.net/gh/ArSrNa/ArUI-Progress/arloading.js\"></script>\n```\n\n# 使用\n\n首先在div里创建一个div，包含id\n\n`<div id=\"test\"></div>`\n\n然后执行函数\n\n```JavaScript\narLoading({\n\ttext:'Ar-Sr-Na SAO-Serverless Automatic Organization',\n\tcolor: '#DDDDDD',\n\tid: 'test'\n\tsize: '3',\n\ticon: 'fa-info-circle'})\n```\n\n其中：\n\n| 字段  | 类型          | 描述                                                                                                | 注意                 | 默认值         |\n| ----- | ------------- | --------------------------------------------------------------------------------------------------- | -------------------- | -------------- |\n| text  | String        | 显示的文本，可以使用html格式，例如 `\"我永远喜欢御坂美琴\"或\"我永远喜欢御坂美琴<br>其他都是我小号`\" | 内置了 `<h5>`标签  | /              |\n| color | String        | 背景颜色，支持css格式                                                                               | 例如white或#66CCFF   | white          |\n| id    | String        | 创建进度条的控件id                                                                                  | 仅支持DIV            | /              |\n| size  | number/String | 图标大小                                                                                            | Fontawsome的fa-*x    | 3              |\n| icon  | String        | 图标，Fontawsome的fa-xxxxx                                                                          | 仅支持FontAwsome图标 | fa-info-circle |\n\n# example\n\n```html\n<div id='test'></div>\n<link rel=\"stylesheet\" href=\"arloading.css\">\n<script src=\"arloading.js\"></script>\n<script>\narLoading({\n\ttext:'Ar-Sr-Na SAO-Serverless Automatic Organization',\n\tcolor: '#DDDDDD',\n\tid:'test'})\n</script>\n```\n\n## Powered By Ar-Sr-Na 云计算项目团队\n","slug":"08-1202H-08-1203G","published":0,"updated":"2023-01-17T08:55:38.564Z","layout":"post","photos":[],"link":"","_id":"clod0d6wr0006c0nd1po6hu56","content":"<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.css\">\n<link href=\"https://cdn.bootcdn.net/ajax/libs/font-awesome/5.15.3/css/all.css\" rel=\"stylesheet\">\n<link href=\"https://cdn.jsdelivr.net/gh/ArSrNa/ArUI-Progress/arloading.css\" rel=\"stylesheet\">\n<script src=\"https://cdn.jsdelivr.net/gh/ArSrNa/ArUI-Progress/arloading.js\"></script>\n<div id='test'></div>\n<link rel=\"stylesheet\" href=\"arloading.css\">\n<script src=\"arloading.js\"></script>\n\n<p><code>&lt;button class=&quot;btn btn-primary&quot; onclick=&quot;arLoading(&#123;text:&#39;Ar-Sr-Na (SAO) Serverless Automatic Organization&#39;,color: &#39;#DDDDDD&#39;,id:&#39;test&#39;&#125;)&quot;&gt;</code>点我查看效果<code>&lt;/button&gt;</code></p>\n<p>效果↑</p>\n<p>地址： <a href=\"https://github.com/ArSrNa/ArUI-Progress\">github</a> | <a href=\"https://gitee.com/arsrna/ArUI-Progress\">gitee</a></p>\n<h1 id=\"ArUI-Progress\"><a href=\"#ArUI-Progress\" class=\"headerlink\" title=\"ArUI-Progress\"></a>ArUI-Progress</h1><p>一根非常简单的进度条</p>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>必要模块：Bootstrap CSS，FontAwsome</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;stylesheet&quot;</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.css&quot;</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;https://cdn.bootcdn.net/ajax/libs/font-awesome/5.15.3/css/all.css&quot;</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;stylesheet&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>引入ArUI-Progress js与css：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;https://cdn.jsdelivr.net/gh/ArSrNa/ArUI-Progress/arloading.css&quot;</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;stylesheet&quot;</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://cdn.jsdelivr.net/gh/ArSrNa/ArUI-Progress/arloading.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>首先在div里创建一个div，包含id</p>\n<p><code>&lt;div id=&quot;test&quot;&gt;&lt;/div&gt;</code></p>\n<p>然后执行函数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs JavaScript\"><span class=\"hljs-title function_\">arLoading</span>(&#123;<br>\t<span class=\"hljs-attr\">text</span>:<span class=\"hljs-string\">&#x27;Ar-Sr-Na SAO-Serverless Automatic Organization&#x27;</span>,<br>\t<span class=\"hljs-attr\">color</span>: <span class=\"hljs-string\">&#x27;#DDDDDD&#x27;</span>,<br>\t<span class=\"hljs-attr\">id</span>: <span class=\"hljs-string\">&#x27;test&#x27;</span><br>\t<span class=\"hljs-attr\">size</span>: <span class=\"hljs-string\">&#x27;3&#x27;</span>,<br>\t<span class=\"hljs-attr\">icon</span>: <span class=\"hljs-string\">&#x27;fa-info-circle&#x27;</span>&#125;)<br></code></pre></td></tr></table></figure>\n\n<p>其中：</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>类型</th>\n<th>描述</th>\n<th>注意</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>text</td>\n<td>String</td>\n<td>显示的文本，可以使用html格式，例如 <code>&quot;我永远喜欢御坂美琴&quot;或&quot;我永远喜欢御坂美琴&lt;br&gt;其他都是我小号</code>“</td>\n<td>内置了 <code>&lt;h5&gt;</code>标签</td>\n<td>&#x2F;</td>\n</tr>\n<tr>\n<td>color</td>\n<td>String</td>\n<td>背景颜色，支持css格式</td>\n<td>例如white或#66CCFF</td>\n<td>white</td>\n</tr>\n<tr>\n<td>id</td>\n<td>String</td>\n<td>创建进度条的控件id</td>\n<td>仅支持DIV</td>\n<td>&#x2F;</td>\n</tr>\n<tr>\n<td>size</td>\n<td>number&#x2F;String</td>\n<td>图标大小</td>\n<td>Fontawsome的fa-*x</td>\n<td>3</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>String</td>\n<td>图标，Fontawsome的fa-xxxxx</td>\n<td>仅支持FontAwsome图标</td>\n<td>fa-info-circle</td>\n</tr>\n</tbody></table>\n<h1 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h1><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&#x27;test&#x27;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;stylesheet&quot;</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;arloading.css&quot;</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;arloading.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-title function_\">arLoading</span>(&#123;</span><br><span class=\"language-javascript\">\t<span class=\"hljs-attr\">text</span>:<span class=\"hljs-string\">&#x27;Ar-Sr-Na SAO-Serverless Automatic Organization&#x27;</span>,</span><br><span class=\"language-javascript\">\t<span class=\"hljs-attr\">color</span>: <span class=\"hljs-string\">&#x27;#DDDDDD&#x27;</span>,</span><br><span class=\"language-javascript\">\t<span class=\"hljs-attr\">id</span>:<span class=\"hljs-string\">&#x27;test&#x27;</span>&#125;)</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Powered-By-Ar-Sr-Na-云计算项目团队\"><a href=\"#Powered-By-Ar-Sr-Na-云计算项目团队\" class=\"headerlink\" title=\"Powered By Ar-Sr-Na 云计算项目团队\"></a>Powered By Ar-Sr-Na 云计算项目团队</h2>","site":{"data":{}},"excerpt":"","more":"<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.css\">\n<link href=\"https://cdn.bootcdn.net/ajax/libs/font-awesome/5.15.3/css/all.css\" rel=\"stylesheet\">\n<link href=\"https://cdn.jsdelivr.net/gh/ArSrNa/ArUI-Progress/arloading.css\" rel=\"stylesheet\">\n<script src=\"https://cdn.jsdelivr.net/gh/ArSrNa/ArUI-Progress/arloading.js\"></script>\n<div id='test'></div>\n<link rel=\"stylesheet\" href=\"arloading.css\">\n<script src=\"arloading.js\"></script>\n\n<p><code>&lt;button class=&quot;btn btn-primary&quot; onclick=&quot;arLoading(&#123;text:&#39;Ar-Sr-Na (SAO) Serverless Automatic Organization&#39;,color: &#39;#DDDDDD&#39;,id:&#39;test&#39;&#125;)&quot;&gt;</code>点我查看效果<code>&lt;/button&gt;</code></p>\n<p>效果↑</p>\n<p>地址： <a href=\"https://github.com/ArSrNa/ArUI-Progress\">github</a> | <a href=\"https://gitee.com/arsrna/ArUI-Progress\">gitee</a></p>\n<h1 id=\"ArUI-Progress\"><a href=\"#ArUI-Progress\" class=\"headerlink\" title=\"ArUI-Progress\"></a>ArUI-Progress</h1><p>一根非常简单的进度条</p>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>必要模块：Bootstrap CSS，FontAwsome</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;stylesheet&quot;</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.css&quot;</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;https://cdn.bootcdn.net/ajax/libs/font-awesome/5.15.3/css/all.css&quot;</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;stylesheet&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>引入ArUI-Progress js与css：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;https://cdn.jsdelivr.net/gh/ArSrNa/ArUI-Progress/arloading.css&quot;</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;stylesheet&quot;</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://cdn.jsdelivr.net/gh/ArSrNa/ArUI-Progress/arloading.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>首先在div里创建一个div，包含id</p>\n<p><code>&lt;div id=&quot;test&quot;&gt;&lt;/div&gt;</code></p>\n<p>然后执行函数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs JavaScript\"><span class=\"hljs-title function_\">arLoading</span>(&#123;<br>\t<span class=\"hljs-attr\">text</span>:<span class=\"hljs-string\">&#x27;Ar-Sr-Na SAO-Serverless Automatic Organization&#x27;</span>,<br>\t<span class=\"hljs-attr\">color</span>: <span class=\"hljs-string\">&#x27;#DDDDDD&#x27;</span>,<br>\t<span class=\"hljs-attr\">id</span>: <span class=\"hljs-string\">&#x27;test&#x27;</span><br>\t<span class=\"hljs-attr\">size</span>: <span class=\"hljs-string\">&#x27;3&#x27;</span>,<br>\t<span class=\"hljs-attr\">icon</span>: <span class=\"hljs-string\">&#x27;fa-info-circle&#x27;</span>&#125;)<br></code></pre></td></tr></table></figure>\n\n<p>其中：</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>类型</th>\n<th>描述</th>\n<th>注意</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>text</td>\n<td>String</td>\n<td>显示的文本，可以使用html格式，例如 <code>&quot;我永远喜欢御坂美琴&quot;或&quot;我永远喜欢御坂美琴&lt;br&gt;其他都是我小号</code>“</td>\n<td>内置了 <code>&lt;h5&gt;</code>标签</td>\n<td>&#x2F;</td>\n</tr>\n<tr>\n<td>color</td>\n<td>String</td>\n<td>背景颜色，支持css格式</td>\n<td>例如white或#66CCFF</td>\n<td>white</td>\n</tr>\n<tr>\n<td>id</td>\n<td>String</td>\n<td>创建进度条的控件id</td>\n<td>仅支持DIV</td>\n<td>&#x2F;</td>\n</tr>\n<tr>\n<td>size</td>\n<td>number&#x2F;String</td>\n<td>图标大小</td>\n<td>Fontawsome的fa-*x</td>\n<td>3</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>String</td>\n<td>图标，Fontawsome的fa-xxxxx</td>\n<td>仅支持FontAwsome图标</td>\n<td>fa-info-circle</td>\n</tr>\n</tbody></table>\n<h1 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h1><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&#x27;test&#x27;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;stylesheet&quot;</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;arloading.css&quot;</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;arloading.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-title function_\">arLoading</span>(&#123;</span><br><span class=\"language-javascript\">\t<span class=\"hljs-attr\">text</span>:<span class=\"hljs-string\">&#x27;Ar-Sr-Na SAO-Serverless Automatic Organization&#x27;</span>,</span><br><span class=\"language-javascript\">\t<span class=\"hljs-attr\">color</span>: <span class=\"hljs-string\">&#x27;#DDDDDD&#x27;</span>,</span><br><span class=\"language-javascript\">\t<span class=\"hljs-attr\">id</span>:<span class=\"hljs-string\">&#x27;test&#x27;</span>&#125;)</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Powered-By-Ar-Sr-Na-云计算项目团队\"><a href=\"#Powered-By-Ar-Sr-Na-云计算项目团队\" class=\"headerlink\" title=\"Powered By Ar-Sr-Na 云计算项目团队\"></a>Powered By Ar-Sr-Na 云计算项目团队</h2>"},{"title":"DDoS攻击者，感谢有你","date":"2021-02-20T16:00:00.000Z","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"www.arsrna.cn","authorAbout":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","authorDesc":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","comments":1,"keywords":"DDoS,人身攻击,励志","description":null,"index_img":"https://res.arsrna.cn/blogs/08-1202G-08-1203E/DSC07135-sy.jpg_copwh","_content":"励志鸡汤不说，我们的故事可以看：[2020云计算SLA总结](https://www.arsrna.ltd/posts/SLA2020/)\n\n<div id=\"player\"></div>\n<script type=\"text/javascript\" src=\"https://player.dogecloud.com/js/loader\"></script>\n<script type=\"text/javascript\">\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: '1d570c4e069418c6',\n    autoPlay: false\n});\n</script>\n\n![](https://res.arsrna.cn/blogs/SLA2020/%40~U89JG%7DPX9%7BI(~%5BLQ%5D3JVP.png))\n![](https://res.arsrna.cn/blogs/08-1202G-08-1203E/DSC07135-sy.jpg_copwh)\n![](https://res.arsrna.cn/blogs/08-1202G-08-1203E/DSC07134-sy.jpg_copwh)\n![](https://res.arsrna.cn/blogs/08-1202G-08-1203E/DSC07142.JPG_copwh)\n","source":"_drafts/08-1202G-08-1203E.md","raw":"---\ntitle: DDoS攻击者，感谢有你\ndate: 2021-2-21\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: www.arsrna.cn\nauthorAbout: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\nauthorDesc: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\ncategories: 技术\ncomments: true\ntags: \nkeywords: DDoS,人身攻击,励志\ndescription: \nindex_img: 'https://res.arsrna.cn/blogs/08-1202G-08-1203E/DSC07135-sy.jpg_copwh'\n---\n励志鸡汤不说，我们的故事可以看：[2020云计算SLA总结](https://www.arsrna.ltd/posts/SLA2020/)\n\n<div id=\"player\"></div>\n<script type=\"text/javascript\" src=\"https://player.dogecloud.com/js/loader\"></script>\n<script type=\"text/javascript\">\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: '1d570c4e069418c6',\n    autoPlay: false\n});\n</script>\n\n![](https://res.arsrna.cn/blogs/SLA2020/%40~U89JG%7DPX9%7BI(~%5BLQ%5D3JVP.png))\n![](https://res.arsrna.cn/blogs/08-1202G-08-1203E/DSC07135-sy.jpg_copwh)\n![](https://res.arsrna.cn/blogs/08-1202G-08-1203E/DSC07134-sy.jpg_copwh)\n![](https://res.arsrna.cn/blogs/08-1202G-08-1203E/DSC07142.JPG_copwh)\n","slug":"08-1202G-08-1203E","published":0,"updated":"2023-01-17T08:55:38.564Z","layout":"post","photos":[],"link":"","_id":"clod0d6wt0009c0nd6gvb0fhf","content":"<p>励志鸡汤不说，我们的故事可以看：<a href=\"https://www.arsrna.ltd/posts/SLA2020/\">2020云计算SLA总结</a></p>\n<div id=\"player\"></div>\n<script type=\"text/javascript\" src=\"https://player.dogecloud.com/js/loader\"></script>\n<script type=\"text/javascript\">\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: '1d570c4e069418c6',\n    autoPlay: false\n});\n</script>\n\n<p><img src=\"https://res.arsrna.cn/blogs/SLA2020/%40~U89JG%7DPX9%7BI(~%5BLQ%5D3JVP.png)\"><br><img src=\"https://res.arsrna.cn/blogs/08-1202G-08-1203E/DSC07135-sy.jpg_copwh\"><br><img src=\"https://res.arsrna.cn/blogs/08-1202G-08-1203E/DSC07134-sy.jpg_copwh\"><br><img src=\"https://res.arsrna.cn/blogs/08-1202G-08-1203E/DSC07142.JPG_copwh\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>励志鸡汤不说，我们的故事可以看：<a href=\"https://www.arsrna.ltd/posts/SLA2020/\">2020云计算SLA总结</a></p>\n<div id=\"player\"></div>\n<script type=\"text/javascript\" src=\"https://player.dogecloud.com/js/loader\"></script>\n<script type=\"text/javascript\">\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: '1d570c4e069418c6',\n    autoPlay: false\n});\n</script>\n\n<p><img src=\"https://res.arsrna.cn/blogs/SLA2020/%40~U89JG%7DPX9%7BI(~%5BLQ%5D3JVP.png)\"><br><img src=\"https://res.arsrna.cn/blogs/08-1202G-08-1203E/DSC07135-sy.jpg_copwh\"><br><img src=\"https://res.arsrna.cn/blogs/08-1202G-08-1203E/DSC07134-sy.jpg_copwh\"><br><img src=\"https://res.arsrna.cn/blogs/08-1202G-08-1203E/DSC07142.JPG_copwh\"></p>\n"},{"title":"【动画技术】二维动画制作-选择纸上线稿还是电子线稿？","id":"632","date":"2020-05-08T11:51:18.000Z","_content":"\n首先，无论是动画还是视频，最终展现出来的也都是视频，视频也就是一秒内多张图片（帧）播放出来的\n\n制作步骤不多说，这期主要介绍帧，也就是摄制和原画部分，原画是选择纸上做还是选择电子做呢？\n\n测试平台：电脑软件：Adobe Photoshop，SAI\n\n实拍图：小米MIX；后期软件：Adobe Photoshop；扫描平台：Canon MG2400；打印平台：激光黑白部分:Lenovo LJ2200，彩色部分：爱普生R350\n\n详细的参数自行百度 up主找到了Fate的线稿（可看成是电子线稿）\n\n![](/wp-content/uploads/2020/05/1588938784-565198aa32f16b628d197e9069c3168b2c48fe54-1024x576.png)\n\n![](/wp-content/uploads/2020/05/timg-724x1024.png)\n\n打印出来，当做是手绘的\n\n![](/wp-content/uploads/2020/05/扫描-1-1-1024x692.jpg)\n\n![](/wp-content/uploads/2020/05/扫描-2-744x1024.jpg)\n\n对比（左原版，右扫描\n\n![](/wp-content/uploads/2020/05/20eca525e990625c5b7204c9fbaa87f123afe58f-1024x432.png)\n\n![](/wp-content/uploads/2020/05/349902343f7ff884948e047a18aed7ebfa493533-1024x401.png)\n\n可以看出并没有太大差别，颜色是up主扫描仪的问题，换专业点的几乎避免\n\n但是up主发现如果对比度调低，细的线条变粗了，对比度调高了细的线条不见了，而且调的不好，一些细节就会丢失，例如下图\n\n![](/wp-content/uploads/2020/05/a71a4a8178e2a212d5cfb4af30202d8de3e32b29.png)\n\n* * *\n\n除以上例子外，还有些复杂对比，例如颜色很深或者前期已经上色的\n\n![](/wp-content/uploads/2020/05/7Q5-gw7dZ1kT3cS2bz-496-561x1024.jpg)\n\n扫描后\n\n![](/wp-content/uploads/2020/05/1.2-1-0-744x1024.jpg)\n\n左：原图   中：对比度17扫描   右：对比度30扫描\n\n![](/wp-content/uploads/2020/05/1588939020-b05bb5df5fe4c03d7ae937c54fa6c76714ec7455-1024x461.png)\n\n放大后对比，扫描的丢失大部分色彩，一大堆杂色，色差不大，也不是打印机扫描仪问题） 对比度默认\n\n![](/wp-content/uploads/2020/05/176a150f70d12383e5ce361a3acdea61f340080c-1.png)\n\n纸的皱痕，扫描仪的盖板以及一些网纹灰尘都被扫描进去了，根本无法看\n\n![](/wp-content/uploads/2020/05/1.2-1-0-1-744x1024.jpg)\n\n* * *\n\n所以，说了那么多，应该选择什么样的方式绘画呢？\n\n电子稿一般使用数位板+触控笔来做图，数位板价格非常贵，而且大小一定要大，如果摸不准位置，还需要数位屏，价格更加高，通常千元左右，专业点的价格在万元左右\n\n纸稿只需要笔，纸，扫描仪就行，彩色扫描仪价格300-500元左右，600dpi已经足够\n\n缺点： 电子稿：价格昂贵，设备贼贵，数位板有时候摸不着位置不好用，数位屏太expensive了，没有纸绘感觉好\n\n纸稿：扫描复杂，色差，网纹，颜色丢失，噪点，一旦画了修改麻烦，后期麻烦，大量会浪费纸墨，颜色少，不能放大，旋转麻烦，扫描仪不易携带\n\n优点： 电子稿：可以随时修改，绿色环保，不浪费纸墨，颜色齐全（RGB可达到2的32次方种颜色），方便放大，方便旋转，方便装x，省时间，可以复制粘贴大量画面 纸稿：便宜（少量情况下），直观，设备便宜\n\n可以根据自己情况选择，当然，电子稿也会出现一些情况，例如分辨率设置不对，颜色设置不对，数据丢失，没钱买后期软件等问题，up主是比较推荐电子稿，方便修改，利大于弊\n\n我的博客即将同步至腾讯云+社区，邀请大家一同入驻：[https://cloud.tencent.com/developer/support-plan?invite\\_code=1hufbk9ym9inl](https://cloud.tencent.com/developer/support-plan?invite_code=1hufbk9ym9inl)","source":"_drafts/2d-animate-line.md","raw":"---\ntitle: 【动画技术】二维动画制作-选择纸上线稿还是电子线稿？\ntags:\n  - 未分类\nid: '632'\ndate: 2020-05-08 19:51:18\n---\n\n首先，无论是动画还是视频，最终展现出来的也都是视频，视频也就是一秒内多张图片（帧）播放出来的\n\n制作步骤不多说，这期主要介绍帧，也就是摄制和原画部分，原画是选择纸上做还是选择电子做呢？\n\n测试平台：电脑软件：Adobe Photoshop，SAI\n\n实拍图：小米MIX；后期软件：Adobe Photoshop；扫描平台：Canon MG2400；打印平台：激光黑白部分:Lenovo LJ2200，彩色部分：爱普生R350\n\n详细的参数自行百度 up主找到了Fate的线稿（可看成是电子线稿）\n\n![](/wp-content/uploads/2020/05/1588938784-565198aa32f16b628d197e9069c3168b2c48fe54-1024x576.png)\n\n![](/wp-content/uploads/2020/05/timg-724x1024.png)\n\n打印出来，当做是手绘的\n\n![](/wp-content/uploads/2020/05/扫描-1-1-1024x692.jpg)\n\n![](/wp-content/uploads/2020/05/扫描-2-744x1024.jpg)\n\n对比（左原版，右扫描\n\n![](/wp-content/uploads/2020/05/20eca525e990625c5b7204c9fbaa87f123afe58f-1024x432.png)\n\n![](/wp-content/uploads/2020/05/349902343f7ff884948e047a18aed7ebfa493533-1024x401.png)\n\n可以看出并没有太大差别，颜色是up主扫描仪的问题，换专业点的几乎避免\n\n但是up主发现如果对比度调低，细的线条变粗了，对比度调高了细的线条不见了，而且调的不好，一些细节就会丢失，例如下图\n\n![](/wp-content/uploads/2020/05/a71a4a8178e2a212d5cfb4af30202d8de3e32b29.png)\n\n* * *\n\n除以上例子外，还有些复杂对比，例如颜色很深或者前期已经上色的\n\n![](/wp-content/uploads/2020/05/7Q5-gw7dZ1kT3cS2bz-496-561x1024.jpg)\n\n扫描后\n\n![](/wp-content/uploads/2020/05/1.2-1-0-744x1024.jpg)\n\n左：原图   中：对比度17扫描   右：对比度30扫描\n\n![](/wp-content/uploads/2020/05/1588939020-b05bb5df5fe4c03d7ae937c54fa6c76714ec7455-1024x461.png)\n\n放大后对比，扫描的丢失大部分色彩，一大堆杂色，色差不大，也不是打印机扫描仪问题） 对比度默认\n\n![](/wp-content/uploads/2020/05/176a150f70d12383e5ce361a3acdea61f340080c-1.png)\n\n纸的皱痕，扫描仪的盖板以及一些网纹灰尘都被扫描进去了，根本无法看\n\n![](/wp-content/uploads/2020/05/1.2-1-0-1-744x1024.jpg)\n\n* * *\n\n所以，说了那么多，应该选择什么样的方式绘画呢？\n\n电子稿一般使用数位板+触控笔来做图，数位板价格非常贵，而且大小一定要大，如果摸不准位置，还需要数位屏，价格更加高，通常千元左右，专业点的价格在万元左右\n\n纸稿只需要笔，纸，扫描仪就行，彩色扫描仪价格300-500元左右，600dpi已经足够\n\n缺点： 电子稿：价格昂贵，设备贼贵，数位板有时候摸不着位置不好用，数位屏太expensive了，没有纸绘感觉好\n\n纸稿：扫描复杂，色差，网纹，颜色丢失，噪点，一旦画了修改麻烦，后期麻烦，大量会浪费纸墨，颜色少，不能放大，旋转麻烦，扫描仪不易携带\n\n优点： 电子稿：可以随时修改，绿色环保，不浪费纸墨，颜色齐全（RGB可达到2的32次方种颜色），方便放大，方便旋转，方便装x，省时间，可以复制粘贴大量画面 纸稿：便宜（少量情况下），直观，设备便宜\n\n可以根据自己情况选择，当然，电子稿也会出现一些情况，例如分辨率设置不对，颜色设置不对，数据丢失，没钱买后期软件等问题，up主是比较推荐电子稿，方便修改，利大于弊\n\n我的博客即将同步至腾讯云+社区，邀请大家一同入驻：[https://cloud.tencent.com/developer/support-plan?invite\\_code=1hufbk9ym9inl](https://cloud.tencent.com/developer/support-plan?invite_code=1hufbk9ym9inl)","slug":"2d-animate-line","published":0,"updated":"2022-07-20T05:04:16.759Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6wu000bc0ndbwyj0rjc","content":"<p>首先，无论是动画还是视频，最终展现出来的也都是视频，视频也就是一秒内多张图片（帧）播放出来的</p>\n<p>制作步骤不多说，这期主要介绍帧，也就是摄制和原画部分，原画是选择纸上做还是选择电子做呢？</p>\n<p>测试平台：电脑软件：Adobe Photoshop，SAI</p>\n<p>实拍图：小米MIX；后期软件：Adobe Photoshop；扫描平台：Canon MG2400；打印平台：激光黑白部分:Lenovo LJ2200，彩色部分：爱普生R350</p>\n<p>详细的参数自行百度 up主找到了Fate的线稿（可看成是电子线稿）</p>\n<p><img src=\"/wp-content/uploads/2020/05/1588938784-565198aa32f16b628d197e9069c3168b2c48fe54-1024x576.png\"></p>\n<p><img src=\"/wp-content/uploads/2020/05/timg-724x1024.png\"></p>\n<p>打印出来，当做是手绘的</p>\n<p><img src=\"/wp-content/uploads/2020/05/%E6%89%AB%E6%8F%8F-1-1-1024x692.jpg\"></p>\n<p><img src=\"/wp-content/uploads/2020/05/%E6%89%AB%E6%8F%8F-2-744x1024.jpg\"></p>\n<p>对比（左原版，右扫描</p>\n<p><img src=\"/wp-content/uploads/2020/05/20eca525e990625c5b7204c9fbaa87f123afe58f-1024x432.png\"></p>\n<p><img src=\"/wp-content/uploads/2020/05/349902343f7ff884948e047a18aed7ebfa493533-1024x401.png\"></p>\n<p>可以看出并没有太大差别，颜色是up主扫描仪的问题，换专业点的几乎避免</p>\n<p>但是up主发现如果对比度调低，细的线条变粗了，对比度调高了细的线条不见了，而且调的不好，一些细节就会丢失，例如下图</p>\n<p><img src=\"/wp-content/uploads/2020/05/a71a4a8178e2a212d5cfb4af30202d8de3e32b29.png\"></p>\n<hr>\n<p>除以上例子外，还有些复杂对比，例如颜色很深或者前期已经上色的</p>\n<p><img src=\"/wp-content/uploads/2020/05/7Q5-gw7dZ1kT3cS2bz-496-561x1024.jpg\"></p>\n<p>扫描后</p>\n<p><img src=\"/wp-content/uploads/2020/05/1.2-1-0-744x1024.jpg\"></p>\n<p>左：原图   中：对比度17扫描   右：对比度30扫描</p>\n<p><img src=\"/wp-content/uploads/2020/05/1588939020-b05bb5df5fe4c03d7ae937c54fa6c76714ec7455-1024x461.png\"></p>\n<p>放大后对比，扫描的丢失大部分色彩，一大堆杂色，色差不大，也不是打印机扫描仪问题） 对比度默认</p>\n<p><img src=\"/wp-content/uploads/2020/05/176a150f70d12383e5ce361a3acdea61f340080c-1.png\"></p>\n<p>纸的皱痕，扫描仪的盖板以及一些网纹灰尘都被扫描进去了，根本无法看</p>\n<p><img src=\"/wp-content/uploads/2020/05/1.2-1-0-1-744x1024.jpg\"></p>\n<hr>\n<p>所以，说了那么多，应该选择什么样的方式绘画呢？</p>\n<p>电子稿一般使用数位板+触控笔来做图，数位板价格非常贵，而且大小一定要大，如果摸不准位置，还需要数位屏，价格更加高，通常千元左右，专业点的价格在万元左右</p>\n<p>纸稿只需要笔，纸，扫描仪就行，彩色扫描仪价格300-500元左右，600dpi已经足够</p>\n<p>缺点： 电子稿：价格昂贵，设备贼贵，数位板有时候摸不着位置不好用，数位屏太expensive了，没有纸绘感觉好</p>\n<p>纸稿：扫描复杂，色差，网纹，颜色丢失，噪点，一旦画了修改麻烦，后期麻烦，大量会浪费纸墨，颜色少，不能放大，旋转麻烦，扫描仪不易携带</p>\n<p>优点： 电子稿：可以随时修改，绿色环保，不浪费纸墨，颜色齐全（RGB可达到2的32次方种颜色），方便放大，方便旋转，方便装x，省时间，可以复制粘贴大量画面 纸稿：便宜（少量情况下），直观，设备便宜</p>\n<p>可以根据自己情况选择，当然，电子稿也会出现一些情况，例如分辨率设置不对，颜色设置不对，数据丢失，没钱买后期软件等问题，up主是比较推荐电子稿，方便修改，利大于弊</p>\n<p>我的博客即将同步至腾讯云+社区，邀请大家一同入驻：<a href=\"https://cloud.tencent.com/developer/support-plan?invite_code=1hufbk9ym9inl\">https://cloud.tencent.com/developer/support-plan?invite_code&#x3D;1hufbk9ym9inl</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>首先，无论是动画还是视频，最终展现出来的也都是视频，视频也就是一秒内多张图片（帧）播放出来的</p>\n<p>制作步骤不多说，这期主要介绍帧，也就是摄制和原画部分，原画是选择纸上做还是选择电子做呢？</p>\n<p>测试平台：电脑软件：Adobe Photoshop，SAI</p>\n<p>实拍图：小米MIX；后期软件：Adobe Photoshop；扫描平台：Canon MG2400；打印平台：激光黑白部分:Lenovo LJ2200，彩色部分：爱普生R350</p>\n<p>详细的参数自行百度 up主找到了Fate的线稿（可看成是电子线稿）</p>\n<p><img src=\"/wp-content/uploads/2020/05/1588938784-565198aa32f16b628d197e9069c3168b2c48fe54-1024x576.png\"></p>\n<p><img src=\"/wp-content/uploads/2020/05/timg-724x1024.png\"></p>\n<p>打印出来，当做是手绘的</p>\n<p><img src=\"/wp-content/uploads/2020/05/%E6%89%AB%E6%8F%8F-1-1-1024x692.jpg\"></p>\n<p><img src=\"/wp-content/uploads/2020/05/%E6%89%AB%E6%8F%8F-2-744x1024.jpg\"></p>\n<p>对比（左原版，右扫描</p>\n<p><img src=\"/wp-content/uploads/2020/05/20eca525e990625c5b7204c9fbaa87f123afe58f-1024x432.png\"></p>\n<p><img src=\"/wp-content/uploads/2020/05/349902343f7ff884948e047a18aed7ebfa493533-1024x401.png\"></p>\n<p>可以看出并没有太大差别，颜色是up主扫描仪的问题，换专业点的几乎避免</p>\n<p>但是up主发现如果对比度调低，细的线条变粗了，对比度调高了细的线条不见了，而且调的不好，一些细节就会丢失，例如下图</p>\n<p><img src=\"/wp-content/uploads/2020/05/a71a4a8178e2a212d5cfb4af30202d8de3e32b29.png\"></p>\n<hr>\n<p>除以上例子外，还有些复杂对比，例如颜色很深或者前期已经上色的</p>\n<p><img src=\"/wp-content/uploads/2020/05/7Q5-gw7dZ1kT3cS2bz-496-561x1024.jpg\"></p>\n<p>扫描后</p>\n<p><img src=\"/wp-content/uploads/2020/05/1.2-1-0-744x1024.jpg\"></p>\n<p>左：原图   中：对比度17扫描   右：对比度30扫描</p>\n<p><img src=\"/wp-content/uploads/2020/05/1588939020-b05bb5df5fe4c03d7ae937c54fa6c76714ec7455-1024x461.png\"></p>\n<p>放大后对比，扫描的丢失大部分色彩，一大堆杂色，色差不大，也不是打印机扫描仪问题） 对比度默认</p>\n<p><img src=\"/wp-content/uploads/2020/05/176a150f70d12383e5ce361a3acdea61f340080c-1.png\"></p>\n<p>纸的皱痕，扫描仪的盖板以及一些网纹灰尘都被扫描进去了，根本无法看</p>\n<p><img src=\"/wp-content/uploads/2020/05/1.2-1-0-1-744x1024.jpg\"></p>\n<hr>\n<p>所以，说了那么多，应该选择什么样的方式绘画呢？</p>\n<p>电子稿一般使用数位板+触控笔来做图，数位板价格非常贵，而且大小一定要大，如果摸不准位置，还需要数位屏，价格更加高，通常千元左右，专业点的价格在万元左右</p>\n<p>纸稿只需要笔，纸，扫描仪就行，彩色扫描仪价格300-500元左右，600dpi已经足够</p>\n<p>缺点： 电子稿：价格昂贵，设备贼贵，数位板有时候摸不着位置不好用，数位屏太expensive了，没有纸绘感觉好</p>\n<p>纸稿：扫描复杂，色差，网纹，颜色丢失，噪点，一旦画了修改麻烦，后期麻烦，大量会浪费纸墨，颜色少，不能放大，旋转麻烦，扫描仪不易携带</p>\n<p>优点： 电子稿：可以随时修改，绿色环保，不浪费纸墨，颜色齐全（RGB可达到2的32次方种颜色），方便放大，方便旋转，方便装x，省时间，可以复制粘贴大量画面 纸稿：便宜（少量情况下），直观，设备便宜</p>\n<p>可以根据自己情况选择，当然，电子稿也会出现一些情况，例如分辨率设置不对，颜色设置不对，数据丢失，没钱买后期软件等问题，up主是比较推荐电子稿，方便修改，利大于弊</p>\n<p>我的博客即将同步至腾讯云+社区，邀请大家一同入驻：<a href=\"https://cloud.tencent.com/developer/support-plan?invite_code=1hufbk9ym9inl\">https://cloud.tencent.com/developer/support-plan?invite_code&#x3D;1hufbk9ym9inl</a></p>\n"},{"title":"建站两周年，运行三周年庆祝","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"www.arsrna.cn","authorAbout":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；绿城漫展，使命必达，个人网站www.arsrna.cn","authorDesc":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；绿城漫展，使命必达，个人网站www.arsrna.cn","comments":1,"date":"2020-09-11T17:04:00.000Z","keywords":"网站,建站,庆祝,周年","description":null,"index_img":"https://res.arsrna.cn/blogs/3-year-birth/DSC04844_sy.jpg","_content":"还记得当初的主页吗？\n\n![2018](https://i.loli.net/2018/09/09/5b94a94363cc9.png)\n\n还记得当初的ID吗？\n\n![2018id](https://i.loli.net/2018/09/09/5b94a94695e9a.png)\n\n当年那个粗糙的，报纸一般的UI，就是我第一个正式对外发布的第一个网站，并且给了它第一个版本：Beta 0.0\n\n# 艰辛\n\n2018年，当时个人网站已经不是什么值得把弄的东西了，在互联网这么一个庞大的集体中，一个个人网站只不过是海滩上的一颗普通沙子罢了，不足为奇，百度，bilibili等更大的社交网站比个人网站新鲜多了，所以没必要再弄个个人网站了\n\n## 那我为什么要浪费这个时间呢\n\n事情可以从小学微机课说起，当时在大屁股电脑面前用着WindowsXP配着古老的课本，用着微软的FrontPage，老师教我们怎么写出一个简单的网页，并且让其他人都看见\n\n到了初中，网页不再是一个文件，它伴随着图片，音乐，直到高中必修1，我才认识到，原来制作出来的网站，在别人电脑上打不开，如果需要打开，还得配置服务器\n\n### 但这难不倒我\n\n2016年，我学习了html，深入学习css+html，学习了Adobe Dreamweaver\n\n2018年，网站的雏形有了，可是没有载体给他在互联网传播\n\n于是在2018年底我和几个朋友，利用免费主机建了第一个正式对外发布的网站：hqxxsb47.usa3v.net（现在访问不了了）\n\n2018-8-6 网站js，css，html完成\n\n2018-8-8 第一轮测试，开放网页\n\n......\n\nBeta0.1,0.2,0.3......版本一直在不断更新更新再更新，页面越来越多，壁纸站，教程，科普等一系列功能迅速发布\n\n我把网址发给了同学，发给了朋友，发给了当年的老师\n\n# 超越\n\n得到了大家的认可后，我决定搞盘大的，学习PHP，但是需要服务器进行运行，所以，自己在家搞，frp打通网络\n\n于是第一个域名bilibili24749747.wang就诞生了，当然他也与后天到期，我最终选择放弃这个域名\n\n2019年，网站发生了巨大变化，主流的https支持了，ui也改变了，不过我没得保留下当时的截图\n\n19年上旬，因为了解了wordpress，所以建了个个人博客，www.saten.top，现在已经改为www.arsrna.ltd\n\n因为2月份ID改为了Ar-Sr-Na，就注册了个arsrna.cn的域名，发展从此开始\n\n年底UI变换（Release-5.0,6.0......)，功能增加，主页变得越来越漂亮了，长得就像现在这样\n\n![2020](https://res.arsrna.cn/blogs/3-year-birth/QQ%E6%88%AA%E5%9B%BE20200912013349.png)\n\n各种应用飞速发展，我已经无法用语言描述，Serverless，Serverless Framework......\n\n# 初心\n\n为什么要建站？兴趣吗？是的\n\n成本那么高，确定值得？建站的初衷不是为了赚钱，而是自己写点代码，发布到互联网，让此时此刻素未相识的网友点开这个页面，又或许是给人际交往提供一个新的渠道\n\n写网页需要html，css，不仅能对这两门语言有一个了解，同时还学到了云计算相关内容\n\n从第一个html开始，我知道了，他的语言与书籍多么类似，他的排版与我当年写的易语言多么类似\n\n云计算也是现在发展的潮流，尤其是今年疫情期间我被大规模DDoS攻击，这甚至让我对云计算有了更深的认识，没有攻击者，我写不出ArRTC，做不出直播站，做不出云渲染解决方案，今年年初获得了腾讯云top100，优质作者奖，正是因为有这些攻击者们\n![](https://arsrnasite.cn-gd.ufileos.com/1.webp)\n\n服务器的费用到目前为止也有好几万了，但是，一个全新的FaaS架构-Serverless让我在2020年5月份有缘地认识了她，通过学习后，真正开始把网页Serverless化，成本一下从30元每月变到了5元每月，算上CloudFlare的减速服务，一分钱不花，也能享受到优质的网站体验\n\n为什么我要说Serverless那句话呢？建站的目的是网站，网站是传递信息的媒介，传递快慢不重要，重要的是信息是否优质，她能让开发者专注于内容，而不是纠结于服务器和成本，极大提高写码体验\n\n这两年经历了风风雨雨，正是这些风风雨雨见证了我们的成长，未来网站会一直坚持更新下去；html，它陪伴了我初中三年，也陪伴了高中三年，也让我在这个互联网上认识了志同道合的朋友，在此感谢以下开发者对网站提供的大力支持：\n\n网站站长，前端，后端，应用支持：Ar-Sr-Na\n\n技术支持：Miruko，Ar-Sr-Na，WhiteNX，腾讯云\n\n网站移动端优化：Ar-Sr-Na，WhiteNX\n\nServerless架构支持：阿里云，腾讯云\n\n测试，研发：Ar-Sr-Na\n\n数据支持：微软去哦怕\n\n成长支持：所有正在打开这个页面的小伙伴\n\n![](https://res.arsrna.cn/blogs/3-year-birth/ApStaff.jpg)\n\n### 感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！\n\n# 感谢大家的支持！\n","source":"_drafts/3-year-birth.md","raw":"---\ntitle: 建站两周年，运行三周年庆祝\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: www.arsrna.cn\nauthorAbout: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；绿城漫展，使命必达，个人网站www.arsrna.cn\nauthorDesc: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；绿城漫展，使命必达，个人网站www.arsrna.cn\ncategories: 技术\ncomments: true\ndate: 2020-09-12 01:04\ntags:\nkeywords: 网站,建站,庆祝,周年\ndescription:\nindex_img: 'https://res.arsrna.cn/blogs/3-year-birth/DSC04844_sy.jpg'\n---\n还记得当初的主页吗？\n\n![2018](https://i.loli.net/2018/09/09/5b94a94363cc9.png)\n\n还记得当初的ID吗？\n\n![2018id](https://i.loli.net/2018/09/09/5b94a94695e9a.png)\n\n当年那个粗糙的，报纸一般的UI，就是我第一个正式对外发布的第一个网站，并且给了它第一个版本：Beta 0.0\n\n# 艰辛\n\n2018年，当时个人网站已经不是什么值得把弄的东西了，在互联网这么一个庞大的集体中，一个个人网站只不过是海滩上的一颗普通沙子罢了，不足为奇，百度，bilibili等更大的社交网站比个人网站新鲜多了，所以没必要再弄个个人网站了\n\n## 那我为什么要浪费这个时间呢\n\n事情可以从小学微机课说起，当时在大屁股电脑面前用着WindowsXP配着古老的课本，用着微软的FrontPage，老师教我们怎么写出一个简单的网页，并且让其他人都看见\n\n到了初中，网页不再是一个文件，它伴随着图片，音乐，直到高中必修1，我才认识到，原来制作出来的网站，在别人电脑上打不开，如果需要打开，还得配置服务器\n\n### 但这难不倒我\n\n2016年，我学习了html，深入学习css+html，学习了Adobe Dreamweaver\n\n2018年，网站的雏形有了，可是没有载体给他在互联网传播\n\n于是在2018年底我和几个朋友，利用免费主机建了第一个正式对外发布的网站：hqxxsb47.usa3v.net（现在访问不了了）\n\n2018-8-6 网站js，css，html完成\n\n2018-8-8 第一轮测试，开放网页\n\n......\n\nBeta0.1,0.2,0.3......版本一直在不断更新更新再更新，页面越来越多，壁纸站，教程，科普等一系列功能迅速发布\n\n我把网址发给了同学，发给了朋友，发给了当年的老师\n\n# 超越\n\n得到了大家的认可后，我决定搞盘大的，学习PHP，但是需要服务器进行运行，所以，自己在家搞，frp打通网络\n\n于是第一个域名bilibili24749747.wang就诞生了，当然他也与后天到期，我最终选择放弃这个域名\n\n2019年，网站发生了巨大变化，主流的https支持了，ui也改变了，不过我没得保留下当时的截图\n\n19年上旬，因为了解了wordpress，所以建了个个人博客，www.saten.top，现在已经改为www.arsrna.ltd\n\n因为2月份ID改为了Ar-Sr-Na，就注册了个arsrna.cn的域名，发展从此开始\n\n年底UI变换（Release-5.0,6.0......)，功能增加，主页变得越来越漂亮了，长得就像现在这样\n\n![2020](https://res.arsrna.cn/blogs/3-year-birth/QQ%E6%88%AA%E5%9B%BE20200912013349.png)\n\n各种应用飞速发展，我已经无法用语言描述，Serverless，Serverless Framework......\n\n# 初心\n\n为什么要建站？兴趣吗？是的\n\n成本那么高，确定值得？建站的初衷不是为了赚钱，而是自己写点代码，发布到互联网，让此时此刻素未相识的网友点开这个页面，又或许是给人际交往提供一个新的渠道\n\n写网页需要html，css，不仅能对这两门语言有一个了解，同时还学到了云计算相关内容\n\n从第一个html开始，我知道了，他的语言与书籍多么类似，他的排版与我当年写的易语言多么类似\n\n云计算也是现在发展的潮流，尤其是今年疫情期间我被大规模DDoS攻击，这甚至让我对云计算有了更深的认识，没有攻击者，我写不出ArRTC，做不出直播站，做不出云渲染解决方案，今年年初获得了腾讯云top100，优质作者奖，正是因为有这些攻击者们\n![](https://arsrnasite.cn-gd.ufileos.com/1.webp)\n\n服务器的费用到目前为止也有好几万了，但是，一个全新的FaaS架构-Serverless让我在2020年5月份有缘地认识了她，通过学习后，真正开始把网页Serverless化，成本一下从30元每月变到了5元每月，算上CloudFlare的减速服务，一分钱不花，也能享受到优质的网站体验\n\n为什么我要说Serverless那句话呢？建站的目的是网站，网站是传递信息的媒介，传递快慢不重要，重要的是信息是否优质，她能让开发者专注于内容，而不是纠结于服务器和成本，极大提高写码体验\n\n这两年经历了风风雨雨，正是这些风风雨雨见证了我们的成长，未来网站会一直坚持更新下去；html，它陪伴了我初中三年，也陪伴了高中三年，也让我在这个互联网上认识了志同道合的朋友，在此感谢以下开发者对网站提供的大力支持：\n\n网站站长，前端，后端，应用支持：Ar-Sr-Na\n\n技术支持：Miruko，Ar-Sr-Na，WhiteNX，腾讯云\n\n网站移动端优化：Ar-Sr-Na，WhiteNX\n\nServerless架构支持：阿里云，腾讯云\n\n测试，研发：Ar-Sr-Na\n\n数据支持：微软去哦怕\n\n成长支持：所有正在打开这个页面的小伙伴\n\n![](https://res.arsrna.cn/blogs/3-year-birth/ApStaff.jpg)\n\n### 感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！\n\n# 感谢大家的支持！\n","slug":"3-year-birth","published":0,"updated":"2023-01-17T08:55:38.570Z","layout":"post","photos":[],"link":"","_id":"clod0d6ww000ec0ndfx7j44d0","content":"<p>还记得当初的主页吗？</p>\n<p><img src=\"https://i.loli.net/2018/09/09/5b94a94363cc9.png\" alt=\"2018\"></p>\n<p>还记得当初的ID吗？</p>\n<p><img src=\"https://i.loli.net/2018/09/09/5b94a94695e9a.png\" alt=\"2018id\"></p>\n<p>当年那个粗糙的，报纸一般的UI，就是我第一个正式对外发布的第一个网站，并且给了它第一个版本：Beta 0.0</p>\n<h1 id=\"艰辛\"><a href=\"#艰辛\" class=\"headerlink\" title=\"艰辛\"></a>艰辛</h1><p>2018年，当时个人网站已经不是什么值得把弄的东西了，在互联网这么一个庞大的集体中，一个个人网站只不过是海滩上的一颗普通沙子罢了，不足为奇，百度，bilibili等更大的社交网站比个人网站新鲜多了，所以没必要再弄个个人网站了</p>\n<h2 id=\"那我为什么要浪费这个时间呢\"><a href=\"#那我为什么要浪费这个时间呢\" class=\"headerlink\" title=\"那我为什么要浪费这个时间呢\"></a>那我为什么要浪费这个时间呢</h2><p>事情可以从小学微机课说起，当时在大屁股电脑面前用着WindowsXP配着古老的课本，用着微软的FrontPage，老师教我们怎么写出一个简单的网页，并且让其他人都看见</p>\n<p>到了初中，网页不再是一个文件，它伴随着图片，音乐，直到高中必修1，我才认识到，原来制作出来的网站，在别人电脑上打不开，如果需要打开，还得配置服务器</p>\n<h3 id=\"但这难不倒我\"><a href=\"#但这难不倒我\" class=\"headerlink\" title=\"但这难不倒我\"></a>但这难不倒我</h3><p>2016年，我学习了html，深入学习css+html，学习了Adobe Dreamweaver</p>\n<p>2018年，网站的雏形有了，可是没有载体给他在互联网传播</p>\n<p>于是在2018年底我和几个朋友，利用免费主机建了第一个正式对外发布的网站：hqxxsb47.usa3v.net（现在访问不了了）</p>\n<p>2018-8-6 网站js，css，html完成</p>\n<p>2018-8-8 第一轮测试，开放网页</p>\n<p>……</p>\n<p>Beta0.1,0.2,0.3……版本一直在不断更新更新再更新，页面越来越多，壁纸站，教程，科普等一系列功能迅速发布</p>\n<p>我把网址发给了同学，发给了朋友，发给了当年的老师</p>\n<h1 id=\"超越\"><a href=\"#超越\" class=\"headerlink\" title=\"超越\"></a>超越</h1><p>得到了大家的认可后，我决定搞盘大的，学习PHP，但是需要服务器进行运行，所以，自己在家搞，frp打通网络</p>\n<p>于是第一个域名bilibili24749747.wang就诞生了，当然他也与后天到期，我最终选择放弃这个域名</p>\n<p>2019年，网站发生了巨大变化，主流的https支持了，ui也改变了，不过我没得保留下当时的截图</p>\n<p>19年上旬，因为了解了wordpress，所以建了个个人博客，<a href=\"http://www.saten.top,现在已经改为www.arsrna.ltd/\">www.saten.top，现在已经改为www.arsrna.ltd</a></p>\n<p>因为2月份ID改为了Ar-Sr-Na，就注册了个arsrna.cn的域名，发展从此开始</p>\n<p>年底UI变换（Release-5.0,6.0……)，功能增加，主页变得越来越漂亮了，长得就像现在这样</p>\n<p><img src=\"https://res.arsrna.cn/blogs/3-year-birth/QQ%E6%88%AA%E5%9B%BE20200912013349.png\" alt=\"2020\"></p>\n<p>各种应用飞速发展，我已经无法用语言描述，Serverless，Serverless Framework……</p>\n<h1 id=\"初心\"><a href=\"#初心\" class=\"headerlink\" title=\"初心\"></a>初心</h1><p>为什么要建站？兴趣吗？是的</p>\n<p>成本那么高，确定值得？建站的初衷不是为了赚钱，而是自己写点代码，发布到互联网，让此时此刻素未相识的网友点开这个页面，又或许是给人际交往提供一个新的渠道</p>\n<p>写网页需要html，css，不仅能对这两门语言有一个了解，同时还学到了云计算相关内容</p>\n<p>从第一个html开始，我知道了，他的语言与书籍多么类似，他的排版与我当年写的易语言多么类似</p>\n<p>云计算也是现在发展的潮流，尤其是今年疫情期间我被大规模DDoS攻击，这甚至让我对云计算有了更深的认识，没有攻击者，我写不出ArRTC，做不出直播站，做不出云渲染解决方案，今年年初获得了腾讯云top100，优质作者奖，正是因为有这些攻击者们<br><img src=\"https://arsrnasite.cn-gd.ufileos.com/1.webp\"></p>\n<p>服务器的费用到目前为止也有好几万了，但是，一个全新的FaaS架构-Serverless让我在2020年5月份有缘地认识了她，通过学习后，真正开始把网页Serverless化，成本一下从30元每月变到了5元每月，算上CloudFlare的减速服务，一分钱不花，也能享受到优质的网站体验</p>\n<p>为什么我要说Serverless那句话呢？建站的目的是网站，网站是传递信息的媒介，传递快慢不重要，重要的是信息是否优质，她能让开发者专注于内容，而不是纠结于服务器和成本，极大提高写码体验</p>\n<p>这两年经历了风风雨雨，正是这些风风雨雨见证了我们的成长，未来网站会一直坚持更新下去；html，它陪伴了我初中三年，也陪伴了高中三年，也让我在这个互联网上认识了志同道合的朋友，在此感谢以下开发者对网站提供的大力支持：</p>\n<p>网站站长，前端，后端，应用支持：Ar-Sr-Na</p>\n<p>技术支持：Miruko，Ar-Sr-Na，WhiteNX，腾讯云</p>\n<p>网站移动端优化：Ar-Sr-Na，WhiteNX</p>\n<p>Serverless架构支持：阿里云，腾讯云</p>\n<p>测试，研发：Ar-Sr-Na</p>\n<p>数据支持：微软去哦怕</p>\n<p>成长支持：所有正在打开这个页面的小伙伴</p>\n<p><img src=\"https://res.arsrna.cn/blogs/3-year-birth/ApStaff.jpg\"></p>\n<h3 id=\"感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！\"><a href=\"#感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！\" class=\"headerlink\" title=\"感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！\"></a>感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！</h3><h1 id=\"感谢大家的支持！\"><a href=\"#感谢大家的支持！\" class=\"headerlink\" title=\"感谢大家的支持！\"></a>感谢大家的支持！</h1>","site":{"data":{}},"excerpt":"","more":"<p>还记得当初的主页吗？</p>\n<p><img src=\"https://i.loli.net/2018/09/09/5b94a94363cc9.png\" alt=\"2018\"></p>\n<p>还记得当初的ID吗？</p>\n<p><img src=\"https://i.loli.net/2018/09/09/5b94a94695e9a.png\" alt=\"2018id\"></p>\n<p>当年那个粗糙的，报纸一般的UI，就是我第一个正式对外发布的第一个网站，并且给了它第一个版本：Beta 0.0</p>\n<h1 id=\"艰辛\"><a href=\"#艰辛\" class=\"headerlink\" title=\"艰辛\"></a>艰辛</h1><p>2018年，当时个人网站已经不是什么值得把弄的东西了，在互联网这么一个庞大的集体中，一个个人网站只不过是海滩上的一颗普通沙子罢了，不足为奇，百度，bilibili等更大的社交网站比个人网站新鲜多了，所以没必要再弄个个人网站了</p>\n<h2 id=\"那我为什么要浪费这个时间呢\"><a href=\"#那我为什么要浪费这个时间呢\" class=\"headerlink\" title=\"那我为什么要浪费这个时间呢\"></a>那我为什么要浪费这个时间呢</h2><p>事情可以从小学微机课说起，当时在大屁股电脑面前用着WindowsXP配着古老的课本，用着微软的FrontPage，老师教我们怎么写出一个简单的网页，并且让其他人都看见</p>\n<p>到了初中，网页不再是一个文件，它伴随着图片，音乐，直到高中必修1，我才认识到，原来制作出来的网站，在别人电脑上打不开，如果需要打开，还得配置服务器</p>\n<h3 id=\"但这难不倒我\"><a href=\"#但这难不倒我\" class=\"headerlink\" title=\"但这难不倒我\"></a>但这难不倒我</h3><p>2016年，我学习了html，深入学习css+html，学习了Adobe Dreamweaver</p>\n<p>2018年，网站的雏形有了，可是没有载体给他在互联网传播</p>\n<p>于是在2018年底我和几个朋友，利用免费主机建了第一个正式对外发布的网站：hqxxsb47.usa3v.net（现在访问不了了）</p>\n<p>2018-8-6 网站js，css，html完成</p>\n<p>2018-8-8 第一轮测试，开放网页</p>\n<p>……</p>\n<p>Beta0.1,0.2,0.3……版本一直在不断更新更新再更新，页面越来越多，壁纸站，教程，科普等一系列功能迅速发布</p>\n<p>我把网址发给了同学，发给了朋友，发给了当年的老师</p>\n<h1 id=\"超越\"><a href=\"#超越\" class=\"headerlink\" title=\"超越\"></a>超越</h1><p>得到了大家的认可后，我决定搞盘大的，学习PHP，但是需要服务器进行运行，所以，自己在家搞，frp打通网络</p>\n<p>于是第一个域名bilibili24749747.wang就诞生了，当然他也与后天到期，我最终选择放弃这个域名</p>\n<p>2019年，网站发生了巨大变化，主流的https支持了，ui也改变了，不过我没得保留下当时的截图</p>\n<p>19年上旬，因为了解了wordpress，所以建了个个人博客，<a href=\"http://www.saten.top,现在已经改为www.arsrna.ltd/\">www.saten.top，现在已经改为www.arsrna.ltd</a></p>\n<p>因为2月份ID改为了Ar-Sr-Na，就注册了个arsrna.cn的域名，发展从此开始</p>\n<p>年底UI变换（Release-5.0,6.0……)，功能增加，主页变得越来越漂亮了，长得就像现在这样</p>\n<p><img src=\"https://res.arsrna.cn/blogs/3-year-birth/QQ%E6%88%AA%E5%9B%BE20200912013349.png\" alt=\"2020\"></p>\n<p>各种应用飞速发展，我已经无法用语言描述，Serverless，Serverless Framework……</p>\n<h1 id=\"初心\"><a href=\"#初心\" class=\"headerlink\" title=\"初心\"></a>初心</h1><p>为什么要建站？兴趣吗？是的</p>\n<p>成本那么高，确定值得？建站的初衷不是为了赚钱，而是自己写点代码，发布到互联网，让此时此刻素未相识的网友点开这个页面，又或许是给人际交往提供一个新的渠道</p>\n<p>写网页需要html，css，不仅能对这两门语言有一个了解，同时还学到了云计算相关内容</p>\n<p>从第一个html开始，我知道了，他的语言与书籍多么类似，他的排版与我当年写的易语言多么类似</p>\n<p>云计算也是现在发展的潮流，尤其是今年疫情期间我被大规模DDoS攻击，这甚至让我对云计算有了更深的认识，没有攻击者，我写不出ArRTC，做不出直播站，做不出云渲染解决方案，今年年初获得了腾讯云top100，优质作者奖，正是因为有这些攻击者们<br><img src=\"https://arsrnasite.cn-gd.ufileos.com/1.webp\"></p>\n<p>服务器的费用到目前为止也有好几万了，但是，一个全新的FaaS架构-Serverless让我在2020年5月份有缘地认识了她，通过学习后，真正开始把网页Serverless化，成本一下从30元每月变到了5元每月，算上CloudFlare的减速服务，一分钱不花，也能享受到优质的网站体验</p>\n<p>为什么我要说Serverless那句话呢？建站的目的是网站，网站是传递信息的媒介，传递快慢不重要，重要的是信息是否优质，她能让开发者专注于内容，而不是纠结于服务器和成本，极大提高写码体验</p>\n<p>这两年经历了风风雨雨，正是这些风风雨雨见证了我们的成长，未来网站会一直坚持更新下去；html，它陪伴了我初中三年，也陪伴了高中三年，也让我在这个互联网上认识了志同道合的朋友，在此感谢以下开发者对网站提供的大力支持：</p>\n<p>网站站长，前端，后端，应用支持：Ar-Sr-Na</p>\n<p>技术支持：Miruko，Ar-Sr-Na，WhiteNX，腾讯云</p>\n<p>网站移动端优化：Ar-Sr-Na，WhiteNX</p>\n<p>Serverless架构支持：阿里云，腾讯云</p>\n<p>测试，研发：Ar-Sr-Na</p>\n<p>数据支持：微软去哦怕</p>\n<p>成长支持：所有正在打开这个页面的小伙伴</p>\n<p><img src=\"https://res.arsrna.cn/blogs/3-year-birth/ApStaff.jpg\"></p>\n<h3 id=\"感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！\"><a href=\"#感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！\" class=\"headerlink\" title=\"感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！\"></a>感谢所有为我们网站点击过，分享过，浏览过的小伙伴们，未来无论如何，我都会陪着它走下去！因为这是我们的初心！</h3><h1 id=\"感谢大家的支持！\"><a href=\"#感谢大家的支持！\" class=\"headerlink\" title=\"感谢大家的支持！\"></a>感谢大家的支持！</h1>"},{"title":"【年度总结】2022，跳过剧情的一年","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"www.arsrna.cn","authorAbout":"突破计算边界，构筑数字视界，www.arsrna.cn","authorDesc":"突破计算边界，构筑数字视界，www.arsrna.cn","comments":1,"index_img":"https://res.arsrna.cn/images/cast.png","date":"2022-12-24T06:04:00.000Z","keywords":"GPU,云服务器渲染","description":"我想，这才是人类梦想超越极限的真正力量，才是梦想存在的真正意义吧","_content":"2022，我们每一步计划，都以“产品”的形式为大家呈现。\n\n# 2022-1至2022-6\n\n## 新产品发布\n\n基础业务：1\n\n平台业务：4\n\n软件业务：3\n\n函数业务：1\n\n根据问卷调查，来自使用者好评率达到98.07%（208样本无过滤）\n\n最具代表：ArESRGAN图像超分辨率\n\n里程碑：ArBlender集群渲染管理器\n\n软件著作权+1件，作品著作权+4件\n\n产品开发投入时长300+小时\n\n解决方案包括音视频等\n\n我们仍然保持前进的动力，保持创作的热情。与你我共筑数字世界\n\n2022 计算赋能无限\n\n# 2022-7至2022-12\n\n## 新产品发布\n\n基础业务：1\n\n平台业务：4\n\n软件业务：8\n\n函数业务：3\n\n解决方案型：3\n\n下半年最具有代表性产品：ArESRGAN/Video图像/视频超分辨率\n\n里程碑业务：ArLSIA 直播流增强\n\n产品开发投入时长100+小时。下半年，我们实现了AI从无到有，实现了高可用，低成本行业级的解决方案，为无数开发者在计算领域实现瓶颈的突破。\n\n透过RTC实时音视频通话，我们感受到了千里之外的异域风情，从小小的屏幕，透过千里屏障，与我们“谈心”，实现了“通联你我”。半夜，我们在构筑与数字世界连接的桥梁，“梦境”成为“现实”，追求创新，追求完美，是我们的使命，用代码分享与世界的热情，编制着美轮美奂的世界，「改变世界」是我们的梦想。\n\n「Powered by Ar-Sr-Na」这么一串不到30字节的字符，在每一个应用，每一个控制台出现的时候，正是我们实力的证明，无需过多赘述，它是一面镜子，投射出我们的热情。未来，它会更光亮，更激情！\n\n# AI，未知的前方\n\n今年开拓最大的领域正式人工智能-AI。通过人工智能神经网络，可以解放人脑算力，转由机器，繁琐复杂的工作变得轻松高效\n\n## 图像与科技\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/8ezyjbqgs1.png)\n\n修复模糊图片，全部交由人工处理的话，将会花费大量人力，重绘一张图，而且相当耗时，效果也不一定100%还原\n\n借助SRGAN网络，一张模糊的插图，只需要GPU部分算力，就能还原。\n\n技术往往不是特立孤行的，它可以联动其他技术，例如图像超分辨率，我们可以把视频分割成一帧帧的序列，然后超分辨率，这样我们就得到了视频超分辨率技术。这种想法，正式今年SaaS产品中占比最大的。每一个小产品是一个基础服务IaaS，通过结合，使得它们围成生态圈，实现更多功能\n\n例如，通过美颜自拍照，再进行动漫化，再进行AI重绘，超分辨率，是不是就得到了一张极高质量的自拍照？\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/3g9pwpy3t0.jpg)\n\n以下例子来源于个人：\n\n想拍一套cos，但是经济有限，没办法买完一整套，就算买完一整套了，因形体的限制没办法达到预期，如果使用人脸试装，人脸变换，人体分析等一系列技术对原图缺陷进行改良，通过改良前后区别的分析（图像分析）来获得化妆等方面的建议，不仅能提升自我对cos领域的认知，还能从中学到技术而不用麻烦他人。\n\n再放开点想，超分辨率需要原图，原图需要人类的智慧来绘制，如果我们从源头开始一直到成图，都由AI处理，会发生什么？\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/brxigu2nsv.png)\n\n没错，这就是全栈。\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/usnp2fc6oy.png)\n\n从图片生成，到图片超分辨率还原，再到图像分类，由此可以批量短时间获得一系列的图集（考虑到伦理问题，生成的作品并非自然人行为，不具有作品著作权）\n\n## 再想开点\n\n如果实在开发不出有意思的东西，那就说明你想的还不够开。\n\n今年，ChatGPT，NovelAI，VITS等产品异常火爆，如果我们把三者结合起来，那岂不是...\n\n不知道屏幕前的各位有没有一种需求（尤其是单身用户（没指谁哈））谁都或多或少经历过emo，如果遇到个不理解你的亲友，你向ta倾诉ta反泼冷水那就雪上加霜了，所以我们可不可以利用AI给自己安慰？\n\nChatGPT，你向她倾诉，她安慰你，通过VITS语音合成，选择你的心灵寄托（必须得是爱莉希雅！）\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/abchkb7gdw.jpg)\n\n再通过NovelAI，渲染出“她”的形象\n\n如此一来，冰冷机械就能创造温度。这就是AI的力量\n\n_AI的力量远超想象，我们做的，也只是有机结合而已_\n\n# 数字与成长\n\n我现在如果放一大串介绍给你，或许有些枯燥：\n\n> 超低延迟，全球可控200msTTL，4k60帧极高画质，低码率高分辨率，自研算法，在无需安装任何插件或者第三方的软件的情况下，创建点对点（Peer-to-Peer）的数据分享和电话会议成为可能......\n\n其实，也就是普通得再不能普通的一个视频通话罢了\n\n孤独，是一种无奈的痛苦，很幸运，你我都能彼此在此交流灵魂。\n\n以下故事来自于某站长（出于隐私，信息已脱敏）\n\n> 我是一位很普通，普通得再不能普通的个人网站的站长，平时爱写一些文章，受出生家庭的影响，父母总是对弟弟很偏爱而孤立我，什么都不支持，什么都不鼓励，每天消极地过着，我非常希望有人能和我聊一聊，哪怕仅仅只是简单的技术交流，而不是忍着一口否认。\n\nta来自我的主站下方友情链接的一位站长，通过申请问卷，我找到了ta\n\n如果只是用简单的会议，通话形式，未免有一些牵强\n\n于是我使用了去年开发的一款互动视频，能够分享视频的同时交流互动\n\n> 感谢你做的这么一部短片，通过相似回忆让我产生了共鸣。也感谢你分享的故事，我理解了何为成长，何为付出，何为放弃。\n\n一次对话，让我们交换彼此心灵\n\n一次快门声，这一刻的时光将被凝结，它凝结的，或许是挫折时的叹气，成功时的喜悦，亦或是一段普通的对话，一次美好的旅行...这都是属于你的故事，它记录着每一秒的成长。\n\n「这是我宝宝出生的第1天，真可爱」数据，看见了生命的起始\n\n「好，谢谢你的帮助」记录着每一个平凡的瞬间\n\n「就解决了吧，前端拉到数据了」见证着每一次困难的突破\n\n「高考加油！」鼓舞着每一个人努力向前\n\n一条录像带，一本日记，一张光盘，每时每刻，你都在记录着属于你的故事，它们共同塑造了一个数字的「你」\n\n「万千的轨迹交织，萦绕，由此诞下百花齐放的奇迹。」\n\n数据是虚拟的，但虚拟，不意味着虚构，它可以让你产生共鸣\n\n数据，虽是「数」，却能构成万千世界，发现万般精彩\n\n你的成长，你的回忆，浓缩成一段0和1序列，数字，描绘多姿多彩的平行世界，叙写着丰富多彩的「你」\n\n# 其它领域\n\n## 设计与生活\n\n截止至2022年，我国有8500+万残疾人口，与其仅看这个数字，不如贴近他们的生活\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/qxi4q97e0d.png)\n\n过马路，对于我们这些健康的人来说是十分轻松的一件事，但是对于他们，可能听不见汽车的鸣笛，看不见信号灯的指示，甚至没办法独立穿过几米的斑马线。\n\n读清楚这一些字符，对于我们来说是再简单不过的事情\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/5see9tkqxu.png)\n\n> 我很热爱计算机技术，我也希望像你们一样能看清眼前的屏幕\n\n但是视障使他没办法像我们一样正常阅读电脑屏幕上的字\n\n如果仅仅是放大字体大小，阅读屏幕就能称为“无障碍”的话，或许有些牵强，试问一下，给一位程序员教科书般地读代码，是不是显得很生硬，他们需要的，不仅仅是能看见字，而是能如同我们健康人一般理解，感同身受这些字，从字里行间体会出感情，体会出共鸣\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/umj1009i1d.png)\n\n很幸运，我们有这样的机会开发，作为一位前端开发者，我们有机会接触与用户交互最直接的部分\n\n我们做的，就是把复杂的东西直观化，突出核心的问题\n\n很高兴，html这门语言，本身设计有无障碍aria等特性标签，能让我们更加关注特殊群体，并且针对阅读模式与正常模式的场景设计了两种不同的思路\n\n![aria属性](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/1gfajw1022.png)\n\n例如这个按钮\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/fm25w4pkh0.png)\n\n我们阅读到的信息就是点击它就会进入到教程页面；对于残障人士来说，我们会对这个按钮解释说明：一个可以操作的蓝色按钮，点击之后会进入教程页面，下一个按钮为xxx，上一个按钮为xxx\n\n![设计风格](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/i5zdfmxxzg.png)\n\n![清晰的思路](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/8efrd1p4gw.png)\n\n我们不追求花里胡哨的动画，冗余复杂的功能，仅仅是通过最基本的“听说读写”来方便操作，一个按键就能获得需要的功能\n\n![直达的体验](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/vuckwigo5w.png)\n\n![统一的风格](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/0s3371zi5k.png)\n\n他们应当与我们有相等的体验，应当与我们平等地生活；适老化，无障碍化不仅仅只是一句口号，反观某些国产流氓软件，推出无数功能，但这些功能真正服务到我们了吗，何况残障人士，作为开发者，设计者，我们要做的，不是一味地开发，而是真正融入用户群体，真正体验我们所设计的东西是否真正的“有用”\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/984awbihem.png)\n\n## 保护野生动物\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/7xfppt6czx.png)\n\n濒危动物是一项珍贵的、不可替代的、可再生的自然资源，每个物种都是生态系统中的重要一员，通过食物链的关系，物种之间起到互相依存、互相牵制的作用。一旦食物链的某一环节出现问题，整个生态系统的平衡就会受到严重影响。\n\n今年2月，我们对这一从未接触过的领域进行了调研，通过问卷，咨询等方式，收集了价值数据\n\n![设计风格](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/2ibugsjmgg.png)\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/os6kgz8mmv.png)\n\n来自发起者 Ar-Sr-Na\n\n> 野生动物，它们是人类的伙伴，是生态系统不可缺失的一部分，没有它们，自然界将失去色彩，保护野生动物，刻不容缓，我们也必须重视野生动物的生存环境，让它们走出课本的插图，长长久久地生存在地球上，陪伴着人类度过，生命是平等的，野生动物的生命就是人类的生命，伤害它们相当于伤害自己。我同时在调查中也发现，99%以上的作答者，都是对野生动物同情，将命运联系在一起的，并且也支持所有保护野生动物的事业，我非常希望将来一天，消失的不是濒危动物，而是“濒危”，保护野生濒危动物，任重而道远！\n\n参与者 邓\\*\\*\n\n> 我更加深刻地了解到动物与我们是一样的。我们都生活在地球村这个大家庭中，我们应该和睦相处，各尽所职，共同维护我们生活的环境。这样我们的未来才更加的美好。同时，人类与自然界关系正趋于不协调。要知道，生命是平等的，我们和自然界是整体。如果生态平衡被破坏，那么，人类最终会毁掉自己。所以我们要拯救那些濒危动物，爱护身边的动物，爱他们就是爱自己。动物与我们一起在地球上生活了这么多年，他们在地球上都担当者重要的位置，维持着自然界微妙的平衡。人类的肆意改造地球，已严重威胁到地球上的各种生命。人类如此妄为无异于自掘坟墓，保护濒危动物，是我们人类义不容辞的事。\n\n参与者 莫\\*\\*\n\n> 频危动物不仅仅出现在电视中书籍中，更存在于我们的生活之中。让我真正意识到它可能会在未来的某一天中消失在我们的眼前，它们不像其他的生物，有成千上万的同伴不用担心自己的后代会越来越少甚至消失。由于环境的改变同伴的极速减少，使它们的数量难以得到增加。因此我们应该多加关注频危动物，对它们尽一份自己的力量，保护它们让它们的数量得到增加。我们可以参加一些公益活动，例如微博上的熊猫守护者活动，帮助熊猫增加更多的保护地，增加更多的粮食，让它们能安心的生活在野外保护区内。让大自然的物种仍然保持丰富的情态，所以我们要多为频危动物献出一份力量，对频危动物现状加以宣传，成为保护频危动物的一份子！\n\n# 经历\n\n由于一些原因，腾云先锋TDP，这一年经历了离别重组，作为核心成员之一，我感到失望，不过在众多力量之下最终整个团队完美保留了下来。\n\n一个个熟悉的名字：king、若海、tanger、幻影龙王、jwj，tan90°......\n\n一年前我们因缘分而来到TDP，因兴趣聚集于此，不断为产品建言献策\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/53o5v3mz5g.png)\n\n这个熟悉的ID就是我啦\n\n今年下半年，因为身体原因，没有办法实现高产，在照顾自己方面，还是有点小“bug”，怪自己没把自己的程序写好吧...不过在这里劝大家不要熬夜，早起半小时比晚睡3小时效率要高得多得多，“夜班”能见到的，是更黑的夜晚，但“早班”能见到黎明，能见到清晨的露珠，远比熬夜来得舒服\n\n因为安排，今年做的很多事情都非常的商业化，包括做视频，总感觉有什么东西限制了我的灵感\n\n不过好在，前端这个领域我可以自由发挥\n\n# 送给自己\n\n成长，不是被一年一年分割，而是在一年一年的试炼中，不断突破自我\n\n> 你终将跨过曾经无法跨越的道路，无论一切如何，奇迹终将发生\n\n没错，今年的关键词，正是**奇迹**\n\n2022，已经告一段落，今年的大大小小目标也已经完成，我实现了我的想法，体验未来，或者，编写未来！让未来，现在就来！\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/mwuplgs142.png)\n\n2022 突破计算边界，构筑数字视界，计算赋能无限\n\n# 来自ta们\n\ncoser 深林\n\n> 谢谢\n\ncoser \\*\\*\\*(不愿透露cn)\n\n> 老师的大片，666\n\n翊沫\n\n> 非常好；通过全新的、更精致的照片优化技术实现更高质量的图像放大和缩小效果\n\nxiandoubao\n\n> 非常多实用的项目 很多的技术创新 希望感兴趣的都能参与进来一起\n\ncoser 9762(我自己)\n\n> c圈底层，就是我了\n\nAceef\n\n> 非常好用！ 嘎嘎好评！他能将不清晰的图片整清晰 很不错！\n\n？？\n\n> 慢慢来，发挥自己的特长和兴趣。希望可以多增加一些，绘画教程，动画制作，动画影评。持续关注，有前途，加油干\n\n\\*\\*（未留ID）\n\n> 很喜欢up你的科普风格，祝您学业有成\n\n# 送给2023，与你们\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/124ygx3abk.png)\n\n失败常有，但更多的，是失败后的成功。\n\n当今天提到行业领先，超低成本，超高性能时，估计大家只会想到两个字：吹牛。我知道，这也没错，这确实没什么了不起的，因为这只是一个开始\n\n作为一位开发者，一位普普通通的开发者，做过最高兴的事情，莫过于脑中的想法成功在物质上实现了，虽然它很曲折，但这样的曲折更有意义\n\n所有的成就，离不开大家的共同努力，也离不开在屏幕面前，不知名字，但却在默默支持着的你\n\n当我一次次看到我的ID，一个大项目有我的名字，腾讯云TDP大群看到每日排行榜，文章上推荐作者是我时\n\n虽然它不被人铭记，或者只出现短短几秒，内心依然无比激动，它是实力的证明，是身份的代表\n\n看到它，就像看到了镜中的自己，此时此刻，它就是我，它被我铭记就足够了\n\n一个人，能够在未知艰险的探索中，无比艰难的条件下，保持前行，并不断突破\n\n让热情的烈火越燃越高，甚至突破了黑暗，突破了未知，同时，突破了想象的边界\n\n我想，这才是人类梦想超越极限的真正力量，才是梦想存在的真正意义吧\n\n---\n\n此致\nAr-Sr-Na\n2022-12-12\n","source":"_drafts/AS2022.md","raw":"---\ntitle: 【年度总结】2022，跳过剧情的一年\nauthor: Ar-Sr-Na\navatar: https://res.arsrna.cn/icon2.jpg\nauthorLink: www.arsrna.cn\nauthorAbout: 突破计算边界，构筑数字视界，www.arsrna.cn\nauthorDesc: 突破计算边界，构筑数字视界，www.arsrna.cn\ncategories: 年度总结\ncomments: true\nindex_img: https://res.arsrna.cn/images/cast.png\ndate: 2022-12-24 14:04\ntags: 年度总结\nkeywords: GPU,云服务器渲染\ndescription: 我想，这才是人类梦想超越极限的真正力量，才是梦想存在的真正意义吧\n---\n2022，我们每一步计划，都以“产品”的形式为大家呈现。\n\n# 2022-1至2022-6\n\n## 新产品发布\n\n基础业务：1\n\n平台业务：4\n\n软件业务：3\n\n函数业务：1\n\n根据问卷调查，来自使用者好评率达到98.07%（208样本无过滤）\n\n最具代表：ArESRGAN图像超分辨率\n\n里程碑：ArBlender集群渲染管理器\n\n软件著作权+1件，作品著作权+4件\n\n产品开发投入时长300+小时\n\n解决方案包括音视频等\n\n我们仍然保持前进的动力，保持创作的热情。与你我共筑数字世界\n\n2022 计算赋能无限\n\n# 2022-7至2022-12\n\n## 新产品发布\n\n基础业务：1\n\n平台业务：4\n\n软件业务：8\n\n函数业务：3\n\n解决方案型：3\n\n下半年最具有代表性产品：ArESRGAN/Video图像/视频超分辨率\n\n里程碑业务：ArLSIA 直播流增强\n\n产品开发投入时长100+小时。下半年，我们实现了AI从无到有，实现了高可用，低成本行业级的解决方案，为无数开发者在计算领域实现瓶颈的突破。\n\n透过RTC实时音视频通话，我们感受到了千里之外的异域风情，从小小的屏幕，透过千里屏障，与我们“谈心”，实现了“通联你我”。半夜，我们在构筑与数字世界连接的桥梁，“梦境”成为“现实”，追求创新，追求完美，是我们的使命，用代码分享与世界的热情，编制着美轮美奂的世界，「改变世界」是我们的梦想。\n\n「Powered by Ar-Sr-Na」这么一串不到30字节的字符，在每一个应用，每一个控制台出现的时候，正是我们实力的证明，无需过多赘述，它是一面镜子，投射出我们的热情。未来，它会更光亮，更激情！\n\n# AI，未知的前方\n\n今年开拓最大的领域正式人工智能-AI。通过人工智能神经网络，可以解放人脑算力，转由机器，繁琐复杂的工作变得轻松高效\n\n## 图像与科技\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/8ezyjbqgs1.png)\n\n修复模糊图片，全部交由人工处理的话，将会花费大量人力，重绘一张图，而且相当耗时，效果也不一定100%还原\n\n借助SRGAN网络，一张模糊的插图，只需要GPU部分算力，就能还原。\n\n技术往往不是特立孤行的，它可以联动其他技术，例如图像超分辨率，我们可以把视频分割成一帧帧的序列，然后超分辨率，这样我们就得到了视频超分辨率技术。这种想法，正式今年SaaS产品中占比最大的。每一个小产品是一个基础服务IaaS，通过结合，使得它们围成生态圈，实现更多功能\n\n例如，通过美颜自拍照，再进行动漫化，再进行AI重绘，超分辨率，是不是就得到了一张极高质量的自拍照？\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/3g9pwpy3t0.jpg)\n\n以下例子来源于个人：\n\n想拍一套cos，但是经济有限，没办法买完一整套，就算买完一整套了，因形体的限制没办法达到预期，如果使用人脸试装，人脸变换，人体分析等一系列技术对原图缺陷进行改良，通过改良前后区别的分析（图像分析）来获得化妆等方面的建议，不仅能提升自我对cos领域的认知，还能从中学到技术而不用麻烦他人。\n\n再放开点想，超分辨率需要原图，原图需要人类的智慧来绘制，如果我们从源头开始一直到成图，都由AI处理，会发生什么？\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/brxigu2nsv.png)\n\n没错，这就是全栈。\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/usnp2fc6oy.png)\n\n从图片生成，到图片超分辨率还原，再到图像分类，由此可以批量短时间获得一系列的图集（考虑到伦理问题，生成的作品并非自然人行为，不具有作品著作权）\n\n## 再想开点\n\n如果实在开发不出有意思的东西，那就说明你想的还不够开。\n\n今年，ChatGPT，NovelAI，VITS等产品异常火爆，如果我们把三者结合起来，那岂不是...\n\n不知道屏幕前的各位有没有一种需求（尤其是单身用户（没指谁哈））谁都或多或少经历过emo，如果遇到个不理解你的亲友，你向ta倾诉ta反泼冷水那就雪上加霜了，所以我们可不可以利用AI给自己安慰？\n\nChatGPT，你向她倾诉，她安慰你，通过VITS语音合成，选择你的心灵寄托（必须得是爱莉希雅！）\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/abchkb7gdw.jpg)\n\n再通过NovelAI，渲染出“她”的形象\n\n如此一来，冰冷机械就能创造温度。这就是AI的力量\n\n_AI的力量远超想象，我们做的，也只是有机结合而已_\n\n# 数字与成长\n\n我现在如果放一大串介绍给你，或许有些枯燥：\n\n> 超低延迟，全球可控200msTTL，4k60帧极高画质，低码率高分辨率，自研算法，在无需安装任何插件或者第三方的软件的情况下，创建点对点（Peer-to-Peer）的数据分享和电话会议成为可能......\n\n其实，也就是普通得再不能普通的一个视频通话罢了\n\n孤独，是一种无奈的痛苦，很幸运，你我都能彼此在此交流灵魂。\n\n以下故事来自于某站长（出于隐私，信息已脱敏）\n\n> 我是一位很普通，普通得再不能普通的个人网站的站长，平时爱写一些文章，受出生家庭的影响，父母总是对弟弟很偏爱而孤立我，什么都不支持，什么都不鼓励，每天消极地过着，我非常希望有人能和我聊一聊，哪怕仅仅只是简单的技术交流，而不是忍着一口否认。\n\nta来自我的主站下方友情链接的一位站长，通过申请问卷，我找到了ta\n\n如果只是用简单的会议，通话形式，未免有一些牵强\n\n于是我使用了去年开发的一款互动视频，能够分享视频的同时交流互动\n\n> 感谢你做的这么一部短片，通过相似回忆让我产生了共鸣。也感谢你分享的故事，我理解了何为成长，何为付出，何为放弃。\n\n一次对话，让我们交换彼此心灵\n\n一次快门声，这一刻的时光将被凝结，它凝结的，或许是挫折时的叹气，成功时的喜悦，亦或是一段普通的对话，一次美好的旅行...这都是属于你的故事，它记录着每一秒的成长。\n\n「这是我宝宝出生的第1天，真可爱」数据，看见了生命的起始\n\n「好，谢谢你的帮助」记录着每一个平凡的瞬间\n\n「就解决了吧，前端拉到数据了」见证着每一次困难的突破\n\n「高考加油！」鼓舞着每一个人努力向前\n\n一条录像带，一本日记，一张光盘，每时每刻，你都在记录着属于你的故事，它们共同塑造了一个数字的「你」\n\n「万千的轨迹交织，萦绕，由此诞下百花齐放的奇迹。」\n\n数据是虚拟的，但虚拟，不意味着虚构，它可以让你产生共鸣\n\n数据，虽是「数」，却能构成万千世界，发现万般精彩\n\n你的成长，你的回忆，浓缩成一段0和1序列，数字，描绘多姿多彩的平行世界，叙写着丰富多彩的「你」\n\n# 其它领域\n\n## 设计与生活\n\n截止至2022年，我国有8500+万残疾人口，与其仅看这个数字，不如贴近他们的生活\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/qxi4q97e0d.png)\n\n过马路，对于我们这些健康的人来说是十分轻松的一件事，但是对于他们，可能听不见汽车的鸣笛，看不见信号灯的指示，甚至没办法独立穿过几米的斑马线。\n\n读清楚这一些字符，对于我们来说是再简单不过的事情\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/5see9tkqxu.png)\n\n> 我很热爱计算机技术，我也希望像你们一样能看清眼前的屏幕\n\n但是视障使他没办法像我们一样正常阅读电脑屏幕上的字\n\n如果仅仅是放大字体大小，阅读屏幕就能称为“无障碍”的话，或许有些牵强，试问一下，给一位程序员教科书般地读代码，是不是显得很生硬，他们需要的，不仅仅是能看见字，而是能如同我们健康人一般理解，感同身受这些字，从字里行间体会出感情，体会出共鸣\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/umj1009i1d.png)\n\n很幸运，我们有这样的机会开发，作为一位前端开发者，我们有机会接触与用户交互最直接的部分\n\n我们做的，就是把复杂的东西直观化，突出核心的问题\n\n很高兴，html这门语言，本身设计有无障碍aria等特性标签，能让我们更加关注特殊群体，并且针对阅读模式与正常模式的场景设计了两种不同的思路\n\n![aria属性](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/1gfajw1022.png)\n\n例如这个按钮\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/fm25w4pkh0.png)\n\n我们阅读到的信息就是点击它就会进入到教程页面；对于残障人士来说，我们会对这个按钮解释说明：一个可以操作的蓝色按钮，点击之后会进入教程页面，下一个按钮为xxx，上一个按钮为xxx\n\n![设计风格](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/i5zdfmxxzg.png)\n\n![清晰的思路](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/8efrd1p4gw.png)\n\n我们不追求花里胡哨的动画，冗余复杂的功能，仅仅是通过最基本的“听说读写”来方便操作，一个按键就能获得需要的功能\n\n![直达的体验](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/vuckwigo5w.png)\n\n![统一的风格](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/0s3371zi5k.png)\n\n他们应当与我们有相等的体验，应当与我们平等地生活；适老化，无障碍化不仅仅只是一句口号，反观某些国产流氓软件，推出无数功能，但这些功能真正服务到我们了吗，何况残障人士，作为开发者，设计者，我们要做的，不是一味地开发，而是真正融入用户群体，真正体验我们所设计的东西是否真正的“有用”\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/984awbihem.png)\n\n## 保护野生动物\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/7xfppt6czx.png)\n\n濒危动物是一项珍贵的、不可替代的、可再生的自然资源，每个物种都是生态系统中的重要一员，通过食物链的关系，物种之间起到互相依存、互相牵制的作用。一旦食物链的某一环节出现问题，整个生态系统的平衡就会受到严重影响。\n\n今年2月，我们对这一从未接触过的领域进行了调研，通过问卷，咨询等方式，收集了价值数据\n\n![设计风格](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/2ibugsjmgg.png)\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/os6kgz8mmv.png)\n\n来自发起者 Ar-Sr-Na\n\n> 野生动物，它们是人类的伙伴，是生态系统不可缺失的一部分，没有它们，自然界将失去色彩，保护野生动物，刻不容缓，我们也必须重视野生动物的生存环境，让它们走出课本的插图，长长久久地生存在地球上，陪伴着人类度过，生命是平等的，野生动物的生命就是人类的生命，伤害它们相当于伤害自己。我同时在调查中也发现，99%以上的作答者，都是对野生动物同情，将命运联系在一起的，并且也支持所有保护野生动物的事业，我非常希望将来一天，消失的不是濒危动物，而是“濒危”，保护野生濒危动物，任重而道远！\n\n参与者 邓\\*\\*\n\n> 我更加深刻地了解到动物与我们是一样的。我们都生活在地球村这个大家庭中，我们应该和睦相处，各尽所职，共同维护我们生活的环境。这样我们的未来才更加的美好。同时，人类与自然界关系正趋于不协调。要知道，生命是平等的，我们和自然界是整体。如果生态平衡被破坏，那么，人类最终会毁掉自己。所以我们要拯救那些濒危动物，爱护身边的动物，爱他们就是爱自己。动物与我们一起在地球上生活了这么多年，他们在地球上都担当者重要的位置，维持着自然界微妙的平衡。人类的肆意改造地球，已严重威胁到地球上的各种生命。人类如此妄为无异于自掘坟墓，保护濒危动物，是我们人类义不容辞的事。\n\n参与者 莫\\*\\*\n\n> 频危动物不仅仅出现在电视中书籍中，更存在于我们的生活之中。让我真正意识到它可能会在未来的某一天中消失在我们的眼前，它们不像其他的生物，有成千上万的同伴不用担心自己的后代会越来越少甚至消失。由于环境的改变同伴的极速减少，使它们的数量难以得到增加。因此我们应该多加关注频危动物，对它们尽一份自己的力量，保护它们让它们的数量得到增加。我们可以参加一些公益活动，例如微博上的熊猫守护者活动，帮助熊猫增加更多的保护地，增加更多的粮食，让它们能安心的生活在野外保护区内。让大自然的物种仍然保持丰富的情态，所以我们要多为频危动物献出一份力量，对频危动物现状加以宣传，成为保护频危动物的一份子！\n\n# 经历\n\n由于一些原因，腾云先锋TDP，这一年经历了离别重组，作为核心成员之一，我感到失望，不过在众多力量之下最终整个团队完美保留了下来。\n\n一个个熟悉的名字：king、若海、tanger、幻影龙王、jwj，tan90°......\n\n一年前我们因缘分而来到TDP，因兴趣聚集于此，不断为产品建言献策\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/53o5v3mz5g.png)\n\n这个熟悉的ID就是我啦\n\n今年下半年，因为身体原因，没有办法实现高产，在照顾自己方面，还是有点小“bug”，怪自己没把自己的程序写好吧...不过在这里劝大家不要熬夜，早起半小时比晚睡3小时效率要高得多得多，“夜班”能见到的，是更黑的夜晚，但“早班”能见到黎明，能见到清晨的露珠，远比熬夜来得舒服\n\n因为安排，今年做的很多事情都非常的商业化，包括做视频，总感觉有什么东西限制了我的灵感\n\n不过好在，前端这个领域我可以自由发挥\n\n# 送给自己\n\n成长，不是被一年一年分割，而是在一年一年的试炼中，不断突破自我\n\n> 你终将跨过曾经无法跨越的道路，无论一切如何，奇迹终将发生\n\n没错，今年的关键词，正是**奇迹**\n\n2022，已经告一段落，今年的大大小小目标也已经完成，我实现了我的想法，体验未来，或者，编写未来！让未来，现在就来！\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/mwuplgs142.png)\n\n2022 突破计算边界，构筑数字视界，计算赋能无限\n\n# 来自ta们\n\ncoser 深林\n\n> 谢谢\n\ncoser \\*\\*\\*(不愿透露cn)\n\n> 老师的大片，666\n\n翊沫\n\n> 非常好；通过全新的、更精致的照片优化技术实现更高质量的图像放大和缩小效果\n\nxiandoubao\n\n> 非常多实用的项目 很多的技术创新 希望感兴趣的都能参与进来一起\n\ncoser 9762(我自己)\n\n> c圈底层，就是我了\n\nAceef\n\n> 非常好用！ 嘎嘎好评！他能将不清晰的图片整清晰 很不错！\n\n？？\n\n> 慢慢来，发挥自己的特长和兴趣。希望可以多增加一些，绘画教程，动画制作，动画影评。持续关注，有前途，加油干\n\n\\*\\*（未留ID）\n\n> 很喜欢up你的科普风格，祝您学业有成\n\n# 送给2023，与你们\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/124ygx3abk.png)\n\n失败常有，但更多的，是失败后的成功。\n\n当今天提到行业领先，超低成本，超高性能时，估计大家只会想到两个字：吹牛。我知道，这也没错，这确实没什么了不起的，因为这只是一个开始\n\n作为一位开发者，一位普普通通的开发者，做过最高兴的事情，莫过于脑中的想法成功在物质上实现了，虽然它很曲折，但这样的曲折更有意义\n\n所有的成就，离不开大家的共同努力，也离不开在屏幕面前，不知名字，但却在默默支持着的你\n\n当我一次次看到我的ID，一个大项目有我的名字，腾讯云TDP大群看到每日排行榜，文章上推荐作者是我时\n\n虽然它不被人铭记，或者只出现短短几秒，内心依然无比激动，它是实力的证明，是身份的代表\n\n看到它，就像看到了镜中的自己，此时此刻，它就是我，它被我铭记就足够了\n\n一个人，能够在未知艰险的探索中，无比艰难的条件下，保持前行，并不断突破\n\n让热情的烈火越燃越高，甚至突破了黑暗，突破了未知，同时，突破了想象的边界\n\n我想，这才是人类梦想超越极限的真正力量，才是梦想存在的真正意义吧\n\n---\n\n此致\nAr-Sr-Na\n2022-12-12\n","slug":"AS2022","published":0,"updated":"2023-01-17T08:55:38.571Z","layout":"post","photos":[],"link":"","_id":"clod0d6wz000ic0nda0gcedjf","content":"<p>2022，我们每一步计划，都以“产品”的形式为大家呈现。</p>\n<h1 id=\"2022-1至2022-6\"><a href=\"#2022-1至2022-6\" class=\"headerlink\" title=\"2022-1至2022-6\"></a>2022-1至2022-6</h1><h2 id=\"新产品发布\"><a href=\"#新产品发布\" class=\"headerlink\" title=\"新产品发布\"></a>新产品发布</h2><p>基础业务：1</p>\n<p>平台业务：4</p>\n<p>软件业务：3</p>\n<p>函数业务：1</p>\n<p>根据问卷调查，来自使用者好评率达到98.07%（208样本无过滤）</p>\n<p>最具代表：ArESRGAN图像超分辨率</p>\n<p>里程碑：ArBlender集群渲染管理器</p>\n<p>软件著作权+1件，作品著作权+4件</p>\n<p>产品开发投入时长300+小时</p>\n<p>解决方案包括音视频等</p>\n<p>我们仍然保持前进的动力，保持创作的热情。与你我共筑数字世界</p>\n<p>2022 计算赋能无限</p>\n<h1 id=\"2022-7至2022-12\"><a href=\"#2022-7至2022-12\" class=\"headerlink\" title=\"2022-7至2022-12\"></a>2022-7至2022-12</h1><h2 id=\"新产品发布-1\"><a href=\"#新产品发布-1\" class=\"headerlink\" title=\"新产品发布\"></a>新产品发布</h2><p>基础业务：1</p>\n<p>平台业务：4</p>\n<p>软件业务：8</p>\n<p>函数业务：3</p>\n<p>解决方案型：3</p>\n<p>下半年最具有代表性产品：ArESRGAN&#x2F;Video图像&#x2F;视频超分辨率</p>\n<p>里程碑业务：ArLSIA 直播流增强</p>\n<p>产品开发投入时长100+小时。下半年，我们实现了AI从无到有，实现了高可用，低成本行业级的解决方案，为无数开发者在计算领域实现瓶颈的突破。</p>\n<p>透过RTC实时音视频通话，我们感受到了千里之外的异域风情，从小小的屏幕，透过千里屏障，与我们“谈心”，实现了“通联你我”。半夜，我们在构筑与数字世界连接的桥梁，“梦境”成为“现实”，追求创新，追求完美，是我们的使命，用代码分享与世界的热情，编制着美轮美奂的世界，「改变世界」是我们的梦想。</p>\n<p>「Powered by Ar-Sr-Na」这么一串不到30字节的字符，在每一个应用，每一个控制台出现的时候，正是我们实力的证明，无需过多赘述，它是一面镜子，投射出我们的热情。未来，它会更光亮，更激情！</p>\n<h1 id=\"AI，未知的前方\"><a href=\"#AI，未知的前方\" class=\"headerlink\" title=\"AI，未知的前方\"></a>AI，未知的前方</h1><p>今年开拓最大的领域正式人工智能-AI。通过人工智能神经网络，可以解放人脑算力，转由机器，繁琐复杂的工作变得轻松高效</p>\n<h2 id=\"图像与科技\"><a href=\"#图像与科技\" class=\"headerlink\" title=\"图像与科技\"></a>图像与科技</h2><p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/8ezyjbqgs1.png\"></p>\n<p>修复模糊图片，全部交由人工处理的话，将会花费大量人力，重绘一张图，而且相当耗时，效果也不一定100%还原</p>\n<p>借助SRGAN网络，一张模糊的插图，只需要GPU部分算力，就能还原。</p>\n<p>技术往往不是特立孤行的，它可以联动其他技术，例如图像超分辨率，我们可以把视频分割成一帧帧的序列，然后超分辨率，这样我们就得到了视频超分辨率技术。这种想法，正式今年SaaS产品中占比最大的。每一个小产品是一个基础服务IaaS，通过结合，使得它们围成生态圈，实现更多功能</p>\n<p>例如，通过美颜自拍照，再进行动漫化，再进行AI重绘，超分辨率，是不是就得到了一张极高质量的自拍照？</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/3g9pwpy3t0.jpg\"></p>\n<p>以下例子来源于个人：</p>\n<p>想拍一套cos，但是经济有限，没办法买完一整套，就算买完一整套了，因形体的限制没办法达到预期，如果使用人脸试装，人脸变换，人体分析等一系列技术对原图缺陷进行改良，通过改良前后区别的分析（图像分析）来获得化妆等方面的建议，不仅能提升自我对cos领域的认知，还能从中学到技术而不用麻烦他人。</p>\n<p>再放开点想，超分辨率需要原图，原图需要人类的智慧来绘制，如果我们从源头开始一直到成图，都由AI处理，会发生什么？</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/brxigu2nsv.png\" alt=\"image.png\"></p>\n<p>没错，这就是全栈。</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/usnp2fc6oy.png\" alt=\"image.png\"></p>\n<p>从图片生成，到图片超分辨率还原，再到图像分类，由此可以批量短时间获得一系列的图集（考虑到伦理问题，生成的作品并非自然人行为，不具有作品著作权）</p>\n<h2 id=\"再想开点\"><a href=\"#再想开点\" class=\"headerlink\" title=\"再想开点\"></a>再想开点</h2><p>如果实在开发不出有意思的东西，那就说明你想的还不够开。</p>\n<p>今年，ChatGPT，NovelAI，VITS等产品异常火爆，如果我们把三者结合起来，那岂不是…</p>\n<p>不知道屏幕前的各位有没有一种需求（尤其是单身用户（没指谁哈））谁都或多或少经历过emo，如果遇到个不理解你的亲友，你向ta倾诉ta反泼冷水那就雪上加霜了，所以我们可不可以利用AI给自己安慰？</p>\n<p>ChatGPT，你向她倾诉，她安慰你，通过VITS语音合成，选择你的心灵寄托（必须得是爱莉希雅！）</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/abchkb7gdw.jpg\"></p>\n<p>再通过NovelAI，渲染出“她”的形象</p>\n<p>如此一来，冰冷机械就能创造温度。这就是AI的力量</p>\n<p><em>AI的力量远超想象，我们做的，也只是有机结合而已</em></p>\n<h1 id=\"数字与成长\"><a href=\"#数字与成长\" class=\"headerlink\" title=\"数字与成长\"></a>数字与成长</h1><p>我现在如果放一大串介绍给你，或许有些枯燥：</p>\n<blockquote>\n<p>超低延迟，全球可控200msTTL，4k60帧极高画质，低码率高分辨率，自研算法，在无需安装任何插件或者第三方的软件的情况下，创建点对点（Peer-to-Peer）的数据分享和电话会议成为可能……</p>\n</blockquote>\n<p>其实，也就是普通得再不能普通的一个视频通话罢了</p>\n<p>孤独，是一种无奈的痛苦，很幸运，你我都能彼此在此交流灵魂。</p>\n<p>以下故事来自于某站长（出于隐私，信息已脱敏）</p>\n<blockquote>\n<p>我是一位很普通，普通得再不能普通的个人网站的站长，平时爱写一些文章，受出生家庭的影响，父母总是对弟弟很偏爱而孤立我，什么都不支持，什么都不鼓励，每天消极地过着，我非常希望有人能和我聊一聊，哪怕仅仅只是简单的技术交流，而不是忍着一口否认。</p>\n</blockquote>\n<p>ta来自我的主站下方友情链接的一位站长，通过申请问卷，我找到了ta</p>\n<p>如果只是用简单的会议，通话形式，未免有一些牵强</p>\n<p>于是我使用了去年开发的一款互动视频，能够分享视频的同时交流互动</p>\n<blockquote>\n<p>感谢你做的这么一部短片，通过相似回忆让我产生了共鸣。也感谢你分享的故事，我理解了何为成长，何为付出，何为放弃。</p>\n</blockquote>\n<p>一次对话，让我们交换彼此心灵</p>\n<p>一次快门声，这一刻的时光将被凝结，它凝结的，或许是挫折时的叹气，成功时的喜悦，亦或是一段普通的对话，一次美好的旅行…这都是属于你的故事，它记录着每一秒的成长。</p>\n<p>「这是我宝宝出生的第1天，真可爱」数据，看见了生命的起始</p>\n<p>「好，谢谢你的帮助」记录着每一个平凡的瞬间</p>\n<p>「就解决了吧，前端拉到数据了」见证着每一次困难的突破</p>\n<p>「高考加油！」鼓舞着每一个人努力向前</p>\n<p>一条录像带，一本日记，一张光盘，每时每刻，你都在记录着属于你的故事，它们共同塑造了一个数字的「你」</p>\n<p>「万千的轨迹交织，萦绕，由此诞下百花齐放的奇迹。」</p>\n<p>数据是虚拟的，但虚拟，不意味着虚构，它可以让你产生共鸣</p>\n<p>数据，虽是「数」，却能构成万千世界，发现万般精彩</p>\n<p>你的成长，你的回忆，浓缩成一段0和1序列，数字，描绘多姿多彩的平行世界，叙写着丰富多彩的「你」</p>\n<h1 id=\"其它领域\"><a href=\"#其它领域\" class=\"headerlink\" title=\"其它领域\"></a>其它领域</h1><h2 id=\"设计与生活\"><a href=\"#设计与生活\" class=\"headerlink\" title=\"设计与生活\"></a>设计与生活</h2><p>截止至2022年，我国有8500+万残疾人口，与其仅看这个数字，不如贴近他们的生活</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/qxi4q97e0d.png\" alt=\"image.png\"></p>\n<p>过马路，对于我们这些健康的人来说是十分轻松的一件事，但是对于他们，可能听不见汽车的鸣笛，看不见信号灯的指示，甚至没办法独立穿过几米的斑马线。</p>\n<p>读清楚这一些字符，对于我们来说是再简单不过的事情</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/5see9tkqxu.png\" alt=\"image.png\"></p>\n<blockquote>\n<p>我很热爱计算机技术，我也希望像你们一样能看清眼前的屏幕</p>\n</blockquote>\n<p>但是视障使他没办法像我们一样正常阅读电脑屏幕上的字</p>\n<p>如果仅仅是放大字体大小，阅读屏幕就能称为“无障碍”的话，或许有些牵强，试问一下，给一位程序员教科书般地读代码，是不是显得很生硬，他们需要的，不仅仅是能看见字，而是能如同我们健康人一般理解，感同身受这些字，从字里行间体会出感情，体会出共鸣</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/umj1009i1d.png\" alt=\"image.png\"></p>\n<p>很幸运，我们有这样的机会开发，作为一位前端开发者，我们有机会接触与用户交互最直接的部分</p>\n<p>我们做的，就是把复杂的东西直观化，突出核心的问题</p>\n<p>很高兴，html这门语言，本身设计有无障碍aria等特性标签，能让我们更加关注特殊群体，并且针对阅读模式与正常模式的场景设计了两种不同的思路</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/1gfajw1022.png\" alt=\"aria属性\"></p>\n<p>例如这个按钮</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/fm25w4pkh0.png\" alt=\"image.png\"></p>\n<p>我们阅读到的信息就是点击它就会进入到教程页面；对于残障人士来说，我们会对这个按钮解释说明：一个可以操作的蓝色按钮，点击之后会进入教程页面，下一个按钮为xxx，上一个按钮为xxx</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/i5zdfmxxzg.png\" alt=\"设计风格\"></p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/8efrd1p4gw.png\" alt=\"清晰的思路\"></p>\n<p>我们不追求花里胡哨的动画，冗余复杂的功能，仅仅是通过最基本的“听说读写”来方便操作，一个按键就能获得需要的功能</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/vuckwigo5w.png\" alt=\"直达的体验\"></p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/0s3371zi5k.png\" alt=\"统一的风格\"></p>\n<p>他们应当与我们有相等的体验，应当与我们平等地生活；适老化，无障碍化不仅仅只是一句口号，反观某些国产流氓软件，推出无数功能，但这些功能真正服务到我们了吗，何况残障人士，作为开发者，设计者，我们要做的，不是一味地开发，而是真正融入用户群体，真正体验我们所设计的东西是否真正的“有用”</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/984awbihem.png\" alt=\"image.png\"></p>\n<h2 id=\"保护野生动物\"><a href=\"#保护野生动物\" class=\"headerlink\" title=\"保护野生动物\"></a>保护野生动物</h2><p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/7xfppt6czx.png\" alt=\"image.png\"></p>\n<p>濒危动物是一项珍贵的、不可替代的、可再生的自然资源，每个物种都是生态系统中的重要一员，通过食物链的关系，物种之间起到互相依存、互相牵制的作用。一旦食物链的某一环节出现问题，整个生态系统的平衡就会受到严重影响。</p>\n<p>今年2月，我们对这一从未接触过的领域进行了调研，通过问卷，咨询等方式，收集了价值数据</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/2ibugsjmgg.png\" alt=\"设计风格\"></p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/os6kgz8mmv.png\" alt=\"image.png\"></p>\n<p>来自发起者 Ar-Sr-Na</p>\n<blockquote>\n<p>野生动物，它们是人类的伙伴，是生态系统不可缺失的一部分，没有它们，自然界将失去色彩，保护野生动物，刻不容缓，我们也必须重视野生动物的生存环境，让它们走出课本的插图，长长久久地生存在地球上，陪伴着人类度过，生命是平等的，野生动物的生命就是人类的生命，伤害它们相当于伤害自己。我同时在调查中也发现，99%以上的作答者，都是对野生动物同情，将命运联系在一起的，并且也支持所有保护野生动物的事业，我非常希望将来一天，消失的不是濒危动物，而是“濒危”，保护野生濒危动物，任重而道远！</p>\n</blockquote>\n<p>参与者 邓**</p>\n<blockquote>\n<p>我更加深刻地了解到动物与我们是一样的。我们都生活在地球村这个大家庭中，我们应该和睦相处，各尽所职，共同维护我们生活的环境。这样我们的未来才更加的美好。同时，人类与自然界关系正趋于不协调。要知道，生命是平等的，我们和自然界是整体。如果生态平衡被破坏，那么，人类最终会毁掉自己。所以我们要拯救那些濒危动物，爱护身边的动物，爱他们就是爱自己。动物与我们一起在地球上生活了这么多年，他们在地球上都担当者重要的位置，维持着自然界微妙的平衡。人类的肆意改造地球，已严重威胁到地球上的各种生命。人类如此妄为无异于自掘坟墓，保护濒危动物，是我们人类义不容辞的事。</p>\n</blockquote>\n<p>参与者 莫**</p>\n<blockquote>\n<p>频危动物不仅仅出现在电视中书籍中，更存在于我们的生活之中。让我真正意识到它可能会在未来的某一天中消失在我们的眼前，它们不像其他的生物，有成千上万的同伴不用担心自己的后代会越来越少甚至消失。由于环境的改变同伴的极速减少，使它们的数量难以得到增加。因此我们应该多加关注频危动物，对它们尽一份自己的力量，保护它们让它们的数量得到增加。我们可以参加一些公益活动，例如微博上的熊猫守护者活动，帮助熊猫增加更多的保护地，增加更多的粮食，让它们能安心的生活在野外保护区内。让大自然的物种仍然保持丰富的情态，所以我们要多为频危动物献出一份力量，对频危动物现状加以宣传，成为保护频危动物的一份子！</p>\n</blockquote>\n<h1 id=\"经历\"><a href=\"#经历\" class=\"headerlink\" title=\"经历\"></a>经历</h1><p>由于一些原因，腾云先锋TDP，这一年经历了离别重组，作为核心成员之一，我感到失望，不过在众多力量之下最终整个团队完美保留了下来。</p>\n<p>一个个熟悉的名字：king、若海、tanger、幻影龙王、jwj，tan90°……</p>\n<p>一年前我们因缘分而来到TDP，因兴趣聚集于此，不断为产品建言献策</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/53o5v3mz5g.png\" alt=\"image.png\"></p>\n<p>这个熟悉的ID就是我啦</p>\n<p>今年下半年，因为身体原因，没有办法实现高产，在照顾自己方面，还是有点小“bug”，怪自己没把自己的程序写好吧…不过在这里劝大家不要熬夜，早起半小时比晚睡3小时效率要高得多得多，“夜班”能见到的，是更黑的夜晚，但“早班”能见到黎明，能见到清晨的露珠，远比熬夜来得舒服</p>\n<p>因为安排，今年做的很多事情都非常的商业化，包括做视频，总感觉有什么东西限制了我的灵感</p>\n<p>不过好在，前端这个领域我可以自由发挥</p>\n<h1 id=\"送给自己\"><a href=\"#送给自己\" class=\"headerlink\" title=\"送给自己\"></a>送给自己</h1><p>成长，不是被一年一年分割，而是在一年一年的试炼中，不断突破自我</p>\n<blockquote>\n<p>你终将跨过曾经无法跨越的道路，无论一切如何，奇迹终将发生</p>\n</blockquote>\n<p>没错，今年的关键词，正是<strong>奇迹</strong></p>\n<p>2022，已经告一段落，今年的大大小小目标也已经完成，我实现了我的想法，体验未来，或者，编写未来！让未来，现在就来！</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/mwuplgs142.png\"></p>\n<p>2022 突破计算边界，构筑数字视界，计算赋能无限</p>\n<h1 id=\"来自ta们\"><a href=\"#来自ta们\" class=\"headerlink\" title=\"来自ta们\"></a>来自ta们</h1><p>coser 深林</p>\n<blockquote>\n<p>谢谢</p>\n</blockquote>\n<p>coser ***(不愿透露cn)</p>\n<blockquote>\n<p>老师的大片，666</p>\n</blockquote>\n<p>翊沫</p>\n<blockquote>\n<p>非常好；通过全新的、更精致的照片优化技术实现更高质量的图像放大和缩小效果</p>\n</blockquote>\n<p>xiandoubao</p>\n<blockquote>\n<p>非常多实用的项目 很多的技术创新 希望感兴趣的都能参与进来一起</p>\n</blockquote>\n<p>coser 9762(我自己)</p>\n<blockquote>\n<p>c圈底层，就是我了</p>\n</blockquote>\n<p>Aceef</p>\n<blockquote>\n<p>非常好用！ 嘎嘎好评！他能将不清晰的图片整清晰 很不错！</p>\n</blockquote>\n<p>？？</p>\n<blockquote>\n<p>慢慢来，发挥自己的特长和兴趣。希望可以多增加一些，绘画教程，动画制作，动画影评。持续关注，有前途，加油干</p>\n</blockquote>\n<p>**（未留ID）</p>\n<blockquote>\n<p>很喜欢up你的科普风格，祝您学业有成</p>\n</blockquote>\n<h1 id=\"送给2023，与你们\"><a href=\"#送给2023，与你们\" class=\"headerlink\" title=\"送给2023，与你们\"></a>送给2023，与你们</h1><p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/124ygx3abk.png\"></p>\n<p>失败常有，但更多的，是失败后的成功。</p>\n<p>当今天提到行业领先，超低成本，超高性能时，估计大家只会想到两个字：吹牛。我知道，这也没错，这确实没什么了不起的，因为这只是一个开始</p>\n<p>作为一位开发者，一位普普通通的开发者，做过最高兴的事情，莫过于脑中的想法成功在物质上实现了，虽然它很曲折，但这样的曲折更有意义</p>\n<p>所有的成就，离不开大家的共同努力，也离不开在屏幕面前，不知名字，但却在默默支持着的你</p>\n<p>当我一次次看到我的ID，一个大项目有我的名字，腾讯云TDP大群看到每日排行榜，文章上推荐作者是我时</p>\n<p>虽然它不被人铭记，或者只出现短短几秒，内心依然无比激动，它是实力的证明，是身份的代表</p>\n<p>看到它，就像看到了镜中的自己，此时此刻，它就是我，它被我铭记就足够了</p>\n<p>一个人，能够在未知艰险的探索中，无比艰难的条件下，保持前行，并不断突破</p>\n<p>让热情的烈火越燃越高，甚至突破了黑暗，突破了未知，同时，突破了想象的边界</p>\n<p>我想，这才是人类梦想超越极限的真正力量，才是梦想存在的真正意义吧</p>\n<hr>\n<p>此致<br>Ar-Sr-Na<br>2022-12-12</p>\n","site":{"data":{}},"excerpt":"","more":"<p>2022，我们每一步计划，都以“产品”的形式为大家呈现。</p>\n<h1 id=\"2022-1至2022-6\"><a href=\"#2022-1至2022-6\" class=\"headerlink\" title=\"2022-1至2022-6\"></a>2022-1至2022-6</h1><h2 id=\"新产品发布\"><a href=\"#新产品发布\" class=\"headerlink\" title=\"新产品发布\"></a>新产品发布</h2><p>基础业务：1</p>\n<p>平台业务：4</p>\n<p>软件业务：3</p>\n<p>函数业务：1</p>\n<p>根据问卷调查，来自使用者好评率达到98.07%（208样本无过滤）</p>\n<p>最具代表：ArESRGAN图像超分辨率</p>\n<p>里程碑：ArBlender集群渲染管理器</p>\n<p>软件著作权+1件，作品著作权+4件</p>\n<p>产品开发投入时长300+小时</p>\n<p>解决方案包括音视频等</p>\n<p>我们仍然保持前进的动力，保持创作的热情。与你我共筑数字世界</p>\n<p>2022 计算赋能无限</p>\n<h1 id=\"2022-7至2022-12\"><a href=\"#2022-7至2022-12\" class=\"headerlink\" title=\"2022-7至2022-12\"></a>2022-7至2022-12</h1><h2 id=\"新产品发布-1\"><a href=\"#新产品发布-1\" class=\"headerlink\" title=\"新产品发布\"></a>新产品发布</h2><p>基础业务：1</p>\n<p>平台业务：4</p>\n<p>软件业务：8</p>\n<p>函数业务：3</p>\n<p>解决方案型：3</p>\n<p>下半年最具有代表性产品：ArESRGAN&#x2F;Video图像&#x2F;视频超分辨率</p>\n<p>里程碑业务：ArLSIA 直播流增强</p>\n<p>产品开发投入时长100+小时。下半年，我们实现了AI从无到有，实现了高可用，低成本行业级的解决方案，为无数开发者在计算领域实现瓶颈的突破。</p>\n<p>透过RTC实时音视频通话，我们感受到了千里之外的异域风情，从小小的屏幕，透过千里屏障，与我们“谈心”，实现了“通联你我”。半夜，我们在构筑与数字世界连接的桥梁，“梦境”成为“现实”，追求创新，追求完美，是我们的使命，用代码分享与世界的热情，编制着美轮美奂的世界，「改变世界」是我们的梦想。</p>\n<p>「Powered by Ar-Sr-Na」这么一串不到30字节的字符，在每一个应用，每一个控制台出现的时候，正是我们实力的证明，无需过多赘述，它是一面镜子，投射出我们的热情。未来，它会更光亮，更激情！</p>\n<h1 id=\"AI，未知的前方\"><a href=\"#AI，未知的前方\" class=\"headerlink\" title=\"AI，未知的前方\"></a>AI，未知的前方</h1><p>今年开拓最大的领域正式人工智能-AI。通过人工智能神经网络，可以解放人脑算力，转由机器，繁琐复杂的工作变得轻松高效</p>\n<h2 id=\"图像与科技\"><a href=\"#图像与科技\" class=\"headerlink\" title=\"图像与科技\"></a>图像与科技</h2><p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/8ezyjbqgs1.png\"></p>\n<p>修复模糊图片，全部交由人工处理的话，将会花费大量人力，重绘一张图，而且相当耗时，效果也不一定100%还原</p>\n<p>借助SRGAN网络，一张模糊的插图，只需要GPU部分算力，就能还原。</p>\n<p>技术往往不是特立孤行的，它可以联动其他技术，例如图像超分辨率，我们可以把视频分割成一帧帧的序列，然后超分辨率，这样我们就得到了视频超分辨率技术。这种想法，正式今年SaaS产品中占比最大的。每一个小产品是一个基础服务IaaS，通过结合，使得它们围成生态圈，实现更多功能</p>\n<p>例如，通过美颜自拍照，再进行动漫化，再进行AI重绘，超分辨率，是不是就得到了一张极高质量的自拍照？</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/3g9pwpy3t0.jpg\"></p>\n<p>以下例子来源于个人：</p>\n<p>想拍一套cos，但是经济有限，没办法买完一整套，就算买完一整套了，因形体的限制没办法达到预期，如果使用人脸试装，人脸变换，人体分析等一系列技术对原图缺陷进行改良，通过改良前后区别的分析（图像分析）来获得化妆等方面的建议，不仅能提升自我对cos领域的认知，还能从中学到技术而不用麻烦他人。</p>\n<p>再放开点想，超分辨率需要原图，原图需要人类的智慧来绘制，如果我们从源头开始一直到成图，都由AI处理，会发生什么？</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/brxigu2nsv.png\" alt=\"image.png\"></p>\n<p>没错，这就是全栈。</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/usnp2fc6oy.png\" alt=\"image.png\"></p>\n<p>从图片生成，到图片超分辨率还原，再到图像分类，由此可以批量短时间获得一系列的图集（考虑到伦理问题，生成的作品并非自然人行为，不具有作品著作权）</p>\n<h2 id=\"再想开点\"><a href=\"#再想开点\" class=\"headerlink\" title=\"再想开点\"></a>再想开点</h2><p>如果实在开发不出有意思的东西，那就说明你想的还不够开。</p>\n<p>今年，ChatGPT，NovelAI，VITS等产品异常火爆，如果我们把三者结合起来，那岂不是…</p>\n<p>不知道屏幕前的各位有没有一种需求（尤其是单身用户（没指谁哈））谁都或多或少经历过emo，如果遇到个不理解你的亲友，你向ta倾诉ta反泼冷水那就雪上加霜了，所以我们可不可以利用AI给自己安慰？</p>\n<p>ChatGPT，你向她倾诉，她安慰你，通过VITS语音合成，选择你的心灵寄托（必须得是爱莉希雅！）</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/abchkb7gdw.jpg\"></p>\n<p>再通过NovelAI，渲染出“她”的形象</p>\n<p>如此一来，冰冷机械就能创造温度。这就是AI的力量</p>\n<p><em>AI的力量远超想象，我们做的，也只是有机结合而已</em></p>\n<h1 id=\"数字与成长\"><a href=\"#数字与成长\" class=\"headerlink\" title=\"数字与成长\"></a>数字与成长</h1><p>我现在如果放一大串介绍给你，或许有些枯燥：</p>\n<blockquote>\n<p>超低延迟，全球可控200msTTL，4k60帧极高画质，低码率高分辨率，自研算法，在无需安装任何插件或者第三方的软件的情况下，创建点对点（Peer-to-Peer）的数据分享和电话会议成为可能……</p>\n</blockquote>\n<p>其实，也就是普通得再不能普通的一个视频通话罢了</p>\n<p>孤独，是一种无奈的痛苦，很幸运，你我都能彼此在此交流灵魂。</p>\n<p>以下故事来自于某站长（出于隐私，信息已脱敏）</p>\n<blockquote>\n<p>我是一位很普通，普通得再不能普通的个人网站的站长，平时爱写一些文章，受出生家庭的影响，父母总是对弟弟很偏爱而孤立我，什么都不支持，什么都不鼓励，每天消极地过着，我非常希望有人能和我聊一聊，哪怕仅仅只是简单的技术交流，而不是忍着一口否认。</p>\n</blockquote>\n<p>ta来自我的主站下方友情链接的一位站长，通过申请问卷，我找到了ta</p>\n<p>如果只是用简单的会议，通话形式，未免有一些牵强</p>\n<p>于是我使用了去年开发的一款互动视频，能够分享视频的同时交流互动</p>\n<blockquote>\n<p>感谢你做的这么一部短片，通过相似回忆让我产生了共鸣。也感谢你分享的故事，我理解了何为成长，何为付出，何为放弃。</p>\n</blockquote>\n<p>一次对话，让我们交换彼此心灵</p>\n<p>一次快门声，这一刻的时光将被凝结，它凝结的，或许是挫折时的叹气，成功时的喜悦，亦或是一段普通的对话，一次美好的旅行…这都是属于你的故事，它记录着每一秒的成长。</p>\n<p>「这是我宝宝出生的第1天，真可爱」数据，看见了生命的起始</p>\n<p>「好，谢谢你的帮助」记录着每一个平凡的瞬间</p>\n<p>「就解决了吧，前端拉到数据了」见证着每一次困难的突破</p>\n<p>「高考加油！」鼓舞着每一个人努力向前</p>\n<p>一条录像带，一本日记，一张光盘，每时每刻，你都在记录着属于你的故事，它们共同塑造了一个数字的「你」</p>\n<p>「万千的轨迹交织，萦绕，由此诞下百花齐放的奇迹。」</p>\n<p>数据是虚拟的，但虚拟，不意味着虚构，它可以让你产生共鸣</p>\n<p>数据，虽是「数」，却能构成万千世界，发现万般精彩</p>\n<p>你的成长，你的回忆，浓缩成一段0和1序列，数字，描绘多姿多彩的平行世界，叙写着丰富多彩的「你」</p>\n<h1 id=\"其它领域\"><a href=\"#其它领域\" class=\"headerlink\" title=\"其它领域\"></a>其它领域</h1><h2 id=\"设计与生活\"><a href=\"#设计与生活\" class=\"headerlink\" title=\"设计与生活\"></a>设计与生活</h2><p>截止至2022年，我国有8500+万残疾人口，与其仅看这个数字，不如贴近他们的生活</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/qxi4q97e0d.png\" alt=\"image.png\"></p>\n<p>过马路，对于我们这些健康的人来说是十分轻松的一件事，但是对于他们，可能听不见汽车的鸣笛，看不见信号灯的指示，甚至没办法独立穿过几米的斑马线。</p>\n<p>读清楚这一些字符，对于我们来说是再简单不过的事情</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/5see9tkqxu.png\" alt=\"image.png\"></p>\n<blockquote>\n<p>我很热爱计算机技术，我也希望像你们一样能看清眼前的屏幕</p>\n</blockquote>\n<p>但是视障使他没办法像我们一样正常阅读电脑屏幕上的字</p>\n<p>如果仅仅是放大字体大小，阅读屏幕就能称为“无障碍”的话，或许有些牵强，试问一下，给一位程序员教科书般地读代码，是不是显得很生硬，他们需要的，不仅仅是能看见字，而是能如同我们健康人一般理解，感同身受这些字，从字里行间体会出感情，体会出共鸣</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/umj1009i1d.png\" alt=\"image.png\"></p>\n<p>很幸运，我们有这样的机会开发，作为一位前端开发者，我们有机会接触与用户交互最直接的部分</p>\n<p>我们做的，就是把复杂的东西直观化，突出核心的问题</p>\n<p>很高兴，html这门语言，本身设计有无障碍aria等特性标签，能让我们更加关注特殊群体，并且针对阅读模式与正常模式的场景设计了两种不同的思路</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/1gfajw1022.png\" alt=\"aria属性\"></p>\n<p>例如这个按钮</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/fm25w4pkh0.png\" alt=\"image.png\"></p>\n<p>我们阅读到的信息就是点击它就会进入到教程页面；对于残障人士来说，我们会对这个按钮解释说明：一个可以操作的蓝色按钮，点击之后会进入教程页面，下一个按钮为xxx，上一个按钮为xxx</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/i5zdfmxxzg.png\" alt=\"设计风格\"></p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/8efrd1p4gw.png\" alt=\"清晰的思路\"></p>\n<p>我们不追求花里胡哨的动画，冗余复杂的功能，仅仅是通过最基本的“听说读写”来方便操作，一个按键就能获得需要的功能</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/vuckwigo5w.png\" alt=\"直达的体验\"></p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/0s3371zi5k.png\" alt=\"统一的风格\"></p>\n<p>他们应当与我们有相等的体验，应当与我们平等地生活；适老化，无障碍化不仅仅只是一句口号，反观某些国产流氓软件，推出无数功能，但这些功能真正服务到我们了吗，何况残障人士，作为开发者，设计者，我们要做的，不是一味地开发，而是真正融入用户群体，真正体验我们所设计的东西是否真正的“有用”</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/984awbihem.png\" alt=\"image.png\"></p>\n<h2 id=\"保护野生动物\"><a href=\"#保护野生动物\" class=\"headerlink\" title=\"保护野生动物\"></a>保护野生动物</h2><p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/7xfppt6czx.png\" alt=\"image.png\"></p>\n<p>濒危动物是一项珍贵的、不可替代的、可再生的自然资源，每个物种都是生态系统中的重要一员，通过食物链的关系，物种之间起到互相依存、互相牵制的作用。一旦食物链的某一环节出现问题，整个生态系统的平衡就会受到严重影响。</p>\n<p>今年2月，我们对这一从未接触过的领域进行了调研，通过问卷，咨询等方式，收集了价值数据</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/2ibugsjmgg.png\" alt=\"设计风格\"></p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/os6kgz8mmv.png\" alt=\"image.png\"></p>\n<p>来自发起者 Ar-Sr-Na</p>\n<blockquote>\n<p>野生动物，它们是人类的伙伴，是生态系统不可缺失的一部分，没有它们，自然界将失去色彩，保护野生动物，刻不容缓，我们也必须重视野生动物的生存环境，让它们走出课本的插图，长长久久地生存在地球上，陪伴着人类度过，生命是平等的，野生动物的生命就是人类的生命，伤害它们相当于伤害自己。我同时在调查中也发现，99%以上的作答者，都是对野生动物同情，将命运联系在一起的，并且也支持所有保护野生动物的事业，我非常希望将来一天，消失的不是濒危动物，而是“濒危”，保护野生濒危动物，任重而道远！</p>\n</blockquote>\n<p>参与者 邓**</p>\n<blockquote>\n<p>我更加深刻地了解到动物与我们是一样的。我们都生活在地球村这个大家庭中，我们应该和睦相处，各尽所职，共同维护我们生活的环境。这样我们的未来才更加的美好。同时，人类与自然界关系正趋于不协调。要知道，生命是平等的，我们和自然界是整体。如果生态平衡被破坏，那么，人类最终会毁掉自己。所以我们要拯救那些濒危动物，爱护身边的动物，爱他们就是爱自己。动物与我们一起在地球上生活了这么多年，他们在地球上都担当者重要的位置，维持着自然界微妙的平衡。人类的肆意改造地球，已严重威胁到地球上的各种生命。人类如此妄为无异于自掘坟墓，保护濒危动物，是我们人类义不容辞的事。</p>\n</blockquote>\n<p>参与者 莫**</p>\n<blockquote>\n<p>频危动物不仅仅出现在电视中书籍中，更存在于我们的生活之中。让我真正意识到它可能会在未来的某一天中消失在我们的眼前，它们不像其他的生物，有成千上万的同伴不用担心自己的后代会越来越少甚至消失。由于环境的改变同伴的极速减少，使它们的数量难以得到增加。因此我们应该多加关注频危动物，对它们尽一份自己的力量，保护它们让它们的数量得到增加。我们可以参加一些公益活动，例如微博上的熊猫守护者活动，帮助熊猫增加更多的保护地，增加更多的粮食，让它们能安心的生活在野外保护区内。让大自然的物种仍然保持丰富的情态，所以我们要多为频危动物献出一份力量，对频危动物现状加以宣传，成为保护频危动物的一份子！</p>\n</blockquote>\n<h1 id=\"经历\"><a href=\"#经历\" class=\"headerlink\" title=\"经历\"></a>经历</h1><p>由于一些原因，腾云先锋TDP，这一年经历了离别重组，作为核心成员之一，我感到失望，不过在众多力量之下最终整个团队完美保留了下来。</p>\n<p>一个个熟悉的名字：king、若海、tanger、幻影龙王、jwj，tan90°……</p>\n<p>一年前我们因缘分而来到TDP，因兴趣聚集于此，不断为产品建言献策</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/53o5v3mz5g.png\" alt=\"image.png\"></p>\n<p>这个熟悉的ID就是我啦</p>\n<p>今年下半年，因为身体原因，没有办法实现高产，在照顾自己方面，还是有点小“bug”，怪自己没把自己的程序写好吧…不过在这里劝大家不要熬夜，早起半小时比晚睡3小时效率要高得多得多，“夜班”能见到的，是更黑的夜晚，但“早班”能见到黎明，能见到清晨的露珠，远比熬夜来得舒服</p>\n<p>因为安排，今年做的很多事情都非常的商业化，包括做视频，总感觉有什么东西限制了我的灵感</p>\n<p>不过好在，前端这个领域我可以自由发挥</p>\n<h1 id=\"送给自己\"><a href=\"#送给自己\" class=\"headerlink\" title=\"送给自己\"></a>送给自己</h1><p>成长，不是被一年一年分割，而是在一年一年的试炼中，不断突破自我</p>\n<blockquote>\n<p>你终将跨过曾经无法跨越的道路，无论一切如何，奇迹终将发生</p>\n</blockquote>\n<p>没错，今年的关键词，正是<strong>奇迹</strong></p>\n<p>2022，已经告一段落，今年的大大小小目标也已经完成，我实现了我的想法，体验未来，或者，编写未来！让未来，现在就来！</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/mwuplgs142.png\"></p>\n<p>2022 突破计算边界，构筑数字视界，计算赋能无限</p>\n<h1 id=\"来自ta们\"><a href=\"#来自ta们\" class=\"headerlink\" title=\"来自ta们\"></a>来自ta们</h1><p>coser 深林</p>\n<blockquote>\n<p>谢谢</p>\n</blockquote>\n<p>coser ***(不愿透露cn)</p>\n<blockquote>\n<p>老师的大片，666</p>\n</blockquote>\n<p>翊沫</p>\n<blockquote>\n<p>非常好；通过全新的、更精致的照片优化技术实现更高质量的图像放大和缩小效果</p>\n</blockquote>\n<p>xiandoubao</p>\n<blockquote>\n<p>非常多实用的项目 很多的技术创新 希望感兴趣的都能参与进来一起</p>\n</blockquote>\n<p>coser 9762(我自己)</p>\n<blockquote>\n<p>c圈底层，就是我了</p>\n</blockquote>\n<p>Aceef</p>\n<blockquote>\n<p>非常好用！ 嘎嘎好评！他能将不清晰的图片整清晰 很不错！</p>\n</blockquote>\n<p>？？</p>\n<blockquote>\n<p>慢慢来，发挥自己的特长和兴趣。希望可以多增加一些，绘画教程，动画制作，动画影评。持续关注，有前途，加油干</p>\n</blockquote>\n<p>**（未留ID）</p>\n<blockquote>\n<p>很喜欢up你的科普风格，祝您学业有成</p>\n</blockquote>\n<h1 id=\"送给2023，与你们\"><a href=\"#送给2023，与你们\" class=\"headerlink\" title=\"送给2023，与你们\"></a>送给2023，与你们</h1><p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/AS2022/124ygx3abk.png\"></p>\n<p>失败常有，但更多的，是失败后的成功。</p>\n<p>当今天提到行业领先，超低成本，超高性能时，估计大家只会想到两个字：吹牛。我知道，这也没错，这确实没什么了不起的，因为这只是一个开始</p>\n<p>作为一位开发者，一位普普通通的开发者，做过最高兴的事情，莫过于脑中的想法成功在物质上实现了，虽然它很曲折，但这样的曲折更有意义</p>\n<p>所有的成就，离不开大家的共同努力，也离不开在屏幕面前，不知名字，但却在默默支持着的你</p>\n<p>当我一次次看到我的ID，一个大项目有我的名字，腾讯云TDP大群看到每日排行榜，文章上推荐作者是我时</p>\n<p>虽然它不被人铭记，或者只出现短短几秒，内心依然无比激动，它是实力的证明，是身份的代表</p>\n<p>看到它，就像看到了镜中的自己，此时此刻，它就是我，它被我铭记就足够了</p>\n<p>一个人，能够在未知艰险的探索中，无比艰难的条件下，保持前行，并不断突破</p>\n<p>让热情的烈火越燃越高，甚至突破了黑暗，突破了未知，同时，突破了想象的边界</p>\n<p>我想，这才是人类梦想超越极限的真正力量，才是梦想存在的真正意义吧</p>\n<hr>\n<p>此致<br>Ar-Sr-Na<br>2022-12-12</p>\n"},{"title":"春节期间部分服务SLA公告：[08-1202/08-1203]D","author":"Ar-Sr-Na","date":"2022-01-31T16:00:00.000Z","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"www.arsrna.cn","authorAbout":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","authorDesc":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","comments":1,"keywords":null,"description":null,"index_img":"https://res.arsrna.cn/def.jpg","_content":"节目编号：[08-1202/08-1203]D：春节期间部分服务SLA公告\n\n2月10日是今年的春节，去年的春节平平淡淡，甚至还遭受了DDoS攻击，人身攻击，非常不容易\n\n人放假，服务不放假，大家的制作需求以及渲染机器需求将会由serverless调度完成，任何问题可以联系我，服务依然在线\n\n服务不放假，更新计划也不放下，目前下一期的制作正和合作方进行联系，共同解决难题后才能下一步制作，同时，javalearn Ar-Sr-Na Serverless分支也在不断更新：[JavaLearn Ar-Sr-Na](https://java.arsrna.cn/docs/)\n网站出现问题也会第一时间修复\n\n网课，会议等一系列服务将持续提供RTC实时音视频系统，去年开发的RTC今年仍然持续运行，全球延迟低至14ms，[点击进入](https://rtc.arsrna.cn)\n\n** 感谢所有为我们支持与付出的开发者，观众，用户们！ **\n","source":"_drafts/[08-1202-08-1203]D.md","raw":"---\ntitle: 春节期间部分服务SLA公告：[08-1202/08-1203]D\nauthor: Ar-Sr-Na\ndate: 2022-2-1\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: www.arsrna.cn\nauthorAbout: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\nauthorDesc: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\ncategories: 技术\ncomments: true\ntags: \nkeywords: \ndescription: \nindex_img: 'https://res.arsrna.cn/def.jpg'\n---\n节目编号：[08-1202/08-1203]D：春节期间部分服务SLA公告\n\n2月10日是今年的春节，去年的春节平平淡淡，甚至还遭受了DDoS攻击，人身攻击，非常不容易\n\n人放假，服务不放假，大家的制作需求以及渲染机器需求将会由serverless调度完成，任何问题可以联系我，服务依然在线\n\n服务不放假，更新计划也不放下，目前下一期的制作正和合作方进行联系，共同解决难题后才能下一步制作，同时，javalearn Ar-Sr-Na Serverless分支也在不断更新：[JavaLearn Ar-Sr-Na](https://java.arsrna.cn/docs/)\n网站出现问题也会第一时间修复\n\n网课，会议等一系列服务将持续提供RTC实时音视频系统，去年开发的RTC今年仍然持续运行，全球延迟低至14ms，[点击进入](https://rtc.arsrna.cn)\n\n** 感谢所有为我们支持与付出的开发者，观众，用户们！ **\n","slug":"[08-1202-08-1203]D","published":0,"updated":"2023-01-17T08:55:38.573Z","layout":"post","photos":[],"link":"","_id":"clod0d6x0000lc0ndeo9lbx7i","content":"<p>节目编号：[08-1202&#x2F;08-1203]D：春节期间部分服务SLA公告</p>\n<p>2月10日是今年的春节，去年的春节平平淡淡，甚至还遭受了DDoS攻击，人身攻击，非常不容易</p>\n<p>人放假，服务不放假，大家的制作需求以及渲染机器需求将会由serverless调度完成，任何问题可以联系我，服务依然在线</p>\n<p>服务不放假，更新计划也不放下，目前下一期的制作正和合作方进行联系，共同解决难题后才能下一步制作，同时，javalearn Ar-Sr-Na Serverless分支也在不断更新：<a href=\"https://java.arsrna.cn/docs/\">JavaLearn Ar-Sr-Na</a><br>网站出现问题也会第一时间修复</p>\n<p>网课，会议等一系列服务将持续提供RTC实时音视频系统，去年开发的RTC今年仍然持续运行，全球延迟低至14ms，<a href=\"https://rtc.arsrna.cn/\">点击进入</a></p>\n<p>** 感谢所有为我们支持与付出的开发者，观众，用户们！ **</p>\n","site":{"data":{}},"excerpt":"","more":"<p>节目编号：[08-1202&#x2F;08-1203]D：春节期间部分服务SLA公告</p>\n<p>2月10日是今年的春节，去年的春节平平淡淡，甚至还遭受了DDoS攻击，人身攻击，非常不容易</p>\n<p>人放假，服务不放假，大家的制作需求以及渲染机器需求将会由serverless调度完成，任何问题可以联系我，服务依然在线</p>\n<p>服务不放假，更新计划也不放下，目前下一期的制作正和合作方进行联系，共同解决难题后才能下一步制作，同时，javalearn Ar-Sr-Na Serverless分支也在不断更新：<a href=\"https://java.arsrna.cn/docs/\">JavaLearn Ar-Sr-Na</a><br>网站出现问题也会第一时间修复</p>\n<p>网课，会议等一系列服务将持续提供RTC实时音视频系统，去年开发的RTC今年仍然持续运行，全球延迟低至14ms，<a href=\"https://rtc.arsrna.cn/\">点击进入</a></p>\n<p>** 感谢所有为我们支持与付出的开发者，观众，用户们！ **</p>\n"},{"title":"2020云计算项目总结-全年年度服务状态（SLA）一览","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"www.arsrna.cn","authorAbout":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；绿城漫展，使命必达，个人网站www.arsrna.cn","authorDesc":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；绿城漫展，使命必达，个人网站www.arsrna.cn","comments":1,"date":"2021-01-24T14:52:00.000Z","keywords":null,"description":null,"photos":["https://res.arsrna.cn/blogs/SLA2020/main.png"],"_content":"\n首先先来点BGM\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=550 height=86 src=\"//music.163.com/outchain/player?type=2&id=471968263&auto=1&height=66\"></iframe>\n\n**2020，我们经历了DDoS，经历了合作，以及各种反对的声音**\n\n#DDoS\n就在2020-2-20，遭遇了运营两年半来最严重的DDoS，截止6月，攻击流量为14Tb，损失1000余元，浪费了2个月时间\n事已至今，还未真正调查并且惩处作案团伙\n\n#合作\n4月份全国的疫情有所好转，而疫情期间大家都不得不依赖云计算\n而我也是在年初学习了基本的云计算\n开发SaaS，PaaS，从基础设施到应用\n以及带来了革命性的创新\n例如Serverless化，生态渲染，云+社区优质作者、年终盛典提名\n2020-03-31 加入了自媒体分享计划\n直到今天，我的社区影响力排名464位\n\n![影响力巨大](https://res.arsrna.cn/blogs/SLA2020/%40~U89JG%7DPX9%7BI(~%5BLQ%5D3JVP.png)\n\n这一年也是各种奖，小至捡垃圾一等奖，大到中科院的大奖，腾讯云+社区Top100，云点播、直播最佳评测奖等等\n因为疫情，我们才得以发展，才有平台发展\n\n#反对\n身边的人也在反对我做云计算这事情，不是投资大，他们认为没有用处\n当然，也对，一般人用不到128C512G这样规格的云渲染业务，用不到上百亿G的存储服务，更用不到TBaaS区块链\n但是，捣鼓云计算，写程序的过程中，能学习到无数的知识，以前我对JS很反感，但如今随便能写交互JS\n***只要感兴趣就好***\n\n#进入主题，SLA\n*数据主要来源于Uptime Robot和腾讯云图与Serverless对接的API*\n![史上最差](https://res.arsrna.cn/blogs/SLA2020/MCECS.png)\nSLA-Service-Level Agreement的缩写，意思是服务等级协议\n通过这个数据可以反馈出服务质量\n那么Ar-Sr-Na网站，云计算项目的SLA如何呢？\n我把全年的数据整合在了几张图里\n\n![网站项目](https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%871.JPG)\n![云计算项目](https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%872.JPG)\n![云计算项目](https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%873.JPG)\n![视频项目](https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%874.JPG)\n![STAFF](https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%875.JPG)","source":"_drafts/SLA2020.md","raw":"---\ntitle: 2020云计算项目总结-全年年度服务状态（SLA）一览\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: www.arsrna.cn\nauthorAbout: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；绿城漫展，使命必达，个人网站www.arsrna.cn\nauthorDesc: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；绿城漫展，使命必达，个人网站www.arsrna.cn\ncategories: 技术\ncomments: true\ndate: 2021-1-24 22:52\ntags:\nkeywords: \ndescription:\nphotos: 'https://res.arsrna.cn/blogs/SLA2020/main.png'\n---\n\n首先先来点BGM\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=550 height=86 src=\"//music.163.com/outchain/player?type=2&id=471968263&auto=1&height=66\"></iframe>\n\n**2020，我们经历了DDoS，经历了合作，以及各种反对的声音**\n\n#DDoS\n就在2020-2-20，遭遇了运营两年半来最严重的DDoS，截止6月，攻击流量为14Tb，损失1000余元，浪费了2个月时间\n事已至今，还未真正调查并且惩处作案团伙\n\n#合作\n4月份全国的疫情有所好转，而疫情期间大家都不得不依赖云计算\n而我也是在年初学习了基本的云计算\n开发SaaS，PaaS，从基础设施到应用\n以及带来了革命性的创新\n例如Serverless化，生态渲染，云+社区优质作者、年终盛典提名\n2020-03-31 加入了自媒体分享计划\n直到今天，我的社区影响力排名464位\n\n![影响力巨大](https://res.arsrna.cn/blogs/SLA2020/%40~U89JG%7DPX9%7BI(~%5BLQ%5D3JVP.png)\n\n这一年也是各种奖，小至捡垃圾一等奖，大到中科院的大奖，腾讯云+社区Top100，云点播、直播最佳评测奖等等\n因为疫情，我们才得以发展，才有平台发展\n\n#反对\n身边的人也在反对我做云计算这事情，不是投资大，他们认为没有用处\n当然，也对，一般人用不到128C512G这样规格的云渲染业务，用不到上百亿G的存储服务，更用不到TBaaS区块链\n但是，捣鼓云计算，写程序的过程中，能学习到无数的知识，以前我对JS很反感，但如今随便能写交互JS\n***只要感兴趣就好***\n\n#进入主题，SLA\n*数据主要来源于Uptime Robot和腾讯云图与Serverless对接的API*\n![史上最差](https://res.arsrna.cn/blogs/SLA2020/MCECS.png)\nSLA-Service-Level Agreement的缩写，意思是服务等级协议\n通过这个数据可以反馈出服务质量\n那么Ar-Sr-Na网站，云计算项目的SLA如何呢？\n我把全年的数据整合在了几张图里\n\n![网站项目](https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%871.JPG)\n![云计算项目](https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%872.JPG)\n![云计算项目](https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%873.JPG)\n![视频项目](https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%874.JPG)\n![STAFF](https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%875.JPG)","slug":"SLA2020","published":0,"updated":"2022-07-20T05:04:16.760Z","layout":"post","link":"","_id":"clod0d6x2000pc0nddksq1tfw","content":"<p>首先先来点BGM</p>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=550 height=86 src=\"//music.163.com/outchain/player?type=2&id=471968263&auto=1&height=66\"></iframe>\n\n<p><strong>2020，我们经历了DDoS，经历了合作，以及各种反对的声音</strong></p>\n<p>#DDoS<br>就在2020-2-20，遭遇了运营两年半来最严重的DDoS，截止6月，攻击流量为14Tb，损失1000余元，浪费了2个月时间<br>事已至今，还未真正调查并且惩处作案团伙</p>\n<p>#合作<br>4月份全国的疫情有所好转，而疫情期间大家都不得不依赖云计算<br>而我也是在年初学习了基本的云计算<br>开发SaaS，PaaS，从基础设施到应用<br>以及带来了革命性的创新<br>例如Serverless化，生态渲染，云+社区优质作者、年终盛典提名<br>2020-03-31 加入了自媒体分享计划<br>直到今天，我的社区影响力排名464位</p>\n<p><img src=\"https://res.arsrna.cn/blogs/SLA2020/%40~U89JG%7DPX9%7BI(~%5BLQ%5D3JVP.png\" alt=\"影响力巨大\"></p>\n<p>这一年也是各种奖，小至捡垃圾一等奖，大到中科院的大奖，腾讯云+社区Top100，云点播、直播最佳评测奖等等<br>因为疫情，我们才得以发展，才有平台发展</p>\n<p>#反对<br>身边的人也在反对我做云计算这事情，不是投资大，他们认为没有用处<br>当然，也对，一般人用不到128C512G这样规格的云渲染业务，用不到上百亿G的存储服务，更用不到TBaaS区块链<br>但是，捣鼓云计算，写程序的过程中，能学习到无数的知识，以前我对JS很反感，但如今随便能写交互JS<br><em><strong>只要感兴趣就好</strong></em></p>\n<p>#进入主题，SLA<br><em>数据主要来源于Uptime Robot和腾讯云图与Serverless对接的API</em><br><img src=\"https://res.arsrna.cn/blogs/SLA2020/MCECS.png\" alt=\"史上最差\"><br>SLA-Service-Level Agreement的缩写，意思是服务等级协议<br>通过这个数据可以反馈出服务质量<br>那么Ar-Sr-Na网站，云计算项目的SLA如何呢？<br>我把全年的数据整合在了几张图里</p>\n<p><img src=\"https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%871.JPG\" alt=\"网站项目\"><br><img src=\"https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%872.JPG\" alt=\"云计算项目\"><br><img src=\"https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%873.JPG\" alt=\"云计算项目\"><br><img src=\"https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%874.JPG\" alt=\"视频项目\"><br><img src=\"https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%875.JPG\" alt=\"STAFF\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>首先先来点BGM</p>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=550 height=86 src=\"//music.163.com/outchain/player?type=2&id=471968263&auto=1&height=66\"></iframe>\n\n<p><strong>2020，我们经历了DDoS，经历了合作，以及各种反对的声音</strong></p>\n<p>#DDoS<br>就在2020-2-20，遭遇了运营两年半来最严重的DDoS，截止6月，攻击流量为14Tb，损失1000余元，浪费了2个月时间<br>事已至今，还未真正调查并且惩处作案团伙</p>\n<p>#合作<br>4月份全国的疫情有所好转，而疫情期间大家都不得不依赖云计算<br>而我也是在年初学习了基本的云计算<br>开发SaaS，PaaS，从基础设施到应用<br>以及带来了革命性的创新<br>例如Serverless化，生态渲染，云+社区优质作者、年终盛典提名<br>2020-03-31 加入了自媒体分享计划<br>直到今天，我的社区影响力排名464位</p>\n<p><img src=\"https://res.arsrna.cn/blogs/SLA2020/%40~U89JG%7DPX9%7BI(~%5BLQ%5D3JVP.png\" alt=\"影响力巨大\"></p>\n<p>这一年也是各种奖，小至捡垃圾一等奖，大到中科院的大奖，腾讯云+社区Top100，云点播、直播最佳评测奖等等<br>因为疫情，我们才得以发展，才有平台发展</p>\n<p>#反对<br>身边的人也在反对我做云计算这事情，不是投资大，他们认为没有用处<br>当然，也对，一般人用不到128C512G这样规格的云渲染业务，用不到上百亿G的存储服务，更用不到TBaaS区块链<br>但是，捣鼓云计算，写程序的过程中，能学习到无数的知识，以前我对JS很反感，但如今随便能写交互JS<br><em><strong>只要感兴趣就好</strong></em></p>\n<p>#进入主题，SLA<br><em>数据主要来源于Uptime Robot和腾讯云图与Serverless对接的API</em><br><img src=\"https://res.arsrna.cn/blogs/SLA2020/MCECS.png\" alt=\"史上最差\"><br>SLA-Service-Level Agreement的缩写，意思是服务等级协议<br>通过这个数据可以反馈出服务质量<br>那么Ar-Sr-Na网站，云计算项目的SLA如何呢？<br>我把全年的数据整合在了几张图里</p>\n<p><img src=\"https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%871.JPG\" alt=\"网站项目\"><br><img src=\"https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%872.JPG\" alt=\"云计算项目\"><br><img src=\"https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%873.JPG\" alt=\"云计算项目\"><br><img src=\"https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%874.JPG\" alt=\"视频项目\"><br><img src=\"https://res.arsrna.cn/blogs/SLA2020/%E5%B9%BB%E7%81%AF%E7%89%875.JPG\" alt=\"STAFF\"></p>\n"},{"title":"关于友情链接图片无法加载的问题","date":"2021-09-20T09:52:10.000Z","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"https://www.arsrna.cn","authorAbout":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","authorDesc":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","comments":1,"keywords":"通告","description":"图文无关图文无关！！！","index_img":"https://res.arsrna.cn/wallpaper%2FKonachan.com%20-%20326726%20aroa_(aroamoyasi)%20blush%20brown_eyes%20brown_hair%20cherry_blossoms%20close%20flowers%20original%20school_uniform%20spring(1).jpg_copwh","_content":"如果是2021年8月以后申请的链接可以忽略这个问题，以前的就要注意了！！！\n\n为了防盗刷流量，所以我开启了防盗链，只有我本人的域名可以进行读取，其他域名将会返回403，包括浏览器直接访问\n\n不信你看这张图：\n\n![](https://res.arsrna.cn/wallpaper%2F996134.jpg)\n\nhttps://res.arsrna.cn/wallpaper%2F996134.jpg\n\n用浏览器打开或者放到其他网站试逝？\n\n# 出问题解决办法\n\n如果真的在之前申请的友链，麻烦联系我：\n[https://www.arsrna.cn/communication](联系方式)\n\n## 解决方案1.\n\n提供您的站点地址，我会将一份签名好的链接（有效期10年）送回给您，10年后再申请一次\n\n优点：及时更新，图片是最清晰且最稳定的版本，腾讯云对象存储沉厚经验\n\n缺点：网址较长\n\n## 解决方案2.\n\n将图片地址替换为 https://cdn.jsdelivr.net/gh/ArSrNa/CDN/linkv_img/cop/arsrna.webp\n\n优点：网址短\n\n缺点：我不能管理，更新较慢\n","source":"_drafts/announcement-202109.md","raw":"---\ntitle: 关于友情链接图片无法加载的问题\ndate: 2021-09-20 17:52:10\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: https://www.arsrna.cn\nauthorAbout: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\nauthorDesc: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\ncategories: 通告\ncomments: true\ntags: \nkeywords: 通告\ndescription: 图文无关图文无关！！！\nindex_img: 'https://res.arsrna.cn/wallpaper%2FKonachan.com%20-%20326726%20aroa_(aroamoyasi)%20blush%20brown_eyes%20brown_hair%20cherry_blossoms%20close%20flowers%20original%20school_uniform%20spring(1).jpg_copwh'\n---\n如果是2021年8月以后申请的链接可以忽略这个问题，以前的就要注意了！！！\n\n为了防盗刷流量，所以我开启了防盗链，只有我本人的域名可以进行读取，其他域名将会返回403，包括浏览器直接访问\n\n不信你看这张图：\n\n![](https://res.arsrna.cn/wallpaper%2F996134.jpg)\n\nhttps://res.arsrna.cn/wallpaper%2F996134.jpg\n\n用浏览器打开或者放到其他网站试逝？\n\n# 出问题解决办法\n\n如果真的在之前申请的友链，麻烦联系我：\n[https://www.arsrna.cn/communication](联系方式)\n\n## 解决方案1.\n\n提供您的站点地址，我会将一份签名好的链接（有效期10年）送回给您，10年后再申请一次\n\n优点：及时更新，图片是最清晰且最稳定的版本，腾讯云对象存储沉厚经验\n\n缺点：网址较长\n\n## 解决方案2.\n\n将图片地址替换为 https://cdn.jsdelivr.net/gh/ArSrNa/CDN/linkv_img/cop/arsrna.webp\n\n优点：网址短\n\n缺点：我不能管理，更新较慢\n","slug":"announcement-202109","published":0,"updated":"2023-01-17T08:55:38.573Z","layout":"post","photos":[],"link":"","_id":"clod0d6x3000tc0nd1yls81iv","content":"<p>如果是2021年8月以后申请的链接可以忽略这个问题，以前的就要注意了！！！</p>\n<p>为了防盗刷流量，所以我开启了防盗链，只有我本人的域名可以进行读取，其他域名将会返回403，包括浏览器直接访问</p>\n<p>不信你看这张图：</p>\n<p><img src=\"https://res.arsrna.cn/wallpaper%2F996134.jpg\"></p>\n<p><a href=\"https://res.arsrna.cn/wallpaper%2F996134.jpg\">https://res.arsrna.cn/wallpaper%2F996134.jpg</a></p>\n<p>用浏览器打开或者放到其他网站试逝？</p>\n<h1 id=\"出问题解决办法\"><a href=\"#出问题解决办法\" class=\"headerlink\" title=\"出问题解决办法\"></a>出问题解决办法</h1><p>如果真的在之前申请的友链，麻烦联系我：<br><a href=\"%E8%81%94%E7%B3%BB%E6%96%B9%E5%BC%8F\">https://www.arsrna.cn/communication</a></p>\n<h2 id=\"解决方案1\"><a href=\"#解决方案1\" class=\"headerlink\" title=\"解决方案1.\"></a>解决方案1.</h2><p>提供您的站点地址，我会将一份签名好的链接（有效期10年）送回给您，10年后再申请一次</p>\n<p>优点：及时更新，图片是最清晰且最稳定的版本，腾讯云对象存储沉厚经验</p>\n<p>缺点：网址较长</p>\n<h2 id=\"解决方案2\"><a href=\"#解决方案2\" class=\"headerlink\" title=\"解决方案2.\"></a>解决方案2.</h2><p>将图片地址替换为 <a href=\"https://cdn.jsdelivr.net/gh/ArSrNa/CDN/linkv_img/cop/arsrna.webp\">https://cdn.jsdelivr.net/gh/ArSrNa/CDN/linkv_img/cop/arsrna.webp</a></p>\n<p>优点：网址短</p>\n<p>缺点：我不能管理，更新较慢</p>\n","site":{"data":{}},"excerpt":"","more":"<p>如果是2021年8月以后申请的链接可以忽略这个问题，以前的就要注意了！！！</p>\n<p>为了防盗刷流量，所以我开启了防盗链，只有我本人的域名可以进行读取，其他域名将会返回403，包括浏览器直接访问</p>\n<p>不信你看这张图：</p>\n<p><img src=\"https://res.arsrna.cn/wallpaper%2F996134.jpg\"></p>\n<p><a href=\"https://res.arsrna.cn/wallpaper%2F996134.jpg\">https://res.arsrna.cn/wallpaper%2F996134.jpg</a></p>\n<p>用浏览器打开或者放到其他网站试逝？</p>\n<h1 id=\"出问题解决办法\"><a href=\"#出问题解决办法\" class=\"headerlink\" title=\"出问题解决办法\"></a>出问题解决办法</h1><p>如果真的在之前申请的友链，麻烦联系我：<br><a href=\"%E8%81%94%E7%B3%BB%E6%96%B9%E5%BC%8F\">https://www.arsrna.cn/communication</a></p>\n<h2 id=\"解决方案1\"><a href=\"#解决方案1\" class=\"headerlink\" title=\"解决方案1.\"></a>解决方案1.</h2><p>提供您的站点地址，我会将一份签名好的链接（有效期10年）送回给您，10年后再申请一次</p>\n<p>优点：及时更新，图片是最清晰且最稳定的版本，腾讯云对象存储沉厚经验</p>\n<p>缺点：网址较长</p>\n<h2 id=\"解决方案2\"><a href=\"#解决方案2\" class=\"headerlink\" title=\"解决方案2.\"></a>解决方案2.</h2><p>将图片地址替换为 <a href=\"https://cdn.jsdelivr.net/gh/ArSrNa/CDN/linkv_img/cop/arsrna.webp\">https://cdn.jsdelivr.net/gh/ArSrNa/CDN/linkv_img/cop/arsrna.webp</a></p>\n<p>优点：网址短</p>\n<p>缺点：我不能管理，更新较慢</p>\n"},{"title":"Ar-Sr-Na学习中心-影视后期篇：001 必要工具准备","id":"281","date":"2019-04-27T04:14:54.000Z","_content":"\n首先是电脑，电脑配置也有要求\n\n电脑默认为Windows系统，注：Adobe 2019版本只支持win10 1803以上版本，win7/8/8.1请自行使用Adobe CC2018（本系列教程除二维动画用到的Animate，做图用到的Illustrator为CC2019版本以外，其余均为CC2018版本）\n\ncc2019与cc2018区别比较大，但不影响教程\n\n* * *\n\n首先电脑配置：  \n[https://www.bilibili.com/read/cv682460](https://www.bilibili.com/read/cv682460)\n\n在这里顺便纠错：Adobe Premiere软件最主要烧的还是内存，内存才是最重要的，其余的只能算辅助，关系如下\n\n内存>CPU>GPU>硬盘>系统\n\n* * *\n\n软件哪来？现在在Adobe官网只能下载到Adobe CC2019的版本了，如果想要CC2018，要跑到一些地方下载Adobe CC2018的版本，例如百度网盘（大文件不会限速）。关于破解方法，up主这里不讲\n\nAdobe官网地址：  \n[https://www.adobe.com/](https://www.adobe.com/)\n\nAdobe CC2018全套 By.LookAe：链接:\n\n[https://pan.baidu.com/s/1V0-2lAxdpMTBY1X-1NQkkw](https://pan.baidu.com/s/1V0-2lAxdpMTBY1X-1NQkkw) 提取码: nk4q","source":"_drafts/ar-sr-na学习中心-影视后期篇：001-必要工具准备.md","raw":"---\ntitle: Ar-Sr-Na学习中心-影视后期篇：001 必要工具准备\ntags:\n  - 学习中心-影视后期\nid: '281'\ndate: 2019-04-27 12:14:54\n---\n\n首先是电脑，电脑配置也有要求\n\n电脑默认为Windows系统，注：Adobe 2019版本只支持win10 1803以上版本，win7/8/8.1请自行使用Adobe CC2018（本系列教程除二维动画用到的Animate，做图用到的Illustrator为CC2019版本以外，其余均为CC2018版本）\n\ncc2019与cc2018区别比较大，但不影响教程\n\n* * *\n\n首先电脑配置：  \n[https://www.bilibili.com/read/cv682460](https://www.bilibili.com/read/cv682460)\n\n在这里顺便纠错：Adobe Premiere软件最主要烧的还是内存，内存才是最重要的，其余的只能算辅助，关系如下\n\n内存>CPU>GPU>硬盘>系统\n\n* * *\n\n软件哪来？现在在Adobe官网只能下载到Adobe CC2019的版本了，如果想要CC2018，要跑到一些地方下载Adobe CC2018的版本，例如百度网盘（大文件不会限速）。关于破解方法，up主这里不讲\n\nAdobe官网地址：  \n[https://www.adobe.com/](https://www.adobe.com/)\n\nAdobe CC2018全套 By.LookAe：链接:\n\n[https://pan.baidu.com/s/1V0-2lAxdpMTBY1X-1NQkkw](https://pan.baidu.com/s/1V0-2lAxdpMTBY1X-1NQkkw) 提取码: nk4q","slug":"ar-sr-na学习中心-影视后期篇：001-必要工具准备","published":0,"updated":"2022-07-20T05:04:16.761Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6x3000vc0nd3nm55ldz","content":"<p>首先是电脑，电脑配置也有要求</p>\n<p>电脑默认为Windows系统，注：Adobe 2019版本只支持win10 1803以上版本，win7&#x2F;8&#x2F;8.1请自行使用Adobe CC2018（本系列教程除二维动画用到的Animate，做图用到的Illustrator为CC2019版本以外，其余均为CC2018版本）</p>\n<p>cc2019与cc2018区别比较大，但不影响教程</p>\n<hr>\n<p>首先电脑配置：<br><a href=\"https://www.bilibili.com/read/cv682460\">https://www.bilibili.com/read/cv682460</a></p>\n<p>在这里顺便纠错：Adobe Premiere软件最主要烧的还是内存，内存才是最重要的，其余的只能算辅助，关系如下</p>\n<p>内存&gt;CPU&gt;GPU&gt;硬盘&gt;系统</p>\n<hr>\n<p>软件哪来？现在在Adobe官网只能下载到Adobe CC2019的版本了，如果想要CC2018，要跑到一些地方下载Adobe CC2018的版本，例如百度网盘（大文件不会限速）。关于破解方法，up主这里不讲</p>\n<p>Adobe官网地址：<br><a href=\"https://www.adobe.com/\">https://www.adobe.com/</a></p>\n<p>Adobe CC2018全套 By.LookAe：链接:</p>\n<p><a href=\"https://pan.baidu.com/s/1V0-2lAxdpMTBY1X-1NQkkw\">https://pan.baidu.com/s/1V0-2lAxdpMTBY1X-1NQkkw</a> 提取码: nk4q</p>\n","site":{"data":{}},"excerpt":"","more":"<p>首先是电脑，电脑配置也有要求</p>\n<p>电脑默认为Windows系统，注：Adobe 2019版本只支持win10 1803以上版本，win7&#x2F;8&#x2F;8.1请自行使用Adobe CC2018（本系列教程除二维动画用到的Animate，做图用到的Illustrator为CC2019版本以外，其余均为CC2018版本）</p>\n<p>cc2019与cc2018区别比较大，但不影响教程</p>\n<hr>\n<p>首先电脑配置：<br><a href=\"https://www.bilibili.com/read/cv682460\">https://www.bilibili.com/read/cv682460</a></p>\n<p>在这里顺便纠错：Adobe Premiere软件最主要烧的还是内存，内存才是最重要的，其余的只能算辅助，关系如下</p>\n<p>内存&gt;CPU&gt;GPU&gt;硬盘&gt;系统</p>\n<hr>\n<p>软件哪来？现在在Adobe官网只能下载到Adobe CC2019的版本了，如果想要CC2018，要跑到一些地方下载Adobe CC2018的版本，例如百度网盘（大文件不会限速）。关于破解方法，up主这里不讲</p>\n<p>Adobe官网地址：<br><a href=\"https://www.adobe.com/\">https://www.adobe.com/</a></p>\n<p>Adobe CC2018全套 By.LookAe：链接:</p>\n<p><a href=\"https://pan.baidu.com/s/1V0-2lAxdpMTBY1X-1NQkkw\">https://pan.baidu.com/s/1V0-2lAxdpMTBY1X-1NQkkw</a> 提取码: nk4q</p>\n"},{"title":"aaaaa","id":"620","_content":"\nbbbbb","source":"_drafts/aaaaa.md","raw":"---\ntitle: aaaaa\ntags:\n  - 未分类\nid: '620'\n---\n\nbbbbb","slug":"aaaaa","published":0,"date":"2022-07-20T05:04:16.754Z","updated":"2022-07-20T05:04:16.754Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6x4000yc0ndc2zm5nv7","content":"<p>bbbbb</p>\n","site":{"data":{}},"excerpt":"","more":"<p>bbbbb</p>\n"},{"layout":"posts","title":"【Blender】如何使用Festivity方案一键三渲二 - FBX版本","date":"2023-01-17T06:03:45.000Z","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"www.arsrna.cn","authorAbout":"突破计算边界，构筑数字视界，www.arsrna.cn","authorDesc":"突破计算边界，构筑数字视界，www.arsrna.cn","comments":1,"keywords":"渲染,shader,blender,原神,三渲二,NPR","description":"快速使用Festivity的shader实现仿原神渲染。","index_img":"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/u453bn69cp.png_web","_content":"# 导言\n\n## 何为三渲二\n\n三渲二就是2d风格的3d渲染\n\n## 三渲二有什么奇功\n\n减少阴影计算，使得光照扁平化，画风类似日本二维动画\n\n> 相比普通二维与三维动画，三渲二的优势就在于可以既能保持二维动画的美术风格，同时减轻画师的工作负担，缩减制作成本和周期，同时也具备自由的运镜方式。目前三渲二动画在包括动画产业大国日本在内的国外市场上已经成为了一个单独的品类，这足以说明它对行业发展的重要程度。\n\n若直接使用3d渲染，需要考虑场景光照是否真实，人物面部光线，全局光，光线追踪等等，同时受限于计算机动画，难以模拟真实人物的动作神态等，容易引发恐怖谷效应。\n\n![BV1qJ411n7w8](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/uxo1s4g0iq.png_web)\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/zs31yhh0x5.png_web)\n\n如果使用三渲二效果，则减轻了很大部分的光照计算负担，画风也很容易接受\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/0j9614jom0.png_web)\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/u453bn69cp.png_web)\n\n## 效果实例\n\n3D渲染-cycles\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/ovppd7bphi.png_web)\n\nIts Splash by Piotr Krynski\n\n三渲二 Ar-Sr-Na mmd\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/lcnphgvyir.png_web)\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/uhb5j8lgti.png_web)\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/7d34ju3be7.png_web)\n\n三渲二具体原理，此处不再介绍，简单地说，就是无阴影，削除阴影让其看起来很像日式动画\n\n---\n\n# 准备\n\n众所周知，我的观众游泳技术不好，没办法游到海外去看youtube上的教程，而我擅长游泳，所以特地去学了这个教程为大家转述\n\n注意：由于插件限制，blender仅支持3.1以上版本，此处使用blender3.4\n\n教程内有两种办法用于三渲二，作者建议请先粗略阅读一遍再考虑哪种方法，不然边看边做到中途发现不行就完蛋了。\n\nfestivity效果类似米哈游原神中的渲染效果，而米哈游实现该效果引用了Lightmap也就是ILM贴图，如果没有需要手动绘制。\n\n## 软件\n\nblender 3.4 [Download — blender.org](https://www.blender.org/download/)\n\nFBX Converter（用于转换FBX模型，可选）\n\n## Shaders\n\nBlender miHoYo Shaders：[github](https://github.com/festivize/Blender-miHoYo-Shaders)\n\n自动化处理插件（适用FBX方案）：[github](https://github.com/michael-gh1/Addons-And-Tools-For-Blender-miHoYo-Shaders)\n\n## 模型\n\n注意：原作者Festivity使用的是fbx模型，这种方法更加快捷，但是不建议使用在动画上，因为需要花时间k帧，不一定能套用现有动作。\n\n### FBX方案\n\n模型fbx文件以及材质，因版权原因请自行寻找（提示：github）\n\n这是正确的FBX模型拥有的文件\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/h4o0zr32h4.png_web)\n\n| 文件名         | 内容            |\n| :------------- | :-------------- |\n| \\*.fbx         | 基础模型        |\n| \\*Diffuse      | diffuse贴图通道 |\n| \\*Lightmap     | 光照贴图        |\n| \\*Shadow\\_Ramp | 阴影贴图        |\n| \\*Shadow       | 阴影过渡        |\n\n**本文介绍该方案**\n\n## PMX方案（原生mmd）推荐\n\ncats-plugin（用于导入pmx模型，vmd动作）\n\npmx模型（自行寻找）\n\n贴图（包括光照，阴影等）此处建议沿用FBX方案中的贴图\n\n**下期介绍该方案**\n\n---\n\n# FBX方案\n\n目前经过测试能够一键运行不出错的角色如下：安柏、苏，柯莱、多莉、胡桃，神里绫人、刻晴、荧、纳西妲、妮露、罗莎莉亚、提纳里、夜兰\n\n这里不展示一键运行如何使用，因为如上模型我没一个能一键成功的。\n\n## 1.安装自动化处理插件\n\n[Addons-And-Tools-For-Blender-miHoYo-Shaders/setup\\_wizard at main · michael-gh1/Addons-And-Tools-For-Blender-miHoYo-Shaders (github.com)](https://github.com/michael-gh1/Addons-And-Tools-For-Blender-miHoYo-Shaders/tree/main/setup_wizard)\n\n如图所示\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/0b1trdyc9t.png_web)\n\n启用插件\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/z8tj6umqux.png_web)\n\n## 2.导入模型\n\n在3d视图按键盘上<**N**>，选中选项卡上的<**Genshin**>\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/wcvapalwrv.png_web)\n\n单击<**Set Up Character**>\n\n选择FBX及材质所在文件夹，并单击蓝色导入按钮\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/9jo0l94l8f.png_web)\n\n这时候模型已经导入进来了，但是是躺着的，选中模型，在变换选项卡里面将X轴改为90\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/8ffzqithdt.png_web)\n\n## 3.导入材质\n\n全选模型，单击Genshin选项卡里的Set Up Materials，选择上面下载的 miHoYo - Genshin Impact.blend（不建议使用Goo Engine的那个文件）\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/4eliktrmoi.png_web)\n\n提示 Imported Shader/Genshin Materials... 则完成\n\n这时候切到视图渲染，效果如图\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/glb4mm8zy0.png_web)\n\n## 4.设置光照材质\n\n给一个材质节点视图\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/0qha592w0e.png_web)\n\n检查下对应材质节点有没有出错\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/8x7sfhfaxj.png_web)\n\n按照提示选择对应的贴图\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/aiy4fedi8k.png_web)\n\n给 body，hair，face，dress都检查一下，有没有漏选贴图的\n\n来到 Ramp 节点组这里，点这里展开\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/gi5dit2bae.png_web)\n\n根据提示选上，点击这个面板里右上角箭头返回\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/i4w5f2kg1n.png_web)\n\n对每一个节点都这么处理\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/plq5e9mb35.png_web)\n\n改得差不多就行了，不是所有节点都必须有的，lightmap和ramp是必须要改的\n\n## 5.绑定脸部动作\n\n如果直接完成的话，阴影不会跟踪人物，所以必须让 Main Light Direction 绑定骨骼\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/kq7ui45sxl.png_web)\n\nBone选择头部\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/j5csxg4ln1.png_web)\n\n## 6.查看效果\n\n渲染颜色模式改为标准，不然效果不佳\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/3yofujiio8.png_web)\n\n这时，动一下 Main Light Direction 的Z轴旋转，或者姿态模式让人物动下头，效果就有了\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/tvn0ikhhdb.png_web)\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/o1hbzm027i.png_web)\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/5xyvydvd9k.png_web)\n\n# 总结\n\n本方案需要手动改动的地方较少，设置简单\n\n但由于很多mmd模型都是pmx，pmd，材质光影之类的比较难找到，如果一键不能导入，那就很麻烦了，一个个地修改很费时间\n\n实时处理起来可能很卡，我的CPU都冒烟了，不敢开渲染视图\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/15lg8ey7e3.png_web)\n\n---\n\nPowered by Ar-Sr-Na\n\n允许署名转载\n","source":"_drafts/blender-Festivity-render.md","raw":"---\nlayout: posts\ntitle: 【Blender】如何使用Festivity方案一键三渲二 - FBX版本\ndate: 2023-01-17 14:03:45\ntags: 渲染,shader,blender,原神,三渲二,NPR\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: www.arsrna.cn\nauthorAbout: 突破计算边界，构筑数字视界，www.arsrna.cn\nauthorDesc: 突破计算边界，构筑数字视界，www.arsrna.cn\ncategories: 技术\ncomments: true\nkeywords: 渲染,shader,blender,原神,三渲二,NPR\ndescription: 快速使用Festivity的shader实现仿原神渲染。\nindex_img: 'https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/u453bn69cp.png_web'\n---\n# 导言\n\n## 何为三渲二\n\n三渲二就是2d风格的3d渲染\n\n## 三渲二有什么奇功\n\n减少阴影计算，使得光照扁平化，画风类似日本二维动画\n\n> 相比普通二维与三维动画，三渲二的优势就在于可以既能保持二维动画的美术风格，同时减轻画师的工作负担，缩减制作成本和周期，同时也具备自由的运镜方式。目前三渲二动画在包括动画产业大国日本在内的国外市场上已经成为了一个单独的品类，这足以说明它对行业发展的重要程度。\n\n若直接使用3d渲染，需要考虑场景光照是否真实，人物面部光线，全局光，光线追踪等等，同时受限于计算机动画，难以模拟真实人物的动作神态等，容易引发恐怖谷效应。\n\n![BV1qJ411n7w8](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/uxo1s4g0iq.png_web)\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/zs31yhh0x5.png_web)\n\n如果使用三渲二效果，则减轻了很大部分的光照计算负担，画风也很容易接受\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/0j9614jom0.png_web)\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/u453bn69cp.png_web)\n\n## 效果实例\n\n3D渲染-cycles\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/ovppd7bphi.png_web)\n\nIts Splash by Piotr Krynski\n\n三渲二 Ar-Sr-Na mmd\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/lcnphgvyir.png_web)\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/uhb5j8lgti.png_web)\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/7d34ju3be7.png_web)\n\n三渲二具体原理，此处不再介绍，简单地说，就是无阴影，削除阴影让其看起来很像日式动画\n\n---\n\n# 准备\n\n众所周知，我的观众游泳技术不好，没办法游到海外去看youtube上的教程，而我擅长游泳，所以特地去学了这个教程为大家转述\n\n注意：由于插件限制，blender仅支持3.1以上版本，此处使用blender3.4\n\n教程内有两种办法用于三渲二，作者建议请先粗略阅读一遍再考虑哪种方法，不然边看边做到中途发现不行就完蛋了。\n\nfestivity效果类似米哈游原神中的渲染效果，而米哈游实现该效果引用了Lightmap也就是ILM贴图，如果没有需要手动绘制。\n\n## 软件\n\nblender 3.4 [Download — blender.org](https://www.blender.org/download/)\n\nFBX Converter（用于转换FBX模型，可选）\n\n## Shaders\n\nBlender miHoYo Shaders：[github](https://github.com/festivize/Blender-miHoYo-Shaders)\n\n自动化处理插件（适用FBX方案）：[github](https://github.com/michael-gh1/Addons-And-Tools-For-Blender-miHoYo-Shaders)\n\n## 模型\n\n注意：原作者Festivity使用的是fbx模型，这种方法更加快捷，但是不建议使用在动画上，因为需要花时间k帧，不一定能套用现有动作。\n\n### FBX方案\n\n模型fbx文件以及材质，因版权原因请自行寻找（提示：github）\n\n这是正确的FBX模型拥有的文件\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/h4o0zr32h4.png_web)\n\n| 文件名         | 内容            |\n| :------------- | :-------------- |\n| \\*.fbx         | 基础模型        |\n| \\*Diffuse      | diffuse贴图通道 |\n| \\*Lightmap     | 光照贴图        |\n| \\*Shadow\\_Ramp | 阴影贴图        |\n| \\*Shadow       | 阴影过渡        |\n\n**本文介绍该方案**\n\n## PMX方案（原生mmd）推荐\n\ncats-plugin（用于导入pmx模型，vmd动作）\n\npmx模型（自行寻找）\n\n贴图（包括光照，阴影等）此处建议沿用FBX方案中的贴图\n\n**下期介绍该方案**\n\n---\n\n# FBX方案\n\n目前经过测试能够一键运行不出错的角色如下：安柏、苏，柯莱、多莉、胡桃，神里绫人、刻晴、荧、纳西妲、妮露、罗莎莉亚、提纳里、夜兰\n\n这里不展示一键运行如何使用，因为如上模型我没一个能一键成功的。\n\n## 1.安装自动化处理插件\n\n[Addons-And-Tools-For-Blender-miHoYo-Shaders/setup\\_wizard at main · michael-gh1/Addons-And-Tools-For-Blender-miHoYo-Shaders (github.com)](https://github.com/michael-gh1/Addons-And-Tools-For-Blender-miHoYo-Shaders/tree/main/setup_wizard)\n\n如图所示\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/0b1trdyc9t.png_web)\n\n启用插件\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/z8tj6umqux.png_web)\n\n## 2.导入模型\n\n在3d视图按键盘上<**N**>，选中选项卡上的<**Genshin**>\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/wcvapalwrv.png_web)\n\n单击<**Set Up Character**>\n\n选择FBX及材质所在文件夹，并单击蓝色导入按钮\n\n![](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/9jo0l94l8f.png_web)\n\n这时候模型已经导入进来了，但是是躺着的，选中模型，在变换选项卡里面将X轴改为90\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/8ffzqithdt.png_web)\n\n## 3.导入材质\n\n全选模型，单击Genshin选项卡里的Set Up Materials，选择上面下载的 miHoYo - Genshin Impact.blend（不建议使用Goo Engine的那个文件）\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/4eliktrmoi.png_web)\n\n提示 Imported Shader/Genshin Materials... 则完成\n\n这时候切到视图渲染，效果如图\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/glb4mm8zy0.png_web)\n\n## 4.设置光照材质\n\n给一个材质节点视图\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/0qha592w0e.png_web)\n\n检查下对应材质节点有没有出错\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/8x7sfhfaxj.png_web)\n\n按照提示选择对应的贴图\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/aiy4fedi8k.png_web)\n\n给 body，hair，face，dress都检查一下，有没有漏选贴图的\n\n来到 Ramp 节点组这里，点这里展开\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/gi5dit2bae.png_web)\n\n根据提示选上，点击这个面板里右上角箭头返回\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/i4w5f2kg1n.png_web)\n\n对每一个节点都这么处理\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/plq5e9mb35.png_web)\n\n改得差不多就行了，不是所有节点都必须有的，lightmap和ramp是必须要改的\n\n## 5.绑定脸部动作\n\n如果直接完成的话，阴影不会跟踪人物，所以必须让 Main Light Direction 绑定骨骼\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/kq7ui45sxl.png_web)\n\nBone选择头部\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/j5csxg4ln1.png_web)\n\n## 6.查看效果\n\n渲染颜色模式改为标准，不然效果不佳\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/3yofujiio8.png_web)\n\n这时，动一下 Main Light Direction 的Z轴旋转，或者姿态模式让人物动下头，效果就有了\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/tvn0ikhhdb.png_web)\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/o1hbzm027i.png_web)\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/5xyvydvd9k.png_web)\n\n# 总结\n\n本方案需要手动改动的地方较少，设置简单\n\n但由于很多mmd模型都是pmx，pmd，材质光影之类的比较难找到，如果一键不能导入，那就很麻烦了，一个个地修改很费时间\n\n实时处理起来可能很卡，我的CPU都冒烟了，不敢开渲染视图\n\n![image.png](https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/15lg8ey7e3.png_web)\n\n---\n\nPowered by Ar-Sr-Na\n\n允许署名转载\n","slug":"blender-Festivity-render","published":0,"updated":"2023-01-17T08:55:38.573Z","photos":[],"link":"","_id":"clod0d6x50012c0nd691c6ukq","content":"<h1 id=\"导言\"><a href=\"#导言\" class=\"headerlink\" title=\"导言\"></a>导言</h1><h2 id=\"何为三渲二\"><a href=\"#何为三渲二\" class=\"headerlink\" title=\"何为三渲二\"></a>何为三渲二</h2><p>三渲二就是2d风格的3d渲染</p>\n<h2 id=\"三渲二有什么奇功\"><a href=\"#三渲二有什么奇功\" class=\"headerlink\" title=\"三渲二有什么奇功\"></a>三渲二有什么奇功</h2><p>减少阴影计算，使得光照扁平化，画风类似日本二维动画</p>\n<blockquote>\n<p>相比普通二维与三维动画，三渲二的优势就在于可以既能保持二维动画的美术风格，同时减轻画师的工作负担，缩减制作成本和周期，同时也具备自由的运镜方式。目前三渲二动画在包括动画产业大国日本在内的国外市场上已经成为了一个单独的品类，这足以说明它对行业发展的重要程度。</p>\n</blockquote>\n<p>若直接使用3d渲染，需要考虑场景光照是否真实，人物面部光线，全局光，光线追踪等等，同时受限于计算机动画，难以模拟真实人物的动作神态等，容易引发恐怖谷效应。</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/uxo1s4g0iq.png_web\" alt=\"BV1qJ411n7w8\"></p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/zs31yhh0x5.png_web\"></p>\n<p>如果使用三渲二效果，则减轻了很大部分的光照计算负担，画风也很容易接受</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/0j9614jom0.png_web\"></p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/u453bn69cp.png_web\" alt=\"image.png\"></p>\n<h2 id=\"效果实例\"><a href=\"#效果实例\" class=\"headerlink\" title=\"效果实例\"></a>效果实例</h2><p>3D渲染-cycles</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/ovppd7bphi.png_web\"></p>\n<p>Its Splash by Piotr Krynski</p>\n<p>三渲二 Ar-Sr-Na mmd</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/lcnphgvyir.png_web\"></p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/uhb5j8lgti.png_web\"></p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/7d34ju3be7.png_web\"></p>\n<p>三渲二具体原理，此处不再介绍，简单地说，就是无阴影，削除阴影让其看起来很像日式动画</p>\n<hr>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>众所周知，我的观众游泳技术不好，没办法游到海外去看youtube上的教程，而我擅长游泳，所以特地去学了这个教程为大家转述</p>\n<p>注意：由于插件限制，blender仅支持3.1以上版本，此处使用blender3.4</p>\n<p>教程内有两种办法用于三渲二，作者建议请先粗略阅读一遍再考虑哪种方法，不然边看边做到中途发现不行就完蛋了。</p>\n<p>festivity效果类似米哈游原神中的渲染效果，而米哈游实现该效果引用了Lightmap也就是ILM贴图，如果没有需要手动绘制。</p>\n<h2 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a>软件</h2><p>blender 3.4 <a href=\"https://www.blender.org/download/\">Download — blender.org</a></p>\n<p>FBX Converter（用于转换FBX模型，可选）</p>\n<h2 id=\"Shaders\"><a href=\"#Shaders\" class=\"headerlink\" title=\"Shaders\"></a>Shaders</h2><p>Blender miHoYo Shaders：<a href=\"https://github.com/festivize/Blender-miHoYo-Shaders\">github</a></p>\n<p>自动化处理插件（适用FBX方案）：<a href=\"https://github.com/michael-gh1/Addons-And-Tools-For-Blender-miHoYo-Shaders\">github</a></p>\n<h2 id=\"模型\"><a href=\"#模型\" class=\"headerlink\" title=\"模型\"></a>模型</h2><p>注意：原作者Festivity使用的是fbx模型，这种方法更加快捷，但是不建议使用在动画上，因为需要花时间k帧，不一定能套用现有动作。</p>\n<h3 id=\"FBX方案\"><a href=\"#FBX方案\" class=\"headerlink\" title=\"FBX方案\"></a>FBX方案</h3><p>模型fbx文件以及材质，因版权原因请自行寻找（提示：github）</p>\n<p>这是正确的FBX模型拥有的文件</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/h4o0zr32h4.png_web\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">文件名</th>\n<th align=\"left\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">*.fbx</td>\n<td align=\"left\">基础模型</td>\n</tr>\n<tr>\n<td align=\"left\">*Diffuse</td>\n<td align=\"left\">diffuse贴图通道</td>\n</tr>\n<tr>\n<td align=\"left\">*Lightmap</td>\n<td align=\"left\">光照贴图</td>\n</tr>\n<tr>\n<td align=\"left\">*Shadow_Ramp</td>\n<td align=\"left\">阴影贴图</td>\n</tr>\n<tr>\n<td align=\"left\">*Shadow</td>\n<td align=\"left\">阴影过渡</td>\n</tr>\n</tbody></table>\n<p><strong>本文介绍该方案</strong></p>\n<h2 id=\"PMX方案（原生mmd）推荐\"><a href=\"#PMX方案（原生mmd）推荐\" class=\"headerlink\" title=\"PMX方案（原生mmd）推荐\"></a>PMX方案（原生mmd）推荐</h2><p>cats-plugin（用于导入pmx模型，vmd动作）</p>\n<p>pmx模型（自行寻找）</p>\n<p>贴图（包括光照，阴影等）此处建议沿用FBX方案中的贴图</p>\n<p><strong>下期介绍该方案</strong></p>\n<hr>\n<h1 id=\"FBX方案-1\"><a href=\"#FBX方案-1\" class=\"headerlink\" title=\"FBX方案\"></a>FBX方案</h1><p>目前经过测试能够一键运行不出错的角色如下：安柏、苏，柯莱、多莉、胡桃，神里绫人、刻晴、荧、纳西妲、妮露、罗莎莉亚、提纳里、夜兰</p>\n<p>这里不展示一键运行如何使用，因为如上模型我没一个能一键成功的。</p>\n<h2 id=\"1-安装自动化处理插件\"><a href=\"#1-安装自动化处理插件\" class=\"headerlink\" title=\"1.安装自动化处理插件\"></a>1.安装自动化处理插件</h2><p><a href=\"https://github.com/michael-gh1/Addons-And-Tools-For-Blender-miHoYo-Shaders/tree/main/setup_wizard\">Addons-And-Tools-For-Blender-miHoYo-Shaders&#x2F;setup_wizard at main · michael-gh1&#x2F;Addons-And-Tools-For-Blender-miHoYo-Shaders (github.com)</a></p>\n<p>如图所示</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/0b1trdyc9t.png_web\"></p>\n<p>启用插件</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/z8tj6umqux.png_web\"></p>\n<h2 id=\"2-导入模型\"><a href=\"#2-导入模型\" class=\"headerlink\" title=\"2.导入模型\"></a>2.导入模型</h2><p>在3d视图按键盘上&lt;**N**&gt;，选中选项卡上的&lt;**Genshin**&gt;</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/wcvapalwrv.png_web\"></p>\n<p>单击&lt;**Set Up Character**&gt;</p>\n<p>选择FBX及材质所在文件夹，并单击蓝色导入按钮</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/9jo0l94l8f.png_web\"></p>\n<p>这时候模型已经导入进来了，但是是躺着的，选中模型，在变换选项卡里面将X轴改为90</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/8ffzqithdt.png_web\" alt=\"image.png\"></p>\n<h2 id=\"3-导入材质\"><a href=\"#3-导入材质\" class=\"headerlink\" title=\"3.导入材质\"></a>3.导入材质</h2><p>全选模型，单击Genshin选项卡里的Set Up Materials，选择上面下载的 miHoYo - Genshin Impact.blend（不建议使用Goo Engine的那个文件）</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/4eliktrmoi.png_web\" alt=\"image.png\"></p>\n<p>提示 Imported Shader&#x2F;Genshin Materials… 则完成</p>\n<p>这时候切到视图渲染，效果如图</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/glb4mm8zy0.png_web\" alt=\"image.png\"></p>\n<h2 id=\"4-设置光照材质\"><a href=\"#4-设置光照材质\" class=\"headerlink\" title=\"4.设置光照材质\"></a>4.设置光照材质</h2><p>给一个材质节点视图</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/0qha592w0e.png_web\" alt=\"image.png\"></p>\n<p>检查下对应材质节点有没有出错</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/8x7sfhfaxj.png_web\" alt=\"image.png\"></p>\n<p>按照提示选择对应的贴图</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/aiy4fedi8k.png_web\" alt=\"image.png\"></p>\n<p>给 body，hair，face，dress都检查一下，有没有漏选贴图的</p>\n<p>来到 Ramp 节点组这里，点这里展开</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/gi5dit2bae.png_web\" alt=\"image.png\"></p>\n<p>根据提示选上，点击这个面板里右上角箭头返回</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/i4w5f2kg1n.png_web\" alt=\"image.png\"></p>\n<p>对每一个节点都这么处理</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/plq5e9mb35.png_web\" alt=\"image.png\"></p>\n<p>改得差不多就行了，不是所有节点都必须有的，lightmap和ramp是必须要改的</p>\n<h2 id=\"5-绑定脸部动作\"><a href=\"#5-绑定脸部动作\" class=\"headerlink\" title=\"5.绑定脸部动作\"></a>5.绑定脸部动作</h2><p>如果直接完成的话，阴影不会跟踪人物，所以必须让 Main Light Direction 绑定骨骼</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/kq7ui45sxl.png_web\" alt=\"image.png\"></p>\n<p>Bone选择头部</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/j5csxg4ln1.png_web\" alt=\"image.png\"></p>\n<h2 id=\"6-查看效果\"><a href=\"#6-查看效果\" class=\"headerlink\" title=\"6.查看效果\"></a>6.查看效果</h2><p>渲染颜色模式改为标准，不然效果不佳</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/3yofujiio8.png_web\" alt=\"image.png\"></p>\n<p>这时，动一下 Main Light Direction 的Z轴旋转，或者姿态模式让人物动下头，效果就有了</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/tvn0ikhhdb.png_web\" alt=\"image.png\"></p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/o1hbzm027i.png_web\" alt=\"image.png\"></p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/5xyvydvd9k.png_web\" alt=\"image.png\"></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>本方案需要手动改动的地方较少，设置简单</p>\n<p>但由于很多mmd模型都是pmx，pmd，材质光影之类的比较难找到，如果一键不能导入，那就很麻烦了，一个个地修改很费时间</p>\n<p>实时处理起来可能很卡，我的CPU都冒烟了，不敢开渲染视图</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/15lg8ey7e3.png_web\" alt=\"image.png\"></p>\n<hr>\n<p>Powered by Ar-Sr-Na</p>\n<p>允许署名转载</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"导言\"><a href=\"#导言\" class=\"headerlink\" title=\"导言\"></a>导言</h1><h2 id=\"何为三渲二\"><a href=\"#何为三渲二\" class=\"headerlink\" title=\"何为三渲二\"></a>何为三渲二</h2><p>三渲二就是2d风格的3d渲染</p>\n<h2 id=\"三渲二有什么奇功\"><a href=\"#三渲二有什么奇功\" class=\"headerlink\" title=\"三渲二有什么奇功\"></a>三渲二有什么奇功</h2><p>减少阴影计算，使得光照扁平化，画风类似日本二维动画</p>\n<blockquote>\n<p>相比普通二维与三维动画，三渲二的优势就在于可以既能保持二维动画的美术风格，同时减轻画师的工作负担，缩减制作成本和周期，同时也具备自由的运镜方式。目前三渲二动画在包括动画产业大国日本在内的国外市场上已经成为了一个单独的品类，这足以说明它对行业发展的重要程度。</p>\n</blockquote>\n<p>若直接使用3d渲染，需要考虑场景光照是否真实，人物面部光线，全局光，光线追踪等等，同时受限于计算机动画，难以模拟真实人物的动作神态等，容易引发恐怖谷效应。</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/uxo1s4g0iq.png_web\" alt=\"BV1qJ411n7w8\"></p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/zs31yhh0x5.png_web\"></p>\n<p>如果使用三渲二效果，则减轻了很大部分的光照计算负担，画风也很容易接受</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/0j9614jom0.png_web\"></p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/u453bn69cp.png_web\" alt=\"image.png\"></p>\n<h2 id=\"效果实例\"><a href=\"#效果实例\" class=\"headerlink\" title=\"效果实例\"></a>效果实例</h2><p>3D渲染-cycles</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/ovppd7bphi.png_web\"></p>\n<p>Its Splash by Piotr Krynski</p>\n<p>三渲二 Ar-Sr-Na mmd</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/lcnphgvyir.png_web\"></p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/uhb5j8lgti.png_web\"></p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/7d34ju3be7.png_web\"></p>\n<p>三渲二具体原理，此处不再介绍，简单地说，就是无阴影，削除阴影让其看起来很像日式动画</p>\n<hr>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>众所周知，我的观众游泳技术不好，没办法游到海外去看youtube上的教程，而我擅长游泳，所以特地去学了这个教程为大家转述</p>\n<p>注意：由于插件限制，blender仅支持3.1以上版本，此处使用blender3.4</p>\n<p>教程内有两种办法用于三渲二，作者建议请先粗略阅读一遍再考虑哪种方法，不然边看边做到中途发现不行就完蛋了。</p>\n<p>festivity效果类似米哈游原神中的渲染效果，而米哈游实现该效果引用了Lightmap也就是ILM贴图，如果没有需要手动绘制。</p>\n<h2 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a>软件</h2><p>blender 3.4 <a href=\"https://www.blender.org/download/\">Download — blender.org</a></p>\n<p>FBX Converter（用于转换FBX模型，可选）</p>\n<h2 id=\"Shaders\"><a href=\"#Shaders\" class=\"headerlink\" title=\"Shaders\"></a>Shaders</h2><p>Blender miHoYo Shaders：<a href=\"https://github.com/festivize/Blender-miHoYo-Shaders\">github</a></p>\n<p>自动化处理插件（适用FBX方案）：<a href=\"https://github.com/michael-gh1/Addons-And-Tools-For-Blender-miHoYo-Shaders\">github</a></p>\n<h2 id=\"模型\"><a href=\"#模型\" class=\"headerlink\" title=\"模型\"></a>模型</h2><p>注意：原作者Festivity使用的是fbx模型，这种方法更加快捷，但是不建议使用在动画上，因为需要花时间k帧，不一定能套用现有动作。</p>\n<h3 id=\"FBX方案\"><a href=\"#FBX方案\" class=\"headerlink\" title=\"FBX方案\"></a>FBX方案</h3><p>模型fbx文件以及材质，因版权原因请自行寻找（提示：github）</p>\n<p>这是正确的FBX模型拥有的文件</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/h4o0zr32h4.png_web\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">文件名</th>\n<th align=\"left\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">*.fbx</td>\n<td align=\"left\">基础模型</td>\n</tr>\n<tr>\n<td align=\"left\">*Diffuse</td>\n<td align=\"left\">diffuse贴图通道</td>\n</tr>\n<tr>\n<td align=\"left\">*Lightmap</td>\n<td align=\"left\">光照贴图</td>\n</tr>\n<tr>\n<td align=\"left\">*Shadow_Ramp</td>\n<td align=\"left\">阴影贴图</td>\n</tr>\n<tr>\n<td align=\"left\">*Shadow</td>\n<td align=\"left\">阴影过渡</td>\n</tr>\n</tbody></table>\n<p><strong>本文介绍该方案</strong></p>\n<h2 id=\"PMX方案（原生mmd）推荐\"><a href=\"#PMX方案（原生mmd）推荐\" class=\"headerlink\" title=\"PMX方案（原生mmd）推荐\"></a>PMX方案（原生mmd）推荐</h2><p>cats-plugin（用于导入pmx模型，vmd动作）</p>\n<p>pmx模型（自行寻找）</p>\n<p>贴图（包括光照，阴影等）此处建议沿用FBX方案中的贴图</p>\n<p><strong>下期介绍该方案</strong></p>\n<hr>\n<h1 id=\"FBX方案-1\"><a href=\"#FBX方案-1\" class=\"headerlink\" title=\"FBX方案\"></a>FBX方案</h1><p>目前经过测试能够一键运行不出错的角色如下：安柏、苏，柯莱、多莉、胡桃，神里绫人、刻晴、荧、纳西妲、妮露、罗莎莉亚、提纳里、夜兰</p>\n<p>这里不展示一键运行如何使用，因为如上模型我没一个能一键成功的。</p>\n<h2 id=\"1-安装自动化处理插件\"><a href=\"#1-安装自动化处理插件\" class=\"headerlink\" title=\"1.安装自动化处理插件\"></a>1.安装自动化处理插件</h2><p><a href=\"https://github.com/michael-gh1/Addons-And-Tools-For-Blender-miHoYo-Shaders/tree/main/setup_wizard\">Addons-And-Tools-For-Blender-miHoYo-Shaders&#x2F;setup_wizard at main · michael-gh1&#x2F;Addons-And-Tools-For-Blender-miHoYo-Shaders (github.com)</a></p>\n<p>如图所示</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/0b1trdyc9t.png_web\"></p>\n<p>启用插件</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/z8tj6umqux.png_web\"></p>\n<h2 id=\"2-导入模型\"><a href=\"#2-导入模型\" class=\"headerlink\" title=\"2.导入模型\"></a>2.导入模型</h2><p>在3d视图按键盘上&lt;**N**&gt;，选中选项卡上的&lt;**Genshin**&gt;</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/wcvapalwrv.png_web\"></p>\n<p>单击&lt;**Set Up Character**&gt;</p>\n<p>选择FBX及材质所在文件夹，并单击蓝色导入按钮</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/9jo0l94l8f.png_web\"></p>\n<p>这时候模型已经导入进来了，但是是躺着的，选中模型，在变换选项卡里面将X轴改为90</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/8ffzqithdt.png_web\" alt=\"image.png\"></p>\n<h2 id=\"3-导入材质\"><a href=\"#3-导入材质\" class=\"headerlink\" title=\"3.导入材质\"></a>3.导入材质</h2><p>全选模型，单击Genshin选项卡里的Set Up Materials，选择上面下载的 miHoYo - Genshin Impact.blend（不建议使用Goo Engine的那个文件）</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/4eliktrmoi.png_web\" alt=\"image.png\"></p>\n<p>提示 Imported Shader&#x2F;Genshin Materials… 则完成</p>\n<p>这时候切到视图渲染，效果如图</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/glb4mm8zy0.png_web\" alt=\"image.png\"></p>\n<h2 id=\"4-设置光照材质\"><a href=\"#4-设置光照材质\" class=\"headerlink\" title=\"4.设置光照材质\"></a>4.设置光照材质</h2><p>给一个材质节点视图</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/0qha592w0e.png_web\" alt=\"image.png\"></p>\n<p>检查下对应材质节点有没有出错</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/8x7sfhfaxj.png_web\" alt=\"image.png\"></p>\n<p>按照提示选择对应的贴图</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/aiy4fedi8k.png_web\" alt=\"image.png\"></p>\n<p>给 body，hair，face，dress都检查一下，有没有漏选贴图的</p>\n<p>来到 Ramp 节点组这里，点这里展开</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/gi5dit2bae.png_web\" alt=\"image.png\"></p>\n<p>根据提示选上，点击这个面板里右上角箭头返回</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/i4w5f2kg1n.png_web\" alt=\"image.png\"></p>\n<p>对每一个节点都这么处理</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/plq5e9mb35.png_web\" alt=\"image.png\"></p>\n<p>改得差不多就行了，不是所有节点都必须有的，lightmap和ramp是必须要改的</p>\n<h2 id=\"5-绑定脸部动作\"><a href=\"#5-绑定脸部动作\" class=\"headerlink\" title=\"5.绑定脸部动作\"></a>5.绑定脸部动作</h2><p>如果直接完成的话，阴影不会跟踪人物，所以必须让 Main Light Direction 绑定骨骼</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/kq7ui45sxl.png_web\" alt=\"image.png\"></p>\n<p>Bone选择头部</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/j5csxg4ln1.png_web\" alt=\"image.png\"></p>\n<h2 id=\"6-查看效果\"><a href=\"#6-查看效果\" class=\"headerlink\" title=\"6.查看效果\"></a>6.查看效果</h2><p>渲染颜色模式改为标准，不然效果不佳</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/3yofujiio8.png_web\" alt=\"image.png\"></p>\n<p>这时，动一下 Main Light Direction 的Z轴旋转，或者姿态模式让人物动下头，效果就有了</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/tvn0ikhhdb.png_web\" alt=\"image.png\"></p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/o1hbzm027i.png_web\" alt=\"image.png\"></p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/5xyvydvd9k.png_web\" alt=\"image.png\"></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>本方案需要手动改动的地方较少，设置简单</p>\n<p>但由于很多mmd模型都是pmx，pmd，材质光影之类的比较难找到，如果一键不能导入，那就很麻烦了，一个个地修改很费时间</p>\n<p>实时处理起来可能很卡，我的CPU都冒烟了，不敢开渲染视图</p>\n<p><img src=\"https://arsrnasitehk-1257609559.file.myqcloud.com/blog-images/blender-Festivity-render/15lg8ey7e3.png_web\" alt=\"image.png\"></p>\n<hr>\n<p>Powered by Ar-Sr-Na</p>\n<p>允许署名转载</p>\n"},{"title":"Ar-Sr-Na学习中心-影视后期篇：002 开始第一个项目","id":"296","date":"2019-05-01T09:29:02.000Z","_content":"\n安装完成Premiere后，首次打开会出现引导界面，可以根据需要进行引导，如果需要进阶学习，请看下文\n\n* * *\n\n![](https://arsrna.top/blog/wp-content/uploads/2019/05/image-1024x576.png)\n\n启动界面  \n\n点击新建项目\n\n![](http://www.saten.top/wp-content/uploads/2019/05/image-1.png)\n\n选择保存的位置以及名称\n\n![](http://www.saten.top/wp-content/uploads/2019/05/image-2.png)\n\n新建完成后是这样的\n\n![](https://arsrna.top/blog/wp-content/uploads/2019/05/image-3-1024x576.png)\n\n如果和我的不一样，那就把工作区改为编辑\n\n视频素材直接拖入项目窗口\n\n![](https://arsrna.top/blog/wp-content/uploads/2019/05/image-4-1024x576.png)\n\n再将项目的素材拖入时间轴\n\n![](https://arsrna.top/blog/wp-content/uploads/2019/05/image-5-1024x248.png)\n\n最后就可以结合以后的课程进行操作了\n\n![](https://arsrna.top/blog/wp-content/uploads/2019/05/image-6-1024x576.png)\n\n### 提醒大家：电脑差的要记得经常保存，快捷键Ctrl+S\n\n* * *\n\nPowered by Ar-Sr-Na\n\n欢迎老师们提供更多的教程","source":"_drafts/ar-sr-na学习中心-影视后期篇：002-开始第一个项目.md","raw":"---\ntitle: Ar-Sr-Na学习中心-影视后期篇：002 开始第一个项目\ntags:\n  - 学习中心-影视后期\nid: '296'\ndate: 2019-05-01 17:29:02\n---\n\n安装完成Premiere后，首次打开会出现引导界面，可以根据需要进行引导，如果需要进阶学习，请看下文\n\n* * *\n\n![](https://arsrna.top/blog/wp-content/uploads/2019/05/image-1024x576.png)\n\n启动界面  \n\n点击新建项目\n\n![](http://www.saten.top/wp-content/uploads/2019/05/image-1.png)\n\n选择保存的位置以及名称\n\n![](http://www.saten.top/wp-content/uploads/2019/05/image-2.png)\n\n新建完成后是这样的\n\n![](https://arsrna.top/blog/wp-content/uploads/2019/05/image-3-1024x576.png)\n\n如果和我的不一样，那就把工作区改为编辑\n\n视频素材直接拖入项目窗口\n\n![](https://arsrna.top/blog/wp-content/uploads/2019/05/image-4-1024x576.png)\n\n再将项目的素材拖入时间轴\n\n![](https://arsrna.top/blog/wp-content/uploads/2019/05/image-5-1024x248.png)\n\n最后就可以结合以后的课程进行操作了\n\n![](https://arsrna.top/blog/wp-content/uploads/2019/05/image-6-1024x576.png)\n\n### 提醒大家：电脑差的要记得经常保存，快捷键Ctrl+S\n\n* * *\n\nPowered by Ar-Sr-Na\n\n欢迎老师们提供更多的教程","slug":"ar-sr-na学习中心-影视后期篇：002-开始第一个项目","published":0,"updated":"2022-07-20T05:04:16.761Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6x50015c0nddoblfru7","content":"<p>安装完成Premiere后，首次打开会出现引导界面，可以根据需要进行引导，如果需要进阶学习，请看下文</p>\n<hr>\n<p><img src=\"https://arsrna.top/blog/wp-content/uploads/2019/05/image-1024x576.png\"></p>\n<p>启动界面  </p>\n<p>点击新建项目</p>\n<p><img src=\"http://www.saten.top/wp-content/uploads/2019/05/image-1.png\"></p>\n<p>选择保存的位置以及名称</p>\n<p><img src=\"http://www.saten.top/wp-content/uploads/2019/05/image-2.png\"></p>\n<p>新建完成后是这样的</p>\n<p><img src=\"https://arsrna.top/blog/wp-content/uploads/2019/05/image-3-1024x576.png\"></p>\n<p>如果和我的不一样，那就把工作区改为编辑</p>\n<p>视频素材直接拖入项目窗口</p>\n<p><img src=\"https://arsrna.top/blog/wp-content/uploads/2019/05/image-4-1024x576.png\"></p>\n<p>再将项目的素材拖入时间轴</p>\n<p><img src=\"https://arsrna.top/blog/wp-content/uploads/2019/05/image-5-1024x248.png\"></p>\n<p>最后就可以结合以后的课程进行操作了</p>\n<p><img src=\"https://arsrna.top/blog/wp-content/uploads/2019/05/image-6-1024x576.png\"></p>\n<h3 id=\"提醒大家：电脑差的要记得经常保存，快捷键Ctrl-S\"><a href=\"#提醒大家：电脑差的要记得经常保存，快捷键Ctrl-S\" class=\"headerlink\" title=\"提醒大家：电脑差的要记得经常保存，快捷键Ctrl+S\"></a>提醒大家：电脑差的要记得经常保存，快捷键Ctrl+S</h3><hr>\n<p>Powered by Ar-Sr-Na</p>\n<p>欢迎老师们提供更多的教程</p>\n","site":{"data":{}},"excerpt":"","more":"<p>安装完成Premiere后，首次打开会出现引导界面，可以根据需要进行引导，如果需要进阶学习，请看下文</p>\n<hr>\n<p><img src=\"https://arsrna.top/blog/wp-content/uploads/2019/05/image-1024x576.png\"></p>\n<p>启动界面  </p>\n<p>点击新建项目</p>\n<p><img src=\"http://www.saten.top/wp-content/uploads/2019/05/image-1.png\"></p>\n<p>选择保存的位置以及名称</p>\n<p><img src=\"http://www.saten.top/wp-content/uploads/2019/05/image-2.png\"></p>\n<p>新建完成后是这样的</p>\n<p><img src=\"https://arsrna.top/blog/wp-content/uploads/2019/05/image-3-1024x576.png\"></p>\n<p>如果和我的不一样，那就把工作区改为编辑</p>\n<p>视频素材直接拖入项目窗口</p>\n<p><img src=\"https://arsrna.top/blog/wp-content/uploads/2019/05/image-4-1024x576.png\"></p>\n<p>再将项目的素材拖入时间轴</p>\n<p><img src=\"https://arsrna.top/blog/wp-content/uploads/2019/05/image-5-1024x248.png\"></p>\n<p>最后就可以结合以后的课程进行操作了</p>\n<p><img src=\"https://arsrna.top/blog/wp-content/uploads/2019/05/image-6-1024x576.png\"></p>\n<h3 id=\"提醒大家：电脑差的要记得经常保存，快捷键Ctrl-S\"><a href=\"#提醒大家：电脑差的要记得经常保存，快捷键Ctrl-S\" class=\"headerlink\" title=\"提醒大家：电脑差的要记得经常保存，快捷键Ctrl+S\"></a>提醒大家：电脑差的要记得经常保存，快捷键Ctrl+S</h3><hr>\n<p>Powered by Ar-Sr-Na</p>\n<p>欢迎老师们提供更多的教程</p>\n"},{"title":"level upper原音频","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"www.arsrna.cn","authorAbout":"业余无线电，航天爱好者，个人网站www.arsrna.cn","authorDesc":"业余无线电，航天爱好者，个人网站www.arsrna.cn","comments":1,"date":"2020-08-21T13:35:14.000Z","keywords":"某科学的超电磁炮,Levelupper,幻想御手","description":null,"index_img":"https://res.arsrna.cn/blogs/levelupper/hdpic.jpg","_content":"## BGM版\n\n<audio id=\"audio\" controls=\"\" src=\"https://res.arsrna.cn/audio/levelupper/Level_Upper_(BGM).wav\"></audio>\n\n## 刺耳版\n\n<audio id=\"audio\" controls=\"\" src=\"https://res.arsrna.cn/audio/levelupper/Level_Upper.mp3\"></audio>\n","source":"_drafts/level-upper.md","raw":"---\ntitle: level upper原音频\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: www.arsrna.cn\nauthorAbout: 业余无线电，航天爱好者，个人网站www.arsrna.cn\nauthorDesc: 业余无线电，航天爱好者，个人网站www.arsrna.cn\ncategories: 技术\ncomments: true\ndate: 2020-08-21 21:35:14\ntags:\nkeywords: 某科学的超电磁炮,Levelupper,幻想御手\ndescription:\nindex_img: 'https://res.arsrna.cn/blogs/levelupper/hdpic.jpg'\n---\n## BGM版\n\n<audio id=\"audio\" controls=\"\" src=\"https://res.arsrna.cn/audio/levelupper/Level_Upper_(BGM).wav\"></audio>\n\n## 刺耳版\n\n<audio id=\"audio\" controls=\"\" src=\"https://res.arsrna.cn/audio/levelupper/Level_Upper.mp3\"></audio>\n","slug":"level-upper","published":0,"updated":"2023-01-17T08:55:38.574Z","layout":"post","photos":[],"link":"","_id":"clod0d6x60016c0nd9jw64ndf","content":"<h2 id=\"BGM版\"><a href=\"#BGM版\" class=\"headerlink\" title=\"BGM版\"></a>BGM版</h2><p><audio id=\"audio\" controls=\"\" src=\"https://res.arsrna.cn/audio/levelupper/Level_Upper_(BGM).wav\"></audio></p>\n<h2 id=\"刺耳版\"><a href=\"#刺耳版\" class=\"headerlink\" title=\"刺耳版\"></a>刺耳版</h2><p><audio id=\"audio\" controls=\"\" src=\"https://res.arsrna.cn/audio/levelupper/Level_Upper.mp3\"></audio></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"BGM版\"><a href=\"#BGM版\" class=\"headerlink\" title=\"BGM版\"></a>BGM版</h2><p><audio id=\"audio\" controls=\"\" src=\"https://res.arsrna.cn/audio/levelupper/Level_Upper_(BGM).wav\"></audio></p>\n<h2 id=\"刺耳版\"><a href=\"#刺耳版\" class=\"headerlink\" title=\"刺耳版\"></a>刺耳版</h2><p><audio id=\"audio\" controls=\"\" src=\"https://res.arsrna.cn/audio/levelupper/Level_Upper.mp3\"></audio></p>\n"},{"title":"[CPU爆炸帧抠]二值化后的辉夜大小姐想让我告白ED   分帧","id":"191","date":"2019-03-22T14:05:10.000Z","_content":"\n[帧分布 Powered by. bilibili@Ar-Sr-Na](http://www.saten.top/wp-content/uploads/2019/03/unnamed-file.pdf)[下载](http://www.saten.top/wp-content/uploads/2019/03/unnamed-file.pdf)\n\n电脑配置：\n\nCPU：Intel G3260 @3.3Ghz\n\n内存条：DDR3 1333 12GB\n\nGPU：NVIDIA GeForce GTX 550Ti 1GB","source":"_drafts/cpu爆炸帧抠二值化后的辉夜大小姐想让我告白ed-分帧.md","raw":"---\ntitle: '[CPU爆炸帧抠]二值化后的辉夜大小姐想让我告白ED   分帧'\ntags:\n  - 未分类\nid: '191'\ndate: 2019-03-22 22:05:10\n---\n\n[帧分布 Powered by. bilibili@Ar-Sr-Na](http://www.saten.top/wp-content/uploads/2019/03/unnamed-file.pdf)[下载](http://www.saten.top/wp-content/uploads/2019/03/unnamed-file.pdf)\n\n电脑配置：\n\nCPU：Intel G3260 @3.3Ghz\n\n内存条：DDR3 1333 12GB\n\nGPU：NVIDIA GeForce GTX 550Ti 1GB","slug":"cpu爆炸帧抠二值化后的辉夜大小姐想让我告白ed-分帧","published":0,"updated":"2022-07-20T05:04:16.761Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6x60019c0ndhsf753ar","content":"<p><a href=\"http://www.saten.top/wp-content/uploads/2019/03/unnamed-file.pdf\">帧分布 Powered by. bilibili@Ar-Sr-Na</a><a href=\"http://www.saten.top/wp-content/uploads/2019/03/unnamed-file.pdf\">下载</a></p>\n<p>电脑配置：</p>\n<p>CPU：Intel G3260 @3.3Ghz</p>\n<p>内存条：DDR3 1333 12GB</p>\n<p>GPU：NVIDIA GeForce GTX 550Ti 1GB</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://www.saten.top/wp-content/uploads/2019/03/unnamed-file.pdf\">帧分布 Powered by. bilibili@Ar-Sr-Na</a><a href=\"http://www.saten.top/wp-content/uploads/2019/03/unnamed-file.pdf\">下载</a></p>\n<p>电脑配置：</p>\n<p>CPU：Intel G3260 @3.3Ghz</p>\n<p>内存条：DDR3 1333 12GB</p>\n<p>GPU：NVIDIA GeForce GTX 550Ti 1GB</p>\n"},{"title":"业余无线电“五五节”全天直播","id":"630","date":"2020-05-05T01:22:52.000Z","_content":"\n> 1937年日寇挑起芦沟桥事变，全国人民奋起抗日，当时抗日前线急需无线电通信技术人员，一些业余无线电爱好者直接奔赴抗日前线。另外，以CRC为基础，组成了“业余无线电人员战时服务团”，积极投身于抗日通信服务工作。各地的业余无线电爱好者在1940年5月5日通过自己的业余电台召开了“空中”大会，以显示民族团结和坚持抗日的决心，并商定5月5日为“中国业余无线电节”。\n> \n> ——百度百科·五五节\n\n五五节是中国业余无线电爱好者一年一度的盛会\n\nAr-Sr-Na博客站将iframe直播站的播放器，转播中继台信号直播\n\nAr-Sr-Na 直播\n\n  .mainContainer { display: block; width: 1024px; margin-left: auto; margin-right: auto; } .urlInput { display: block; width: 100%; margin-left: auto; margin-right: auto; margin-top: 8px; margin-bottom: 8px; } .centeredVideo { display: block; width: 100%; height: 576px; margin-left: auto; margin-right: auto; margin-bottom: auto; } .controls { display: block; width: 100%; text-align: left; margin-left: auto; margin-right: auto; } \n\n老铁，换个浏览器吧，连html5视频都不支持，这不彳亍啊\n\n  \n\n播放 暂停 停止\n\nvar player = document.getElementById('videoElement'); if (flvjs.isSupported()) { var flvPlayer = flvjs.createPlayer({ type: 'flv', url: 'https://3891.liveplay.myqcloud.com/live/3891\\_user\\_db8edd56\\_94e0.flv' }); flvPlayer.attachMediaElement(videoElement); flvPlayer.load(); //加载 } function flv\\_start() { player.play(); } function flv\\_pause() { player.pause(); } function flv\\_destroy() { player.pause(); player.unload(); player.detachMediaElement(); player.destroy(); player = null; } function flv\\_seekto() { player.currentTime = parseFloat(document.getElementsByName('seekpoint')\\[0\\].value); }","source":"_drafts/hamr55.md","raw":"---\ntitle: 业余无线电“五五节”全天直播\ntags:\n  - 未分类\nid: '630'\ndate: 2020-05-05 09:22:52\n---\n\n> 1937年日寇挑起芦沟桥事变，全国人民奋起抗日，当时抗日前线急需无线电通信技术人员，一些业余无线电爱好者直接奔赴抗日前线。另外，以CRC为基础，组成了“业余无线电人员战时服务团”，积极投身于抗日通信服务工作。各地的业余无线电爱好者在1940年5月5日通过自己的业余电台召开了“空中”大会，以显示民族团结和坚持抗日的决心，并商定5月5日为“中国业余无线电节”。\n> \n> ——百度百科·五五节\n\n五五节是中国业余无线电爱好者一年一度的盛会\n\nAr-Sr-Na博客站将iframe直播站的播放器，转播中继台信号直播\n\nAr-Sr-Na 直播\n\n  .mainContainer { display: block; width: 1024px; margin-left: auto; margin-right: auto; } .urlInput { display: block; width: 100%; margin-left: auto; margin-right: auto; margin-top: 8px; margin-bottom: 8px; } .centeredVideo { display: block; width: 100%; height: 576px; margin-left: auto; margin-right: auto; margin-bottom: auto; } .controls { display: block; width: 100%; text-align: left; margin-left: auto; margin-right: auto; } \n\n老铁，换个浏览器吧，连html5视频都不支持，这不彳亍啊\n\n  \n\n播放 暂停 停止\n\nvar player = document.getElementById('videoElement'); if (flvjs.isSupported()) { var flvPlayer = flvjs.createPlayer({ type: 'flv', url: 'https://3891.liveplay.myqcloud.com/live/3891\\_user\\_db8edd56\\_94e0.flv' }); flvPlayer.attachMediaElement(videoElement); flvPlayer.load(); //加载 } function flv\\_start() { player.play(); } function flv\\_pause() { player.pause(); } function flv\\_destroy() { player.pause(); player.unload(); player.detachMediaElement(); player.destroy(); player = null; } function flv\\_seekto() { player.currentTime = parseFloat(document.getElementsByName('seekpoint')\\[0\\].value); }","slug":"hamr55","published":0,"updated":"2022-07-20T05:04:16.762Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6x7001cc0ndfg3u1qg4","content":"<blockquote>\n<p>1937年日寇挑起芦沟桥事变，全国人民奋起抗日，当时抗日前线急需无线电通信技术人员，一些业余无线电爱好者直接奔赴抗日前线。另外，以CRC为基础，组成了“业余无线电人员战时服务团”，积极投身于抗日通信服务工作。各地的业余无线电爱好者在1940年5月5日通过自己的业余电台召开了“空中”大会，以显示民族团结和坚持抗日的决心，并商定5月5日为“中国业余无线电节”。</p>\n<p>——百度百科·五五节</p>\n</blockquote>\n<p>五五节是中国业余无线电爱好者一年一度的盛会</p>\n<p>Ar-Sr-Na博客站将iframe直播站的播放器，转播中继台信号直播</p>\n<p>Ar-Sr-Na 直播</p>\n<p>  .mainContainer { display: block; width: 1024px; margin-left: auto; margin-right: auto; } .urlInput { display: block; width: 100%; margin-left: auto; margin-right: auto; margin-top: 8px; margin-bottom: 8px; } .centeredVideo { display: block; width: 100%; height: 576px; margin-left: auto; margin-right: auto; margin-bottom: auto; } .controls { display: block; width: 100%; text-align: left; margin-left: auto; margin-right: auto; } </p>\n<p>老铁，换个浏览器吧，连html5视频都不支持，这不彳亍啊</p>\n<p>播放 暂停 停止</p>\n<p>var player &#x3D; document.getElementById(‘videoElement’); if (flvjs.isSupported()) { var flvPlayer &#x3D; flvjs.createPlayer({ type: ‘flv’, url: ‘<a href=\"https://3891.liveplay.myqcloud.com/live/3891/_user/_db8edd56/_94e0.flv&#39;\">https://3891.liveplay.myqcloud.com/live/3891\\_user\\_db8edd56\\_94e0.flv&#39;</a> }); flvPlayer.attachMediaElement(videoElement); flvPlayer.load(); &#x2F;&#x2F;加载 } function flv_start() { player.play(); } function flv_pause() { player.pause(); } function flv_destroy() { player.pause(); player.unload(); player.detachMediaElement(); player.destroy(); player &#x3D; null; } function flv_seekto() { player.currentTime &#x3D; parseFloat(document.getElementsByName(‘seekpoint’)[0].value); }</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>1937年日寇挑起芦沟桥事变，全国人民奋起抗日，当时抗日前线急需无线电通信技术人员，一些业余无线电爱好者直接奔赴抗日前线。另外，以CRC为基础，组成了“业余无线电人员战时服务团”，积极投身于抗日通信服务工作。各地的业余无线电爱好者在1940年5月5日通过自己的业余电台召开了“空中”大会，以显示民族团结和坚持抗日的决心，并商定5月5日为“中国业余无线电节”。</p>\n<p>——百度百科·五五节</p>\n</blockquote>\n<p>五五节是中国业余无线电爱好者一年一度的盛会</p>\n<p>Ar-Sr-Na博客站将iframe直播站的播放器，转播中继台信号直播</p>\n<p>Ar-Sr-Na 直播</p>\n<p>  .mainContainer { display: block; width: 1024px; margin-left: auto; margin-right: auto; } .urlInput { display: block; width: 100%; margin-left: auto; margin-right: auto; margin-top: 8px; margin-bottom: 8px; } .centeredVideo { display: block; width: 100%; height: 576px; margin-left: auto; margin-right: auto; margin-bottom: auto; } .controls { display: block; width: 100%; text-align: left; margin-left: auto; margin-right: auto; } </p>\n<p>老铁，换个浏览器吧，连html5视频都不支持，这不彳亍啊</p>\n<p>播放 暂停 停止</p>\n<p>var player &#x3D; document.getElementById(‘videoElement’); if (flvjs.isSupported()) { var flvPlayer &#x3D; flvjs.createPlayer({ type: ‘flv’, url: ‘<a href=\"https://3891.liveplay.myqcloud.com/live/3891/_user/_db8edd56/_94e0.flv&#39;\">https://3891.liveplay.myqcloud.com/live/3891\\_user\\_db8edd56\\_94e0.flv&#39;</a> }); flvPlayer.attachMediaElement(videoElement); flvPlayer.load(); &#x2F;&#x2F;加载 } function flv_start() { player.play(); } function flv_pause() { player.pause(); } function flv_destroy() { player.pause(); player.unload(); player.detachMediaElement(); player.destroy(); player &#x3D; null; } function flv_seekto() { player.currentTime &#x3D; parseFloat(document.getElementsByName(‘seekpoint’)[0].value); }</p>\n"},{"title":"[PR Start.1前言]Re-从零开始，up主的初衷与愿景 素材归档","id":"187","date":"2019-03-16T07:48:22.000Z","_content":"\nBGM: STYX HELIX\n\nBGM2：https://www.bilibili.com/video/av41304894\n\nSTAFF：\n\n后期，时间轴，前期，素材：bilibili@Ar-Sr-Na\n\n电脑设备提供，渲染：一位不留名的好心好友\n\n![](http://www.saten.top/wp-content/uploads/2019/03/image.png)","source":"_drafts/pr-start-1前言re-从零开始，up主的初衷与愿景-素材归档.md","raw":"---\ntitle: '[PR Start.1前言]Re-从零开始，up主的初衷与愿景 素材归档'\ntags:\n  - 未分类\nid: '187'\ndate: 2019-03-16 15:48:22\n---\n\nBGM: STYX HELIX\n\nBGM2：https://www.bilibili.com/video/av41304894\n\nSTAFF：\n\n后期，时间轴，前期，素材：bilibili@Ar-Sr-Na\n\n电脑设备提供，渲染：一位不留名的好心好友\n\n![](http://www.saten.top/wp-content/uploads/2019/03/image.png)","slug":"pr-start-1前言re-从零开始，up主的初衷与愿景-素材归档","published":0,"updated":"2022-07-20T05:04:16.762Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6x8001fc0nda6cudcmf","content":"<p>BGM: STYX HELIX</p>\n<p>BGM2：<a href=\"https://www.bilibili.com/video/av41304894\">https://www.bilibili.com/video/av41304894</a></p>\n<p>STAFF：</p>\n<p>后期，时间轴，前期，素材：bilibili@Ar-Sr-Na</p>\n<p>电脑设备提供，渲染：一位不留名的好心好友</p>\n<p><img src=\"http://www.saten.top/wp-content/uploads/2019/03/image.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>BGM: STYX HELIX</p>\n<p>BGM2：<a href=\"https://www.bilibili.com/video/av41304894\">https://www.bilibili.com/video/av41304894</a></p>\n<p>STAFF：</p>\n<p>后期，时间轴，前期，素材：bilibili@Ar-Sr-Na</p>\n<p>电脑设备提供，渲染：一位不留名的好心好友</p>\n<p><img src=\"http://www.saten.top/wp-content/uploads/2019/03/image.png\"></p>\n"},{"title":"[pr基础教程032]防止帕金森-Pr防抖教程  素材归档","id":"314","date":"2019-05-03T02:25:35.000Z","_content":"\nBGM：灰澈 - 无根尾系\n\n注意事项：这个稳定器只能用于普通相机，鱼眼相机或者其他的需要ProDAD插件，否则导致变形稳定器无法使用；\n\n要保证视频大小，帧率与序列一致，如果有提示错误，将原素材的变形稳定器效果移除后嵌套序列，再把效果拖到序列中\n\n[https://www.bilibili.com/video/av51204724/](https://www.bilibili.com/video/av51204724/)","source":"_drafts/pr基础教程032防止帕金森-pr防抖教程-素材归档.md","raw":"---\ntitle: '[pr基础教程032]防止帕金森-Pr防抖教程  素材归档'\ntags:\n  - 素材归档\nid: '314'\ndate: 2019-05-03 10:25:35\n---\n\nBGM：灰澈 - 无根尾系\n\n注意事项：这个稳定器只能用于普通相机，鱼眼相机或者其他的需要ProDAD插件，否则导致变形稳定器无法使用；\n\n要保证视频大小，帧率与序列一致，如果有提示错误，将原素材的变形稳定器效果移除后嵌套序列，再把效果拖到序列中\n\n[https://www.bilibili.com/video/av51204724/](https://www.bilibili.com/video/av51204724/)","slug":"pr基础教程032防止帕金森-pr防抖教程-素材归档","published":0,"updated":"2022-07-20T05:04:16.763Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6x8001ic0nd7h0y7hhs","content":"<p>BGM：灰澈 - 无根尾系</p>\n<p>注意事项：这个稳定器只能用于普通相机，鱼眼相机或者其他的需要ProDAD插件，否则导致变形稳定器无法使用；</p>\n<p>要保证视频大小，帧率与序列一致，如果有提示错误，将原素材的变形稳定器效果移除后嵌套序列，再把效果拖到序列中</p>\n<p><a href=\"https://www.bilibili.com/video/av51204724/\">https://www.bilibili.com/video/av51204724/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>BGM：灰澈 - 无根尾系</p>\n<p>注意事项：这个稳定器只能用于普通相机，鱼眼相机或者其他的需要ProDAD插件，否则导致变形稳定器无法使用；</p>\n<p>要保证视频大小，帧率与序列一致，如果有提示错误，将原素材的变形稳定器效果移除后嵌套序列，再把效果拖到序列中</p>\n<p><a href=\"https://www.bilibili.com/video/av51204724/\">https://www.bilibili.com/video/av51204724/</a></p>\n"},{"title":"[pr基础教程003]变速，倒放效果","id":"114","date":"2019-01-24T15:36:48.000Z","_content":"\n素材：\n\nbgm：Ryan Farish - Sunshine\n\n视频地址：[av41610642](https://www.bilibili.com/video/av41610642/)","source":"_drafts/pr基础教程003变速，倒放效果.md","raw":"---\ntitle: '[pr基础教程003]变速，倒放效果'\ntags:\n  - 未分类\nid: '114'\ndate: 2019-01-24 23:36:48\n---\n\n素材：\n\nbgm：Ryan Farish - Sunshine\n\n视频地址：[av41610642](https://www.bilibili.com/video/av41610642/)","slug":"pr基础教程003变速，倒放效果","published":0,"updated":"2022-07-20T05:04:16.763Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6x9001kc0nd15cn6gi0","content":"<p>素材：</p>\n<p>bgm：Ryan Farish - Sunshine</p>\n<p>视频地址：<a href=\"https://www.bilibili.com/video/av41610642/\">av41610642</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>素材：</p>\n<p>bgm：Ryan Farish - Sunshine</p>\n<p>视频地址：<a href=\"https://www.bilibili.com/video/av41610642/\">av41610642</a></p>\n"},{"title":"[pr入门教程006]关键帧使用操作方法   素材归档","id":"220","date":"2019-04-07T08:27:12.000Z","_content":"\nBGM：3L - モノクロ・インザナイト (CYTOKINE remix)\n\n背景图片因商业性质，暂时不开放下载（此图来源于广州CICF EXPO动漫游戏展，调色by bilibili@Ar-Sr-Na，商业合作请联系qq：2459405337）\n\n![](https://bilibili24749747.wang/wp-content/uploads/2019/04/image-1024x436.png)\n\n低清分辨率可供免费下载\n\n欢迎和我合作，QQ：2459405337，粉丝群：571912431 喜欢不妨长按推荐？？你们的支持是我最大的动力，感谢收看","source":"_drafts/pr入门教程006关键帧使用操作方法-素材归档.md","raw":"---\ntitle: '[pr入门教程006]关键帧使用操作方法   素材归档'\ntags:\n  - 未分类\nid: '220'\ndate: 2019-04-07 16:27:12\n---\n\nBGM：3L - モノクロ・インザナイト (CYTOKINE remix)\n\n背景图片因商业性质，暂时不开放下载（此图来源于广州CICF EXPO动漫游戏展，调色by bilibili@Ar-Sr-Na，商业合作请联系qq：2459405337）\n\n![](https://bilibili24749747.wang/wp-content/uploads/2019/04/image-1024x436.png)\n\n低清分辨率可供免费下载\n\n欢迎和我合作，QQ：2459405337，粉丝群：571912431 喜欢不妨长按推荐？？你们的支持是我最大的动力，感谢收看","slug":"pr入门教程006关键帧使用操作方法-素材归档","published":0,"updated":"2022-07-20T05:04:16.763Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6x9001nc0nd0l1d0tjr","content":"<p>BGM：3L - モノクロ・インザナイト (CYTOKINE remix)</p>\n<p>背景图片因商业性质，暂时不开放下载（此图来源于广州CICF EXPO动漫游戏展，调色by bilibili@Ar-Sr-Na，商业合作请联系qq：2459405337）</p>\n<p><img src=\"https://bilibili24749747.wang/wp-content/uploads/2019/04/image-1024x436.png\"></p>\n<p>低清分辨率可供免费下载</p>\n<p>欢迎和我合作，QQ：2459405337，粉丝群：571912431 喜欢不妨长按推荐？？你们的支持是我最大的动力，感谢收看</p>\n","site":{"data":{}},"excerpt":"","more":"<p>BGM：3L - モノクロ・インザナイト (CYTOKINE remix)</p>\n<p>背景图片因商业性质，暂时不开放下载（此图来源于广州CICF EXPO动漫游戏展，调色by bilibili@Ar-Sr-Na，商业合作请联系qq：2459405337）</p>\n<p><img src=\"https://bilibili24749747.wang/wp-content/uploads/2019/04/image-1024x436.png\"></p>\n<p>低清分辨率可供免费下载</p>\n<p>欢迎和我合作，QQ：2459405337，粉丝群：571912431 喜欢不妨长按推荐？？你们的支持是我最大的动力，感谢收看</p>\n"},{"title":"[pr进阶教程004]视频线稿风格化  素材","id":"213","date":"2019-03-28T05:26:37.000Z","_content":"\nBGM：FELT - The Ray of Light\n\n所有引用视频：\n\n[https://www.bilibili.com/video/av46592486](https://www.bilibili.com/video/av46592486)\n\nSTAFF：\n\n后期，时间轴，前期，字幕，视频，素材：bilibili@Ar-Sr-Na","source":"_drafts/pr进阶教程004视频线稿风格化-素材.md","raw":"---\ntitle: '[pr进阶教程004]视频线稿风格化  素材'\ntags:\n  - 未分类\nid: '213'\ndate: 2019-03-28 13:26:37\n---\n\nBGM：FELT - The Ray of Light\n\n所有引用视频：\n\n[https://www.bilibili.com/video/av46592486](https://www.bilibili.com/video/av46592486)\n\nSTAFF：\n\n后期，时间轴，前期，字幕，视频，素材：bilibili@Ar-Sr-Na","slug":"pr进阶教程004视频线稿风格化-素材","published":0,"updated":"2022-07-20T05:04:16.763Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6xa001pc0ndcdqm4nhp","content":"<p>BGM：FELT - The Ray of Light</p>\n<p>所有引用视频：</p>\n<p><a href=\"https://www.bilibili.com/video/av46592486\">https://www.bilibili.com/video/av46592486</a></p>\n<p>STAFF：</p>\n<p>后期，时间轴，前期，字幕，视频，素材：bilibili@Ar-Sr-Na</p>\n","site":{"data":{}},"excerpt":"","more":"<p>BGM：FELT - The Ray of Light</p>\n<p>所有引用视频：</p>\n<p><a href=\"https://www.bilibili.com/video/av46592486\">https://www.bilibili.com/video/av46592486</a></p>\n<p>STAFF：</p>\n<p>后期，时间轴，前期，字幕，视频，素材：bilibili@Ar-Sr-Na</p>\n"},{"title":"Ar-Sr-Na 视频制作规范-仅制作者可查看","id":"660","date":"2020-05-22T05:35:57.000Z","_content":"\nStaff ONLT\n\nvar player = new DogePlayer({ container: document.getElementById('player'), userId: 1277, vcode: 'ab5d59b9e352fc55', autoPlay: false, vtype: 98 });","source":"_drafts/standred.md","raw":"---\ntitle: Ar-Sr-Na 视频制作规范-仅制作者可查看\ntags:\n  - 未分类\nid: '660'\ndate: 2020-05-22 13:35:57\n---\n\nStaff ONLT\n\nvar player = new DogePlayer({ container: document.getElementById('player'), userId: 1277, vcode: 'ab5d59b9e352fc55', autoPlay: false, vtype: 98 });","slug":"standred","published":0,"updated":"2022-07-20T05:04:16.763Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6xa001rc0nd45hq93mx","content":"<p>Staff ONLT</p>\n<p>var player &#x3D; new DogePlayer({ container: document.getElementById(‘player’), userId: 1277, vcode: ‘ab5d59b9e352fc55’, autoPlay: false, vtype: 98 });</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Staff ONLT</p>\n<p>var player &#x3D; new DogePlayer({ container: document.getElementById(‘player’), userId: 1277, vcode: ‘ab5d59b9e352fc55’, autoPlay: false, vtype: 98 });</p>\n"},{"title":"[Pr教程 Extra.扩展篇001]画质基础  素材","id":"215","date":"2019-03-30T04:03:22.000Z","_content":"\n目录：\n---\n\n[目录](http://www.saten.top/wp-content/uploads/2019/03/unnamed-file-1.pdf)[下载](http://www.saten.top/wp-content/uploads/2019/03/unnamed-file-1.pdf)\n\nBGM：Pax Japonica Groove - Pianophonic\n\nMMD1：Girls-弱音\n\n来源：Steam-Wallpaper Engine\n\nMMD2：【2018拜年祭单品】与你同行~B With U\n\n来源： https://www.bilibili.com/video/av20205649\n\n教程1：\\[pr基础教程\\]pr秒表及倒计时效果\n\n教程2：\\[pr基础教程027，字幕教程002\\]镂空字幕效果\n\n全视频参数：\n\n分辨率帧率：1920\\*1080@60fps\n\n码率：CBR 6Mbps\n\n编码器：CPU\n\n渲染器：NVIDIA GeForce针对Adobe Premiere的CUDA","source":"_drafts/pr教程-extra-扩展篇001画质基础-素材.md","raw":"---\ntitle: '[Pr教程 Extra.扩展篇001]画质基础  素材'\ntags:\n  - 未分类\nid: '215'\ndate: 2019-03-30 12:03:22\n---\n\n目录：\n---\n\n[目录](http://www.saten.top/wp-content/uploads/2019/03/unnamed-file-1.pdf)[下载](http://www.saten.top/wp-content/uploads/2019/03/unnamed-file-1.pdf)\n\nBGM：Pax Japonica Groove - Pianophonic\n\nMMD1：Girls-弱音\n\n来源：Steam-Wallpaper Engine\n\nMMD2：【2018拜年祭单品】与你同行~B With U\n\n来源： https://www.bilibili.com/video/av20205649\n\n教程1：\\[pr基础教程\\]pr秒表及倒计时效果\n\n教程2：\\[pr基础教程027，字幕教程002\\]镂空字幕效果\n\n全视频参数：\n\n分辨率帧率：1920\\*1080@60fps\n\n码率：CBR 6Mbps\n\n编码器：CPU\n\n渲染器：NVIDIA GeForce针对Adobe Premiere的CUDA","slug":"pr教程-extra-扩展篇001画质基础-素材","published":0,"updated":"2022-07-20T05:04:16.763Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6xb001tc0nd3ztdgcxd","content":"<h2 id=\"目录：\"><a href=\"#目录：\" class=\"headerlink\" title=\"目录：\"></a>目录：</h2><p><a href=\"http://www.saten.top/wp-content/uploads/2019/03/unnamed-file-1.pdf\">目录</a><a href=\"http://www.saten.top/wp-content/uploads/2019/03/unnamed-file-1.pdf\">下载</a></p>\n<p>BGM：Pax Japonica Groove - Pianophonic</p>\n<p>MMD1：Girls-弱音</p>\n<p>来源：Steam-Wallpaper Engine</p>\n<p>MMD2：【2018拜年祭单品】与你同行~B With U</p>\n<p>来源： <a href=\"https://www.bilibili.com/video/av20205649\">https://www.bilibili.com/video/av20205649</a></p>\n<p>教程1：[pr基础教程]pr秒表及倒计时效果</p>\n<p>教程2：[pr基础教程027，字幕教程002]镂空字幕效果</p>\n<p>全视频参数：</p>\n<p>分辨率帧率：1920*1080@60fps</p>\n<p>码率：CBR 6Mbps</p>\n<p>编码器：CPU</p>\n<p>渲染器：NVIDIA GeForce针对Adobe Premiere的CUDA</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"目录：\"><a href=\"#目录：\" class=\"headerlink\" title=\"目录：\"></a>目录：</h2><p><a href=\"http://www.saten.top/wp-content/uploads/2019/03/unnamed-file-1.pdf\">目录</a><a href=\"http://www.saten.top/wp-content/uploads/2019/03/unnamed-file-1.pdf\">下载</a></p>\n<p>BGM：Pax Japonica Groove - Pianophonic</p>\n<p>MMD1：Girls-弱音</p>\n<p>来源：Steam-Wallpaper Engine</p>\n<p>MMD2：【2018拜年祭单品】与你同行~B With U</p>\n<p>来源： <a href=\"https://www.bilibili.com/video/av20205649\">https://www.bilibili.com/video/av20205649</a></p>\n<p>教程1：[pr基础教程]pr秒表及倒计时效果</p>\n<p>教程2：[pr基础教程027，字幕教程002]镂空字幕效果</p>\n<p>全视频参数：</p>\n<p>分辨率帧率：1920*1080@60fps</p>\n<p>码率：CBR 6Mbps</p>\n<p>编码器：CPU</p>\n<p>渲染器：NVIDIA GeForce针对Adobe Premiere的CUDA</p>\n"},{"title":"[Vlog-001]2019南宁月邪动漫广西行  素材归档","id":"307","date":"2019-05-02T02:57:20.000Z","_content":"\n摄像机：红米3x  \n后期软件：Adobe Premiere  \n分辨率：2300\\*1080  \n帧率：30fps（部分升格画面为60fps补帧）  \n地点：广西南宁市青秀区南宁国际会展中心  \n\nSTAFF  \n前期拍摄，后期制作：Ar-Sr-Na  \n友情客串：白夜叉leaf  \nBGM：KemimikE - Adventure (KemimikE 2017 Rework)\n\nBGM：MitiS,Adara - Moments\n\nBGM： Hyper Potions - Surf\n\n本视频制作用时6小时，拉镜部分非常复杂， 我的手机拍摄的时候镜头掉了一块东西下来，导致有时候拍出来的照片是绿色的，而且画质渣\n\n感谢bilibili@[蛋挞桑丶](https://space.bilibili.com/32391332) 提供的漫展视频模型\n\n声明：版权所有：bilibili@Ar-Sr-Na，禁止以一切形式转载，未经同意，禁止商用！\n\n* * *\n\n拉镜效果：递进缩放  \n[https://www.bilibili.com/video/av48255231](https://www.bilibili.com/video/av48255231)\n\n快闪教程：  \n[https://www.bilibili.com/video/av42089853](https://www.bilibili.com/video/av42089853)\n\n升格-补帧教程：  \n[https://www.bilibili.com/video/av33575809](https://www.bilibili.com/video/av33575809)\n\n升格降格-变速教程：  \n[https://www.bilibili.com/video/av41610642](https://www.bilibili.com/video/av41610642)\n\n融合水印效果：  \n[https://www.bilibili.com/video/av34746252](https://www.bilibili.com/video/av34746252)\n\n踩点教程：  \n[https://www.bilibili.com/video/av31511571](https://www.bilibili.com/video/av31511571)\n\n缩放效果：  \n[https://www.bilibili.com/video/av22257068](https://www.bilibili.com/video/av22257068)\n\n关键帧移动教程 ：  \n[https://www.bilibili.com/video/av48592892](https://www.bilibili.com/video/av48592892)\n\n补帧升格教程：  \n[https://www.bilibili.com/video/av51265839](https://www.bilibili.com/video/av51265839)\n\nExtra-防抖教程：  \n[https://www.bilibili.com/video/av51204724](https://www.bilibili.com/video/av51204724)\n\n[![知识共享许可协议](https://i.creativecommons.org/l/by/4.0/88x31.png)](http://creativecommons.org/licenses/by/4.0/)  \n本作品采用[知识共享署名 4.0 国际许可协议](http://creativecommons.org/licenses/by/4.0/)进行许可。","source":"_drafts/vlog-0012019南宁月邪动漫广西行-素材归档.md","raw":"---\ntitle: '[Vlog-001]2019南宁月邪动漫广西行  素材归档'\ntags:\n  - 未分类\nid: '307'\ndate: 2019-05-02 10:57:20\n---\n\n摄像机：红米3x  \n后期软件：Adobe Premiere  \n分辨率：2300\\*1080  \n帧率：30fps（部分升格画面为60fps补帧）  \n地点：广西南宁市青秀区南宁国际会展中心  \n\nSTAFF  \n前期拍摄，后期制作：Ar-Sr-Na  \n友情客串：白夜叉leaf  \nBGM：KemimikE - Adventure (KemimikE 2017 Rework)\n\nBGM：MitiS,Adara - Moments\n\nBGM： Hyper Potions - Surf\n\n本视频制作用时6小时，拉镜部分非常复杂， 我的手机拍摄的时候镜头掉了一块东西下来，导致有时候拍出来的照片是绿色的，而且画质渣\n\n感谢bilibili@[蛋挞桑丶](https://space.bilibili.com/32391332) 提供的漫展视频模型\n\n声明：版权所有：bilibili@Ar-Sr-Na，禁止以一切形式转载，未经同意，禁止商用！\n\n* * *\n\n拉镜效果：递进缩放  \n[https://www.bilibili.com/video/av48255231](https://www.bilibili.com/video/av48255231)\n\n快闪教程：  \n[https://www.bilibili.com/video/av42089853](https://www.bilibili.com/video/av42089853)\n\n升格-补帧教程：  \n[https://www.bilibili.com/video/av33575809](https://www.bilibili.com/video/av33575809)\n\n升格降格-变速教程：  \n[https://www.bilibili.com/video/av41610642](https://www.bilibili.com/video/av41610642)\n\n融合水印效果：  \n[https://www.bilibili.com/video/av34746252](https://www.bilibili.com/video/av34746252)\n\n踩点教程：  \n[https://www.bilibili.com/video/av31511571](https://www.bilibili.com/video/av31511571)\n\n缩放效果：  \n[https://www.bilibili.com/video/av22257068](https://www.bilibili.com/video/av22257068)\n\n关键帧移动教程 ：  \n[https://www.bilibili.com/video/av48592892](https://www.bilibili.com/video/av48592892)\n\n补帧升格教程：  \n[https://www.bilibili.com/video/av51265839](https://www.bilibili.com/video/av51265839)\n\nExtra-防抖教程：  \n[https://www.bilibili.com/video/av51204724](https://www.bilibili.com/video/av51204724)\n\n[![知识共享许可协议](https://i.creativecommons.org/l/by/4.0/88x31.png)](http://creativecommons.org/licenses/by/4.0/)  \n本作品采用[知识共享署名 4.0 国际许可协议](http://creativecommons.org/licenses/by/4.0/)进行许可。","slug":"vlog-0012019南宁月邪动漫广西行-素材归档","published":0,"updated":"2022-07-20T05:04:16.764Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6xb001vc0nd08fjgris","content":"<p>摄像机：红米3x<br>后期软件：Adobe Premiere<br>分辨率：2300*1080<br>帧率：30fps（部分升格画面为60fps补帧）<br>地点：广西南宁市青秀区南宁国际会展中心  </p>\n<p>STAFF<br>前期拍摄，后期制作：Ar-Sr-Na<br>友情客串：白夜叉leaf<br>BGM：KemimikE - Adventure (KemimikE 2017 Rework)</p>\n<p>BGM：MitiS,Adara - Moments</p>\n<p>BGM： Hyper Potions - Surf</p>\n<p>本视频制作用时6小时，拉镜部分非常复杂， 我的手机拍摄的时候镜头掉了一块东西下来，导致有时候拍出来的照片是绿色的，而且画质渣</p>\n<p>感谢bilibili@<a href=\"https://space.bilibili.com/32391332\">蛋挞桑丶</a> 提供的漫展视频模型</p>\n<p>声明：版权所有：bilibili@Ar-Sr-Na，禁止以一切形式转载，未经同意，禁止商用！</p>\n<hr>\n<p>拉镜效果：递进缩放<br><a href=\"https://www.bilibili.com/video/av48255231\">https://www.bilibili.com/video/av48255231</a></p>\n<p>快闪教程：<br><a href=\"https://www.bilibili.com/video/av42089853\">https://www.bilibili.com/video/av42089853</a></p>\n<p>升格-补帧教程：<br><a href=\"https://www.bilibili.com/video/av33575809\">https://www.bilibili.com/video/av33575809</a></p>\n<p>升格降格-变速教程：<br><a href=\"https://www.bilibili.com/video/av41610642\">https://www.bilibili.com/video/av41610642</a></p>\n<p>融合水印效果：<br><a href=\"https://www.bilibili.com/video/av34746252\">https://www.bilibili.com/video/av34746252</a></p>\n<p>踩点教程：<br><a href=\"https://www.bilibili.com/video/av31511571\">https://www.bilibili.com/video/av31511571</a></p>\n<p>缩放效果：<br><a href=\"https://www.bilibili.com/video/av22257068\">https://www.bilibili.com/video/av22257068</a></p>\n<p>关键帧移动教程 ：<br><a href=\"https://www.bilibili.com/video/av48592892\">https://www.bilibili.com/video/av48592892</a></p>\n<p>补帧升格教程：<br><a href=\"https://www.bilibili.com/video/av51265839\">https://www.bilibili.com/video/av51265839</a></p>\n<p>Extra-防抖教程：<br><a href=\"https://www.bilibili.com/video/av51204724\">https://www.bilibili.com/video/av51204724</a></p>\n<p><a href=\"http://creativecommons.org/licenses/by/4.0/\"><img src=\"https://i.creativecommons.org/l/by/4.0/88x31.png\" alt=\"知识共享许可协议\"></a><br>本作品采用<a href=\"http://creativecommons.org/licenses/by/4.0/\">知识共享署名 4.0 国际许可协议</a>进行许可。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>摄像机：红米3x<br>后期软件：Adobe Premiere<br>分辨率：2300*1080<br>帧率：30fps（部分升格画面为60fps补帧）<br>地点：广西南宁市青秀区南宁国际会展中心  </p>\n<p>STAFF<br>前期拍摄，后期制作：Ar-Sr-Na<br>友情客串：白夜叉leaf<br>BGM：KemimikE - Adventure (KemimikE 2017 Rework)</p>\n<p>BGM：MitiS,Adara - Moments</p>\n<p>BGM： Hyper Potions - Surf</p>\n<p>本视频制作用时6小时，拉镜部分非常复杂， 我的手机拍摄的时候镜头掉了一块东西下来，导致有时候拍出来的照片是绿色的，而且画质渣</p>\n<p>感谢bilibili@<a href=\"https://space.bilibili.com/32391332\">蛋挞桑丶</a> 提供的漫展视频模型</p>\n<p>声明：版权所有：bilibili@Ar-Sr-Na，禁止以一切形式转载，未经同意，禁止商用！</p>\n<hr>\n<p>拉镜效果：递进缩放<br><a href=\"https://www.bilibili.com/video/av48255231\">https://www.bilibili.com/video/av48255231</a></p>\n<p>快闪教程：<br><a href=\"https://www.bilibili.com/video/av42089853\">https://www.bilibili.com/video/av42089853</a></p>\n<p>升格-补帧教程：<br><a href=\"https://www.bilibili.com/video/av33575809\">https://www.bilibili.com/video/av33575809</a></p>\n<p>升格降格-变速教程：<br><a href=\"https://www.bilibili.com/video/av41610642\">https://www.bilibili.com/video/av41610642</a></p>\n<p>融合水印效果：<br><a href=\"https://www.bilibili.com/video/av34746252\">https://www.bilibili.com/video/av34746252</a></p>\n<p>踩点教程：<br><a href=\"https://www.bilibili.com/video/av31511571\">https://www.bilibili.com/video/av31511571</a></p>\n<p>缩放效果：<br><a href=\"https://www.bilibili.com/video/av22257068\">https://www.bilibili.com/video/av22257068</a></p>\n<p>关键帧移动教程 ：<br><a href=\"https://www.bilibili.com/video/av48592892\">https://www.bilibili.com/video/av48592892</a></p>\n<p>补帧升格教程：<br><a href=\"https://www.bilibili.com/video/av51265839\">https://www.bilibili.com/video/av51265839</a></p>\n<p>Extra-防抖教程：<br><a href=\"https://www.bilibili.com/video/av51204724\">https://www.bilibili.com/video/av51204724</a></p>\n<p><a href=\"http://creativecommons.org/licenses/by/4.0/\"><img src=\"https://i.creativecommons.org/l/by/4.0/88x31.png\" alt=\"知识共享许可协议\"></a><br>本作品采用<a href=\"http://creativecommons.org/licenses/by/4.0/\">知识共享署名 4.0 国际许可协议</a>进行许可。</p>\n"},{"title":"Ar-Sr-Na 科普 Vol024 如何打造爆款Cos-服装篇","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"www.arsrna.cn","authorAbout":"业余无线电，航天爱好者，个人网站www.arsrna.cn","authorDesc":"业余无线电，航天爱好者，个人网站www.arsrna.cn","comments":1,"date":"2020-08-24T09:50:11.000Z","keywords":"人文,知识,cosplay,服装,设计,cos,还原,道具","description":null,"index_img":"https://res.arsrna.cn/blogs/ency-vol24/hdpic.jpg","_content":"# 原视频：\n\n<iframe src=\"https://player.bilibili.com/player.html?aid=711760985&bvid=BV1iD4y127iS&cid=227681241&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<a href=\"https://www.bilibili.com/video/BV1iD4y127iS\" target=\"_blank\">点击进入</a>\n\n# 文案\n\n还原动漫角色的行为，称为角色扮演——Cos或Cosplay\n\"cosplay\"原指Costume Play，译为服饰扮演\n最初目的是商业展演，具有代表性的是美国迪士尼公司\n为了吸引游客，公司专门请来工作人员穿上米老鼠的服饰供游客拍照\n但当年的服饰相对粗糙，缺乏美感\n如今随着纺织技术的不断完善，制作这类服饰的成本不断降低\n且ACGN线下市场（说人话就是漫展）的不断扩大，Cosplay也从商业走进了日常生活\n人们对Cosplay的要求也就越来越多，似乎对Cosplay的上限没有了天花板\n\n想要cos一位角色，不仅仅要完成服装道具的还原\n角色关系，表情神态，性格等都要做一次全方位的了解\n光是衣服制作，都要耗上难以想象的精力\n\nup主咨询了 喵手喵脚工作室 定制服装的价格\n如果要还原度较高的服饰或者道具，价格在两千元上下\n简单的道具也要700起步\n\n以你妈（哔~~~HD彩条\n\n以芙兰达为例，要考虑到头饰长什么样，什么颜色\n假毛什么颜色，长发还是短发\n衣服长袖还是短袖，内衣什么颜色等等等等\n看视频自行体会\n\n首先根据图片设计服装的颜色，大小，形状\n按照尺寸大小制作出一张裁片图\n然后是寻找材料，剪裁，缝制\n剪裁需要把衣服的面料按要求剪切为衣片\n缝制对于服装更为重要\n这两步需要一定的专业水平，不然只能依据经验\n这时候衣服已经成型，还需要锁眼钉扣完成封装\n\n抛开制作难题外，还要解决版权问题\n对于个人爱好者来说，可以不用担心\n因为coser的行为给原作品的宣传提供了新途径\n试问哪个小男孩的作品不想出名呢？\n除非是对原作品歪曲造成了影响，版权方才会主动出击\n\n定制衣服那么贵不是没有道理的，除了制作麻烦\n其中还可能会用到一些专利\n例如制作工序和设计方法\n而且这套衣服设计出来可能只为你一个人制作，是独一无二的\n开模量很小，成本自然很高\n\n总之，Cosplay不仅仅是一个爱好，更是考验动手能力的平台\n这期仅介绍了服装，关于道具之类的，关注我，下期将会继续介绍\n","source":"_drafts/vol024.md","raw":"---\ntitle: Ar-Sr-Na 科普 Vol024 如何打造爆款Cos-服装篇\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: www.arsrna.cn\nauthorAbout: 业余无线电，航天爱好者，个人网站www.arsrna.cn\nauthorDesc: 业余无线电，航天爱好者，个人网站www.arsrna.cn\ncategories: 技术\ncomments: true\ndate: 2020-08-24 17:50:11\ntags:\nkeywords: 人文,知识,cosplay,服装,设计,cos,还原,道具\ndescription:\nindex_img: 'https://res.arsrna.cn/blogs/ency-vol24/hdpic.jpg'\n---\n# 原视频：\n\n<iframe src=\"https://player.bilibili.com/player.html?aid=711760985&bvid=BV1iD4y127iS&cid=227681241&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<a href=\"https://www.bilibili.com/video/BV1iD4y127iS\" target=\"_blank\">点击进入</a>\n\n# 文案\n\n还原动漫角色的行为，称为角色扮演——Cos或Cosplay\n\"cosplay\"原指Costume Play，译为服饰扮演\n最初目的是商业展演，具有代表性的是美国迪士尼公司\n为了吸引游客，公司专门请来工作人员穿上米老鼠的服饰供游客拍照\n但当年的服饰相对粗糙，缺乏美感\n如今随着纺织技术的不断完善，制作这类服饰的成本不断降低\n且ACGN线下市场（说人话就是漫展）的不断扩大，Cosplay也从商业走进了日常生活\n人们对Cosplay的要求也就越来越多，似乎对Cosplay的上限没有了天花板\n\n想要cos一位角色，不仅仅要完成服装道具的还原\n角色关系，表情神态，性格等都要做一次全方位的了解\n光是衣服制作，都要耗上难以想象的精力\n\nup主咨询了 喵手喵脚工作室 定制服装的价格\n如果要还原度较高的服饰或者道具，价格在两千元上下\n简单的道具也要700起步\n\n以你妈（哔~~~HD彩条\n\n以芙兰达为例，要考虑到头饰长什么样，什么颜色\n假毛什么颜色，长发还是短发\n衣服长袖还是短袖，内衣什么颜色等等等等\n看视频自行体会\n\n首先根据图片设计服装的颜色，大小，形状\n按照尺寸大小制作出一张裁片图\n然后是寻找材料，剪裁，缝制\n剪裁需要把衣服的面料按要求剪切为衣片\n缝制对于服装更为重要\n这两步需要一定的专业水平，不然只能依据经验\n这时候衣服已经成型，还需要锁眼钉扣完成封装\n\n抛开制作难题外，还要解决版权问题\n对于个人爱好者来说，可以不用担心\n因为coser的行为给原作品的宣传提供了新途径\n试问哪个小男孩的作品不想出名呢？\n除非是对原作品歪曲造成了影响，版权方才会主动出击\n\n定制衣服那么贵不是没有道理的，除了制作麻烦\n其中还可能会用到一些专利\n例如制作工序和设计方法\n而且这套衣服设计出来可能只为你一个人制作，是独一无二的\n开模量很小，成本自然很高\n\n总之，Cosplay不仅仅是一个爱好，更是考验动手能力的平台\n这期仅介绍了服装，关于道具之类的，关注我，下期将会继续介绍\n","slug":"vol024","published":0,"updated":"2023-01-17T08:55:38.575Z","layout":"post","photos":[],"link":"","_id":"clod0d6xc001xc0nddn172kyc","content":"<h1 id=\"原视频：\"><a href=\"#原视频：\" class=\"headerlink\" title=\"原视频：\"></a>原视频：</h1><iframe src=\"https://player.bilibili.com/player.html?aid=711760985&bvid=BV1iD4y127iS&cid=227681241&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<p><a href=\"https://www.bilibili.com/video/BV1iD4y127iS\" target=\"_blank\">点击进入</a></p>\n<h1 id=\"文案\"><a href=\"#文案\" class=\"headerlink\" title=\"文案\"></a>文案</h1><p>还原动漫角色的行为，称为角色扮演——Cos或Cosplay<br>“cosplay”原指Costume Play，译为服饰扮演<br>最初目的是商业展演，具有代表性的是美国迪士尼公司<br>为了吸引游客，公司专门请来工作人员穿上米老鼠的服饰供游客拍照<br>但当年的服饰相对粗糙，缺乏美感<br>如今随着纺织技术的不断完善，制作这类服饰的成本不断降低<br>且ACGN线下市场（说人话就是漫展）的不断扩大，Cosplay也从商业走进了日常生活<br>人们对Cosplay的要求也就越来越多，似乎对Cosplay的上限没有了天花板</p>\n<p>想要cos一位角色，不仅仅要完成服装道具的还原<br>角色关系，表情神态，性格等都要做一次全方位的了解<br>光是衣服制作，都要耗上难以想象的精力</p>\n<p>up主咨询了 喵手喵脚工作室 定制服装的价格<br>如果要还原度较高的服饰或者道具，价格在两千元上下<br>简单的道具也要700起步</p>\n<p>以你妈（哔~~~HD彩条</p>\n<p>以芙兰达为例，要考虑到头饰长什么样，什么颜色<br>假毛什么颜色，长发还是短发<br>衣服长袖还是短袖，内衣什么颜色等等等等<br>看视频自行体会</p>\n<p>首先根据图片设计服装的颜色，大小，形状<br>按照尺寸大小制作出一张裁片图<br>然后是寻找材料，剪裁，缝制<br>剪裁需要把衣服的面料按要求剪切为衣片<br>缝制对于服装更为重要<br>这两步需要一定的专业水平，不然只能依据经验<br>这时候衣服已经成型，还需要锁眼钉扣完成封装</p>\n<p>抛开制作难题外，还要解决版权问题<br>对于个人爱好者来说，可以不用担心<br>因为coser的行为给原作品的宣传提供了新途径<br>试问哪个小男孩的作品不想出名呢？<br>除非是对原作品歪曲造成了影响，版权方才会主动出击</p>\n<p>定制衣服那么贵不是没有道理的，除了制作麻烦<br>其中还可能会用到一些专利<br>例如制作工序和设计方法<br>而且这套衣服设计出来可能只为你一个人制作，是独一无二的<br>开模量很小，成本自然很高</p>\n<p>总之，Cosplay不仅仅是一个爱好，更是考验动手能力的平台<br>这期仅介绍了服装，关于道具之类的，关注我，下期将会继续介绍</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"原视频：\"><a href=\"#原视频：\" class=\"headerlink\" title=\"原视频：\"></a>原视频：</h1><iframe src=\"https://player.bilibili.com/player.html?aid=711760985&bvid=BV1iD4y127iS&cid=227681241&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<p><a href=\"https://www.bilibili.com/video/BV1iD4y127iS\" target=\"_blank\">点击进入</a></p>\n<h1 id=\"文案\"><a href=\"#文案\" class=\"headerlink\" title=\"文案\"></a>文案</h1><p>还原动漫角色的行为，称为角色扮演——Cos或Cosplay<br>“cosplay”原指Costume Play，译为服饰扮演<br>最初目的是商业展演，具有代表性的是美国迪士尼公司<br>为了吸引游客，公司专门请来工作人员穿上米老鼠的服饰供游客拍照<br>但当年的服饰相对粗糙，缺乏美感<br>如今随着纺织技术的不断完善，制作这类服饰的成本不断降低<br>且ACGN线下市场（说人话就是漫展）的不断扩大，Cosplay也从商业走进了日常生活<br>人们对Cosplay的要求也就越来越多，似乎对Cosplay的上限没有了天花板</p>\n<p>想要cos一位角色，不仅仅要完成服装道具的还原<br>角色关系，表情神态，性格等都要做一次全方位的了解<br>光是衣服制作，都要耗上难以想象的精力</p>\n<p>up主咨询了 喵手喵脚工作室 定制服装的价格<br>如果要还原度较高的服饰或者道具，价格在两千元上下<br>简单的道具也要700起步</p>\n<p>以你妈（哔~~~HD彩条</p>\n<p>以芙兰达为例，要考虑到头饰长什么样，什么颜色<br>假毛什么颜色，长发还是短发<br>衣服长袖还是短袖，内衣什么颜色等等等等<br>看视频自行体会</p>\n<p>首先根据图片设计服装的颜色，大小，形状<br>按照尺寸大小制作出一张裁片图<br>然后是寻找材料，剪裁，缝制<br>剪裁需要把衣服的面料按要求剪切为衣片<br>缝制对于服装更为重要<br>这两步需要一定的专业水平，不然只能依据经验<br>这时候衣服已经成型，还需要锁眼钉扣完成封装</p>\n<p>抛开制作难题外，还要解决版权问题<br>对于个人爱好者来说，可以不用担心<br>因为coser的行为给原作品的宣传提供了新途径<br>试问哪个小男孩的作品不想出名呢？<br>除非是对原作品歪曲造成了影响，版权方才会主动出击</p>\n<p>定制衣服那么贵不是没有道理的，除了制作麻烦<br>其中还可能会用到一些专利<br>例如制作工序和设计方法<br>而且这套衣服设计出来可能只为你一个人制作，是独一无二的<br>开模量很小，成本自然很高</p>\n<p>总之，Cosplay不仅仅是一个爱好，更是考验动手能力的平台<br>这期仅介绍了服装，关于道具之类的，关注我，下期将会继续介绍</p>\n"},{"title":"加密通话","id":"610","_content":"\n测试","source":"_drafts/加密通话.md","raw":"---\ntitle: 加密通话\ntags:\n  - 未分类\nid: '610'\n---\n\n测试","slug":"加密通话","published":0,"date":"2022-07-20T05:04:16.755Z","updated":"2022-07-20T05:04:16.755Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6xc001zc0nd77kz08qz","content":"<p>测试</p>\n","site":{"data":{}},"excerpt":"","more":"<p>测试</p>\n"},{"title":"关于近期被喷事件的后续以及警告","id":"341","_content":"\n我当初选择做up主分享经验就是为了赢得观众喜爱\n\n但是有些人却趁这个机会，才绕过重重途径，想办法逃避会员考试，以及根本就不会阅读社区规范地在评论区，弹幕区以及能互动的地方进行人身攻击，侮辱","source":"_drafts/关于近期被喷事件的后续以及警告.md","raw":"---\ntitle: 关于近期被喷事件的后续以及警告\ntags:\n  - 未分类\nid: '341'\n---\n\n我当初选择做up主分享经验就是为了赢得观众喜爱\n\n但是有些人却趁这个机会，才绕过重重途径，想办法逃避会员考试，以及根本就不会阅读社区规范地在评论区，弹幕区以及能互动的地方进行人身攻击，侮辱","slug":"关于近期被喷事件的后续以及警告","published":0,"date":"2022-07-20T05:04:16.755Z","updated":"2022-07-20T05:04:16.755Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6xd0021c0ndgi568cmo","content":"<p>我当初选择做up主分享经验就是为了赢得观众喜爱</p>\n<p>但是有些人却趁这个机会，才绕过重重途径，想办法逃避会员考试，以及根本就不会阅读社区规范地在评论区，弹幕区以及能互动的地方进行人身攻击，侮辱</p>\n","site":{"data":{}},"excerpt":"","more":"<p>我当初选择做up主分享经验就是为了赢得观众喜爱</p>\n<p>但是有些人却趁这个机会，才绕过重重途径，想办法逃避会员考试，以及根本就不会阅读社区规范地在评论区，弹幕区以及能互动的地方进行人身攻击，侮辱</p>\n"},{"title":"博客全站迁移至Serverless架构","date":"2020-08-02T08:21:16.000Z","_content":"# 博客全站迁移至Serverless架构\n\n2020 8 3，服务器即将到期，这台服务器将会是最后一台服务器，服务器IaaS传统架构从2018年建站至今，已经消费1000+元，意味着每个月差不多30元，而且还得手动维护，手动上传文件，如果做一个全站大搬迁就得花上几十分钟，小文件更慢\n\n但是迁移到Serverless就会出现这几方面的问题\n\n1.如果是静态网站，没大问题\n\n2.PHP冷启动：速度特别特别慢，不适合动态网页，所以博客就从WordPress转到Hexo了\n\n3.https，SSL证书就得考虑CDN，腾讯云COS还不支持自定义SSL，CloudFlare太慢，反代理需要服务器\n\n4.部署容易蹦错Serverless Framework每次deploy之后对象存储的强制 HTTPS都会开启，每次部署完每次域名一访问都会重定向次数过多\n\n新的架构，也是新的开始，它带来的成本不只是低，还学习了新的架构，无论是前端，后端，都不用考虑运行，只考虑你的函数，他可能是未来的趋势，目前估测成本不会高于20块每个月，(除了域名)\n\n# 更多可能，需要大家一同探索\n\n![我永远喜欢御坂美琴](https://sword-1257609559.cos.ap-hongkong.myqcloud.com/SFServerless.jpg)","source":"_drafts/博客全站迁移至Serverless架构.md","raw":"---\ntitle: 博客全站迁移至Serverless架构\ndate: 2020-08-02 16:21:16\ntags:\n---\n# 博客全站迁移至Serverless架构\n\n2020 8 3，服务器即将到期，这台服务器将会是最后一台服务器，服务器IaaS传统架构从2018年建站至今，已经消费1000+元，意味着每个月差不多30元，而且还得手动维护，手动上传文件，如果做一个全站大搬迁就得花上几十分钟，小文件更慢\n\n但是迁移到Serverless就会出现这几方面的问题\n\n1.如果是静态网站，没大问题\n\n2.PHP冷启动：速度特别特别慢，不适合动态网页，所以博客就从WordPress转到Hexo了\n\n3.https，SSL证书就得考虑CDN，腾讯云COS还不支持自定义SSL，CloudFlare太慢，反代理需要服务器\n\n4.部署容易蹦错Serverless Framework每次deploy之后对象存储的强制 HTTPS都会开启，每次部署完每次域名一访问都会重定向次数过多\n\n新的架构，也是新的开始，它带来的成本不只是低，还学习了新的架构，无论是前端，后端，都不用考虑运行，只考虑你的函数，他可能是未来的趋势，目前估测成本不会高于20块每个月，(除了域名)\n\n# 更多可能，需要大家一同探索\n\n![我永远喜欢御坂美琴](https://sword-1257609559.cos.ap-hongkong.myqcloud.com/SFServerless.jpg)","slug":"博客全站迁移至Serverless架构","published":0,"updated":"2022-07-20T05:04:16.765Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6xe0023c0nd97ij5y78","content":"<h1 id=\"博客全站迁移至Serverless架构\"><a href=\"#博客全站迁移至Serverless架构\" class=\"headerlink\" title=\"博客全站迁移至Serverless架构\"></a>博客全站迁移至Serverless架构</h1><p>2020 8 3，服务器即将到期，这台服务器将会是最后一台服务器，服务器IaaS传统架构从2018年建站至今，已经消费1000+元，意味着每个月差不多30元，而且还得手动维护，手动上传文件，如果做一个全站大搬迁就得花上几十分钟，小文件更慢</p>\n<p>但是迁移到Serverless就会出现这几方面的问题</p>\n<p>1.如果是静态网站，没大问题</p>\n<p>2.PHP冷启动：速度特别特别慢，不适合动态网页，所以博客就从WordPress转到Hexo了</p>\n<p>3.https，SSL证书就得考虑CDN，腾讯云COS还不支持自定义SSL，CloudFlare太慢，反代理需要服务器</p>\n<p>4.部署容易蹦错Serverless Framework每次deploy之后对象存储的强制 HTTPS都会开启，每次部署完每次域名一访问都会重定向次数过多</p>\n<p>新的架构，也是新的开始，它带来的成本不只是低，还学习了新的架构，无论是前端，后端，都不用考虑运行，只考虑你的函数，他可能是未来的趋势，目前估测成本不会高于20块每个月，(除了域名)</p>\n<h1 id=\"更多可能，需要大家一同探索\"><a href=\"#更多可能，需要大家一同探索\" class=\"headerlink\" title=\"更多可能，需要大家一同探索\"></a>更多可能，需要大家一同探索</h1><p><img src=\"https://sword-1257609559.cos.ap-hongkong.myqcloud.com/SFServerless.jpg\" alt=\"我永远喜欢御坂美琴\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"博客全站迁移至Serverless架构\"><a href=\"#博客全站迁移至Serverless架构\" class=\"headerlink\" title=\"博客全站迁移至Serverless架构\"></a>博客全站迁移至Serverless架构</h1><p>2020 8 3，服务器即将到期，这台服务器将会是最后一台服务器，服务器IaaS传统架构从2018年建站至今，已经消费1000+元，意味着每个月差不多30元，而且还得手动维护，手动上传文件，如果做一个全站大搬迁就得花上几十分钟，小文件更慢</p>\n<p>但是迁移到Serverless就会出现这几方面的问题</p>\n<p>1.如果是静态网站，没大问题</p>\n<p>2.PHP冷启动：速度特别特别慢，不适合动态网页，所以博客就从WordPress转到Hexo了</p>\n<p>3.https，SSL证书就得考虑CDN，腾讯云COS还不支持自定义SSL，CloudFlare太慢，反代理需要服务器</p>\n<p>4.部署容易蹦错Serverless Framework每次deploy之后对象存储的强制 HTTPS都会开启，每次部署完每次域名一访问都会重定向次数过多</p>\n<p>新的架构，也是新的开始，它带来的成本不只是低，还学习了新的架构，无论是前端，后端，都不用考虑运行，只考虑你的函数，他可能是未来的趋势，目前估测成本不会高于20块每个月，(除了域名)</p>\n<h1 id=\"更多可能，需要大家一同探索\"><a href=\"#更多可能，需要大家一同探索\" class=\"headerlink\" title=\"更多可能，需要大家一同探索\"></a>更多可能，需要大家一同探索</h1><p><img src=\"https://sword-1257609559.cos.ap-hongkong.myqcloud.com/SFServerless.jpg\" alt=\"我永远喜欢御坂美琴\"></p>\n"},{"title":"#第六届立创电赛#LA3600 5段前级均衡器","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"https://www.arsrna.cn","authorAbout":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","authorDesc":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","comments":1,"date":"2021-08-09T08:26:32.000Z","keywords":"电子,设计,前级,HiFi","description":null,"index_img":"https://image.lceda.cn/pullimage/du5XLodYCWLoCPq5ynOlwrINFW8fMPdanxzDvmxs.jpeg","_content":"为了让音频各频段饱满，弥补音响缺陷，加了LA3600 五段均衡器芯片\n搭配功放使用\n\n![https://image.lceda.cn/documents/a22fda8593ed4beea50c29c0f437e5fb.png](LA3600均衡模块)\n\n![https://image.lceda.cn/documents/efdcce019faf453185c18ca449f3bfe6.png](PCB_LA3600均衡器模块)\n\n# 工程详情\n\n[https://oshwhub.com/13026918161/la3600_5](工程详情)\n\n# 视频讲解\n\n<iframe src=\"https://player.bilibili.com/player.html?aid=889584279&bvid=BV1VP4y1x74G&cid=383161951&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n","source":"_posts/08-0902-E-LA3600.md","raw":"---\ntitle: '#第六届立创电赛#LA3600 5段前级均衡器'\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: 'https://www.arsrna.cn'\nauthorAbout: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\nauthorDesc: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\ncomments: true\ndate: 2021-08-09 16:26:32\ncategories: 技术\ntags: 电子,设计,前级,HiFi\nkeywords: 电子,设计,前级,HiFi\ndescription:\nindex_img: https://image.lceda.cn/pullimage/du5XLodYCWLoCPq5ynOlwrINFW8fMPdanxzDvmxs.jpeg\n---\n为了让音频各频段饱满，弥补音响缺陷，加了LA3600 五段均衡器芯片\n搭配功放使用\n\n![https://image.lceda.cn/documents/a22fda8593ed4beea50c29c0f437e5fb.png](LA3600均衡模块)\n\n![https://image.lceda.cn/documents/efdcce019faf453185c18ca449f3bfe6.png](PCB_LA3600均衡器模块)\n\n# 工程详情\n\n[https://oshwhub.com/13026918161/la3600_5](工程详情)\n\n# 视频讲解\n\n<iframe src=\"https://player.bilibili.com/player.html?aid=889584279&bvid=BV1VP4y1x74G&cid=383161951&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n","slug":"08-0902-E-LA3600","published":1,"updated":"2023-01-17T08:55:38.564Z","layout":"post","photos":[],"link":"","_id":"clod0d6xf0026c0nd8wvf4w08","content":"<p>为了让音频各频段饱满，弥补音响缺陷，加了LA3600 五段均衡器芯片<br>搭配功放使用</p>\n<p><img src=\"/LA3600%E5%9D%87%E8%A1%A1%E6%A8%A1%E5%9D%97\" alt=\"https://image.lceda.cn/documents/a22fda8593ed4beea50c29c0f437e5fb.png\"></p>\n<p><img src=\"/PCB_LA3600%E5%9D%87%E8%A1%A1%E5%99%A8%E6%A8%A1%E5%9D%97\" alt=\"https://image.lceda.cn/documents/efdcce019faf453185c18ca449f3bfe6.png\"></p>\n<h1 id=\"工程详情\"><a href=\"#工程详情\" class=\"headerlink\" title=\"工程详情\"></a>工程详情</h1><p><a href=\"%E5%B7%A5%E7%A8%8B%E8%AF%A6%E6%83%85\">https://oshwhub.com/13026918161/la3600_5</a></p>\n<h1 id=\"视频讲解\"><a href=\"#视频讲解\" class=\"headerlink\" title=\"视频讲解\"></a>视频讲解</h1><iframe src=\"https://player.bilibili.com/player.html?aid=889584279&bvid=BV1VP4y1x74G&cid=383161951&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n","site":{"data":{}},"excerpt":"","more":"<p>为了让音频各频段饱满，弥补音响缺陷，加了LA3600 五段均衡器芯片<br>搭配功放使用</p>\n<p><img src=\"/LA3600%E5%9D%87%E8%A1%A1%E6%A8%A1%E5%9D%97\" alt=\"https://image.lceda.cn/documents/a22fda8593ed4beea50c29c0f437e5fb.png\"></p>\n<p><img src=\"/PCB_LA3600%E5%9D%87%E8%A1%A1%E5%99%A8%E6%A8%A1%E5%9D%97\" alt=\"https://image.lceda.cn/documents/efdcce019faf453185c18ca449f3bfe6.png\"></p>\n<h1 id=\"工程详情\"><a href=\"#工程详情\" class=\"headerlink\" title=\"工程详情\"></a>工程详情</h1><p><a href=\"%E5%B7%A5%E7%A8%8B%E8%AF%A6%E6%83%85\">https://oshwhub.com/13026918161/la3600_5</a></p>\n<h1 id=\"视频讲解\"><a href=\"#视频讲解\" class=\"headerlink\" title=\"视频讲解\"></a>视频讲解</h1><iframe src=\"https://player.bilibili.com/player.html?aid=889584279&bvid=BV1VP4y1x74G&cid=383161951&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n"},{"title":"少数","author":"Ar-Sr-Na","avatar":"https://cravatar.cn/avatar/54fda30484d4c28e816ea8b0bb112229","authorLink":"www.arsrna.cn","authorAbout":"突破计算边界，构筑数字视界，www.arsrna.cn","authorDesc":"突破计算边界，构筑数字视界，www.arsrna.cn","comments":1,"date":"2023-07-15T11:11:00.000Z","keywords":"杂谈","description":"这个世界上，一定存在多和少。","_content":"\n# 真\n\n6月24日之后，各省高考成绩陆续公布。那段时间，无论是朋友圈，qq空间还是抖音快手等社交平台上，人才辈出，“人均985”的成绩，600，650，再低也低不过550的比比皆是。\n\n而当年高考还没550，没考进985 211等院校的我，陷入了沉默。\n\n> 这个世界上，难道只有他们吗？\n\n## 最后一顿饭\n\n这是今年3月19日，发生在江苏无锡的一个新闻。\n\n> 无锡一外卖小哥接单准备取餐时，细心的他发现订单备注上写着一行字“最后一顿饭，吃完就上路了” ，再看送餐地址竟在河边。小哥觉得不对劲就报警了。该男子因为被骗了6000多元觉得生活无意义了而做出如此举动。\n\n而帖子评论区确实截然不同的气息，“这点钱就受不了，也太脆弱了”。\n\n## 当代数码圈\n\n先让时间回到2016年前后，小米发布了小米mix，这个新产品可是震撼整个手机圈的产品，是横空出世的第一款全面屏；2017，Apple发布了iPhone X，也是第一次采用了Face ID技术（拥有数十项专利），并且是iPhone的首款全面屏手机。\n\n在这之后的2022到今天，似乎已经没法再在手机身上找到什么亮点了。这么多场发布会，总结下来就是“我们比xxx牛逼”，“我们电池比他们大”，“我们信号遥遥领先”...... 除了比友商好，就是性能比上一代多了0.01%，相机又多了多少像素，后盖又是什么材质等等等等。\n\n作为消费者，也就是手机天天在手上用的，我们最关心的，不是你这多了100万像素的摄像头，也不是什么独一无二的定做后盖。握在手里舒服就行，拍得清楚就行，剩下的，我不愿意只为了那几秒钟的娱乐而多花4倍的加钱。\n\n我们天天都能在网络上看到很多评测大博主，说这个那个好的，挑不出毛病的手机；而到了我们只有十几播放量的吐槽视频呢？花了几千块钱买的手机，说坏就坏，不止一个两个的呢？真正的大众需求是什么？\n\n## 高考成绩\n\n抖音上，都能刷到xxx 700，xxx 600，xxx 650等喜报，但是似乎没有找到300分，400分，500分的喜报，为什么？难道高考最低分是550？\n\n在他们为成绩庆贺的时候，屏幕面前的我，除了对他们表示祝贺，内心还多了一些担忧——现在高考门槛那么低了吗？\n\n当我上qq聊天的时候，不少当年考生都在抱怨太难了，根本不是人做的。\n\n到头来为什么个个600分？\n\n因为有了600，他们才有自信出来“晒成绩”，而我们四五百的，可能会“没脸”，甚至“丢脸”。你还别说，这个互联网，什么小事都能被骂。\n\n我很理解500分甚至300以下的人群，这里存在一个“银牌心态”，金牌开心是因为得了第一，铜牌开心是因为进了前三，而银牌，本可以再冲一点就进金牌的，但是很可惜在银牌，产生了一种沮丧的心情。600分因为是金牌选手，很开心，300多分因为至少上了线有书读而不至于沮丧。\n\n600分变成了主流，大多数盖住了少数，300分难道就不行吗？300分，仍然有他们的道路，他们的方向，他们的人生。\n\n## 半夜\n\n如果半夜精力充足不想休息，可以上街走走，去火车站，医院，公园，你会发现，没有车的街道旁有人睡觉，火车站里不少人直接打起了地铺。\n\n他们，可能生活所迫，不得已留在这些地方。\n\n再次翻开手机抖音，大v明星，今天北京明天新加坡，什么名牌包包，吃个饭都要带几百个保镖，下个飞机全球人都围在旁边......似乎网友更倾向于这种生活，反而没有了解一些人的生活状况。\n\n> 文明的上限不应该看最强者，而是应该向下看，看最底层的人过的是什么样的生活。允许强大，也该允许弱小。\n\n当有人流浪街头时，收到的评论却是负面的“浪费资源，我才不做这种人”，而当明星拿着资本耀武扬威时，却是无脑“支持哥哥”。\n\n社会上的少数，在互联网上，是消失的\n\n## 简体中文互联网，就是垃圾\n\n先别着急评论，就上面4个例子，你属于哪一种人？也不要先给自己打标签，不要对号入座，我讲的，只不过是一些事实。\n\n如果在互联网，说到一些事实，戳中了一些人的痛点，那么这时候，最尖锐的矛盾最有趣的讨论就打响了。\n\n咱们先来看下\n\n- M2Ultra显存大于4090\n- 北京高考太简单了，河南高考不是给人考的\n- iOS动画比安卓流畅\n- 新闻学是垃圾\n- 机械革命那款4060笔记本只卖5999的电脑品质差\n- iPhone的视频效果超越同价位手机\n- 原神在国内无论画面还是效果遥遥领先\n- .......\n\n把这任何一条评论，发在他们所对应的领域，你会获得惊喜\n\n各种嘲讽，各种歪曲事实混淆概念来糊弄你的评论比比皆是。\n\n就拿第一条例子来说，评测用的是显存作为标准，M2吊打4090，这时候，评论区就拿算力开枪了，还有更厉害的，说GT610 1T显存，不也行么。打个比方，你要搬家，给你两个选择，大卡车还是跑车。家具就是你所要跑的测试内容，大卡车是M2，跑车是4090，显然一个空间大但是速度不快，另一个速度领先但是只能载一点东西，就这么说吧，人家算力不够，但是人家有资格，它能一次性帮你把家具搬完，跑车那点空间，估计连沙发都不能装下，所以没有资格。\n\n诶，事实陈述完了，就开始打仗了\n\n![1689417979359](/images/少数/1689417979359.png)\n\n杠到最后，除了胡乱发散的思维，根本没有一个正确的结果，正所谓“当局者迷旁观者清”，旁人自己的答案才是正确答案，吵来吵去，除了情绪发泄还有什么。\n\n# 少\n\n没有体验过，就不要站在制高点去批判人家。没有经历过一分钱难倒英雄汉的时候，不要用自己经济的优越，去刻意看地流浪汉的群体。改善拮据的生活、解决弟弟妹妹的学费、家人的医疗、老人的养老......他们连吃饱都没办法保证，还有那么多要支出的，这不仅仅是绝望，已经走向绝境。\n\n没有调查就没有发言权，如果你真正用过iPhone 14，哪怕不用14，你用12，你就能破除很多互联网言论；如果你当年不小心报了新闻学，就知道这是一门多无用的学科；如果你玩过原神，你会觉得这个画面简直无敌......\n\n上面这段话，是不是又太真实了点，别急，我还没写完。\n\n说真的，在这个互联网，有多少人真正体验、调查过真实情况，以为人人都是大v明星，不愁吃喝穿。“假如”也仅仅是假如，不能亲身体会到。\n\n身边的老人，有多少真的知道电梯怎么用，怎么上网买东西，怎么在网上订车票。这些对我们来说很简单，但是不能因为我们简单而忽略了少数人。他们为什么喜欢去菜市场买菜而不是在网上享受各种优惠，送货上门的便利；为什么不用APP订车票，又方便消息又及时。他们是不知道便利吗？我在门卫那边见到过一位年轻人教大叔用微信支付的，我进去拿快递的时候，顺带问了一问，他们也是知道我们天天从网上买东西很便宜便捷的，也知道这些优点，但是，却因为这部手机不会使用而感到无奈。\n\n# 结尾\n\n如果你不理解为什么菜市场还能活着，为什么有空调吹还要出外面，为什么点一点就能买到的东西偏要跑几公里的时候，就想想他们，如果找不到“他们”，那大概率“他们”就是少数人，也可能是你，或着是我。\n\n存在即合理，每一个你认为不可思议的东西，可能就是为了你所不能看见的“少数人”而准备的。\n\n有人可能因为不知道医院怎么挂号，而尴尬的手忙脚乱；有人可能因为高考没考好，不敢跟其他人诉说；有人可能小时候没读过书，不会识字，而面对着一大屏幕的车站，不知道怎么才能找到他的“儿子”。\n\n我第一次接触地铁这种高科技交通时，完全不知道怎么使用，怎么买票，怎么进出，到工作人员过来一步步指引我，才“尴尬”地完成了整个过程。也许你也会经历一些这种情况，所以，我们没有资格去贬低别人，因为当我们处于别人困境的时候，我们自己也不懂。\n\n这个世界不只是作为多数的他们，你我可能都属于“少数”，“尊重他人选择，尊重他人命运！”\n\n![1689419453277](/images/少数/1689419453277.png)\n\n![1689419458540](/images/少数/1689419458540.png)\n\n2023-7-15","source":"_drafts/少数.md","raw":"---\ntitle: 少数\nauthor: Ar-Sr-Na\navatar: 'https://cravatar.cn/avatar/54fda30484d4c28e816ea8b0bb112229'\nauthorLink: www.arsrna.cn\nauthorAbout: 突破计算边界，构筑数字视界，www.arsrna.cn\nauthorDesc: 突破计算边界，构筑数字视界，www.arsrna.cn\ncategories: 杂谈\ncomments: true\ndate: 2023-07-15 19:11\ntags: 杂谈\nkeywords: 杂谈\ndescription: 这个世界上，一定存在多和少。\n---\n\n# 真\n\n6月24日之后，各省高考成绩陆续公布。那段时间，无论是朋友圈，qq空间还是抖音快手等社交平台上，人才辈出，“人均985”的成绩，600，650，再低也低不过550的比比皆是。\n\n而当年高考还没550，没考进985 211等院校的我，陷入了沉默。\n\n> 这个世界上，难道只有他们吗？\n\n## 最后一顿饭\n\n这是今年3月19日，发生在江苏无锡的一个新闻。\n\n> 无锡一外卖小哥接单准备取餐时，细心的他发现订单备注上写着一行字“最后一顿饭，吃完就上路了” ，再看送餐地址竟在河边。小哥觉得不对劲就报警了。该男子因为被骗了6000多元觉得生活无意义了而做出如此举动。\n\n而帖子评论区确实截然不同的气息，“这点钱就受不了，也太脆弱了”。\n\n## 当代数码圈\n\n先让时间回到2016年前后，小米发布了小米mix，这个新产品可是震撼整个手机圈的产品，是横空出世的第一款全面屏；2017，Apple发布了iPhone X，也是第一次采用了Face ID技术（拥有数十项专利），并且是iPhone的首款全面屏手机。\n\n在这之后的2022到今天，似乎已经没法再在手机身上找到什么亮点了。这么多场发布会，总结下来就是“我们比xxx牛逼”，“我们电池比他们大”，“我们信号遥遥领先”...... 除了比友商好，就是性能比上一代多了0.01%，相机又多了多少像素，后盖又是什么材质等等等等。\n\n作为消费者，也就是手机天天在手上用的，我们最关心的，不是你这多了100万像素的摄像头，也不是什么独一无二的定做后盖。握在手里舒服就行，拍得清楚就行，剩下的，我不愿意只为了那几秒钟的娱乐而多花4倍的加钱。\n\n我们天天都能在网络上看到很多评测大博主，说这个那个好的，挑不出毛病的手机；而到了我们只有十几播放量的吐槽视频呢？花了几千块钱买的手机，说坏就坏，不止一个两个的呢？真正的大众需求是什么？\n\n## 高考成绩\n\n抖音上，都能刷到xxx 700，xxx 600，xxx 650等喜报，但是似乎没有找到300分，400分，500分的喜报，为什么？难道高考最低分是550？\n\n在他们为成绩庆贺的时候，屏幕面前的我，除了对他们表示祝贺，内心还多了一些担忧——现在高考门槛那么低了吗？\n\n当我上qq聊天的时候，不少当年考生都在抱怨太难了，根本不是人做的。\n\n到头来为什么个个600分？\n\n因为有了600，他们才有自信出来“晒成绩”，而我们四五百的，可能会“没脸”，甚至“丢脸”。你还别说，这个互联网，什么小事都能被骂。\n\n我很理解500分甚至300以下的人群，这里存在一个“银牌心态”，金牌开心是因为得了第一，铜牌开心是因为进了前三，而银牌，本可以再冲一点就进金牌的，但是很可惜在银牌，产生了一种沮丧的心情。600分因为是金牌选手，很开心，300多分因为至少上了线有书读而不至于沮丧。\n\n600分变成了主流，大多数盖住了少数，300分难道就不行吗？300分，仍然有他们的道路，他们的方向，他们的人生。\n\n## 半夜\n\n如果半夜精力充足不想休息，可以上街走走，去火车站，医院，公园，你会发现，没有车的街道旁有人睡觉，火车站里不少人直接打起了地铺。\n\n他们，可能生活所迫，不得已留在这些地方。\n\n再次翻开手机抖音，大v明星，今天北京明天新加坡，什么名牌包包，吃个饭都要带几百个保镖，下个飞机全球人都围在旁边......似乎网友更倾向于这种生活，反而没有了解一些人的生活状况。\n\n> 文明的上限不应该看最强者，而是应该向下看，看最底层的人过的是什么样的生活。允许强大，也该允许弱小。\n\n当有人流浪街头时，收到的评论却是负面的“浪费资源，我才不做这种人”，而当明星拿着资本耀武扬威时，却是无脑“支持哥哥”。\n\n社会上的少数，在互联网上，是消失的\n\n## 简体中文互联网，就是垃圾\n\n先别着急评论，就上面4个例子，你属于哪一种人？也不要先给自己打标签，不要对号入座，我讲的，只不过是一些事实。\n\n如果在互联网，说到一些事实，戳中了一些人的痛点，那么这时候，最尖锐的矛盾最有趣的讨论就打响了。\n\n咱们先来看下\n\n- M2Ultra显存大于4090\n- 北京高考太简单了，河南高考不是给人考的\n- iOS动画比安卓流畅\n- 新闻学是垃圾\n- 机械革命那款4060笔记本只卖5999的电脑品质差\n- iPhone的视频效果超越同价位手机\n- 原神在国内无论画面还是效果遥遥领先\n- .......\n\n把这任何一条评论，发在他们所对应的领域，你会获得惊喜\n\n各种嘲讽，各种歪曲事实混淆概念来糊弄你的评论比比皆是。\n\n就拿第一条例子来说，评测用的是显存作为标准，M2吊打4090，这时候，评论区就拿算力开枪了，还有更厉害的，说GT610 1T显存，不也行么。打个比方，你要搬家，给你两个选择，大卡车还是跑车。家具就是你所要跑的测试内容，大卡车是M2，跑车是4090，显然一个空间大但是速度不快，另一个速度领先但是只能载一点东西，就这么说吧，人家算力不够，但是人家有资格，它能一次性帮你把家具搬完，跑车那点空间，估计连沙发都不能装下，所以没有资格。\n\n诶，事实陈述完了，就开始打仗了\n\n![1689417979359](/images/少数/1689417979359.png)\n\n杠到最后，除了胡乱发散的思维，根本没有一个正确的结果，正所谓“当局者迷旁观者清”，旁人自己的答案才是正确答案，吵来吵去，除了情绪发泄还有什么。\n\n# 少\n\n没有体验过，就不要站在制高点去批判人家。没有经历过一分钱难倒英雄汉的时候，不要用自己经济的优越，去刻意看地流浪汉的群体。改善拮据的生活、解决弟弟妹妹的学费、家人的医疗、老人的养老......他们连吃饱都没办法保证，还有那么多要支出的，这不仅仅是绝望，已经走向绝境。\n\n没有调查就没有发言权，如果你真正用过iPhone 14，哪怕不用14，你用12，你就能破除很多互联网言论；如果你当年不小心报了新闻学，就知道这是一门多无用的学科；如果你玩过原神，你会觉得这个画面简直无敌......\n\n上面这段话，是不是又太真实了点，别急，我还没写完。\n\n说真的，在这个互联网，有多少人真正体验、调查过真实情况，以为人人都是大v明星，不愁吃喝穿。“假如”也仅仅是假如，不能亲身体会到。\n\n身边的老人，有多少真的知道电梯怎么用，怎么上网买东西，怎么在网上订车票。这些对我们来说很简单，但是不能因为我们简单而忽略了少数人。他们为什么喜欢去菜市场买菜而不是在网上享受各种优惠，送货上门的便利；为什么不用APP订车票，又方便消息又及时。他们是不知道便利吗？我在门卫那边见到过一位年轻人教大叔用微信支付的，我进去拿快递的时候，顺带问了一问，他们也是知道我们天天从网上买东西很便宜便捷的，也知道这些优点，但是，却因为这部手机不会使用而感到无奈。\n\n# 结尾\n\n如果你不理解为什么菜市场还能活着，为什么有空调吹还要出外面，为什么点一点就能买到的东西偏要跑几公里的时候，就想想他们，如果找不到“他们”，那大概率“他们”就是少数人，也可能是你，或着是我。\n\n存在即合理，每一个你认为不可思议的东西，可能就是为了你所不能看见的“少数人”而准备的。\n\n有人可能因为不知道医院怎么挂号，而尴尬的手忙脚乱；有人可能因为高考没考好，不敢跟其他人诉说；有人可能小时候没读过书，不会识字，而面对着一大屏幕的车站，不知道怎么才能找到他的“儿子”。\n\n我第一次接触地铁这种高科技交通时，完全不知道怎么使用，怎么买票，怎么进出，到工作人员过来一步步指引我，才“尴尬”地完成了整个过程。也许你也会经历一些这种情况，所以，我们没有资格去贬低别人，因为当我们处于别人困境的时候，我们自己也不懂。\n\n这个世界不只是作为多数的他们，你我可能都属于“少数”，“尊重他人选择，尊重他人命运！”\n\n![1689419453277](/images/少数/1689419453277.png)\n\n![1689419458540](/images/少数/1689419458540.png)\n\n2023-7-15","slug":"少数","published":0,"updated":"2023-07-15T11:24:44.501Z","layout":"post","photos":[],"link":"","_id":"clod0d6xg0027c0nd087afpr8","content":"<h1 id=\"真\"><a href=\"#真\" class=\"headerlink\" title=\"真\"></a>真</h1><p>6月24日之后，各省高考成绩陆续公布。那段时间，无论是朋友圈，qq空间还是抖音快手等社交平台上，人才辈出，“人均985”的成绩，600，650，再低也低不过550的比比皆是。</p>\n<p>而当年高考还没550，没考进985 211等院校的我，陷入了沉默。</p>\n<blockquote>\n<p>这个世界上，难道只有他们吗？</p>\n</blockquote>\n<h2 id=\"最后一顿饭\"><a href=\"#最后一顿饭\" class=\"headerlink\" title=\"最后一顿饭\"></a>最后一顿饭</h2><p>这是今年3月19日，发生在江苏无锡的一个新闻。</p>\n<blockquote>\n<p>无锡一外卖小哥接单准备取餐时，细心的他发现订单备注上写着一行字“最后一顿饭，吃完就上路了” ，再看送餐地址竟在河边。小哥觉得不对劲就报警了。该男子因为被骗了6000多元觉得生活无意义了而做出如此举动。</p>\n</blockquote>\n<p>而帖子评论区确实截然不同的气息，“这点钱就受不了，也太脆弱了”。</p>\n<h2 id=\"当代数码圈\"><a href=\"#当代数码圈\" class=\"headerlink\" title=\"当代数码圈\"></a>当代数码圈</h2><p>先让时间回到2016年前后，小米发布了小米mix，这个新产品可是震撼整个手机圈的产品，是横空出世的第一款全面屏；2017，Apple发布了iPhone X，也是第一次采用了Face ID技术（拥有数十项专利），并且是iPhone的首款全面屏手机。</p>\n<p>在这之后的2022到今天，似乎已经没法再在手机身上找到什么亮点了。这么多场发布会，总结下来就是“我们比xxx牛逼”，“我们电池比他们大”，“我们信号遥遥领先”…… 除了比友商好，就是性能比上一代多了0.01%，相机又多了多少像素，后盖又是什么材质等等等等。</p>\n<p>作为消费者，也就是手机天天在手上用的，我们最关心的，不是你这多了100万像素的摄像头，也不是什么独一无二的定做后盖。握在手里舒服就行，拍得清楚就行，剩下的，我不愿意只为了那几秒钟的娱乐而多花4倍的加钱。</p>\n<p>我们天天都能在网络上看到很多评测大博主，说这个那个好的，挑不出毛病的手机；而到了我们只有十几播放量的吐槽视频呢？花了几千块钱买的手机，说坏就坏，不止一个两个的呢？真正的大众需求是什么？</p>\n<h2 id=\"高考成绩\"><a href=\"#高考成绩\" class=\"headerlink\" title=\"高考成绩\"></a>高考成绩</h2><p>抖音上，都能刷到xxx 700，xxx 600，xxx 650等喜报，但是似乎没有找到300分，400分，500分的喜报，为什么？难道高考最低分是550？</p>\n<p>在他们为成绩庆贺的时候，屏幕面前的我，除了对他们表示祝贺，内心还多了一些担忧——现在高考门槛那么低了吗？</p>\n<p>当我上qq聊天的时候，不少当年考生都在抱怨太难了，根本不是人做的。</p>\n<p>到头来为什么个个600分？</p>\n<p>因为有了600，他们才有自信出来“晒成绩”，而我们四五百的，可能会“没脸”，甚至“丢脸”。你还别说，这个互联网，什么小事都能被骂。</p>\n<p>我很理解500分甚至300以下的人群，这里存在一个“银牌心态”，金牌开心是因为得了第一，铜牌开心是因为进了前三，而银牌，本可以再冲一点就进金牌的，但是很可惜在银牌，产生了一种沮丧的心情。600分因为是金牌选手，很开心，300多分因为至少上了线有书读而不至于沮丧。</p>\n<p>600分变成了主流，大多数盖住了少数，300分难道就不行吗？300分，仍然有他们的道路，他们的方向，他们的人生。</p>\n<h2 id=\"半夜\"><a href=\"#半夜\" class=\"headerlink\" title=\"半夜\"></a>半夜</h2><p>如果半夜精力充足不想休息，可以上街走走，去火车站，医院，公园，你会发现，没有车的街道旁有人睡觉，火车站里不少人直接打起了地铺。</p>\n<p>他们，可能生活所迫，不得已留在这些地方。</p>\n<p>再次翻开手机抖音，大v明星，今天北京明天新加坡，什么名牌包包，吃个饭都要带几百个保镖，下个飞机全球人都围在旁边……似乎网友更倾向于这种生活，反而没有了解一些人的生活状况。</p>\n<blockquote>\n<p>文明的上限不应该看最强者，而是应该向下看，看最底层的人过的是什么样的生活。允许强大，也该允许弱小。</p>\n</blockquote>\n<p>当有人流浪街头时，收到的评论却是负面的“浪费资源，我才不做这种人”，而当明星拿着资本耀武扬威时，却是无脑“支持哥哥”。</p>\n<p>社会上的少数，在互联网上，是消失的</p>\n<h2 id=\"简体中文互联网，就是垃圾\"><a href=\"#简体中文互联网，就是垃圾\" class=\"headerlink\" title=\"简体中文互联网，就是垃圾\"></a>简体中文互联网，就是垃圾</h2><p>先别着急评论，就上面4个例子，你属于哪一种人？也不要先给自己打标签，不要对号入座，我讲的，只不过是一些事实。</p>\n<p>如果在互联网，说到一些事实，戳中了一些人的痛点，那么这时候，最尖锐的矛盾最有趣的讨论就打响了。</p>\n<p>咱们先来看下</p>\n<ul>\n<li>M2Ultra显存大于4090</li>\n<li>北京高考太简单了，河南高考不是给人考的</li>\n<li>iOS动画比安卓流畅</li>\n<li>新闻学是垃圾</li>\n<li>机械革命那款4060笔记本只卖5999的电脑品质差</li>\n<li>iPhone的视频效果超越同价位手机</li>\n<li>原神在国内无论画面还是效果遥遥领先</li>\n<li>…….</li>\n</ul>\n<p>把这任何一条评论，发在他们所对应的领域，你会获得惊喜</p>\n<p>各种嘲讽，各种歪曲事实混淆概念来糊弄你的评论比比皆是。</p>\n<p>就拿第一条例子来说，评测用的是显存作为标准，M2吊打4090，这时候，评论区就拿算力开枪了，还有更厉害的，说GT610 1T显存，不也行么。打个比方，你要搬家，给你两个选择，大卡车还是跑车。家具就是你所要跑的测试内容，大卡车是M2，跑车是4090，显然一个空间大但是速度不快，另一个速度领先但是只能载一点东西，就这么说吧，人家算力不够，但是人家有资格，它能一次性帮你把家具搬完，跑车那点空间，估计连沙发都不能装下，所以没有资格。</p>\n<p>诶，事实陈述完了，就开始打仗了</p>\n<p><img src=\"/images/%E5%B0%91%E6%95%B0/1689417979359.png\" alt=\"1689417979359\"></p>\n<p>杠到最后，除了胡乱发散的思维，根本没有一个正确的结果，正所谓“当局者迷旁观者清”，旁人自己的答案才是正确答案，吵来吵去，除了情绪发泄还有什么。</p>\n<h1 id=\"少\"><a href=\"#少\" class=\"headerlink\" title=\"少\"></a>少</h1><p>没有体验过，就不要站在制高点去批判人家。没有经历过一分钱难倒英雄汉的时候，不要用自己经济的优越，去刻意看地流浪汉的群体。改善拮据的生活、解决弟弟妹妹的学费、家人的医疗、老人的养老……他们连吃饱都没办法保证，还有那么多要支出的，这不仅仅是绝望，已经走向绝境。</p>\n<p>没有调查就没有发言权，如果你真正用过iPhone 14，哪怕不用14，你用12，你就能破除很多互联网言论；如果你当年不小心报了新闻学，就知道这是一门多无用的学科；如果你玩过原神，你会觉得这个画面简直无敌……</p>\n<p>上面这段话，是不是又太真实了点，别急，我还没写完。</p>\n<p>说真的，在这个互联网，有多少人真正体验、调查过真实情况，以为人人都是大v明星，不愁吃喝穿。“假如”也仅仅是假如，不能亲身体会到。</p>\n<p>身边的老人，有多少真的知道电梯怎么用，怎么上网买东西，怎么在网上订车票。这些对我们来说很简单，但是不能因为我们简单而忽略了少数人。他们为什么喜欢去菜市场买菜而不是在网上享受各种优惠，送货上门的便利；为什么不用APP订车票，又方便消息又及时。他们是不知道便利吗？我在门卫那边见到过一位年轻人教大叔用微信支付的，我进去拿快递的时候，顺带问了一问，他们也是知道我们天天从网上买东西很便宜便捷的，也知道这些优点，但是，却因为这部手机不会使用而感到无奈。</p>\n<h1 id=\"结尾\"><a href=\"#结尾\" class=\"headerlink\" title=\"结尾\"></a>结尾</h1><p>如果你不理解为什么菜市场还能活着，为什么有空调吹还要出外面，为什么点一点就能买到的东西偏要跑几公里的时候，就想想他们，如果找不到“他们”，那大概率“他们”就是少数人，也可能是你，或着是我。</p>\n<p>存在即合理，每一个你认为不可思议的东西，可能就是为了你所不能看见的“少数人”而准备的。</p>\n<p>有人可能因为不知道医院怎么挂号，而尴尬的手忙脚乱；有人可能因为高考没考好，不敢跟其他人诉说；有人可能小时候没读过书，不会识字，而面对着一大屏幕的车站，不知道怎么才能找到他的“儿子”。</p>\n<p>我第一次接触地铁这种高科技交通时，完全不知道怎么使用，怎么买票，怎么进出，到工作人员过来一步步指引我，才“尴尬”地完成了整个过程。也许你也会经历一些这种情况，所以，我们没有资格去贬低别人，因为当我们处于别人困境的时候，我们自己也不懂。</p>\n<p>这个世界不只是作为多数的他们，你我可能都属于“少数”，“尊重他人选择，尊重他人命运！”</p>\n<p><img src=\"/images/%E5%B0%91%E6%95%B0/1689419453277.png\" alt=\"1689419453277\"></p>\n<p><img src=\"/images/%E5%B0%91%E6%95%B0/1689419458540.png\" alt=\"1689419458540\"></p>\n<p>2023-7-15</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"真\"><a href=\"#真\" class=\"headerlink\" title=\"真\"></a>真</h1><p>6月24日之后，各省高考成绩陆续公布。那段时间，无论是朋友圈，qq空间还是抖音快手等社交平台上，人才辈出，“人均985”的成绩，600，650，再低也低不过550的比比皆是。</p>\n<p>而当年高考还没550，没考进985 211等院校的我，陷入了沉默。</p>\n<blockquote>\n<p>这个世界上，难道只有他们吗？</p>\n</blockquote>\n<h2 id=\"最后一顿饭\"><a href=\"#最后一顿饭\" class=\"headerlink\" title=\"最后一顿饭\"></a>最后一顿饭</h2><p>这是今年3月19日，发生在江苏无锡的一个新闻。</p>\n<blockquote>\n<p>无锡一外卖小哥接单准备取餐时，细心的他发现订单备注上写着一行字“最后一顿饭，吃完就上路了” ，再看送餐地址竟在河边。小哥觉得不对劲就报警了。该男子因为被骗了6000多元觉得生活无意义了而做出如此举动。</p>\n</blockquote>\n<p>而帖子评论区确实截然不同的气息，“这点钱就受不了，也太脆弱了”。</p>\n<h2 id=\"当代数码圈\"><a href=\"#当代数码圈\" class=\"headerlink\" title=\"当代数码圈\"></a>当代数码圈</h2><p>先让时间回到2016年前后，小米发布了小米mix，这个新产品可是震撼整个手机圈的产品，是横空出世的第一款全面屏；2017，Apple发布了iPhone X，也是第一次采用了Face ID技术（拥有数十项专利），并且是iPhone的首款全面屏手机。</p>\n<p>在这之后的2022到今天，似乎已经没法再在手机身上找到什么亮点了。这么多场发布会，总结下来就是“我们比xxx牛逼”，“我们电池比他们大”，“我们信号遥遥领先”…… 除了比友商好，就是性能比上一代多了0.01%，相机又多了多少像素，后盖又是什么材质等等等等。</p>\n<p>作为消费者，也就是手机天天在手上用的，我们最关心的，不是你这多了100万像素的摄像头，也不是什么独一无二的定做后盖。握在手里舒服就行，拍得清楚就行，剩下的，我不愿意只为了那几秒钟的娱乐而多花4倍的加钱。</p>\n<p>我们天天都能在网络上看到很多评测大博主，说这个那个好的，挑不出毛病的手机；而到了我们只有十几播放量的吐槽视频呢？花了几千块钱买的手机，说坏就坏，不止一个两个的呢？真正的大众需求是什么？</p>\n<h2 id=\"高考成绩\"><a href=\"#高考成绩\" class=\"headerlink\" title=\"高考成绩\"></a>高考成绩</h2><p>抖音上，都能刷到xxx 700，xxx 600，xxx 650等喜报，但是似乎没有找到300分，400分，500分的喜报，为什么？难道高考最低分是550？</p>\n<p>在他们为成绩庆贺的时候，屏幕面前的我，除了对他们表示祝贺，内心还多了一些担忧——现在高考门槛那么低了吗？</p>\n<p>当我上qq聊天的时候，不少当年考生都在抱怨太难了，根本不是人做的。</p>\n<p>到头来为什么个个600分？</p>\n<p>因为有了600，他们才有自信出来“晒成绩”，而我们四五百的，可能会“没脸”，甚至“丢脸”。你还别说，这个互联网，什么小事都能被骂。</p>\n<p>我很理解500分甚至300以下的人群，这里存在一个“银牌心态”，金牌开心是因为得了第一，铜牌开心是因为进了前三，而银牌，本可以再冲一点就进金牌的，但是很可惜在银牌，产生了一种沮丧的心情。600分因为是金牌选手，很开心，300多分因为至少上了线有书读而不至于沮丧。</p>\n<p>600分变成了主流，大多数盖住了少数，300分难道就不行吗？300分，仍然有他们的道路，他们的方向，他们的人生。</p>\n<h2 id=\"半夜\"><a href=\"#半夜\" class=\"headerlink\" title=\"半夜\"></a>半夜</h2><p>如果半夜精力充足不想休息，可以上街走走，去火车站，医院，公园，你会发现，没有车的街道旁有人睡觉，火车站里不少人直接打起了地铺。</p>\n<p>他们，可能生活所迫，不得已留在这些地方。</p>\n<p>再次翻开手机抖音，大v明星，今天北京明天新加坡，什么名牌包包，吃个饭都要带几百个保镖，下个飞机全球人都围在旁边……似乎网友更倾向于这种生活，反而没有了解一些人的生活状况。</p>\n<blockquote>\n<p>文明的上限不应该看最强者，而是应该向下看，看最底层的人过的是什么样的生活。允许强大，也该允许弱小。</p>\n</blockquote>\n<p>当有人流浪街头时，收到的评论却是负面的“浪费资源，我才不做这种人”，而当明星拿着资本耀武扬威时，却是无脑“支持哥哥”。</p>\n<p>社会上的少数，在互联网上，是消失的</p>\n<h2 id=\"简体中文互联网，就是垃圾\"><a href=\"#简体中文互联网，就是垃圾\" class=\"headerlink\" title=\"简体中文互联网，就是垃圾\"></a>简体中文互联网，就是垃圾</h2><p>先别着急评论，就上面4个例子，你属于哪一种人？也不要先给自己打标签，不要对号入座，我讲的，只不过是一些事实。</p>\n<p>如果在互联网，说到一些事实，戳中了一些人的痛点，那么这时候，最尖锐的矛盾最有趣的讨论就打响了。</p>\n<p>咱们先来看下</p>\n<ul>\n<li>M2Ultra显存大于4090</li>\n<li>北京高考太简单了，河南高考不是给人考的</li>\n<li>iOS动画比安卓流畅</li>\n<li>新闻学是垃圾</li>\n<li>机械革命那款4060笔记本只卖5999的电脑品质差</li>\n<li>iPhone的视频效果超越同价位手机</li>\n<li>原神在国内无论画面还是效果遥遥领先</li>\n<li>…….</li>\n</ul>\n<p>把这任何一条评论，发在他们所对应的领域，你会获得惊喜</p>\n<p>各种嘲讽，各种歪曲事实混淆概念来糊弄你的评论比比皆是。</p>\n<p>就拿第一条例子来说，评测用的是显存作为标准，M2吊打4090，这时候，评论区就拿算力开枪了，还有更厉害的，说GT610 1T显存，不也行么。打个比方，你要搬家，给你两个选择，大卡车还是跑车。家具就是你所要跑的测试内容，大卡车是M2，跑车是4090，显然一个空间大但是速度不快，另一个速度领先但是只能载一点东西，就这么说吧，人家算力不够，但是人家有资格，它能一次性帮你把家具搬完，跑车那点空间，估计连沙发都不能装下，所以没有资格。</p>\n<p>诶，事实陈述完了，就开始打仗了</p>\n<p><img src=\"/images/%E5%B0%91%E6%95%B0/1689417979359.png\" alt=\"1689417979359\"></p>\n<p>杠到最后，除了胡乱发散的思维，根本没有一个正确的结果，正所谓“当局者迷旁观者清”，旁人自己的答案才是正确答案，吵来吵去，除了情绪发泄还有什么。</p>\n<h1 id=\"少\"><a href=\"#少\" class=\"headerlink\" title=\"少\"></a>少</h1><p>没有体验过，就不要站在制高点去批判人家。没有经历过一分钱难倒英雄汉的时候，不要用自己经济的优越，去刻意看地流浪汉的群体。改善拮据的生活、解决弟弟妹妹的学费、家人的医疗、老人的养老……他们连吃饱都没办法保证，还有那么多要支出的，这不仅仅是绝望，已经走向绝境。</p>\n<p>没有调查就没有发言权，如果你真正用过iPhone 14，哪怕不用14，你用12，你就能破除很多互联网言论；如果你当年不小心报了新闻学，就知道这是一门多无用的学科；如果你玩过原神，你会觉得这个画面简直无敌……</p>\n<p>上面这段话，是不是又太真实了点，别急，我还没写完。</p>\n<p>说真的，在这个互联网，有多少人真正体验、调查过真实情况，以为人人都是大v明星，不愁吃喝穿。“假如”也仅仅是假如，不能亲身体会到。</p>\n<p>身边的老人，有多少真的知道电梯怎么用，怎么上网买东西，怎么在网上订车票。这些对我们来说很简单，但是不能因为我们简单而忽略了少数人。他们为什么喜欢去菜市场买菜而不是在网上享受各种优惠，送货上门的便利；为什么不用APP订车票，又方便消息又及时。他们是不知道便利吗？我在门卫那边见到过一位年轻人教大叔用微信支付的，我进去拿快递的时候，顺带问了一问，他们也是知道我们天天从网上买东西很便宜便捷的，也知道这些优点，但是，却因为这部手机不会使用而感到无奈。</p>\n<h1 id=\"结尾\"><a href=\"#结尾\" class=\"headerlink\" title=\"结尾\"></a>结尾</h1><p>如果你不理解为什么菜市场还能活着，为什么有空调吹还要出外面，为什么点一点就能买到的东西偏要跑几公里的时候，就想想他们，如果找不到“他们”，那大概率“他们”就是少数人，也可能是你，或着是我。</p>\n<p>存在即合理，每一个你认为不可思议的东西，可能就是为了你所不能看见的“少数人”而准备的。</p>\n<p>有人可能因为不知道医院怎么挂号，而尴尬的手忙脚乱；有人可能因为高考没考好，不敢跟其他人诉说；有人可能小时候没读过书，不会识字，而面对着一大屏幕的车站，不知道怎么才能找到他的“儿子”。</p>\n<p>我第一次接触地铁这种高科技交通时，完全不知道怎么使用，怎么买票，怎么进出，到工作人员过来一步步指引我，才“尴尬”地完成了整个过程。也许你也会经历一些这种情况，所以，我们没有资格去贬低别人，因为当我们处于别人困境的时候，我们自己也不懂。</p>\n<p>这个世界不只是作为多数的他们，你我可能都属于“少数”，“尊重他人选择，尊重他人命运！”</p>\n<p><img src=\"/images/%E5%B0%91%E6%95%B0/1689419453277.png\" alt=\"1689419453277\"></p>\n<p><img src=\"/images/%E5%B0%91%E6%95%B0/1689419458540.png\" alt=\"1689419458540\"></p>\n<p>2023-7-15</p>\n"},{"title":"[帧扣+二值化]紫罗兰的永恒花园OP","id":"194","date":"2019-03-23T07:59:04.000Z","_content":"\n[帧分布](http://www.saten.top/wp-content/uploads/2019/03/1.pdf)[下载](http://www.saten.top/wp-content/uploads/2019/03/1.pdf)\n\n配置见上一篇文章\n\n原素材：《紫罗兰的永恒花园OP》4K60FPS","source":"_drafts/帧扣二值化紫罗兰的永恒花园op.md","raw":"---\ntitle: '[帧扣+二值化]紫罗兰的永恒花园OP'\ntags:\n  - 未分类\nid: '194'\ndate: 2019-03-23 15:59:04\n---\n\n[帧分布](http://www.saten.top/wp-content/uploads/2019/03/1.pdf)[下载](http://www.saten.top/wp-content/uploads/2019/03/1.pdf)\n\n配置见上一篇文章\n\n原素材：《紫罗兰的永恒花园OP》4K60FPS","slug":"帧扣二值化紫罗兰的永恒花园op","published":0,"updated":"2022-07-20T05:04:16.765Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6xh0029c0nd2b94fqlg","content":"<p><a href=\"http://www.saten.top/wp-content/uploads/2019/03/1.pdf\">帧分布</a><a href=\"http://www.saten.top/wp-content/uploads/2019/03/1.pdf\">下载</a></p>\n<p>配置见上一篇文章</p>\n<p>原素材：《紫罗兰的永恒花园OP》4K60FPS</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://www.saten.top/wp-content/uploads/2019/03/1.pdf\">帧分布</a><a href=\"http://www.saten.top/wp-content/uploads/2019/03/1.pdf\">下载</a></p>\n<p>配置见上一篇文章</p>\n<p>原素材：《紫罗兰的永恒花园OP》4K60FPS</p>\n"},{"title":"【印刷的艺术】浅谈激光照排技术与电路板设计的艺术","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"www.arsrna.cn","authorAbout":"粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","authorDesc":"粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","date":"2021-09-09T08:26:32.000Z","comments":1,"keywords":"硬件,电子,EDA,EDA软件,科技,二值化,技术","description":"2021年，PCB打样的价格越来越低，电子爱好者们狂喜，不得不提的就是EDA软件，它是设计电路板，设计原理图，仿真等功能为一体的电气工程软件，电子爱好者往往比较个性，pcb自然也会有自己的风格，一般我们往丝印层加的都是元器件编号，或者公司logo，自己的昵称，所以印刷时同一个颜色阻焊，板厂用的打印机也只有一种颜色，如果想要打印图片就惨不忍睹了，细节全丢，如何解决这个问题？","index_img":"https://res.arsrna.cn/blogs/08-0902P-A/jprb9ku4wg.png","_content":"# **导言**\n\n2021年，PCB打样的价格越来越低，电子爱好者们狂喜，不得不提的就是EDA软件，它是设计电路板，设计原理图，仿真等功能为一体的电气工程软件，电子爱好者往往比较个性，pcb自然也会有自己的风格，一般我们往丝印层加的都是元器件编号，或者公司logo，自己的昵称，所以印刷时同一个颜色阻焊，板厂用的打印机也只有一种颜色，如果想要打印图片就惨不忍睹了，细节全丢，如何解决这个问题？\n\n# **想法和原理**\n\n## **类比推理**\n\n如果你很细心观察身边的屏幕的话，你应该发现，彩色图片展现给你是因为有数万颗灯珠显示出来的，每颗灯珠又分为R,G.B三原色，通过改变RGB的电压就能调节颜色，比如R 4V，G 1V，B 0V，那么你得到的就是一个粉红色\n\n把照片打印出来，你会发现惨不忍睹，颗粒感特别严重，虽然现在的打印机都有5000\\*5000以上的分辨率，但是观感却不如720p的电脑屏幕，这是为什么\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/27d0c8hz88.png)\n如果我们把它扫描后放大\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/maph9t3oke.png)\n就会出现网格状的点阵\n\n这是因为打印机没法打印出深浅通道的墨水，打印的原色是CMYK，不能像RGB那样调节亮度，显示原理也不同，屏幕是发光源，而打印纸上的是因为环境光的漫反射产生的图像，环境光时时刻刻影响着打印质量。打印机不可能改变你眼睛看到的环境光，也不可能为了彩色照片去设计上万种颜色，但是人类的眼睛有一种特性，如果黑色点很密集，那就是黑色，如果拆散黑点，缩小，你会看到灰色，利用这一个特性，去延伸到更多颜色，实现深浅调节，所以这就不得不引出一个技术\n\n## **激光照排技术**\n\n中国的汉字印刷发展史也有很长一段时间了，汉字在激光照排技术里，过程就是把汉字先分解为点阵然后通过一系列工序定影，类似胶片，这样文字就能够在纸张上呈现了。同样可以运用到图像上，将图像的通道分离为CMYK，根据色深度对每一个通道的点阵进行打散，最后输出到打印机\n\n这样似乎解决了问题，不过，颜色的干扰会变得很明显，比如浅绿色，屏幕上面只要改变G的电压就行，只改变了一个像素；而纸张上，把一个绿色像素点拆分，可能就成了10个像素点，虽然打印分辨率和屏幕不是点对点，但是由于纸张的物理性质，墨水的表面张力会渗透到其它像素上，尤其是那些纸张很小的时候。计算机甚至不能处理点阵导致失真，如果你对着一段文字截图，然后缩小打印出来，就会看到像素重合造成的黑块，这也是文字边缘本身的问题，所以还是要回归问题的根源\n\n## **二值化技术**\n\n打印的墨水只有黑和无，那么我们的打印件也要有和无，也就是色阶只有0和255，比较常用的二值化方法则有：**双峰法**、**P参数法**、**迭代法**和**OTSU法**等。\n\n最简单方法就是把色阶压缩，四舍五入，低于50%的全部空白，高于50%的全部是黑色，这种简单粗暴的方法必然导致数据的丢失\n\n改变空白和全黑的阈值就能针对不同图片颜色差距上的修改\n\n# **应用**\n\n如同开头所描述的电子爱好者的个性需求，我也是个性需求者之一，设计过许多PCB，也多多少少会放置几张图\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/fhu0xo2gtb.jpg)\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/3ikeico4im.png)\n这是原图\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/jprb9ku4wg.png)\n如果直接用eda软件插入\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/8ip3ykttbd.png)\n![](https://res.arsrna.cn/blogs/08-0902P-A/32jmkw3gqd.png)\n和刚刚一对比，细节少了不少，很多地方断线，这是因为EDA处理二值化不是那么好\n\n所以我们手动处理，不让eda软件破坏细节\n\n这里实践用的是线稿，位图可以按照上面所说的激光照排散点\n\n## **教程**\n\n首先先把照片变为线稿，可以临摹，可以二阶最小值\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/0uga1hyym1.png)\nps里转线稿的方式很多，视频教程请见：[https://www.bilibili.com/video/BV1pb411n72J](https://www.bilibili.com/video/BV1pb411n72J)\n\n到这一步很成功就算完成一半了，因为后续图片质量如何就取决于这一步\n\n首先将这张图片的色阶稍微拉一下，让图片的颜色集中\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/0t23liux9p.png)\n选择-色彩范围，点击背景，吸取下背景，然后delete删除背景（一定要是栅格图层或者普通图层，不能是智能图层）\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/q0x54dpvep.png)\n右键画布反选选区，然后选择-修改-扩展选区1个像素\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/jfjyejzm4y.png)\n![](https://res.arsrna.cn/blogs/08-0902P-A/pk86j3vgup.png)\n编辑-填充-颜色，选择黑色，确定\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/kbuyb4irem.png)\n![](https://res.arsrna.cn/blogs/08-0902P-A/n38lp9z5vk.png)\n这时候你的图片已经完成二值化了，如果像我上图那样有方框和莫名其妙的噪点，多半是线稿化那一步的问题，最小值调整一下就好\n\n导出为png格式的图片，导入eda，简化，平滑全部设置为0，看看成品\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/z5pv8ehiwx.png)\n![](https://res.arsrna.cn/blogs/08-0902P-A/y4w3t0c0mb.png)\n**重点来了：打板的时候一定要选择白色，这样才能更好呈现，因为你电脑编辑的时候是白底黑边，绿色的你也懂**\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/jnrr2u70t0.png)\n\n## **到此，教程结束，感谢谢大家的支持**\n\n## **www.arsrna.cn Ar-Sr-Na**\n","source":"_posts/08-0902P-A.md","raw":"---\ntitle: 【印刷的艺术】浅谈激光照排技术与电路板设计的艺术\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: www.arsrna.cn\nauthorAbout: 粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\nauthorDesc: 粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\ncategories: 技术\ndate: 2021-09-09 16:26:32\ncomments: true\ntags: 硬件,电子,EDA,EDA软件,科技,二值化,技术\nkeywords: 硬件,电子,EDA,EDA软件,科技,二值化,技术\ndescription: 2021年，PCB打样的价格越来越低，电子爱好者们狂喜，不得不提的就是EDA软件，它是设计电路板，设计原理图，仿真等功能为一体的电气工程软件，电子爱好者往往比较个性，pcb自然也会有自己的风格，一般我们往丝印层加的都是元器件编号，或者公司logo，自己的昵称，所以印刷时同一个颜色阻焊，板厂用的打印机也只有一种颜色，如果想要打印图片就惨不忍睹了，细节全丢，如何解决这个问题？\nindex_img: 'https://res.arsrna.cn/blogs/08-0902P-A/jprb9ku4wg.png'\n---\n# **导言**\n\n2021年，PCB打样的价格越来越低，电子爱好者们狂喜，不得不提的就是EDA软件，它是设计电路板，设计原理图，仿真等功能为一体的电气工程软件，电子爱好者往往比较个性，pcb自然也会有自己的风格，一般我们往丝印层加的都是元器件编号，或者公司logo，自己的昵称，所以印刷时同一个颜色阻焊，板厂用的打印机也只有一种颜色，如果想要打印图片就惨不忍睹了，细节全丢，如何解决这个问题？\n\n# **想法和原理**\n\n## **类比推理**\n\n如果你很细心观察身边的屏幕的话，你应该发现，彩色图片展现给你是因为有数万颗灯珠显示出来的，每颗灯珠又分为R,G.B三原色，通过改变RGB的电压就能调节颜色，比如R 4V，G 1V，B 0V，那么你得到的就是一个粉红色\n\n把照片打印出来，你会发现惨不忍睹，颗粒感特别严重，虽然现在的打印机都有5000\\*5000以上的分辨率，但是观感却不如720p的电脑屏幕，这是为什么\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/27d0c8hz88.png)\n如果我们把它扫描后放大\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/maph9t3oke.png)\n就会出现网格状的点阵\n\n这是因为打印机没法打印出深浅通道的墨水，打印的原色是CMYK，不能像RGB那样调节亮度，显示原理也不同，屏幕是发光源，而打印纸上的是因为环境光的漫反射产生的图像，环境光时时刻刻影响着打印质量。打印机不可能改变你眼睛看到的环境光，也不可能为了彩色照片去设计上万种颜色，但是人类的眼睛有一种特性，如果黑色点很密集，那就是黑色，如果拆散黑点，缩小，你会看到灰色，利用这一个特性，去延伸到更多颜色，实现深浅调节，所以这就不得不引出一个技术\n\n## **激光照排技术**\n\n中国的汉字印刷发展史也有很长一段时间了，汉字在激光照排技术里，过程就是把汉字先分解为点阵然后通过一系列工序定影，类似胶片，这样文字就能够在纸张上呈现了。同样可以运用到图像上，将图像的通道分离为CMYK，根据色深度对每一个通道的点阵进行打散，最后输出到打印机\n\n这样似乎解决了问题，不过，颜色的干扰会变得很明显，比如浅绿色，屏幕上面只要改变G的电压就行，只改变了一个像素；而纸张上，把一个绿色像素点拆分，可能就成了10个像素点，虽然打印分辨率和屏幕不是点对点，但是由于纸张的物理性质，墨水的表面张力会渗透到其它像素上，尤其是那些纸张很小的时候。计算机甚至不能处理点阵导致失真，如果你对着一段文字截图，然后缩小打印出来，就会看到像素重合造成的黑块，这也是文字边缘本身的问题，所以还是要回归问题的根源\n\n## **二值化技术**\n\n打印的墨水只有黑和无，那么我们的打印件也要有和无，也就是色阶只有0和255，比较常用的二值化方法则有：**双峰法**、**P参数法**、**迭代法**和**OTSU法**等。\n\n最简单方法就是把色阶压缩，四舍五入，低于50%的全部空白，高于50%的全部是黑色，这种简单粗暴的方法必然导致数据的丢失\n\n改变空白和全黑的阈值就能针对不同图片颜色差距上的修改\n\n# **应用**\n\n如同开头所描述的电子爱好者的个性需求，我也是个性需求者之一，设计过许多PCB，也多多少少会放置几张图\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/fhu0xo2gtb.jpg)\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/3ikeico4im.png)\n这是原图\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/jprb9ku4wg.png)\n如果直接用eda软件插入\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/8ip3ykttbd.png)\n![](https://res.arsrna.cn/blogs/08-0902P-A/32jmkw3gqd.png)\n和刚刚一对比，细节少了不少，很多地方断线，这是因为EDA处理二值化不是那么好\n\n所以我们手动处理，不让eda软件破坏细节\n\n这里实践用的是线稿，位图可以按照上面所说的激光照排散点\n\n## **教程**\n\n首先先把照片变为线稿，可以临摹，可以二阶最小值\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/0uga1hyym1.png)\nps里转线稿的方式很多，视频教程请见：[https://www.bilibili.com/video/BV1pb411n72J](https://www.bilibili.com/video/BV1pb411n72J)\n\n到这一步很成功就算完成一半了，因为后续图片质量如何就取决于这一步\n\n首先将这张图片的色阶稍微拉一下，让图片的颜色集中\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/0t23liux9p.png)\n选择-色彩范围，点击背景，吸取下背景，然后delete删除背景（一定要是栅格图层或者普通图层，不能是智能图层）\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/q0x54dpvep.png)\n右键画布反选选区，然后选择-修改-扩展选区1个像素\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/jfjyejzm4y.png)\n![](https://res.arsrna.cn/blogs/08-0902P-A/pk86j3vgup.png)\n编辑-填充-颜色，选择黑色，确定\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/kbuyb4irem.png)\n![](https://res.arsrna.cn/blogs/08-0902P-A/n38lp9z5vk.png)\n这时候你的图片已经完成二值化了，如果像我上图那样有方框和莫名其妙的噪点，多半是线稿化那一步的问题，最小值调整一下就好\n\n导出为png格式的图片，导入eda，简化，平滑全部设置为0，看看成品\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/z5pv8ehiwx.png)\n![](https://res.arsrna.cn/blogs/08-0902P-A/y4w3t0c0mb.png)\n**重点来了：打板的时候一定要选择白色，这样才能更好呈现，因为你电脑编辑的时候是白底黑边，绿色的你也懂**\n\n![](https://res.arsrna.cn/blogs/08-0902P-A/jnrr2u70t0.png)\n\n## **到此，教程结束，感谢谢大家的支持**\n\n## **www.arsrna.cn Ar-Sr-Na**\n","slug":"08-0902P-A","published":1,"updated":"2023-01-17T08:55:38.564Z","layout":"post","photos":[],"link":"","_id":"clod0d6xi002bc0nd66r7gz6z","content":"<h1 id=\"导言\"><a href=\"#导言\" class=\"headerlink\" title=\"导言\"></a><strong>导言</strong></h1><p>2021年，PCB打样的价格越来越低，电子爱好者们狂喜，不得不提的就是EDA软件，它是设计电路板，设计原理图，仿真等功能为一体的电气工程软件，电子爱好者往往比较个性，pcb自然也会有自己的风格，一般我们往丝印层加的都是元器件编号，或者公司logo，自己的昵称，所以印刷时同一个颜色阻焊，板厂用的打印机也只有一种颜色，如果想要打印图片就惨不忍睹了，细节全丢，如何解决这个问题？</p>\n<h1 id=\"想法和原理\"><a href=\"#想法和原理\" class=\"headerlink\" title=\"想法和原理\"></a><strong>想法和原理</strong></h1><h2 id=\"类比推理\"><a href=\"#类比推理\" class=\"headerlink\" title=\"类比推理\"></a><strong>类比推理</strong></h2><p>如果你很细心观察身边的屏幕的话，你应该发现，彩色图片展现给你是因为有数万颗灯珠显示出来的，每颗灯珠又分为R,G.B三原色，通过改变RGB的电压就能调节颜色，比如R 4V，G 1V，B 0V，那么你得到的就是一个粉红色</p>\n<p>把照片打印出来，你会发现惨不忍睹，颗粒感特别严重，虽然现在的打印机都有5000*5000以上的分辨率，但是观感却不如720p的电脑屏幕，这是为什么</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/27d0c8hz88.png\"><br>如果我们把它扫描后放大</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/maph9t3oke.png\"><br>就会出现网格状的点阵</p>\n<p>这是因为打印机没法打印出深浅通道的墨水，打印的原色是CMYK，不能像RGB那样调节亮度，显示原理也不同，屏幕是发光源，而打印纸上的是因为环境光的漫反射产生的图像，环境光时时刻刻影响着打印质量。打印机不可能改变你眼睛看到的环境光，也不可能为了彩色照片去设计上万种颜色，但是人类的眼睛有一种特性，如果黑色点很密集，那就是黑色，如果拆散黑点，缩小，你会看到灰色，利用这一个特性，去延伸到更多颜色，实现深浅调节，所以这就不得不引出一个技术</p>\n<h2 id=\"激光照排技术\"><a href=\"#激光照排技术\" class=\"headerlink\" title=\"激光照排技术\"></a><strong>激光照排技术</strong></h2><p>中国的汉字印刷发展史也有很长一段时间了，汉字在激光照排技术里，过程就是把汉字先分解为点阵然后通过一系列工序定影，类似胶片，这样文字就能够在纸张上呈现了。同样可以运用到图像上，将图像的通道分离为CMYK，根据色深度对每一个通道的点阵进行打散，最后输出到打印机</p>\n<p>这样似乎解决了问题，不过，颜色的干扰会变得很明显，比如浅绿色，屏幕上面只要改变G的电压就行，只改变了一个像素；而纸张上，把一个绿色像素点拆分，可能就成了10个像素点，虽然打印分辨率和屏幕不是点对点，但是由于纸张的物理性质，墨水的表面张力会渗透到其它像素上，尤其是那些纸张很小的时候。计算机甚至不能处理点阵导致失真，如果你对着一段文字截图，然后缩小打印出来，就会看到像素重合造成的黑块，这也是文字边缘本身的问题，所以还是要回归问题的根源</p>\n<h2 id=\"二值化技术\"><a href=\"#二值化技术\" class=\"headerlink\" title=\"二值化技术\"></a><strong>二值化技术</strong></h2><p>打印的墨水只有黑和无，那么我们的打印件也要有和无，也就是色阶只有0和255，比较常用的二值化方法则有：<strong>双峰法</strong>、<strong>P参数法</strong>、<strong>迭代法</strong>和<strong>OTSU法</strong>等。</p>\n<p>最简单方法就是把色阶压缩，四舍五入，低于50%的全部空白，高于50%的全部是黑色，这种简单粗暴的方法必然导致数据的丢失</p>\n<p>改变空白和全黑的阈值就能针对不同图片颜色差距上的修改</p>\n<h1 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a><strong>应用</strong></h1><p>如同开头所描述的电子爱好者的个性需求，我也是个性需求者之一，设计过许多PCB，也多多少少会放置几张图</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/fhu0xo2gtb.jpg\"></p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/3ikeico4im.png\"><br>这是原图</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/jprb9ku4wg.png\"><br>如果直接用eda软件插入</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/8ip3ykttbd.png\"><br><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/32jmkw3gqd.png\"><br>和刚刚一对比，细节少了不少，很多地方断线，这是因为EDA处理二值化不是那么好</p>\n<p>所以我们手动处理，不让eda软件破坏细节</p>\n<p>这里实践用的是线稿，位图可以按照上面所说的激光照排散点</p>\n<h2 id=\"教程\"><a href=\"#教程\" class=\"headerlink\" title=\"教程\"></a><strong>教程</strong></h2><p>首先先把照片变为线稿，可以临摹，可以二阶最小值</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/0uga1hyym1.png\"><br>ps里转线稿的方式很多，视频教程请见：<a href=\"https://www.bilibili.com/video/BV1pb411n72J\">https://www.bilibili.com/video/BV1pb411n72J</a></p>\n<p>到这一步很成功就算完成一半了，因为后续图片质量如何就取决于这一步</p>\n<p>首先将这张图片的色阶稍微拉一下，让图片的颜色集中</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/0t23liux9p.png\"><br>选择-色彩范围，点击背景，吸取下背景，然后delete删除背景（一定要是栅格图层或者普通图层，不能是智能图层）</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/q0x54dpvep.png\"><br>右键画布反选选区，然后选择-修改-扩展选区1个像素</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/jfjyejzm4y.png\"><br><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/pk86j3vgup.png\"><br>编辑-填充-颜色，选择黑色，确定</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/kbuyb4irem.png\"><br><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/n38lp9z5vk.png\"><br>这时候你的图片已经完成二值化了，如果像我上图那样有方框和莫名其妙的噪点，多半是线稿化那一步的问题，最小值调整一下就好</p>\n<p>导出为png格式的图片，导入eda，简化，平滑全部设置为0，看看成品</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/z5pv8ehiwx.png\"><br><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/y4w3t0c0mb.png\"><br><strong>重点来了：打板的时候一定要选择白色，这样才能更好呈现，因为你电脑编辑的时候是白底黑边，绿色的你也懂</strong></p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/jnrr2u70t0.png\"></p>\n<h2 id=\"到此，教程结束，感谢谢大家的支持\"><a href=\"#到此，教程结束，感谢谢大家的支持\" class=\"headerlink\" title=\"到此，教程结束，感谢谢大家的支持\"></a><strong>到此，教程结束，感谢谢大家的支持</strong></h2><h2 id=\"www-arsrna-cn-Ar-Sr-Na\"><a href=\"#www-arsrna-cn-Ar-Sr-Na\" class=\"headerlink\" title=\"www.arsrna.cn Ar-Sr-Na\"></a><strong><a href=\"http://www.arsrna.cn/\">www.arsrna.cn</a> Ar-Sr-Na</strong></h2>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"导言\"><a href=\"#导言\" class=\"headerlink\" title=\"导言\"></a><strong>导言</strong></h1><p>2021年，PCB打样的价格越来越低，电子爱好者们狂喜，不得不提的就是EDA软件，它是设计电路板，设计原理图，仿真等功能为一体的电气工程软件，电子爱好者往往比较个性，pcb自然也会有自己的风格，一般我们往丝印层加的都是元器件编号，或者公司logo，自己的昵称，所以印刷时同一个颜色阻焊，板厂用的打印机也只有一种颜色，如果想要打印图片就惨不忍睹了，细节全丢，如何解决这个问题？</p>\n<h1 id=\"想法和原理\"><a href=\"#想法和原理\" class=\"headerlink\" title=\"想法和原理\"></a><strong>想法和原理</strong></h1><h2 id=\"类比推理\"><a href=\"#类比推理\" class=\"headerlink\" title=\"类比推理\"></a><strong>类比推理</strong></h2><p>如果你很细心观察身边的屏幕的话，你应该发现，彩色图片展现给你是因为有数万颗灯珠显示出来的，每颗灯珠又分为R,G.B三原色，通过改变RGB的电压就能调节颜色，比如R 4V，G 1V，B 0V，那么你得到的就是一个粉红色</p>\n<p>把照片打印出来，你会发现惨不忍睹，颗粒感特别严重，虽然现在的打印机都有5000*5000以上的分辨率，但是观感却不如720p的电脑屏幕，这是为什么</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/27d0c8hz88.png\"><br>如果我们把它扫描后放大</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/maph9t3oke.png\"><br>就会出现网格状的点阵</p>\n<p>这是因为打印机没法打印出深浅通道的墨水，打印的原色是CMYK，不能像RGB那样调节亮度，显示原理也不同，屏幕是发光源，而打印纸上的是因为环境光的漫反射产生的图像，环境光时时刻刻影响着打印质量。打印机不可能改变你眼睛看到的环境光，也不可能为了彩色照片去设计上万种颜色，但是人类的眼睛有一种特性，如果黑色点很密集，那就是黑色，如果拆散黑点，缩小，你会看到灰色，利用这一个特性，去延伸到更多颜色，实现深浅调节，所以这就不得不引出一个技术</p>\n<h2 id=\"激光照排技术\"><a href=\"#激光照排技术\" class=\"headerlink\" title=\"激光照排技术\"></a><strong>激光照排技术</strong></h2><p>中国的汉字印刷发展史也有很长一段时间了，汉字在激光照排技术里，过程就是把汉字先分解为点阵然后通过一系列工序定影，类似胶片，这样文字就能够在纸张上呈现了。同样可以运用到图像上，将图像的通道分离为CMYK，根据色深度对每一个通道的点阵进行打散，最后输出到打印机</p>\n<p>这样似乎解决了问题，不过，颜色的干扰会变得很明显，比如浅绿色，屏幕上面只要改变G的电压就行，只改变了一个像素；而纸张上，把一个绿色像素点拆分，可能就成了10个像素点，虽然打印分辨率和屏幕不是点对点，但是由于纸张的物理性质，墨水的表面张力会渗透到其它像素上，尤其是那些纸张很小的时候。计算机甚至不能处理点阵导致失真，如果你对着一段文字截图，然后缩小打印出来，就会看到像素重合造成的黑块，这也是文字边缘本身的问题，所以还是要回归问题的根源</p>\n<h2 id=\"二值化技术\"><a href=\"#二值化技术\" class=\"headerlink\" title=\"二值化技术\"></a><strong>二值化技术</strong></h2><p>打印的墨水只有黑和无，那么我们的打印件也要有和无，也就是色阶只有0和255，比较常用的二值化方法则有：<strong>双峰法</strong>、<strong>P参数法</strong>、<strong>迭代法</strong>和<strong>OTSU法</strong>等。</p>\n<p>最简单方法就是把色阶压缩，四舍五入，低于50%的全部空白，高于50%的全部是黑色，这种简单粗暴的方法必然导致数据的丢失</p>\n<p>改变空白和全黑的阈值就能针对不同图片颜色差距上的修改</p>\n<h1 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a><strong>应用</strong></h1><p>如同开头所描述的电子爱好者的个性需求，我也是个性需求者之一，设计过许多PCB，也多多少少会放置几张图</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/fhu0xo2gtb.jpg\"></p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/3ikeico4im.png\"><br>这是原图</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/jprb9ku4wg.png\"><br>如果直接用eda软件插入</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/8ip3ykttbd.png\"><br><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/32jmkw3gqd.png\"><br>和刚刚一对比，细节少了不少，很多地方断线，这是因为EDA处理二值化不是那么好</p>\n<p>所以我们手动处理，不让eda软件破坏细节</p>\n<p>这里实践用的是线稿，位图可以按照上面所说的激光照排散点</p>\n<h2 id=\"教程\"><a href=\"#教程\" class=\"headerlink\" title=\"教程\"></a><strong>教程</strong></h2><p>首先先把照片变为线稿，可以临摹，可以二阶最小值</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/0uga1hyym1.png\"><br>ps里转线稿的方式很多，视频教程请见：<a href=\"https://www.bilibili.com/video/BV1pb411n72J\">https://www.bilibili.com/video/BV1pb411n72J</a></p>\n<p>到这一步很成功就算完成一半了，因为后续图片质量如何就取决于这一步</p>\n<p>首先将这张图片的色阶稍微拉一下，让图片的颜色集中</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/0t23liux9p.png\"><br>选择-色彩范围，点击背景，吸取下背景，然后delete删除背景（一定要是栅格图层或者普通图层，不能是智能图层）</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/q0x54dpvep.png\"><br>右键画布反选选区，然后选择-修改-扩展选区1个像素</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/jfjyejzm4y.png\"><br><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/pk86j3vgup.png\"><br>编辑-填充-颜色，选择黑色，确定</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/kbuyb4irem.png\"><br><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/n38lp9z5vk.png\"><br>这时候你的图片已经完成二值化了，如果像我上图那样有方框和莫名其妙的噪点，多半是线稿化那一步的问题，最小值调整一下就好</p>\n<p>导出为png格式的图片，导入eda，简化，平滑全部设置为0，看看成品</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/z5pv8ehiwx.png\"><br><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/y4w3t0c0mb.png\"><br><strong>重点来了：打板的时候一定要选择白色，这样才能更好呈现，因为你电脑编辑的时候是白底黑边，绿色的你也懂</strong></p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-0902P-A/jnrr2u70t0.png\"></p>\n<h2 id=\"到此，教程结束，感谢谢大家的支持\"><a href=\"#到此，教程结束，感谢谢大家的支持\" class=\"headerlink\" title=\"到此，教程结束，感谢谢大家的支持\"></a><strong>到此，教程结束，感谢谢大家的支持</strong></h2><h2 id=\"www-arsrna-cn-Ar-Sr-Na\"><a href=\"#www-arsrna-cn-Ar-Sr-Na\" class=\"headerlink\" title=\"www.arsrna.cn Ar-Sr-Na\"></a><strong><a href=\"http://www.arsrna.cn/\">www.arsrna.cn</a> Ar-Sr-Na</strong></h2>"},{"title":"爱奇艺网络大电影《木马》众筹商业计划","id":"545","date":"2019-10-12T16:52:45.000Z","_content":"\n![](https://www.saten.top/wp-content/uploads/2019/10/1.jpg)\n\n项目介绍\n\n       策划这个项目的时候，我们想到了人生的轮转，就像游乐场的木马一样,周而复始，可最终会停留在出发的地方，无论过程如何精彩，终究逃不过轮回的结局，与此同时，我也想到了木马病毒，它植入系统，盗取资源，对电脑的安全造成影响，虚拟世界中何尝没有人生？我想如果将人生也视作一个运转的系统，我们生活中无疑也存在着许多这样的隐患，防不胜防，以至于人人自危。\n\n        就像我们生活中总是会遇到这样那样的变故，或者说，预料之外的事情。在没有经历之前，我们永远也无法想象要怎样去面对这些困难，可一旦面临，我们会发现，并没有想象的那么可怕，我们会坦然地接受，也许生命的意义就在于此——我们无法为自己预设未来。\n\n        本片的主人公，面对“意料之外”的孩子，没有退缩，虽然丢了工作，被女友抛弃，也没有被打倒，反而激发了他藏在身体里的潜能，换了更适合自己的工作，更勇敢承担起了照顾孩子的责任，最后不仅没有被这个变故拖垮，反而离自己最初的梦想越来越近了，是一个非常正能量的故事。\n\n        既然命运难以琢磨，也无法抗衡，就不如笑着面对。蓦然回首，我们已然回归自己的初心。\n\n图片展示\n\n![](https://www.saten.top/wp-content/uploads/2019/10/1-1.jpg)\n\n商业模式\n\n       与各大网络文学平台合作，筛选热点IP，改编和制作网络影视作品，在爱奇艺、腾讯、优酷三大视频平台上线盈利。\n\n公司未来规划\n\n       专注网络影视，包括但不限于网络大电影、网络剧、竖屏剧等。\n\n目标客户\n\n       网络视频观众，20-29岁居多，尤其是三大视频平台用户。\n\n同业竞争\n\n       最近一段时间以来，整个电影行业几乎处于当代现实主义题材的寒冬，相关作品较少，这也给我们提供了一个很好的机会。\n\n竞争优势\n\n       现阶段三大视频平台网络大电影板块奇幻、古装、虚构或仙侠灵异题材作品较多，观众容易审美疲劳。\n\n![](https://www.saten.top/wp-content/uploads/2019/10/asdasdasdasd.png)\n\n       在这种情况下，我们抓住时机，推出严肃文学改编的当代现实主义题材电影，不仅质量内涵有保障，也填补了网络大电影细分市场的空缺，与市面上充斥的其他类型电影形成差异化竞争，市场预期良好。\n\n盈利模式\n\n![](https://www.saten.top/wp-content/uploads/2019/10/sfsdfsdfsdffds-1024x545.png)\n\n团队介绍\n\n成熟团队，专业专注，共同创作多部影视作品，爱奇艺上线一部真人秀网综《驴在江湖青春派对》，一部爱奇艺自制竖屏短剧《驴在江湖 脱单囧事》。其中《驴在江湖青春派对》是一档多主题派对聚会，真人秀节目； 每季8期，每期70分钟时间里，推出一类与众不同的青春都市派对； 记录6对陌生90,95后单身男女嘉宾，参加不同派对时的真实状态。 展现他们在愉快的交往中，友情及爱情萌芽的全过程，历史热度高达287。\n\n团队成员\n\n王长春 | 导演 股东成员 （所占股份：10%）\n\n![](https://www.saten.top/wp-content/uploads/2019/10/wcc_爱奇艺.jpg)\n\n制片人、导演，中国电视剧制作产业协会青年工作委员会预备委员，昌乐县电影家协会会员，威海四度文化传播有限公司总经理。\n\n1989年出生，毕业于潍坊医学院。2011年进入影视行业。 电影《英雄爷爷》入围第三届全国中小学生电影节。 微电影《辣条》入围山东省电影家协会主办的第十二届山东青年微电影大赛和澳大利亚My Rode Reel 2019短片大赛。 共青团潍坊市潍城区委微电影《歌唱祖国》导演。\n\n曲强 | 摄影指导\n\n![](https://www.saten.top/wp-content/uploads/2019/10/qq_爱奇艺.jpg)\n\n摄影师、编剧，中国电视剧制作产业协会青年工作委员会委员，山东君陌光电科技有限公司CEO。\n\n小说、剧本《驴在江湖》作者（共6季，每季预计12集240分钟）。 爱奇艺真人秀网综《驴在江湖青春派对》第一季摄影师、导演。 爱奇艺竖屏短剧《驴在江湖 脱单囧事》导演、编剧： 第1季18集，每集5分钟左右，总时长85分钟， 第2季18集，每集4分钟左右，总时长75分钟。\n\n林川 | 监制\n\n![](https://www.saten.top/wp-content/uploads/2019/10/lc_爱奇艺.jpg)\n\n导演、制片人。1994年生，毕业于北京电影学院。中国影视协会成员，作为代表出席中美影视座谈会。\n\n电影《守护》入围2019国际青年电影节特别展映单元。 自编自导自演《都市神探录》系列电影《都市神探录：长城在上》豆瓣 评分8.5。 电影《隔壁女生的日常》 《都市神探录：烹骨仵作》（制作中）\n\n王俊杰 | 制片人 股东成员 （所占股份：60%）\n\n![](https://www.saten.top/wp-content/uploads/2019/10/wjj_爱奇艺.jpg)\n\n1960年生，制片人、摄影师。高级教师职称，县级优秀教师。昌乐县电影家协会副主席，山东省电影家协会会员。\n\n参与山东省昌乐县电影家协会《底色》、《桃花烧》、《嬗变》、《承诺》、《成长》、《德行天下》等微电影和公益短片的制片和拍摄工作，其中：《底色》获山东省第十届青年微电影大赛故事片三等奖、山东省检察系统反腐败微电影大赛一等奖；《成长》获山东省潍坊市教育系统微电影大赛一等奖。\n\n卫鸦 | 编剧\n\n![](https://www.saten.top/wp-content/uploads/2019/10/wy_爱奇艺.jpg)\n\n原名肖永良，现居深圳。在《人民文学》《花城》《中国作家》《山花》《天涯》等刊发表小说百余万字。\n\n作品曾被《小说选刊》《小说月报》《中篇小说选刊》《中华文学选刊》《北京文学中篇小说月报》等刊物转载。短篇小说《天籁之音》获《小说选刊》年度文学奖，中篇小说《被时光遗失的影像》获第六届深圳青年文学奖。出版有中短篇小说集《空中稻田》。\n\n基本信息\n\n公司名称：威海四度文化传播有限公司\n\n所处阶段：产品开发中\n\n法定代表人：王长春\n\n团队人数：5 人\n\n所属行业：网络大电影\n\n注册地点：山东省威海市\n\n项目网址：www.arsrna.top\n\n成立日期：2017.7\n\n相关链接：无","source":"_drafts/爱奇艺网络大电影《木马》众筹商业计划.md","raw":"---\ntitle: 爱奇艺网络大电影《木马》众筹商业计划\ntags:\n  - 未分类\nid: '545'\ndate: 2019-10-13 00:52:45\n---\n\n![](https://www.saten.top/wp-content/uploads/2019/10/1.jpg)\n\n项目介绍\n\n       策划这个项目的时候，我们想到了人生的轮转，就像游乐场的木马一样,周而复始，可最终会停留在出发的地方，无论过程如何精彩，终究逃不过轮回的结局，与此同时，我也想到了木马病毒，它植入系统，盗取资源，对电脑的安全造成影响，虚拟世界中何尝没有人生？我想如果将人生也视作一个运转的系统，我们生活中无疑也存在着许多这样的隐患，防不胜防，以至于人人自危。\n\n        就像我们生活中总是会遇到这样那样的变故，或者说，预料之外的事情。在没有经历之前，我们永远也无法想象要怎样去面对这些困难，可一旦面临，我们会发现，并没有想象的那么可怕，我们会坦然地接受，也许生命的意义就在于此——我们无法为自己预设未来。\n\n        本片的主人公，面对“意料之外”的孩子，没有退缩，虽然丢了工作，被女友抛弃，也没有被打倒，反而激发了他藏在身体里的潜能，换了更适合自己的工作，更勇敢承担起了照顾孩子的责任，最后不仅没有被这个变故拖垮，反而离自己最初的梦想越来越近了，是一个非常正能量的故事。\n\n        既然命运难以琢磨，也无法抗衡，就不如笑着面对。蓦然回首，我们已然回归自己的初心。\n\n图片展示\n\n![](https://www.saten.top/wp-content/uploads/2019/10/1-1.jpg)\n\n商业模式\n\n       与各大网络文学平台合作，筛选热点IP，改编和制作网络影视作品，在爱奇艺、腾讯、优酷三大视频平台上线盈利。\n\n公司未来规划\n\n       专注网络影视，包括但不限于网络大电影、网络剧、竖屏剧等。\n\n目标客户\n\n       网络视频观众，20-29岁居多，尤其是三大视频平台用户。\n\n同业竞争\n\n       最近一段时间以来，整个电影行业几乎处于当代现实主义题材的寒冬，相关作品较少，这也给我们提供了一个很好的机会。\n\n竞争优势\n\n       现阶段三大视频平台网络大电影板块奇幻、古装、虚构或仙侠灵异题材作品较多，观众容易审美疲劳。\n\n![](https://www.saten.top/wp-content/uploads/2019/10/asdasdasdasd.png)\n\n       在这种情况下，我们抓住时机，推出严肃文学改编的当代现实主义题材电影，不仅质量内涵有保障，也填补了网络大电影细分市场的空缺，与市面上充斥的其他类型电影形成差异化竞争，市场预期良好。\n\n盈利模式\n\n![](https://www.saten.top/wp-content/uploads/2019/10/sfsdfsdfsdffds-1024x545.png)\n\n团队介绍\n\n成熟团队，专业专注，共同创作多部影视作品，爱奇艺上线一部真人秀网综《驴在江湖青春派对》，一部爱奇艺自制竖屏短剧《驴在江湖 脱单囧事》。其中《驴在江湖青春派对》是一档多主题派对聚会，真人秀节目； 每季8期，每期70分钟时间里，推出一类与众不同的青春都市派对； 记录6对陌生90,95后单身男女嘉宾，参加不同派对时的真实状态。 展现他们在愉快的交往中，友情及爱情萌芽的全过程，历史热度高达287。\n\n团队成员\n\n王长春 | 导演 股东成员 （所占股份：10%）\n\n![](https://www.saten.top/wp-content/uploads/2019/10/wcc_爱奇艺.jpg)\n\n制片人、导演，中国电视剧制作产业协会青年工作委员会预备委员，昌乐县电影家协会会员，威海四度文化传播有限公司总经理。\n\n1989年出生，毕业于潍坊医学院。2011年进入影视行业。 电影《英雄爷爷》入围第三届全国中小学生电影节。 微电影《辣条》入围山东省电影家协会主办的第十二届山东青年微电影大赛和澳大利亚My Rode Reel 2019短片大赛。 共青团潍坊市潍城区委微电影《歌唱祖国》导演。\n\n曲强 | 摄影指导\n\n![](https://www.saten.top/wp-content/uploads/2019/10/qq_爱奇艺.jpg)\n\n摄影师、编剧，中国电视剧制作产业协会青年工作委员会委员，山东君陌光电科技有限公司CEO。\n\n小说、剧本《驴在江湖》作者（共6季，每季预计12集240分钟）。 爱奇艺真人秀网综《驴在江湖青春派对》第一季摄影师、导演。 爱奇艺竖屏短剧《驴在江湖 脱单囧事》导演、编剧： 第1季18集，每集5分钟左右，总时长85分钟， 第2季18集，每集4分钟左右，总时长75分钟。\n\n林川 | 监制\n\n![](https://www.saten.top/wp-content/uploads/2019/10/lc_爱奇艺.jpg)\n\n导演、制片人。1994年生，毕业于北京电影学院。中国影视协会成员，作为代表出席中美影视座谈会。\n\n电影《守护》入围2019国际青年电影节特别展映单元。 自编自导自演《都市神探录》系列电影《都市神探录：长城在上》豆瓣 评分8.5。 电影《隔壁女生的日常》 《都市神探录：烹骨仵作》（制作中）\n\n王俊杰 | 制片人 股东成员 （所占股份：60%）\n\n![](https://www.saten.top/wp-content/uploads/2019/10/wjj_爱奇艺.jpg)\n\n1960年生，制片人、摄影师。高级教师职称，县级优秀教师。昌乐县电影家协会副主席，山东省电影家协会会员。\n\n参与山东省昌乐县电影家协会《底色》、《桃花烧》、《嬗变》、《承诺》、《成长》、《德行天下》等微电影和公益短片的制片和拍摄工作，其中：《底色》获山东省第十届青年微电影大赛故事片三等奖、山东省检察系统反腐败微电影大赛一等奖；《成长》获山东省潍坊市教育系统微电影大赛一等奖。\n\n卫鸦 | 编剧\n\n![](https://www.saten.top/wp-content/uploads/2019/10/wy_爱奇艺.jpg)\n\n原名肖永良，现居深圳。在《人民文学》《花城》《中国作家》《山花》《天涯》等刊发表小说百余万字。\n\n作品曾被《小说选刊》《小说月报》《中篇小说选刊》《中华文学选刊》《北京文学中篇小说月报》等刊物转载。短篇小说《天籁之音》获《小说选刊》年度文学奖，中篇小说《被时光遗失的影像》获第六届深圳青年文学奖。出版有中短篇小说集《空中稻田》。\n\n基本信息\n\n公司名称：威海四度文化传播有限公司\n\n所处阶段：产品开发中\n\n法定代表人：王长春\n\n团队人数：5 人\n\n所属行业：网络大电影\n\n注册地点：山东省威海市\n\n项目网址：www.arsrna.top\n\n成立日期：2017.7\n\n相关链接：无","slug":"爱奇艺网络大电影《木马》众筹商业计划","published":0,"updated":"2022-07-20T05:04:16.766Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6xj002ec0nd6kv4264o","content":"<p><img src=\"https://www.saten.top/wp-content/uploads/2019/10/1.jpg\"></p>\n<p>项目介绍</p>\n<p>       策划这个项目的时候，我们想到了人生的轮转，就像游乐场的木马一样,周而复始，可最终会停留在出发的地方，无论过程如何精彩，终究逃不过轮回的结局，与此同时，我也想到了木马病毒，它植入系统，盗取资源，对电脑的安全造成影响，虚拟世界中何尝没有人生？我想如果将人生也视作一个运转的系统，我们生活中无疑也存在着许多这样的隐患，防不胜防，以至于人人自危。</p>\n<p>        就像我们生活中总是会遇到这样那样的变故，或者说，预料之外的事情。在没有经历之前，我们永远也无法想象要怎样去面对这些困难，可一旦面临，我们会发现，并没有想象的那么可怕，我们会坦然地接受，也许生命的意义就在于此——我们无法为自己预设未来。</p>\n<p>        本片的主人公，面对“意料之外”的孩子，没有退缩，虽然丢了工作，被女友抛弃，也没有被打倒，反而激发了他藏在身体里的潜能，换了更适合自己的工作，更勇敢承担起了照顾孩子的责任，最后不仅没有被这个变故拖垮，反而离自己最初的梦想越来越近了，是一个非常正能量的故事。</p>\n<p>        既然命运难以琢磨，也无法抗衡，就不如笑着面对。蓦然回首，我们已然回归自己的初心。</p>\n<p>图片展示</p>\n<p><img src=\"https://www.saten.top/wp-content/uploads/2019/10/1-1.jpg\"></p>\n<p>商业模式</p>\n<p>       与各大网络文学平台合作，筛选热点IP，改编和制作网络影视作品，在爱奇艺、腾讯、优酷三大视频平台上线盈利。</p>\n<p>公司未来规划</p>\n<p>       专注网络影视，包括但不限于网络大电影、网络剧、竖屏剧等。</p>\n<p>目标客户</p>\n<p>       网络视频观众，20-29岁居多，尤其是三大视频平台用户。</p>\n<p>同业竞争</p>\n<p>       最近一段时间以来，整个电影行业几乎处于当代现实主义题材的寒冬，相关作品较少，这也给我们提供了一个很好的机会。</p>\n<p>竞争优势</p>\n<p>       现阶段三大视频平台网络大电影板块奇幻、古装、虚构或仙侠灵异题材作品较多，观众容易审美疲劳。</p>\n<p><img src=\"https://www.saten.top/wp-content/uploads/2019/10/asdasdasdasd.png\"></p>\n<p>       在这种情况下，我们抓住时机，推出严肃文学改编的当代现实主义题材电影，不仅质量内涵有保障，也填补了网络大电影细分市场的空缺，与市面上充斥的其他类型电影形成差异化竞争，市场预期良好。</p>\n<p>盈利模式</p>\n<p><img src=\"https://www.saten.top/wp-content/uploads/2019/10/sfsdfsdfsdffds-1024x545.png\"></p>\n<p>团队介绍</p>\n<p>成熟团队，专业专注，共同创作多部影视作品，爱奇艺上线一部真人秀网综《驴在江湖青春派对》，一部爱奇艺自制竖屏短剧《驴在江湖 脱单囧事》。其中《驴在江湖青春派对》是一档多主题派对聚会，真人秀节目； 每季8期，每期70分钟时间里，推出一类与众不同的青春都市派对； 记录6对陌生90,95后单身男女嘉宾，参加不同派对时的真实状态。 展现他们在愉快的交往中，友情及爱情萌芽的全过程，历史热度高达287。</p>\n<p>团队成员</p>\n<p>王长春 | 导演 股东成员 （所占股份：10%）</p>\n<p><img src=\"https://www.saten.top/wp-content/uploads/2019/10/wcc_%E7%88%B1%E5%A5%87%E8%89%BA.jpg\"></p>\n<p>制片人、导演，中国电视剧制作产业协会青年工作委员会预备委员，昌乐县电影家协会会员，威海四度文化传播有限公司总经理。</p>\n<p>1989年出生，毕业于潍坊医学院。2011年进入影视行业。 电影《英雄爷爷》入围第三届全国中小学生电影节。 微电影《辣条》入围山东省电影家协会主办的第十二届山东青年微电影大赛和澳大利亚My Rode Reel 2019短片大赛。 共青团潍坊市潍城区委微电影《歌唱祖国》导演。</p>\n<p>曲强 | 摄影指导</p>\n<p><img src=\"https://www.saten.top/wp-content/uploads/2019/10/qq_%E7%88%B1%E5%A5%87%E8%89%BA.jpg\"></p>\n<p>摄影师、编剧，中国电视剧制作产业协会青年工作委员会委员，山东君陌光电科技有限公司CEO。</p>\n<p>小说、剧本《驴在江湖》作者（共6季，每季预计12集240分钟）。 爱奇艺真人秀网综《驴在江湖青春派对》第一季摄影师、导演。 爱奇艺竖屏短剧《驴在江湖 脱单囧事》导演、编剧： 第1季18集，每集5分钟左右，总时长85分钟， 第2季18集，每集4分钟左右，总时长75分钟。</p>\n<p>林川 | 监制</p>\n<p><img src=\"https://www.saten.top/wp-content/uploads/2019/10/lc_%E7%88%B1%E5%A5%87%E8%89%BA.jpg\"></p>\n<p>导演、制片人。1994年生，毕业于北京电影学院。中国影视协会成员，作为代表出席中美影视座谈会。</p>\n<p>电影《守护》入围2019国际青年电影节特别展映单元。 自编自导自演《都市神探录》系列电影《都市神探录：长城在上》豆瓣 评分8.5。 电影《隔壁女生的日常》 《都市神探录：烹骨仵作》（制作中）</p>\n<p>王俊杰 | 制片人 股东成员 （所占股份：60%）</p>\n<p><img src=\"https://www.saten.top/wp-content/uploads/2019/10/wjj_%E7%88%B1%E5%A5%87%E8%89%BA.jpg\"></p>\n<p>1960年生，制片人、摄影师。高级教师职称，县级优秀教师。昌乐县电影家协会副主席，山东省电影家协会会员。</p>\n<p>参与山东省昌乐县电影家协会《底色》、《桃花烧》、《嬗变》、《承诺》、《成长》、《德行天下》等微电影和公益短片的制片和拍摄工作，其中：《底色》获山东省第十届青年微电影大赛故事片三等奖、山东省检察系统反腐败微电影大赛一等奖；《成长》获山东省潍坊市教育系统微电影大赛一等奖。</p>\n<p>卫鸦 | 编剧</p>\n<p><img src=\"https://www.saten.top/wp-content/uploads/2019/10/wy_%E7%88%B1%E5%A5%87%E8%89%BA.jpg\"></p>\n<p>原名肖永良，现居深圳。在《人民文学》《花城》《中国作家》《山花》《天涯》等刊发表小说百余万字。</p>\n<p>作品曾被《小说选刊》《小说月报》《中篇小说选刊》《中华文学选刊》《北京文学中篇小说月报》等刊物转载。短篇小说《天籁之音》获《小说选刊》年度文学奖，中篇小说《被时光遗失的影像》获第六届深圳青年文学奖。出版有中短篇小说集《空中稻田》。</p>\n<p>基本信息</p>\n<p>公司名称：威海四度文化传播有限公司</p>\n<p>所处阶段：产品开发中</p>\n<p>法定代表人：王长春</p>\n<p>团队人数：5 人</p>\n<p>所属行业：网络大电影</p>\n<p>注册地点：山东省威海市</p>\n<p>项目网址：<a href=\"http://www.arsrna.top/\">www.arsrna.top</a></p>\n<p>成立日期：2017.7</p>\n<p>相关链接：无</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://www.saten.top/wp-content/uploads/2019/10/1.jpg\"></p>\n<p>项目介绍</p>\n<p>       策划这个项目的时候，我们想到了人生的轮转，就像游乐场的木马一样,周而复始，可最终会停留在出发的地方，无论过程如何精彩，终究逃不过轮回的结局，与此同时，我也想到了木马病毒，它植入系统，盗取资源，对电脑的安全造成影响，虚拟世界中何尝没有人生？我想如果将人生也视作一个运转的系统，我们生活中无疑也存在着许多这样的隐患，防不胜防，以至于人人自危。</p>\n<p>        就像我们生活中总是会遇到这样那样的变故，或者说，预料之外的事情。在没有经历之前，我们永远也无法想象要怎样去面对这些困难，可一旦面临，我们会发现，并没有想象的那么可怕，我们会坦然地接受，也许生命的意义就在于此——我们无法为自己预设未来。</p>\n<p>        本片的主人公，面对“意料之外”的孩子，没有退缩，虽然丢了工作，被女友抛弃，也没有被打倒，反而激发了他藏在身体里的潜能，换了更适合自己的工作，更勇敢承担起了照顾孩子的责任，最后不仅没有被这个变故拖垮，反而离自己最初的梦想越来越近了，是一个非常正能量的故事。</p>\n<p>        既然命运难以琢磨，也无法抗衡，就不如笑着面对。蓦然回首，我们已然回归自己的初心。</p>\n<p>图片展示</p>\n<p><img src=\"https://www.saten.top/wp-content/uploads/2019/10/1-1.jpg\"></p>\n<p>商业模式</p>\n<p>       与各大网络文学平台合作，筛选热点IP，改编和制作网络影视作品，在爱奇艺、腾讯、优酷三大视频平台上线盈利。</p>\n<p>公司未来规划</p>\n<p>       专注网络影视，包括但不限于网络大电影、网络剧、竖屏剧等。</p>\n<p>目标客户</p>\n<p>       网络视频观众，20-29岁居多，尤其是三大视频平台用户。</p>\n<p>同业竞争</p>\n<p>       最近一段时间以来，整个电影行业几乎处于当代现实主义题材的寒冬，相关作品较少，这也给我们提供了一个很好的机会。</p>\n<p>竞争优势</p>\n<p>       现阶段三大视频平台网络大电影板块奇幻、古装、虚构或仙侠灵异题材作品较多，观众容易审美疲劳。</p>\n<p><img src=\"https://www.saten.top/wp-content/uploads/2019/10/asdasdasdasd.png\"></p>\n<p>       在这种情况下，我们抓住时机，推出严肃文学改编的当代现实主义题材电影，不仅质量内涵有保障，也填补了网络大电影细分市场的空缺，与市面上充斥的其他类型电影形成差异化竞争，市场预期良好。</p>\n<p>盈利模式</p>\n<p><img src=\"https://www.saten.top/wp-content/uploads/2019/10/sfsdfsdfsdffds-1024x545.png\"></p>\n<p>团队介绍</p>\n<p>成熟团队，专业专注，共同创作多部影视作品，爱奇艺上线一部真人秀网综《驴在江湖青春派对》，一部爱奇艺自制竖屏短剧《驴在江湖 脱单囧事》。其中《驴在江湖青春派对》是一档多主题派对聚会，真人秀节目； 每季8期，每期70分钟时间里，推出一类与众不同的青春都市派对； 记录6对陌生90,95后单身男女嘉宾，参加不同派对时的真实状态。 展现他们在愉快的交往中，友情及爱情萌芽的全过程，历史热度高达287。</p>\n<p>团队成员</p>\n<p>王长春 | 导演 股东成员 （所占股份：10%）</p>\n<p><img src=\"https://www.saten.top/wp-content/uploads/2019/10/wcc_%E7%88%B1%E5%A5%87%E8%89%BA.jpg\"></p>\n<p>制片人、导演，中国电视剧制作产业协会青年工作委员会预备委员，昌乐县电影家协会会员，威海四度文化传播有限公司总经理。</p>\n<p>1989年出生，毕业于潍坊医学院。2011年进入影视行业。 电影《英雄爷爷》入围第三届全国中小学生电影节。 微电影《辣条》入围山东省电影家协会主办的第十二届山东青年微电影大赛和澳大利亚My Rode Reel 2019短片大赛。 共青团潍坊市潍城区委微电影《歌唱祖国》导演。</p>\n<p>曲强 | 摄影指导</p>\n<p><img src=\"https://www.saten.top/wp-content/uploads/2019/10/qq_%E7%88%B1%E5%A5%87%E8%89%BA.jpg\"></p>\n<p>摄影师、编剧，中国电视剧制作产业协会青年工作委员会委员，山东君陌光电科技有限公司CEO。</p>\n<p>小说、剧本《驴在江湖》作者（共6季，每季预计12集240分钟）。 爱奇艺真人秀网综《驴在江湖青春派对》第一季摄影师、导演。 爱奇艺竖屏短剧《驴在江湖 脱单囧事》导演、编剧： 第1季18集，每集5分钟左右，总时长85分钟， 第2季18集，每集4分钟左右，总时长75分钟。</p>\n<p>林川 | 监制</p>\n<p><img src=\"https://www.saten.top/wp-content/uploads/2019/10/lc_%E7%88%B1%E5%A5%87%E8%89%BA.jpg\"></p>\n<p>导演、制片人。1994年生，毕业于北京电影学院。中国影视协会成员，作为代表出席中美影视座谈会。</p>\n<p>电影《守护》入围2019国际青年电影节特别展映单元。 自编自导自演《都市神探录》系列电影《都市神探录：长城在上》豆瓣 评分8.5。 电影《隔壁女生的日常》 《都市神探录：烹骨仵作》（制作中）</p>\n<p>王俊杰 | 制片人 股东成员 （所占股份：60%）</p>\n<p><img src=\"https://www.saten.top/wp-content/uploads/2019/10/wjj_%E7%88%B1%E5%A5%87%E8%89%BA.jpg\"></p>\n<p>1960年生，制片人、摄影师。高级教师职称，县级优秀教师。昌乐县电影家协会副主席，山东省电影家协会会员。</p>\n<p>参与山东省昌乐县电影家协会《底色》、《桃花烧》、《嬗变》、《承诺》、《成长》、《德行天下》等微电影和公益短片的制片和拍摄工作，其中：《底色》获山东省第十届青年微电影大赛故事片三等奖、山东省检察系统反腐败微电影大赛一等奖；《成长》获山东省潍坊市教育系统微电影大赛一等奖。</p>\n<p>卫鸦 | 编剧</p>\n<p><img src=\"https://www.saten.top/wp-content/uploads/2019/10/wy_%E7%88%B1%E5%A5%87%E8%89%BA.jpg\"></p>\n<p>原名肖永良，现居深圳。在《人民文学》《花城》《中国作家》《山花》《天涯》等刊发表小说百余万字。</p>\n<p>作品曾被《小说选刊》《小说月报》《中篇小说选刊》《中华文学选刊》《北京文学中篇小说月报》等刊物转载。短篇小说《天籁之音》获《小说选刊》年度文学奖，中篇小说《被时光遗失的影像》获第六届深圳青年文学奖。出版有中短篇小说集《空中稻田》。</p>\n<p>基本信息</p>\n<p>公司名称：威海四度文化传播有限公司</p>\n<p>所处阶段：产品开发中</p>\n<p>法定代表人：王长春</p>\n<p>团队人数：5 人</p>\n<p>所属行业：网络大电影</p>\n<p>注册地点：山东省威海市</p>\n<p>项目网址：<a href=\"http://www.arsrna.top/\">www.arsrna.top</a></p>\n<p>成立日期：2017.7</p>\n<p>相关链接：无</p>\n"},{"title":"我也不知道写些什么","id":"625","_content":"\n反正占个位置\n\n顺便加点html\n\n测试\n==\n\nAr-Sr-Na\n\n* * *\n\n测试一下啦\n\n[ArSrNa个人网站](https://www.arsrna.cn) [测试测试，Ar-Sr-Na博客](https://inm.pub)","source":"_drafts/我也不知道写些什么.md","raw":"---\ntitle: 我也不知道写些什么\ntags:\n  - 未分类\nid: '625'\n---\n\n反正占个位置\n\n顺便加点html\n\n测试\n==\n\nAr-Sr-Na\n\n* * *\n\n测试一下啦\n\n[ArSrNa个人网站](https://www.arsrna.cn) [测试测试，Ar-Sr-Na博客](https://inm.pub)","slug":"我也不知道写些什么","published":0,"date":"2022-07-20T05:04:16.755Z","updated":"2022-07-20T05:04:16.755Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6xj002hc0nd1yfg94pj","content":"<p>反正占个位置</p>\n<p>顺便加点html</p>\n<h1 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h1><p>Ar-Sr-Na</p>\n<hr>\n<p>测试一下啦</p>\n<p><a href=\"https://www.arsrna.cn/\">ArSrNa个人网站</a> <a href=\"https://inm.pub/\">测试测试，Ar-Sr-Na博客</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>反正占个位置</p>\n<p>顺便加点html</p>\n<h1 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h1><p>Ar-Sr-Na</p>\n<hr>\n<p>测试一下啦</p>\n<p><a href=\"https://www.arsrna.cn/\">ArSrNa个人网站</a> <a href=\"https://inm.pub/\">测试测试，Ar-Sr-Na博客</a></p>\n"},{"title":"【腾讯云前端性能(RUM)优化大赛】针对前端的通用用户首屏体验(LCP)优化","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"www.arsrna.cn","authorAbout":"突破计算边界，构筑数字视界，www.arsrna.cn","authorDesc":"突破计算边界，构筑数字视界，www.arsrna.cn","comments":1,"date":"2022-01-03T08:51:00.000Z","keywords":"摄影,渲染,跟踪,对焦,3d,blender,焦距","description":"摄像机自动对焦不准确，怎么解决？","index_img":"https://res.arsrna.cn/blog-images/1928716/6df4782deccb2d980e16bf366f1f38a7.jpeg","_content":"![](https://res.arsrna.cn/blog-images/1928716/6df4782deccb2d980e16bf366f1f38a7.jpeg)\n\n# 准备工作\n\n## 根据文档接入腾讯云RUM\n\n[前端性能监控 快速入门 - 文档中心 - 腾讯云 (tencent.com)](https://cloud.tencent.com/document/product/1464/58134)\n\n```\nconst aegis = new Aegis({\n        id: 'xxxx', // 上报 id\n        uin: 'xxx', // 用户唯一 ID（可选）\n        reportApiSpeed: true, // 接口测速\n        spa: true // spa 应用页面跳转的时候开启 pv 计算\n    });\n```\n\n## 检查是否完成接入\n\n部署已经完成构建的站点\n\n```\nserverless -deploy\n```\n\nconsole中键入 `<aegis>`出现\n\n![](https://res.arsrna.cn/blog-images/1928716/3c7f7e41a0806a4d7a686102993d4f66.png)\n\n即可\n\n---\n\n# 数据结果分析\n\n![](https://res.arsrna.cn/blog-images/1928716/aceec8a6f6822dc8707785ddc5e1298a.png)\n\n针对首屏加载，需要注意的分为以下几项：\n\n## 1.网络优化\n\n网络的问题可以通过DNS优化，CDN，后端的优化\n\n利用ping等工具 可以直观了解到各个地区的速度情况\n\n![](https://res.arsrna.cn/blog-images/1928716/2d4d392016e20937d64b1977c7bc33c9.png)\n\n由于站点部署在中国香港，所以大陆西北地区速度会下降，解决办法就是多部署几个后端，然后负载均衡，必要的时候还要对网络运营商进行分别解析，均衡\n\n由于本站的后端是架设在腾讯云的对象存储上的，所以对于地域的切换与管理比较灵活\n\n对于未备案站点：华南地区优化建议解析中国香港，华北地区建议解析俄罗斯\n\n如果是备案站点：直接接入CDN，更灵活地改变地域性能以及速度，延迟\n\n因为网络一旦确定，就无法更改他的性能，而且受运营商和服务商的影响较大，但是对于用户来说，网络性能不是重点，因为合格的服务商，速度都不会太慢，大部分都在500ms以内，本地有的可以到达10ms以内\n\n这个延迟也会影响性能，不断地请求，数据量巨大，每个数据就得经历这一个个延迟，所以于网络优化对前端性能优化数据也是至关重要的\n\n## 2.资源\n\n除了延迟，网络速度也是很重要的一关，由于html的特性，资源都是由文档上往下同步加载，即加载完A再加载B，比如\n\n```\n<img src=\"资源A\">\n<img src=\"资源B\">\n<script src=\"资源C\"></script>\n```\n\n若资源A耗时0.1s，资源B耗时0.2s，资源C耗时0.5s，总共加起来就是0.8s\n\n![](https://res.arsrna.cn/blog-images/1928716/4f11c3bb72a3b460e8108388e90cd111.png)\n\n首屏速度最关键的是LCP，也就是框架加载出来的时间，这对index要求很高，如果大块文件在index太慢，则会拖慢速度\n\n在后端的index，一般100k以内最好\n\n如果是php渲染的index，不仅加载的时候会占用服务器后端资源，前端也会一片空白，非常缓慢，就如WordPress和hexo两者性能一样\n\n例如这一段代码\n\n```\n<head>\n<script src=\"xxxxx\"></script>\n<link href=\"xxx.css\" rel=\"stylesheet\"/>\n<script>\n$(document).ready(function(){\n$('#text').html('我永远喜欢薇尔莉特')\n})\n</script>\n</head>\n<body>\n<div>\n<p>\n    薇尔莉特·伊芙加登是日本轻小说作家晓佳奈创作的轻小说《紫罗兰永恒花园》及其衍生作品中的女主角\n    隶属C·H邮政公司的「自动手记人偶」少女，拥有罕见的战斗力。\n    幼年时被迪特福利特上校从战争中捡到，在发觉薇尔莉特有着非凡的战斗天赋后将其作为「战斗兵器」赠送给他的弟弟——基尔伯特·布甘比利亚少校。\n    此后薇尔莉特就跟随着基尔伯特少校，两人的关系在战争中也愈加紧密\n</p>\n<img src=\"https://res.arsrna.cn/wallpaper/WELT%20(17).jpg_copwh\">\n<video src=\"xxxxx\"></video>\n<h1 id=\"text\"></h1>\n\n</div>\n</body>\n```\n\n他的加载顺序如下：\n\n![](https://res.arsrna.cn/blog-images/1928716/45dc0d349b47b5094b109f32488ce055.png)\n\n当我们打开页面时，先加载了header最顶端的Script，同时CSS异步加载\n\n当JavaScript加载完成时开始加载DOM，同时CSS继续渲染\n\nDOM的加载也是从上到下，先到最大的div，再依次加载\n\n图片和视频是大文件，html可以让他们异步加载，所以图中video实际上是dom的加载，资源的加载在后面的互动资源加载\n\nLCP不记录后面资源的加载，所以这一步video对LCP性能影响不大，影响的是img，因为img需要显示出图片才算加载完框架了，而video则是根据用户设置的宽高就算加载完\n\n到这里整个页面已经出来了\n\n$(document).ready()方法也开始执行，H1开始渲染出内容**“我永远喜欢薇尔莉特”**\n\n视频和图片在这里占据大量的资源，如果不是在最头部或者很重要的话，建议加上 preload=\"none\" 属性，等待用户手动操作再加载，这样就不会占用其他资源加载的时间了\n\nJavaScript代码，如果是jQuery这类要在页面没加载前执行的，可以放在头部；如果是用户触发才执行或者是插件的话，建议放在body外面，先加载完dom再加载脚本，减少dom渲染时间\n\n同样地，因为每次加载都要请求一遍，所以这些小资源尽量做成一个bundle，即一堆js写在一个js里面，不然每次都需要请求请求请求，占据大量时间\n\n很多很多的小图片，也建议像上面的方法进行处理，变成一张大图，后续通过background位置去调整要显示的地方\n\n## 3.渲染性能\n\n后续用户会点击视频，点击的时候就会触发加载，互动事件启动\n\n如果是JavaScript在计算的，由于JavaScript原生异步，所以只按照时长最长的事件计算时间\n\n同步部分继续计时（延迟操作setTimeout或者计时器setInterval除外）\n\n![](https://res.arsrna.cn/blog-images/1928716/dcb3b77eb12533173a2d772449a8f9e6.png)\n\n## 少用PHP等占大内存的脚本渲染大的html页面，会造成资源浪费\n\n能纯前端尽量纯前端，减少ajax造成的耗时\n\n媒体大文件，无必要建议不预加载\n\n## 4.适当利用缓存\n\n为浏览器设置足够合适的缓存\n\nhtml建议2小时，css，视频等不常更新的资源建议设置5天，这样用户重复加载的时候就不会从头开始慢慢缓存，\n\n```\n<meta http-equiv=\"Cache-Control\" content=\"max-age=7200\" />\n```\n\n# 验证\n\n做好以上这些，可以大大提升前端性能，本网站\n\n优化前网络：腾讯云对象存储-中国香港直连  南方48ms  北方100ms\n\n优化后网络：腾讯云对象存储-中国香港，俄罗斯，新加坡  20ms-80ms\n\n优化前LCP：8000ms\n\n优化后LCP：1500ms\n\n![1500ms的时候已经加载完框架，2000ms的时候已经加载完整个页面](https://res.arsrna.cn/blog-images/1928716/28010cf21f121b8fb828e2d555c3e30e.png)\n\n# 总结\n\n网络优化：多地区设置多解析，针对地域进行优化\n\n加载优化：打包JavaScript，css，不必要脚本丢页底\n\n内容优化：减少不必要的DOM和视频图片预加载\n","source":"_posts/1928176.md","raw":"---\ntitle: 【腾讯云前端性能(RUM)优化大赛】针对前端的通用用户首屏体验(LCP)优化\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: www.arsrna.cn\nauthorAbout: 突破计算边界，构筑数字视界，www.arsrna.cn\nauthorDesc: 突破计算边界，构筑数字视界，www.arsrna.cn\ncategories: 技术\ncomments: true\ndate: 2022-01-03 16:51\ntags: 摄影,渲染,跟踪,对焦,3d,blender,焦距\nkeywords: 摄影,渲染,跟踪,对焦,3d,blender,焦距\ndescription: 摄像机自动对焦不准确，怎么解决？\nindex_img: 'https://res.arsrna.cn/blog-images/1928716/6df4782deccb2d980e16bf366f1f38a7.jpeg'\n---\n![](https://res.arsrna.cn/blog-images/1928716/6df4782deccb2d980e16bf366f1f38a7.jpeg)\n\n# 准备工作\n\n## 根据文档接入腾讯云RUM\n\n[前端性能监控 快速入门 - 文档中心 - 腾讯云 (tencent.com)](https://cloud.tencent.com/document/product/1464/58134)\n\n```\nconst aegis = new Aegis({\n        id: 'xxxx', // 上报 id\n        uin: 'xxx', // 用户唯一 ID（可选）\n        reportApiSpeed: true, // 接口测速\n        spa: true // spa 应用页面跳转的时候开启 pv 计算\n    });\n```\n\n## 检查是否完成接入\n\n部署已经完成构建的站点\n\n```\nserverless -deploy\n```\n\nconsole中键入 `<aegis>`出现\n\n![](https://res.arsrna.cn/blog-images/1928716/3c7f7e41a0806a4d7a686102993d4f66.png)\n\n即可\n\n---\n\n# 数据结果分析\n\n![](https://res.arsrna.cn/blog-images/1928716/aceec8a6f6822dc8707785ddc5e1298a.png)\n\n针对首屏加载，需要注意的分为以下几项：\n\n## 1.网络优化\n\n网络的问题可以通过DNS优化，CDN，后端的优化\n\n利用ping等工具 可以直观了解到各个地区的速度情况\n\n![](https://res.arsrna.cn/blog-images/1928716/2d4d392016e20937d64b1977c7bc33c9.png)\n\n由于站点部署在中国香港，所以大陆西北地区速度会下降，解决办法就是多部署几个后端，然后负载均衡，必要的时候还要对网络运营商进行分别解析，均衡\n\n由于本站的后端是架设在腾讯云的对象存储上的，所以对于地域的切换与管理比较灵活\n\n对于未备案站点：华南地区优化建议解析中国香港，华北地区建议解析俄罗斯\n\n如果是备案站点：直接接入CDN，更灵活地改变地域性能以及速度，延迟\n\n因为网络一旦确定，就无法更改他的性能，而且受运营商和服务商的影响较大，但是对于用户来说，网络性能不是重点，因为合格的服务商，速度都不会太慢，大部分都在500ms以内，本地有的可以到达10ms以内\n\n这个延迟也会影响性能，不断地请求，数据量巨大，每个数据就得经历这一个个延迟，所以于网络优化对前端性能优化数据也是至关重要的\n\n## 2.资源\n\n除了延迟，网络速度也是很重要的一关，由于html的特性，资源都是由文档上往下同步加载，即加载完A再加载B，比如\n\n```\n<img src=\"资源A\">\n<img src=\"资源B\">\n<script src=\"资源C\"></script>\n```\n\n若资源A耗时0.1s，资源B耗时0.2s，资源C耗时0.5s，总共加起来就是0.8s\n\n![](https://res.arsrna.cn/blog-images/1928716/4f11c3bb72a3b460e8108388e90cd111.png)\n\n首屏速度最关键的是LCP，也就是框架加载出来的时间，这对index要求很高，如果大块文件在index太慢，则会拖慢速度\n\n在后端的index，一般100k以内最好\n\n如果是php渲染的index，不仅加载的时候会占用服务器后端资源，前端也会一片空白，非常缓慢，就如WordPress和hexo两者性能一样\n\n例如这一段代码\n\n```\n<head>\n<script src=\"xxxxx\"></script>\n<link href=\"xxx.css\" rel=\"stylesheet\"/>\n<script>\n$(document).ready(function(){\n$('#text').html('我永远喜欢薇尔莉特')\n})\n</script>\n</head>\n<body>\n<div>\n<p>\n    薇尔莉特·伊芙加登是日本轻小说作家晓佳奈创作的轻小说《紫罗兰永恒花园》及其衍生作品中的女主角\n    隶属C·H邮政公司的「自动手记人偶」少女，拥有罕见的战斗力。\n    幼年时被迪特福利特上校从战争中捡到，在发觉薇尔莉特有着非凡的战斗天赋后将其作为「战斗兵器」赠送给他的弟弟——基尔伯特·布甘比利亚少校。\n    此后薇尔莉特就跟随着基尔伯特少校，两人的关系在战争中也愈加紧密\n</p>\n<img src=\"https://res.arsrna.cn/wallpaper/WELT%20(17).jpg_copwh\">\n<video src=\"xxxxx\"></video>\n<h1 id=\"text\"></h1>\n\n</div>\n</body>\n```\n\n他的加载顺序如下：\n\n![](https://res.arsrna.cn/blog-images/1928716/45dc0d349b47b5094b109f32488ce055.png)\n\n当我们打开页面时，先加载了header最顶端的Script，同时CSS异步加载\n\n当JavaScript加载完成时开始加载DOM，同时CSS继续渲染\n\nDOM的加载也是从上到下，先到最大的div，再依次加载\n\n图片和视频是大文件，html可以让他们异步加载，所以图中video实际上是dom的加载，资源的加载在后面的互动资源加载\n\nLCP不记录后面资源的加载，所以这一步video对LCP性能影响不大，影响的是img，因为img需要显示出图片才算加载完框架了，而video则是根据用户设置的宽高就算加载完\n\n到这里整个页面已经出来了\n\n$(document).ready()方法也开始执行，H1开始渲染出内容**“我永远喜欢薇尔莉特”**\n\n视频和图片在这里占据大量的资源，如果不是在最头部或者很重要的话，建议加上 preload=\"none\" 属性，等待用户手动操作再加载，这样就不会占用其他资源加载的时间了\n\nJavaScript代码，如果是jQuery这类要在页面没加载前执行的，可以放在头部；如果是用户触发才执行或者是插件的话，建议放在body外面，先加载完dom再加载脚本，减少dom渲染时间\n\n同样地，因为每次加载都要请求一遍，所以这些小资源尽量做成一个bundle，即一堆js写在一个js里面，不然每次都需要请求请求请求，占据大量时间\n\n很多很多的小图片，也建议像上面的方法进行处理，变成一张大图，后续通过background位置去调整要显示的地方\n\n## 3.渲染性能\n\n后续用户会点击视频，点击的时候就会触发加载，互动事件启动\n\n如果是JavaScript在计算的，由于JavaScript原生异步，所以只按照时长最长的事件计算时间\n\n同步部分继续计时（延迟操作setTimeout或者计时器setInterval除外）\n\n![](https://res.arsrna.cn/blog-images/1928716/dcb3b77eb12533173a2d772449a8f9e6.png)\n\n## 少用PHP等占大内存的脚本渲染大的html页面，会造成资源浪费\n\n能纯前端尽量纯前端，减少ajax造成的耗时\n\n媒体大文件，无必要建议不预加载\n\n## 4.适当利用缓存\n\n为浏览器设置足够合适的缓存\n\nhtml建议2小时，css，视频等不常更新的资源建议设置5天，这样用户重复加载的时候就不会从头开始慢慢缓存，\n\n```\n<meta http-equiv=\"Cache-Control\" content=\"max-age=7200\" />\n```\n\n# 验证\n\n做好以上这些，可以大大提升前端性能，本网站\n\n优化前网络：腾讯云对象存储-中国香港直连  南方48ms  北方100ms\n\n优化后网络：腾讯云对象存储-中国香港，俄罗斯，新加坡  20ms-80ms\n\n优化前LCP：8000ms\n\n优化后LCP：1500ms\n\n![1500ms的时候已经加载完框架，2000ms的时候已经加载完整个页面](https://res.arsrna.cn/blog-images/1928716/28010cf21f121b8fb828e2d555c3e30e.png)\n\n# 总结\n\n网络优化：多地区设置多解析，针对地域进行优化\n\n加载优化：打包JavaScript，css，不必要脚本丢页底\n\n内容优化：减少不必要的DOM和视频图片预加载\n","slug":"1928176","published":1,"updated":"2023-01-17T08:55:38.566Z","layout":"post","photos":[],"link":"","_id":"clod0d6xk002jc0nd36pk0ecv","content":"<p><img src=\"https://res.arsrna.cn/blog-images/1928716/6df4782deccb2d980e16bf366f1f38a7.jpeg\"></p>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><h2 id=\"根据文档接入腾讯云RUM\"><a href=\"#根据文档接入腾讯云RUM\" class=\"headerlink\" title=\"根据文档接入腾讯云RUM\"></a>根据文档接入腾讯云RUM</h2><p><a href=\"https://cloud.tencent.com/document/product/1464/58134\">前端性能监控 快速入门 - 文档中心 - 腾讯云 (tencent.com)</a></p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs actionscript\"><span class=\"hljs-keyword\">const</span> aegis = <span class=\"hljs-keyword\">new</span> Aegis(&#123;<br>        id: <span class=\"hljs-string\">&#x27;xxxx&#x27;</span>, <span class=\"hljs-comment\">// 上报 id</span><br>        uin: <span class=\"hljs-string\">&#x27;xxx&#x27;</span>, <span class=\"hljs-comment\">// 用户唯一 ID（可选）</span><br>        reportApiSpeed: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-comment\">// 接口测速</span><br>        spa: <span class=\"hljs-literal\">true</span> <span class=\"hljs-comment\">// spa 应用页面跳转的时候开启 pv 计算</span><br>    &#125;);<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"检查是否完成接入\"><a href=\"#检查是否完成接入\" class=\"headerlink\" title=\"检查是否完成接入\"></a>检查是否完成接入</h2><p>部署已经完成构建的站点</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">serverless -deploy</span><br></code></pre></td></tr></table></figure>\n\n<p>console中键入 <code>&lt;aegis&gt;</code>出现</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1928716/3c7f7e41a0806a4d7a686102993d4f66.png\"></p>\n<p>即可</p>\n<hr>\n<h1 id=\"数据结果分析\"><a href=\"#数据结果分析\" class=\"headerlink\" title=\"数据结果分析\"></a>数据结果分析</h1><p><img src=\"https://res.arsrna.cn/blog-images/1928716/aceec8a6f6822dc8707785ddc5e1298a.png\"></p>\n<p>针对首屏加载，需要注意的分为以下几项：</p>\n<h2 id=\"1-网络优化\"><a href=\"#1-网络优化\" class=\"headerlink\" title=\"1.网络优化\"></a>1.网络优化</h2><p>网络的问题可以通过DNS优化，CDN，后端的优化</p>\n<p>利用ping等工具 可以直观了解到各个地区的速度情况</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1928716/2d4d392016e20937d64b1977c7bc33c9.png\"></p>\n<p>由于站点部署在中国香港，所以大陆西北地区速度会下降，解决办法就是多部署几个后端，然后负载均衡，必要的时候还要对网络运营商进行分别解析，均衡</p>\n<p>由于本站的后端是架设在腾讯云的对象存储上的，所以对于地域的切换与管理比较灵活</p>\n<p>对于未备案站点：华南地区优化建议解析中国香港，华北地区建议解析俄罗斯</p>\n<p>如果是备案站点：直接接入CDN，更灵活地改变地域性能以及速度，延迟</p>\n<p>因为网络一旦确定，就无法更改他的性能，而且受运营商和服务商的影响较大，但是对于用户来说，网络性能不是重点，因为合格的服务商，速度都不会太慢，大部分都在500ms以内，本地有的可以到达10ms以内</p>\n<p>这个延迟也会影响性能，不断地请求，数据量巨大，每个数据就得经历这一个个延迟，所以于网络优化对前端性能优化数据也是至关重要的</p>\n<h2 id=\"2-资源\"><a href=\"#2-资源\" class=\"headerlink\" title=\"2.资源\"></a>2.资源</h2><p>除了延迟，网络速度也是很重要的一关，由于html的特性，资源都是由文档上往下同步加载，即加载完A再加载B，比如</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">&lt;img <span class=\"hljs-attribute\">src</span>=<span class=\"hljs-string\">&quot;资源A&quot;</span>&gt;<br>&lt;img <span class=\"hljs-attribute\">src</span>=<span class=\"hljs-string\">&quot;资源B&quot;</span>&gt;<br>&lt;script <span class=\"hljs-attribute\">src</span>=<span class=\"hljs-string\">&quot;资源C&quot;</span>&gt;&lt;/script&gt;<br></code></pre></td></tr></table></figure>\n\n<p>若资源A耗时0.1s，资源B耗时0.2s，资源C耗时0.5s，总共加起来就是0.8s</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1928716/4f11c3bb72a3b460e8108388e90cd111.png\"></p>\n<p>首屏速度最关键的是LCP，也就是框架加载出来的时间，这对index要求很高，如果大块文件在index太慢，则会拖慢速度</p>\n<p>在后端的index，一般100k以内最好</p>\n<p>如果是php渲染的index，不仅加载的时候会占用服务器后端资源，前端也会一片空白，非常缓慢，就如WordPress和hexo两者性能一样</p>\n<p>例如这一段代码</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;xxxxx&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;xxx.css&quot;</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;stylesheet&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">$(<span class=\"hljs-variable language_\">document</span>).<span class=\"hljs-title function_\">ready</span>(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)&#123;</span><br><span class=\"language-javascript\">$(<span class=\"hljs-string\">&#x27;#text&#x27;</span>).<span class=\"hljs-title function_\">html</span>(<span class=\"hljs-string\">&#x27;我永远喜欢薇尔莉特&#x27;</span>)</span><br><span class=\"language-javascript\">&#125;)</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span><br>    薇尔莉特·伊芙加登是日本轻小说作家晓佳奈创作的轻小说《紫罗兰永恒花园》及其衍生作品中的女主角<br>    隶属C·H邮政公司的「自动手记人偶」少女，拥有罕见的战斗力。<br>    幼年时被迪特福利特上校从战争中捡到，在发觉薇尔莉特有着非凡的战斗天赋后将其作为「战斗兵器」赠送给他的弟弟——基尔伯特·布甘比利亚少校。<br>    此后薇尔莉特就跟随着基尔伯特少校，两人的关系在战争中也愈加紧密<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://res.arsrna.cn/wallpaper/WELT%20(17).jpg_copwh&quot;</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">video</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;xxxxx&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">video</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;text&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>他的加载顺序如下：</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1928716/45dc0d349b47b5094b109f32488ce055.png\"></p>\n<p>当我们打开页面时，先加载了header最顶端的Script，同时CSS异步加载</p>\n<p>当JavaScript加载完成时开始加载DOM，同时CSS继续渲染</p>\n<p>DOM的加载也是从上到下，先到最大的div，再依次加载</p>\n<p>图片和视频是大文件，html可以让他们异步加载，所以图中video实际上是dom的加载，资源的加载在后面的互动资源加载</p>\n<p>LCP不记录后面资源的加载，所以这一步video对LCP性能影响不大，影响的是img，因为img需要显示出图片才算加载完框架了，而video则是根据用户设置的宽高就算加载完</p>\n<p>到这里整个页面已经出来了</p>\n<p>$(document).ready()方法也开始执行，H1开始渲染出内容<strong>“我永远喜欢薇尔莉特”</strong></p>\n<p>视频和图片在这里占据大量的资源，如果不是在最头部或者很重要的话，建议加上 preload&#x3D;”none” 属性，等待用户手动操作再加载，这样就不会占用其他资源加载的时间了</p>\n<p>JavaScript代码，如果是jQuery这类要在页面没加载前执行的，可以放在头部；如果是用户触发才执行或者是插件的话，建议放在body外面，先加载完dom再加载脚本，减少dom渲染时间</p>\n<p>同样地，因为每次加载都要请求一遍，所以这些小资源尽量做成一个bundle，即一堆js写在一个js里面，不然每次都需要请求请求请求，占据大量时间</p>\n<p>很多很多的小图片，也建议像上面的方法进行处理，变成一张大图，后续通过background位置去调整要显示的地方</p>\n<h2 id=\"3-渲染性能\"><a href=\"#3-渲染性能\" class=\"headerlink\" title=\"3.渲染性能\"></a>3.渲染性能</h2><p>后续用户会点击视频，点击的时候就会触发加载，互动事件启动</p>\n<p>如果是JavaScript在计算的，由于JavaScript原生异步，所以只按照时长最长的事件计算时间</p>\n<p>同步部分继续计时（延迟操作setTimeout或者计时器setInterval除外）</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1928716/dcb3b77eb12533173a2d772449a8f9e6.png\"></p>\n<h2 id=\"少用PHP等占大内存的脚本渲染大的html页面，会造成资源浪费\"><a href=\"#少用PHP等占大内存的脚本渲染大的html页面，会造成资源浪费\" class=\"headerlink\" title=\"少用PHP等占大内存的脚本渲染大的html页面，会造成资源浪费\"></a>少用PHP等占大内存的脚本渲染大的html页面，会造成资源浪费</h2><p>能纯前端尽量纯前端，减少ajax造成的耗时</p>\n<p>媒体大文件，无必要建议不预加载</p>\n<h2 id=\"4-适当利用缓存\"><a href=\"#4-适当利用缓存\" class=\"headerlink\" title=\"4.适当利用缓存\"></a>4.适当利用缓存</h2><p>为浏览器设置足够合适的缓存</p>\n<p>html建议2小时，css，视频等不常更新的资源建议设置5天，这样用户重复加载的时候就不会从头开始慢慢缓存，</p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs abnf\">&lt;meta http-equiv<span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;Cache-Control&quot;</span> content<span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;max-age=7200&quot;</span> /&gt;<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h1><p>做好以上这些，可以大大提升前端性能，本网站</p>\n<p>优化前网络：腾讯云对象存储-中国香港直连  南方48ms  北方100ms</p>\n<p>优化后网络：腾讯云对象存储-中国香港，俄罗斯，新加坡  20ms-80ms</p>\n<p>优化前LCP：8000ms</p>\n<p>优化后LCP：1500ms</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1928716/28010cf21f121b8fb828e2d555c3e30e.png\" alt=\"1500ms的时候已经加载完框架，2000ms的时候已经加载完整个页面\"></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>网络优化：多地区设置多解析，针对地域进行优化</p>\n<p>加载优化：打包JavaScript，css，不必要脚本丢页底</p>\n<p>内容优化：减少不必要的DOM和视频图片预加载</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://res.arsrna.cn/blog-images/1928716/6df4782deccb2d980e16bf366f1f38a7.jpeg\"></p>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><h2 id=\"根据文档接入腾讯云RUM\"><a href=\"#根据文档接入腾讯云RUM\" class=\"headerlink\" title=\"根据文档接入腾讯云RUM\"></a>根据文档接入腾讯云RUM</h2><p><a href=\"https://cloud.tencent.com/document/product/1464/58134\">前端性能监控 快速入门 - 文档中心 - 腾讯云 (tencent.com)</a></p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs actionscript\"><span class=\"hljs-keyword\">const</span> aegis = <span class=\"hljs-keyword\">new</span> Aegis(&#123;<br>        id: <span class=\"hljs-string\">&#x27;xxxx&#x27;</span>, <span class=\"hljs-comment\">// 上报 id</span><br>        uin: <span class=\"hljs-string\">&#x27;xxx&#x27;</span>, <span class=\"hljs-comment\">// 用户唯一 ID（可选）</span><br>        reportApiSpeed: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-comment\">// 接口测速</span><br>        spa: <span class=\"hljs-literal\">true</span> <span class=\"hljs-comment\">// spa 应用页面跳转的时候开启 pv 计算</span><br>    &#125;);<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"检查是否完成接入\"><a href=\"#检查是否完成接入\" class=\"headerlink\" title=\"检查是否完成接入\"></a>检查是否完成接入</h2><p>部署已经完成构建的站点</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">serverless -deploy</span><br></code></pre></td></tr></table></figure>\n\n<p>console中键入 <code>&lt;aegis&gt;</code>出现</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1928716/3c7f7e41a0806a4d7a686102993d4f66.png\"></p>\n<p>即可</p>\n<hr>\n<h1 id=\"数据结果分析\"><a href=\"#数据结果分析\" class=\"headerlink\" title=\"数据结果分析\"></a>数据结果分析</h1><p><img src=\"https://res.arsrna.cn/blog-images/1928716/aceec8a6f6822dc8707785ddc5e1298a.png\"></p>\n<p>针对首屏加载，需要注意的分为以下几项：</p>\n<h2 id=\"1-网络优化\"><a href=\"#1-网络优化\" class=\"headerlink\" title=\"1.网络优化\"></a>1.网络优化</h2><p>网络的问题可以通过DNS优化，CDN，后端的优化</p>\n<p>利用ping等工具 可以直观了解到各个地区的速度情况</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1928716/2d4d392016e20937d64b1977c7bc33c9.png\"></p>\n<p>由于站点部署在中国香港，所以大陆西北地区速度会下降，解决办法就是多部署几个后端，然后负载均衡，必要的时候还要对网络运营商进行分别解析，均衡</p>\n<p>由于本站的后端是架设在腾讯云的对象存储上的，所以对于地域的切换与管理比较灵活</p>\n<p>对于未备案站点：华南地区优化建议解析中国香港，华北地区建议解析俄罗斯</p>\n<p>如果是备案站点：直接接入CDN，更灵活地改变地域性能以及速度，延迟</p>\n<p>因为网络一旦确定，就无法更改他的性能，而且受运营商和服务商的影响较大，但是对于用户来说，网络性能不是重点，因为合格的服务商，速度都不会太慢，大部分都在500ms以内，本地有的可以到达10ms以内</p>\n<p>这个延迟也会影响性能，不断地请求，数据量巨大，每个数据就得经历这一个个延迟，所以于网络优化对前端性能优化数据也是至关重要的</p>\n<h2 id=\"2-资源\"><a href=\"#2-资源\" class=\"headerlink\" title=\"2.资源\"></a>2.资源</h2><p>除了延迟，网络速度也是很重要的一关，由于html的特性，资源都是由文档上往下同步加载，即加载完A再加载B，比如</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">&lt;img <span class=\"hljs-attribute\">src</span>=<span class=\"hljs-string\">&quot;资源A&quot;</span>&gt;<br>&lt;img <span class=\"hljs-attribute\">src</span>=<span class=\"hljs-string\">&quot;资源B&quot;</span>&gt;<br>&lt;script <span class=\"hljs-attribute\">src</span>=<span class=\"hljs-string\">&quot;资源C&quot;</span>&gt;&lt;/script&gt;<br></code></pre></td></tr></table></figure>\n\n<p>若资源A耗时0.1s，资源B耗时0.2s，资源C耗时0.5s，总共加起来就是0.8s</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1928716/4f11c3bb72a3b460e8108388e90cd111.png\"></p>\n<p>首屏速度最关键的是LCP，也就是框架加载出来的时间，这对index要求很高，如果大块文件在index太慢，则会拖慢速度</p>\n<p>在后端的index，一般100k以内最好</p>\n<p>如果是php渲染的index，不仅加载的时候会占用服务器后端资源，前端也会一片空白，非常缓慢，就如WordPress和hexo两者性能一样</p>\n<p>例如这一段代码</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;xxxxx&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;xxx.css&quot;</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;stylesheet&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">$(<span class=\"hljs-variable language_\">document</span>).<span class=\"hljs-title function_\">ready</span>(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)&#123;</span><br><span class=\"language-javascript\">$(<span class=\"hljs-string\">&#x27;#text&#x27;</span>).<span class=\"hljs-title function_\">html</span>(<span class=\"hljs-string\">&#x27;我永远喜欢薇尔莉特&#x27;</span>)</span><br><span class=\"language-javascript\">&#125;)</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span><br>    薇尔莉特·伊芙加登是日本轻小说作家晓佳奈创作的轻小说《紫罗兰永恒花园》及其衍生作品中的女主角<br>    隶属C·H邮政公司的「自动手记人偶」少女，拥有罕见的战斗力。<br>    幼年时被迪特福利特上校从战争中捡到，在发觉薇尔莉特有着非凡的战斗天赋后将其作为「战斗兵器」赠送给他的弟弟——基尔伯特·布甘比利亚少校。<br>    此后薇尔莉特就跟随着基尔伯特少校，两人的关系在战争中也愈加紧密<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://res.arsrna.cn/wallpaper/WELT%20(17).jpg_copwh&quot;</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">video</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;xxxxx&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">video</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;text&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>他的加载顺序如下：</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1928716/45dc0d349b47b5094b109f32488ce055.png\"></p>\n<p>当我们打开页面时，先加载了header最顶端的Script，同时CSS异步加载</p>\n<p>当JavaScript加载完成时开始加载DOM，同时CSS继续渲染</p>\n<p>DOM的加载也是从上到下，先到最大的div，再依次加载</p>\n<p>图片和视频是大文件，html可以让他们异步加载，所以图中video实际上是dom的加载，资源的加载在后面的互动资源加载</p>\n<p>LCP不记录后面资源的加载，所以这一步video对LCP性能影响不大，影响的是img，因为img需要显示出图片才算加载完框架了，而video则是根据用户设置的宽高就算加载完</p>\n<p>到这里整个页面已经出来了</p>\n<p>$(document).ready()方法也开始执行，H1开始渲染出内容<strong>“我永远喜欢薇尔莉特”</strong></p>\n<p>视频和图片在这里占据大量的资源，如果不是在最头部或者很重要的话，建议加上 preload&#x3D;”none” 属性，等待用户手动操作再加载，这样就不会占用其他资源加载的时间了</p>\n<p>JavaScript代码，如果是jQuery这类要在页面没加载前执行的，可以放在头部；如果是用户触发才执行或者是插件的话，建议放在body外面，先加载完dom再加载脚本，减少dom渲染时间</p>\n<p>同样地，因为每次加载都要请求一遍，所以这些小资源尽量做成一个bundle，即一堆js写在一个js里面，不然每次都需要请求请求请求，占据大量时间</p>\n<p>很多很多的小图片，也建议像上面的方法进行处理，变成一张大图，后续通过background位置去调整要显示的地方</p>\n<h2 id=\"3-渲染性能\"><a href=\"#3-渲染性能\" class=\"headerlink\" title=\"3.渲染性能\"></a>3.渲染性能</h2><p>后续用户会点击视频，点击的时候就会触发加载，互动事件启动</p>\n<p>如果是JavaScript在计算的，由于JavaScript原生异步，所以只按照时长最长的事件计算时间</p>\n<p>同步部分继续计时（延迟操作setTimeout或者计时器setInterval除外）</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1928716/dcb3b77eb12533173a2d772449a8f9e6.png\"></p>\n<h2 id=\"少用PHP等占大内存的脚本渲染大的html页面，会造成资源浪费\"><a href=\"#少用PHP等占大内存的脚本渲染大的html页面，会造成资源浪费\" class=\"headerlink\" title=\"少用PHP等占大内存的脚本渲染大的html页面，会造成资源浪费\"></a>少用PHP等占大内存的脚本渲染大的html页面，会造成资源浪费</h2><p>能纯前端尽量纯前端，减少ajax造成的耗时</p>\n<p>媒体大文件，无必要建议不预加载</p>\n<h2 id=\"4-适当利用缓存\"><a href=\"#4-适当利用缓存\" class=\"headerlink\" title=\"4.适当利用缓存\"></a>4.适当利用缓存</h2><p>为浏览器设置足够合适的缓存</p>\n<p>html建议2小时，css，视频等不常更新的资源建议设置5天，这样用户重复加载的时候就不会从头开始慢慢缓存，</p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs abnf\">&lt;meta http-equiv<span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;Cache-Control&quot;</span> content<span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;max-age=7200&quot;</span> /&gt;<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h1><p>做好以上这些，可以大大提升前端性能，本网站</p>\n<p>优化前网络：腾讯云对象存储-中国香港直连  南方48ms  北方100ms</p>\n<p>优化后网络：腾讯云对象存储-中国香港，俄罗斯，新加坡  20ms-80ms</p>\n<p>优化前LCP：8000ms</p>\n<p>优化后LCP：1500ms</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1928716/28010cf21f121b8fb828e2d555c3e30e.png\" alt=\"1500ms的时候已经加载完框架，2000ms的时候已经加载完整个页面\"></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>网络优化：多地区设置多解析，针对地域进行优化</p>\n<p>加载优化：打包JavaScript，css，不必要脚本丢页底</p>\n<p>内容优化：减少不必要的DOM和视频图片预加载</p>\n"},{"title":"【对象存储COS】利用数据万象CI对影像内容空间进行优化","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"www.arsrna.cn","authorAbout":"突破计算边界，构筑数字视界，www.arsrna.cn","authorDesc":"突破计算边界，构筑数字视界，www.arsrna.cn","comments":1,"date":"2022-03-23T16:00:00.000Z","keywords":"数据万象,对象存储,图像处理,大数据解决方案","description":"业务量的不断扩大，导致对象存储的存储空间以及流量迅速增大，尤其是图片业务，有什么办法大幅度减小图片体积呢？","index_img":"https://res.arsrna.cn/blogs/cosStroageOptimizing/3c0123f6cf7827cfb017bebca6f486af.png_copwh","_content":"# 前言\n\n\n业务量的不断扩大，导致对象存储的存储空间以及流量迅速增大，尤其是图片业务，web中最关键的部分，由于html的同步加载特性，通常是一张加载完才能加载下一张，在本地降低分辨率会丢失图片大部分细节，那么除了让本地图片一张张压缩之外，还有什么办法大幅度减小图片体积呢？\n\n腾讯云对象存储与数据万象提供了极致性价比的压缩：[对象存储 图片压缩 - API 文档 - 文档中心 - 腾讯云 (tencent.com)](https://cloud.tencent.com/document/product/436/60450)\n\n## 计费方面\n\n| 输出格式 | 价格       |\n| :------- | :--------- |\n| TPG      | 0.1元/千次 |\n| HEIF     | 0.1元/千次 |\n| AVIF     | 0.3元/千次 |\n\n## DEMO\n\n[https://www.arsrna.cn/test/img.htm](https://www.arsrna.cn/test/img.html)l\n\n\n![](https://res.arsrna.cn/blog-images/1961325/527cafc68ff4d343e4160bd05f0e5398.png)\n\n\n可以看到，HEIF对比原图，下降了80%左右的大小，而画质基本不变，并且在速度上，HEIF加载也是最快的，因为只有7.8kb\n\n![HEIF   700k](https://res.arsrna.cn/blog-images/1961325/939ba6799059bc704bfb79a5a9ee2102.png)\n\n\n\n![原图PNG  30M](https://res.arsrna.cn/blog-images/1961325/9bc29e5cb98de7162f50e7ae22453af1.png)\n\n可以看到，压缩前后图片画质基本没有区别，色彩空间有所压缩，但是图片大幅下降了大小\n\n## 兼容性\n\n因为AVIF是一种较新的类似AV1格式，只有在较新的浏览器才可以浏览，所以在这里建议使用HEIF，各个图片的兼容性如下（亲测）：\n\n| 格式 | Android 12 | iOS15.4    | Windows11  | 压缩   |\n| :--- | :--------- | :--------- | :--------- | :----- |\n| PNG  | √         | √         | √         | 无     |\n| JPG  | √         | √         | √         | 无     |\n| AVIF | ×         | ×         | 需要扩展   | ↓50+% |\n| HEIF | √         | √         | 需要扩展   | ↓30+% |\n| TPG  | 仅qq浏览器 | 仅qq浏览器 | 仅qq浏览器 | ↓50+% |\n| WebP | √         | √         | √         | ↓20+% |\n\n# 相关基础配置\n\n## 对象存储设置开通\n\n首先前往数据万象CI产品控制台开通  [概览 - 数据万象 - 控制台 (tencent.com)](https://console.cloud.tencent.com/ci)\n\n在对象存储开通高级压缩\n\n![](https://res.arsrna.cn/blog-images/1961325/d4f2e1b04b9de8af67ae26fe532c613e.png)\n\n# 存量数据处理\n\n## 控制台处理\n\n在对象存储数据工作流-公共配置中，设创建模板\n\n![](https://res.arsrna.cn/blog-images/1961325/60722196d4dd97ee56a7661ead84e6cd.png)\n\n设置名称，参数\n\n![](https://res.arsrna.cn/blog-images/1961325/00429a3555ec961df511455728fb9c29.png)\n\n\n不缩略，输出格式AVIF或者HEIF\n\n保存以后在 任务 处创建图片压缩任务\n\n![](https://res.arsrna.cn/blog-images/1961325/1f36a2d77104b21538522079327ac787.png)\n\n设置所有参数，输出文件名按需设置\n\n完成之后确定即可开始进程\n\n此方式优点：设置简单\n\n缺点：批量数据很难实现处理，比较繁琐\n\n建议开启上传的时候开启数据流处理\n\n## 工作流处理\n\n### 设置工作流\n\n在对象存储工作流控制台 ：[数据工作流 - 对象存储 - 控制台 (tencent.com)](https://console.cloud.tencent.com/cos/workflow/list)\n\n创建工作流，名称自定义，选择对应处理的存储桶，建议开启格式匹配-图片文件\n\n配置工作流。输入后执行图片处理\n\n![](https://res.arsrna.cn/blog-images/1961325/0750d87cef7ba393f4e9ec36def69f8c.png)\n\n\n选择刚刚设置的存储桶\n\n![](https://res.arsrna.cn/blog-images/1961325/20f7acf3ed01c87f69430b90a0a7b546.png)\n\n然后保存\n\n### 执行工作流\n\n在工作流控制台 [数据工作流 - 对象存储 - 控制台 (tencent.com)](https://console.cloud.tencent.com/cos/workflow/list)\n\n在刚刚创建的工作流操作里，点击执行工作流\n\n![](https://res.arsrna.cn/blog-images/1961325/6a6ab01cbae220e27cba74bf1a9bc6fc.png)\n\n扫描任务名称自定义，扫描模式多个文件执行工作流\n\n剩下的根据需要设置\n\n![](https://res.arsrna.cn/blog-images/1961325/3d612b7ee29a83b08da7bdc8bd2cf90e.png)\n\n完成之后执行工作流即可\n\n![](https://res.arsrna.cn/blog-images/1961325/c1b84631677e38d23a813905e750266e.png)\n\n该方式优点：一次设置，次次方便，批量的时候非常方便\n\n缺点：第一次设置较复杂，容易导致参数过多忘记\n\n# 上传数据处理\n\n## 数据工作流（推荐）\n\n在数据工作流里面打开上传触发执行即可\n\n![](https://res.arsrna.cn/blog-images/1961325/88a57df15403211ca1af08251f935c8b.png)\n\n\n每次上传到任务流设置的指定路径就会执行\n\n## API\n\n由于需要存储到存储桶里，API只能做到实时处理无法直接保存到文件，所以需要通过持续化将图片，在上传的时候要加入参数，让图片自动保存[数据万象 图片持久化处理 - API 文档 - 文档中心 - 腾讯云 (tencent.com)](https://cloud.tencent.com/document/product/460/18147)\n\n其中\n\n```js\nrules\n```\n\n这个参数需要自己定义，可以在工作流详情图像处理看得到\n\n![](https://res.arsrna.cn/blog-images/1961325/1b02984c1a6bbd74d66f59853b5caed0.png)\n\n```js\nimageMogr2/format/avif/interlace/1\n```\n\n\n# 总结\n\n## 直观大小对比\n\n这里以三张图片为例\n\n| 原图/MB | HEIF/MB | AVIF/MB |\n| :------ | :------ | :------ |\n| 7.91    | 3.2     | 1.8     |\n| 18      | 13      | 3.2     |\n| 30      | 14      | 6.9     |\n\n很明显地看到，相比原图JPG或PNG格式，HEIF与AVIF大幅度压缩了不少，如果一个文件夹有100000张10M的图片，AVIF就剩下了300+G，换算到腾讯云的标准存储容量包价格，每个月存储省下了24块，流量省下了102块（中国大陆）\n\n## 画质对比\n\n这么大的压缩率，如果是传统的压缩方式，估计已经破败不堪了，但是这两种压缩方式能够尽量保留原色彩和画质，尽量无损\n\n![原图（14M）](https://res.arsrna.cn/blog-images/1961325/3c0123f6cf7827cfb017bebca6f486af.png)\n\n![HEIF（3M）](https://res.arsrna.cn/blog-images/1961325/33f16f92a8b2c66c0a1c5a03bb982663.png)\n\n测试图片：\n\n[https://res.arsrna.cn/SwordArtOnline/SwordArtOnline\\_632059\\_ArSrNaRS4x.avif](https://res.arsrna.cn/SwordArtOnline/SwordArtOnline_632059_ArSrNaRS4x.avif)\n\n## 优缺点对比\n\n|        | 高级压缩         | 传统压缩                   |\n| :----- | :--------------- | :------------------------- |\n| 速度   | 云端处理，速度快 | 本地处理，根据处理设备决定 |\n| 画质   | 近乎无损         | 有损压缩                   |\n| 压缩率 | 极高             | 一般                       |\n| 成本   | 低               | 根据处理设备决定           |\n| 兼容性 | 中等             | 极强                       |\n\n\n由于AVIF，HEIF还是比较小众的图片格式，鉴于原生iOS就是HEIF的优势，在iOS平台上强烈建议使用HEIF方式，Windows平台建议Webp和AVIF。\n\n希望不久的将来，图片空间与图片压缩算法的发展，我们的数据将会在质的提升时，控制量的剧变\n\n# 相关问题\n\n## 图像过大处理失败\n\n体积限制：处理图片原图大小不超过32MB、宽高不超过30000像素且总像素不超过2.5亿像素，处理结果图宽高设置不超过9999像素；针对动图，原图宽 x 高 x 帧数不超过2.5亿像素。\n\n如果超出限制则会导致失败，建议使用Photoshop或者其他软件将图片缩小到范围之内再进行处理\n\n## 无法开始处理\n\n请确认是否开通图像高级压缩和数据万象，同时确认是否后付费留有足够的余额\n\n## 处理时间过长\n\n一般一张图片10分钟左右肯定能完成，如果太长，请关闭任务重新开始，如果还是不行，请核实图片内容是否过于复杂，建议优化图片内容\n\n如果还是不行，建议提交工单确认账号或系统问题\n\n\n---\n\n到此，教程就结束了，更多可能，需要我们一起发现\n\nPowered by Ar-Sr-Na www.arsrna.cn\n","source":"_posts/1961325.md","raw":"---\ntitle: 【对象存储COS】利用数据万象CI对影像内容空间进行优化\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: www.arsrna.cn\nauthorAbout: 突破计算边界，构筑数字视界，www.arsrna.cn\nauthorDesc: 突破计算边界，构筑数字视界，www.arsrna.cn\ncategories: 技术\ncomments: true\ndate: 2022-3-24\ntags: 数据万象,对象存储,图像处理,大数据解决方案\nkeywords: 数据万象,对象存储,图像处理,大数据解决方案\ndescription: 业务量的不断扩大，导致对象存储的存储空间以及流量迅速增大，尤其是图片业务，有什么办法大幅度减小图片体积呢？\nindex_img: 'https://res.arsrna.cn/blogs/cosStroageOptimizing/3c0123f6cf7827cfb017bebca6f486af.png_copwh'\n---\n# 前言\n\n\n业务量的不断扩大，导致对象存储的存储空间以及流量迅速增大，尤其是图片业务，web中最关键的部分，由于html的同步加载特性，通常是一张加载完才能加载下一张，在本地降低分辨率会丢失图片大部分细节，那么除了让本地图片一张张压缩之外，还有什么办法大幅度减小图片体积呢？\n\n腾讯云对象存储与数据万象提供了极致性价比的压缩：[对象存储 图片压缩 - API 文档 - 文档中心 - 腾讯云 (tencent.com)](https://cloud.tencent.com/document/product/436/60450)\n\n## 计费方面\n\n| 输出格式 | 价格       |\n| :------- | :--------- |\n| TPG      | 0.1元/千次 |\n| HEIF     | 0.1元/千次 |\n| AVIF     | 0.3元/千次 |\n\n## DEMO\n\n[https://www.arsrna.cn/test/img.htm](https://www.arsrna.cn/test/img.html)l\n\n\n![](https://res.arsrna.cn/blog-images/1961325/527cafc68ff4d343e4160bd05f0e5398.png)\n\n\n可以看到，HEIF对比原图，下降了80%左右的大小，而画质基本不变，并且在速度上，HEIF加载也是最快的，因为只有7.8kb\n\n![HEIF   700k](https://res.arsrna.cn/blog-images/1961325/939ba6799059bc704bfb79a5a9ee2102.png)\n\n\n\n![原图PNG  30M](https://res.arsrna.cn/blog-images/1961325/9bc29e5cb98de7162f50e7ae22453af1.png)\n\n可以看到，压缩前后图片画质基本没有区别，色彩空间有所压缩，但是图片大幅下降了大小\n\n## 兼容性\n\n因为AVIF是一种较新的类似AV1格式，只有在较新的浏览器才可以浏览，所以在这里建议使用HEIF，各个图片的兼容性如下（亲测）：\n\n| 格式 | Android 12 | iOS15.4    | Windows11  | 压缩   |\n| :--- | :--------- | :--------- | :--------- | :----- |\n| PNG  | √         | √         | √         | 无     |\n| JPG  | √         | √         | √         | 无     |\n| AVIF | ×         | ×         | 需要扩展   | ↓50+% |\n| HEIF | √         | √         | 需要扩展   | ↓30+% |\n| TPG  | 仅qq浏览器 | 仅qq浏览器 | 仅qq浏览器 | ↓50+% |\n| WebP | √         | √         | √         | ↓20+% |\n\n# 相关基础配置\n\n## 对象存储设置开通\n\n首先前往数据万象CI产品控制台开通  [概览 - 数据万象 - 控制台 (tencent.com)](https://console.cloud.tencent.com/ci)\n\n在对象存储开通高级压缩\n\n![](https://res.arsrna.cn/blog-images/1961325/d4f2e1b04b9de8af67ae26fe532c613e.png)\n\n# 存量数据处理\n\n## 控制台处理\n\n在对象存储数据工作流-公共配置中，设创建模板\n\n![](https://res.arsrna.cn/blog-images/1961325/60722196d4dd97ee56a7661ead84e6cd.png)\n\n设置名称，参数\n\n![](https://res.arsrna.cn/blog-images/1961325/00429a3555ec961df511455728fb9c29.png)\n\n\n不缩略，输出格式AVIF或者HEIF\n\n保存以后在 任务 处创建图片压缩任务\n\n![](https://res.arsrna.cn/blog-images/1961325/1f36a2d77104b21538522079327ac787.png)\n\n设置所有参数，输出文件名按需设置\n\n完成之后确定即可开始进程\n\n此方式优点：设置简单\n\n缺点：批量数据很难实现处理，比较繁琐\n\n建议开启上传的时候开启数据流处理\n\n## 工作流处理\n\n### 设置工作流\n\n在对象存储工作流控制台 ：[数据工作流 - 对象存储 - 控制台 (tencent.com)](https://console.cloud.tencent.com/cos/workflow/list)\n\n创建工作流，名称自定义，选择对应处理的存储桶，建议开启格式匹配-图片文件\n\n配置工作流。输入后执行图片处理\n\n![](https://res.arsrna.cn/blog-images/1961325/0750d87cef7ba393f4e9ec36def69f8c.png)\n\n\n选择刚刚设置的存储桶\n\n![](https://res.arsrna.cn/blog-images/1961325/20f7acf3ed01c87f69430b90a0a7b546.png)\n\n然后保存\n\n### 执行工作流\n\n在工作流控制台 [数据工作流 - 对象存储 - 控制台 (tencent.com)](https://console.cloud.tencent.com/cos/workflow/list)\n\n在刚刚创建的工作流操作里，点击执行工作流\n\n![](https://res.arsrna.cn/blog-images/1961325/6a6ab01cbae220e27cba74bf1a9bc6fc.png)\n\n扫描任务名称自定义，扫描模式多个文件执行工作流\n\n剩下的根据需要设置\n\n![](https://res.arsrna.cn/blog-images/1961325/3d612b7ee29a83b08da7bdc8bd2cf90e.png)\n\n完成之后执行工作流即可\n\n![](https://res.arsrna.cn/blog-images/1961325/c1b84631677e38d23a813905e750266e.png)\n\n该方式优点：一次设置，次次方便，批量的时候非常方便\n\n缺点：第一次设置较复杂，容易导致参数过多忘记\n\n# 上传数据处理\n\n## 数据工作流（推荐）\n\n在数据工作流里面打开上传触发执行即可\n\n![](https://res.arsrna.cn/blog-images/1961325/88a57df15403211ca1af08251f935c8b.png)\n\n\n每次上传到任务流设置的指定路径就会执行\n\n## API\n\n由于需要存储到存储桶里，API只能做到实时处理无法直接保存到文件，所以需要通过持续化将图片，在上传的时候要加入参数，让图片自动保存[数据万象 图片持久化处理 - API 文档 - 文档中心 - 腾讯云 (tencent.com)](https://cloud.tencent.com/document/product/460/18147)\n\n其中\n\n```js\nrules\n```\n\n这个参数需要自己定义，可以在工作流详情图像处理看得到\n\n![](https://res.arsrna.cn/blog-images/1961325/1b02984c1a6bbd74d66f59853b5caed0.png)\n\n```js\nimageMogr2/format/avif/interlace/1\n```\n\n\n# 总结\n\n## 直观大小对比\n\n这里以三张图片为例\n\n| 原图/MB | HEIF/MB | AVIF/MB |\n| :------ | :------ | :------ |\n| 7.91    | 3.2     | 1.8     |\n| 18      | 13      | 3.2     |\n| 30      | 14      | 6.9     |\n\n很明显地看到，相比原图JPG或PNG格式，HEIF与AVIF大幅度压缩了不少，如果一个文件夹有100000张10M的图片，AVIF就剩下了300+G，换算到腾讯云的标准存储容量包价格，每个月存储省下了24块，流量省下了102块（中国大陆）\n\n## 画质对比\n\n这么大的压缩率，如果是传统的压缩方式，估计已经破败不堪了，但是这两种压缩方式能够尽量保留原色彩和画质，尽量无损\n\n![原图（14M）](https://res.arsrna.cn/blog-images/1961325/3c0123f6cf7827cfb017bebca6f486af.png)\n\n![HEIF（3M）](https://res.arsrna.cn/blog-images/1961325/33f16f92a8b2c66c0a1c5a03bb982663.png)\n\n测试图片：\n\n[https://res.arsrna.cn/SwordArtOnline/SwordArtOnline\\_632059\\_ArSrNaRS4x.avif](https://res.arsrna.cn/SwordArtOnline/SwordArtOnline_632059_ArSrNaRS4x.avif)\n\n## 优缺点对比\n\n|        | 高级压缩         | 传统压缩                   |\n| :----- | :--------------- | :------------------------- |\n| 速度   | 云端处理，速度快 | 本地处理，根据处理设备决定 |\n| 画质   | 近乎无损         | 有损压缩                   |\n| 压缩率 | 极高             | 一般                       |\n| 成本   | 低               | 根据处理设备决定           |\n| 兼容性 | 中等             | 极强                       |\n\n\n由于AVIF，HEIF还是比较小众的图片格式，鉴于原生iOS就是HEIF的优势，在iOS平台上强烈建议使用HEIF方式，Windows平台建议Webp和AVIF。\n\n希望不久的将来，图片空间与图片压缩算法的发展，我们的数据将会在质的提升时，控制量的剧变\n\n# 相关问题\n\n## 图像过大处理失败\n\n体积限制：处理图片原图大小不超过32MB、宽高不超过30000像素且总像素不超过2.5亿像素，处理结果图宽高设置不超过9999像素；针对动图，原图宽 x 高 x 帧数不超过2.5亿像素。\n\n如果超出限制则会导致失败，建议使用Photoshop或者其他软件将图片缩小到范围之内再进行处理\n\n## 无法开始处理\n\n请确认是否开通图像高级压缩和数据万象，同时确认是否后付费留有足够的余额\n\n## 处理时间过长\n\n一般一张图片10分钟左右肯定能完成，如果太长，请关闭任务重新开始，如果还是不行，请核实图片内容是否过于复杂，建议优化图片内容\n\n如果还是不行，建议提交工单确认账号或系统问题\n\n\n---\n\n到此，教程就结束了，更多可能，需要我们一起发现\n\nPowered by Ar-Sr-Na www.arsrna.cn\n","slug":"1961325","published":1,"updated":"2023-01-17T08:55:38.567Z","layout":"post","photos":[],"link":"","_id":"clod0d6xl002nc0nd24dd5o1g","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>业务量的不断扩大，导致对象存储的存储空间以及流量迅速增大，尤其是图片业务，web中最关键的部分，由于html的同步加载特性，通常是一张加载完才能加载下一张，在本地降低分辨率会丢失图片大部分细节，那么除了让本地图片一张张压缩之外，还有什么办法大幅度减小图片体积呢？</p>\n<p>腾讯云对象存储与数据万象提供了极致性价比的压缩：<a href=\"https://cloud.tencent.com/document/product/436/60450\">对象存储 图片压缩 - API 文档 - 文档中心 - 腾讯云 (tencent.com)</a></p>\n<h2 id=\"计费方面\"><a href=\"#计费方面\" class=\"headerlink\" title=\"计费方面\"></a>计费方面</h2><table>\n<thead>\n<tr>\n<th align=\"left\">输出格式</th>\n<th align=\"left\">价格</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">TPG</td>\n<td align=\"left\">0.1元&#x2F;千次</td>\n</tr>\n<tr>\n<td align=\"left\">HEIF</td>\n<td align=\"left\">0.1元&#x2F;千次</td>\n</tr>\n<tr>\n<td align=\"left\">AVIF</td>\n<td align=\"left\">0.3元&#x2F;千次</td>\n</tr>\n</tbody></table>\n<h2 id=\"DEMO\"><a href=\"#DEMO\" class=\"headerlink\" title=\"DEMO\"></a>DEMO</h2><p><a href=\"https://www.arsrna.cn/test/img.html\">https://www.arsrna.cn/test/img.htm</a>l</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/527cafc68ff4d343e4160bd05f0e5398.png\"></p>\n<p>可以看到，HEIF对比原图，下降了80%左右的大小，而画质基本不变，并且在速度上，HEIF加载也是最快的，因为只有7.8kb</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/939ba6799059bc704bfb79a5a9ee2102.png\" alt=\"HEIF   700k\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/9bc29e5cb98de7162f50e7ae22453af1.png\" alt=\"原图PNG  30M\"></p>\n<p>可以看到，压缩前后图片画质基本没有区别，色彩空间有所压缩，但是图片大幅下降了大小</p>\n<h2 id=\"兼容性\"><a href=\"#兼容性\" class=\"headerlink\" title=\"兼容性\"></a>兼容性</h2><p>因为AVIF是一种较新的类似AV1格式，只有在较新的浏览器才可以浏览，所以在这里建议使用HEIF，各个图片的兼容性如下（亲测）：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">格式</th>\n<th align=\"left\">Android 12</th>\n<th align=\"left\">iOS15.4</th>\n<th align=\"left\">Windows11</th>\n<th align=\"left\">压缩</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">PNG</td>\n<td align=\"left\">√</td>\n<td align=\"left\">√</td>\n<td align=\"left\">√</td>\n<td align=\"left\">无</td>\n</tr>\n<tr>\n<td align=\"left\">JPG</td>\n<td align=\"left\">√</td>\n<td align=\"left\">√</td>\n<td align=\"left\">√</td>\n<td align=\"left\">无</td>\n</tr>\n<tr>\n<td align=\"left\">AVIF</td>\n<td align=\"left\">×</td>\n<td align=\"left\">×</td>\n<td align=\"left\">需要扩展</td>\n<td align=\"left\">↓50+%</td>\n</tr>\n<tr>\n<td align=\"left\">HEIF</td>\n<td align=\"left\">√</td>\n<td align=\"left\">√</td>\n<td align=\"left\">需要扩展</td>\n<td align=\"left\">↓30+%</td>\n</tr>\n<tr>\n<td align=\"left\">TPG</td>\n<td align=\"left\">仅qq浏览器</td>\n<td align=\"left\">仅qq浏览器</td>\n<td align=\"left\">仅qq浏览器</td>\n<td align=\"left\">↓50+%</td>\n</tr>\n<tr>\n<td align=\"left\">WebP</td>\n<td align=\"left\">√</td>\n<td align=\"left\">√</td>\n<td align=\"left\">√</td>\n<td align=\"left\">↓20+%</td>\n</tr>\n</tbody></table>\n<h1 id=\"相关基础配置\"><a href=\"#相关基础配置\" class=\"headerlink\" title=\"相关基础配置\"></a>相关基础配置</h1><h2 id=\"对象存储设置开通\"><a href=\"#对象存储设置开通\" class=\"headerlink\" title=\"对象存储设置开通\"></a>对象存储设置开通</h2><p>首先前往数据万象CI产品控制台开通  <a href=\"https://console.cloud.tencent.com/ci\">概览 - 数据万象 - 控制台 (tencent.com)</a></p>\n<p>在对象存储开通高级压缩</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/d4f2e1b04b9de8af67ae26fe532c613e.png\"></p>\n<h1 id=\"存量数据处理\"><a href=\"#存量数据处理\" class=\"headerlink\" title=\"存量数据处理\"></a>存量数据处理</h1><h2 id=\"控制台处理\"><a href=\"#控制台处理\" class=\"headerlink\" title=\"控制台处理\"></a>控制台处理</h2><p>在对象存储数据工作流-公共配置中，设创建模板</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/60722196d4dd97ee56a7661ead84e6cd.png\"></p>\n<p>设置名称，参数</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/00429a3555ec961df511455728fb9c29.png\"></p>\n<p>不缩略，输出格式AVIF或者HEIF</p>\n<p>保存以后在 任务 处创建图片压缩任务</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/1f36a2d77104b21538522079327ac787.png\"></p>\n<p>设置所有参数，输出文件名按需设置</p>\n<p>完成之后确定即可开始进程</p>\n<p>此方式优点：设置简单</p>\n<p>缺点：批量数据很难实现处理，比较繁琐</p>\n<p>建议开启上传的时候开启数据流处理</p>\n<h2 id=\"工作流处理\"><a href=\"#工作流处理\" class=\"headerlink\" title=\"工作流处理\"></a>工作流处理</h2><h3 id=\"设置工作流\"><a href=\"#设置工作流\" class=\"headerlink\" title=\"设置工作流\"></a>设置工作流</h3><p>在对象存储工作流控制台 ：<a href=\"https://console.cloud.tencent.com/cos/workflow/list\">数据工作流 - 对象存储 - 控制台 (tencent.com)</a></p>\n<p>创建工作流，名称自定义，选择对应处理的存储桶，建议开启格式匹配-图片文件</p>\n<p>配置工作流。输入后执行图片处理</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/0750d87cef7ba393f4e9ec36def69f8c.png\"></p>\n<p>选择刚刚设置的存储桶</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/20f7acf3ed01c87f69430b90a0a7b546.png\"></p>\n<p>然后保存</p>\n<h3 id=\"执行工作流\"><a href=\"#执行工作流\" class=\"headerlink\" title=\"执行工作流\"></a>执行工作流</h3><p>在工作流控制台 <a href=\"https://console.cloud.tencent.com/cos/workflow/list\">数据工作流 - 对象存储 - 控制台 (tencent.com)</a></p>\n<p>在刚刚创建的工作流操作里，点击执行工作流</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/6a6ab01cbae220e27cba74bf1a9bc6fc.png\"></p>\n<p>扫描任务名称自定义，扫描模式多个文件执行工作流</p>\n<p>剩下的根据需要设置</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/3d612b7ee29a83b08da7bdc8bd2cf90e.png\"></p>\n<p>完成之后执行工作流即可</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/c1b84631677e38d23a813905e750266e.png\"></p>\n<p>该方式优点：一次设置，次次方便，批量的时候非常方便</p>\n<p>缺点：第一次设置较复杂，容易导致参数过多忘记</p>\n<h1 id=\"上传数据处理\"><a href=\"#上传数据处理\" class=\"headerlink\" title=\"上传数据处理\"></a>上传数据处理</h1><h2 id=\"数据工作流（推荐）\"><a href=\"#数据工作流（推荐）\" class=\"headerlink\" title=\"数据工作流（推荐）\"></a>数据工作流（推荐）</h2><p>在数据工作流里面打开上传触发执行即可</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/88a57df15403211ca1af08251f935c8b.png\"></p>\n<p>每次上传到任务流设置的指定路径就会执行</p>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>由于需要存储到存储桶里，API只能做到实时处理无法直接保存到文件，所以需要通过持续化将图片，在上传的时候要加入参数，让图片自动保存<a href=\"https://cloud.tencent.com/document/product/460/18147\">数据万象 图片持久化处理 - API 文档 - 文档中心 - 腾讯云 (tencent.com)</a></p>\n<p>其中</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">rules<br></code></pre></td></tr></table></figure>\n\n<p>这个参数需要自己定义，可以在工作流详情图像处理看得到</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/1b02984c1a6bbd74d66f59853b5caed0.png\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">imageMogr2/format/avif/interlace/<span class=\"hljs-number\">1</span><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><h2 id=\"直观大小对比\"><a href=\"#直观大小对比\" class=\"headerlink\" title=\"直观大小对比\"></a>直观大小对比</h2><p>这里以三张图片为例</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">原图&#x2F;MB</th>\n<th align=\"left\">HEIF&#x2F;MB</th>\n<th align=\"left\">AVIF&#x2F;MB</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">7.91</td>\n<td align=\"left\">3.2</td>\n<td align=\"left\">1.8</td>\n</tr>\n<tr>\n<td align=\"left\">18</td>\n<td align=\"left\">13</td>\n<td align=\"left\">3.2</td>\n</tr>\n<tr>\n<td align=\"left\">30</td>\n<td align=\"left\">14</td>\n<td align=\"left\">6.9</td>\n</tr>\n</tbody></table>\n<p>很明显地看到，相比原图JPG或PNG格式，HEIF与AVIF大幅度压缩了不少，如果一个文件夹有100000张10M的图片，AVIF就剩下了300+G，换算到腾讯云的标准存储容量包价格，每个月存储省下了24块，流量省下了102块（中国大陆）</p>\n<h2 id=\"画质对比\"><a href=\"#画质对比\" class=\"headerlink\" title=\"画质对比\"></a>画质对比</h2><p>这么大的压缩率，如果是传统的压缩方式，估计已经破败不堪了，但是这两种压缩方式能够尽量保留原色彩和画质，尽量无损</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/3c0123f6cf7827cfb017bebca6f486af.png\" alt=\"原图（14M）\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/33f16f92a8b2c66c0a1c5a03bb982663.png\" alt=\"HEIF（3M）\"></p>\n<p>测试图片：</p>\n<p><a href=\"https://res.arsrna.cn/SwordArtOnline/SwordArtOnline_632059_ArSrNaRS4x.avif\">https://res.arsrna.cn/SwordArtOnline/SwordArtOnline_632059_ArSrNaRS4x.avif</a></p>\n<h2 id=\"优缺点对比\"><a href=\"#优缺点对比\" class=\"headerlink\" title=\"优缺点对比\"></a>优缺点对比</h2><table>\n<thead>\n<tr>\n<th align=\"left\"></th>\n<th align=\"left\">高级压缩</th>\n<th align=\"left\">传统压缩</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">速度</td>\n<td align=\"left\">云端处理，速度快</td>\n<td align=\"left\">本地处理，根据处理设备决定</td>\n</tr>\n<tr>\n<td align=\"left\">画质</td>\n<td align=\"left\">近乎无损</td>\n<td align=\"left\">有损压缩</td>\n</tr>\n<tr>\n<td align=\"left\">压缩率</td>\n<td align=\"left\">极高</td>\n<td align=\"left\">一般</td>\n</tr>\n<tr>\n<td align=\"left\">成本</td>\n<td align=\"left\">低</td>\n<td align=\"left\">根据处理设备决定</td>\n</tr>\n<tr>\n<td align=\"left\">兼容性</td>\n<td align=\"left\">中等</td>\n<td align=\"left\">极强</td>\n</tr>\n</tbody></table>\n<p>由于AVIF，HEIF还是比较小众的图片格式，鉴于原生iOS就是HEIF的优势，在iOS平台上强烈建议使用HEIF方式，Windows平台建议Webp和AVIF。</p>\n<p>希望不久的将来，图片空间与图片压缩算法的发展，我们的数据将会在质的提升时，控制量的剧变</p>\n<h1 id=\"相关问题\"><a href=\"#相关问题\" class=\"headerlink\" title=\"相关问题\"></a>相关问题</h1><h2 id=\"图像过大处理失败\"><a href=\"#图像过大处理失败\" class=\"headerlink\" title=\"图像过大处理失败\"></a>图像过大处理失败</h2><p>体积限制：处理图片原图大小不超过32MB、宽高不超过30000像素且总像素不超过2.5亿像素，处理结果图宽高设置不超过9999像素；针对动图，原图宽 x 高 x 帧数不超过2.5亿像素。</p>\n<p>如果超出限制则会导致失败，建议使用Photoshop或者其他软件将图片缩小到范围之内再进行处理</p>\n<h2 id=\"无法开始处理\"><a href=\"#无法开始处理\" class=\"headerlink\" title=\"无法开始处理\"></a>无法开始处理</h2><p>请确认是否开通图像高级压缩和数据万象，同时确认是否后付费留有足够的余额</p>\n<h2 id=\"处理时间过长\"><a href=\"#处理时间过长\" class=\"headerlink\" title=\"处理时间过长\"></a>处理时间过长</h2><p>一般一张图片10分钟左右肯定能完成，如果太长，请关闭任务重新开始，如果还是不行，请核实图片内容是否过于复杂，建议优化图片内容</p>\n<p>如果还是不行，建议提交工单确认账号或系统问题</p>\n<hr>\n<p>到此，教程就结束了，更多可能，需要我们一起发现</p>\n<p>Powered by Ar-Sr-Na <a href=\"http://www.arsrna.cn/\">www.arsrna.cn</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>业务量的不断扩大，导致对象存储的存储空间以及流量迅速增大，尤其是图片业务，web中最关键的部分，由于html的同步加载特性，通常是一张加载完才能加载下一张，在本地降低分辨率会丢失图片大部分细节，那么除了让本地图片一张张压缩之外，还有什么办法大幅度减小图片体积呢？</p>\n<p>腾讯云对象存储与数据万象提供了极致性价比的压缩：<a href=\"https://cloud.tencent.com/document/product/436/60450\">对象存储 图片压缩 - API 文档 - 文档中心 - 腾讯云 (tencent.com)</a></p>\n<h2 id=\"计费方面\"><a href=\"#计费方面\" class=\"headerlink\" title=\"计费方面\"></a>计费方面</h2><table>\n<thead>\n<tr>\n<th align=\"left\">输出格式</th>\n<th align=\"left\">价格</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">TPG</td>\n<td align=\"left\">0.1元&#x2F;千次</td>\n</tr>\n<tr>\n<td align=\"left\">HEIF</td>\n<td align=\"left\">0.1元&#x2F;千次</td>\n</tr>\n<tr>\n<td align=\"left\">AVIF</td>\n<td align=\"left\">0.3元&#x2F;千次</td>\n</tr>\n</tbody></table>\n<h2 id=\"DEMO\"><a href=\"#DEMO\" class=\"headerlink\" title=\"DEMO\"></a>DEMO</h2><p><a href=\"https://www.arsrna.cn/test/img.html\">https://www.arsrna.cn/test/img.htm</a>l</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/527cafc68ff4d343e4160bd05f0e5398.png\"></p>\n<p>可以看到，HEIF对比原图，下降了80%左右的大小，而画质基本不变，并且在速度上，HEIF加载也是最快的，因为只有7.8kb</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/939ba6799059bc704bfb79a5a9ee2102.png\" alt=\"HEIF   700k\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/9bc29e5cb98de7162f50e7ae22453af1.png\" alt=\"原图PNG  30M\"></p>\n<p>可以看到，压缩前后图片画质基本没有区别，色彩空间有所压缩，但是图片大幅下降了大小</p>\n<h2 id=\"兼容性\"><a href=\"#兼容性\" class=\"headerlink\" title=\"兼容性\"></a>兼容性</h2><p>因为AVIF是一种较新的类似AV1格式，只有在较新的浏览器才可以浏览，所以在这里建议使用HEIF，各个图片的兼容性如下（亲测）：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">格式</th>\n<th align=\"left\">Android 12</th>\n<th align=\"left\">iOS15.4</th>\n<th align=\"left\">Windows11</th>\n<th align=\"left\">压缩</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">PNG</td>\n<td align=\"left\">√</td>\n<td align=\"left\">√</td>\n<td align=\"left\">√</td>\n<td align=\"left\">无</td>\n</tr>\n<tr>\n<td align=\"left\">JPG</td>\n<td align=\"left\">√</td>\n<td align=\"left\">√</td>\n<td align=\"left\">√</td>\n<td align=\"left\">无</td>\n</tr>\n<tr>\n<td align=\"left\">AVIF</td>\n<td align=\"left\">×</td>\n<td align=\"left\">×</td>\n<td align=\"left\">需要扩展</td>\n<td align=\"left\">↓50+%</td>\n</tr>\n<tr>\n<td align=\"left\">HEIF</td>\n<td align=\"left\">√</td>\n<td align=\"left\">√</td>\n<td align=\"left\">需要扩展</td>\n<td align=\"left\">↓30+%</td>\n</tr>\n<tr>\n<td align=\"left\">TPG</td>\n<td align=\"left\">仅qq浏览器</td>\n<td align=\"left\">仅qq浏览器</td>\n<td align=\"left\">仅qq浏览器</td>\n<td align=\"left\">↓50+%</td>\n</tr>\n<tr>\n<td align=\"left\">WebP</td>\n<td align=\"left\">√</td>\n<td align=\"left\">√</td>\n<td align=\"left\">√</td>\n<td align=\"left\">↓20+%</td>\n</tr>\n</tbody></table>\n<h1 id=\"相关基础配置\"><a href=\"#相关基础配置\" class=\"headerlink\" title=\"相关基础配置\"></a>相关基础配置</h1><h2 id=\"对象存储设置开通\"><a href=\"#对象存储设置开通\" class=\"headerlink\" title=\"对象存储设置开通\"></a>对象存储设置开通</h2><p>首先前往数据万象CI产品控制台开通  <a href=\"https://console.cloud.tencent.com/ci\">概览 - 数据万象 - 控制台 (tencent.com)</a></p>\n<p>在对象存储开通高级压缩</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/d4f2e1b04b9de8af67ae26fe532c613e.png\"></p>\n<h1 id=\"存量数据处理\"><a href=\"#存量数据处理\" class=\"headerlink\" title=\"存量数据处理\"></a>存量数据处理</h1><h2 id=\"控制台处理\"><a href=\"#控制台处理\" class=\"headerlink\" title=\"控制台处理\"></a>控制台处理</h2><p>在对象存储数据工作流-公共配置中，设创建模板</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/60722196d4dd97ee56a7661ead84e6cd.png\"></p>\n<p>设置名称，参数</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/00429a3555ec961df511455728fb9c29.png\"></p>\n<p>不缩略，输出格式AVIF或者HEIF</p>\n<p>保存以后在 任务 处创建图片压缩任务</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/1f36a2d77104b21538522079327ac787.png\"></p>\n<p>设置所有参数，输出文件名按需设置</p>\n<p>完成之后确定即可开始进程</p>\n<p>此方式优点：设置简单</p>\n<p>缺点：批量数据很难实现处理，比较繁琐</p>\n<p>建议开启上传的时候开启数据流处理</p>\n<h2 id=\"工作流处理\"><a href=\"#工作流处理\" class=\"headerlink\" title=\"工作流处理\"></a>工作流处理</h2><h3 id=\"设置工作流\"><a href=\"#设置工作流\" class=\"headerlink\" title=\"设置工作流\"></a>设置工作流</h3><p>在对象存储工作流控制台 ：<a href=\"https://console.cloud.tencent.com/cos/workflow/list\">数据工作流 - 对象存储 - 控制台 (tencent.com)</a></p>\n<p>创建工作流，名称自定义，选择对应处理的存储桶，建议开启格式匹配-图片文件</p>\n<p>配置工作流。输入后执行图片处理</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/0750d87cef7ba393f4e9ec36def69f8c.png\"></p>\n<p>选择刚刚设置的存储桶</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/20f7acf3ed01c87f69430b90a0a7b546.png\"></p>\n<p>然后保存</p>\n<h3 id=\"执行工作流\"><a href=\"#执行工作流\" class=\"headerlink\" title=\"执行工作流\"></a>执行工作流</h3><p>在工作流控制台 <a href=\"https://console.cloud.tencent.com/cos/workflow/list\">数据工作流 - 对象存储 - 控制台 (tencent.com)</a></p>\n<p>在刚刚创建的工作流操作里，点击执行工作流</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/6a6ab01cbae220e27cba74bf1a9bc6fc.png\"></p>\n<p>扫描任务名称自定义，扫描模式多个文件执行工作流</p>\n<p>剩下的根据需要设置</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/3d612b7ee29a83b08da7bdc8bd2cf90e.png\"></p>\n<p>完成之后执行工作流即可</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/c1b84631677e38d23a813905e750266e.png\"></p>\n<p>该方式优点：一次设置，次次方便，批量的时候非常方便</p>\n<p>缺点：第一次设置较复杂，容易导致参数过多忘记</p>\n<h1 id=\"上传数据处理\"><a href=\"#上传数据处理\" class=\"headerlink\" title=\"上传数据处理\"></a>上传数据处理</h1><h2 id=\"数据工作流（推荐）\"><a href=\"#数据工作流（推荐）\" class=\"headerlink\" title=\"数据工作流（推荐）\"></a>数据工作流（推荐）</h2><p>在数据工作流里面打开上传触发执行即可</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/88a57df15403211ca1af08251f935c8b.png\"></p>\n<p>每次上传到任务流设置的指定路径就会执行</p>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>由于需要存储到存储桶里，API只能做到实时处理无法直接保存到文件，所以需要通过持续化将图片，在上传的时候要加入参数，让图片自动保存<a href=\"https://cloud.tencent.com/document/product/460/18147\">数据万象 图片持久化处理 - API 文档 - 文档中心 - 腾讯云 (tencent.com)</a></p>\n<p>其中</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">rules<br></code></pre></td></tr></table></figure>\n\n<p>这个参数需要自己定义，可以在工作流详情图像处理看得到</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/1b02984c1a6bbd74d66f59853b5caed0.png\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">imageMogr2/format/avif/interlace/<span class=\"hljs-number\">1</span><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><h2 id=\"直观大小对比\"><a href=\"#直观大小对比\" class=\"headerlink\" title=\"直观大小对比\"></a>直观大小对比</h2><p>这里以三张图片为例</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">原图&#x2F;MB</th>\n<th align=\"left\">HEIF&#x2F;MB</th>\n<th align=\"left\">AVIF&#x2F;MB</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">7.91</td>\n<td align=\"left\">3.2</td>\n<td align=\"left\">1.8</td>\n</tr>\n<tr>\n<td align=\"left\">18</td>\n<td align=\"left\">13</td>\n<td align=\"left\">3.2</td>\n</tr>\n<tr>\n<td align=\"left\">30</td>\n<td align=\"left\">14</td>\n<td align=\"left\">6.9</td>\n</tr>\n</tbody></table>\n<p>很明显地看到，相比原图JPG或PNG格式，HEIF与AVIF大幅度压缩了不少，如果一个文件夹有100000张10M的图片，AVIF就剩下了300+G，换算到腾讯云的标准存储容量包价格，每个月存储省下了24块，流量省下了102块（中国大陆）</p>\n<h2 id=\"画质对比\"><a href=\"#画质对比\" class=\"headerlink\" title=\"画质对比\"></a>画质对比</h2><p>这么大的压缩率，如果是传统的压缩方式，估计已经破败不堪了，但是这两种压缩方式能够尽量保留原色彩和画质，尽量无损</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/3c0123f6cf7827cfb017bebca6f486af.png\" alt=\"原图（14M）\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1961325/33f16f92a8b2c66c0a1c5a03bb982663.png\" alt=\"HEIF（3M）\"></p>\n<p>测试图片：</p>\n<p><a href=\"https://res.arsrna.cn/SwordArtOnline/SwordArtOnline_632059_ArSrNaRS4x.avif\">https://res.arsrna.cn/SwordArtOnline/SwordArtOnline_632059_ArSrNaRS4x.avif</a></p>\n<h2 id=\"优缺点对比\"><a href=\"#优缺点对比\" class=\"headerlink\" title=\"优缺点对比\"></a>优缺点对比</h2><table>\n<thead>\n<tr>\n<th align=\"left\"></th>\n<th align=\"left\">高级压缩</th>\n<th align=\"left\">传统压缩</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">速度</td>\n<td align=\"left\">云端处理，速度快</td>\n<td align=\"left\">本地处理，根据处理设备决定</td>\n</tr>\n<tr>\n<td align=\"left\">画质</td>\n<td align=\"left\">近乎无损</td>\n<td align=\"left\">有损压缩</td>\n</tr>\n<tr>\n<td align=\"left\">压缩率</td>\n<td align=\"left\">极高</td>\n<td align=\"left\">一般</td>\n</tr>\n<tr>\n<td align=\"left\">成本</td>\n<td align=\"left\">低</td>\n<td align=\"left\">根据处理设备决定</td>\n</tr>\n<tr>\n<td align=\"left\">兼容性</td>\n<td align=\"left\">中等</td>\n<td align=\"left\">极强</td>\n</tr>\n</tbody></table>\n<p>由于AVIF，HEIF还是比较小众的图片格式，鉴于原生iOS就是HEIF的优势，在iOS平台上强烈建议使用HEIF方式，Windows平台建议Webp和AVIF。</p>\n<p>希望不久的将来，图片空间与图片压缩算法的发展，我们的数据将会在质的提升时，控制量的剧变</p>\n<h1 id=\"相关问题\"><a href=\"#相关问题\" class=\"headerlink\" title=\"相关问题\"></a>相关问题</h1><h2 id=\"图像过大处理失败\"><a href=\"#图像过大处理失败\" class=\"headerlink\" title=\"图像过大处理失败\"></a>图像过大处理失败</h2><p>体积限制：处理图片原图大小不超过32MB、宽高不超过30000像素且总像素不超过2.5亿像素，处理结果图宽高设置不超过9999像素；针对动图，原图宽 x 高 x 帧数不超过2.5亿像素。</p>\n<p>如果超出限制则会导致失败，建议使用Photoshop或者其他软件将图片缩小到范围之内再进行处理</p>\n<h2 id=\"无法开始处理\"><a href=\"#无法开始处理\" class=\"headerlink\" title=\"无法开始处理\"></a>无法开始处理</h2><p>请确认是否开通图像高级压缩和数据万象，同时确认是否后付费留有足够的余额</p>\n<h2 id=\"处理时间过长\"><a href=\"#处理时间过长\" class=\"headerlink\" title=\"处理时间过长\"></a>处理时间过长</h2><p>一般一张图片10分钟左右肯定能完成，如果太长，请关闭任务重新开始，如果还是不行，请核实图片内容是否过于复杂，建议优化图片内容</p>\n<p>如果还是不行，建议提交工单确认账号或系统问题</p>\n<hr>\n<p>到此，教程就结束了，更多可能，需要我们一起发现</p>\n<p>Powered by Ar-Sr-Na <a href=\"http://www.arsrna.cn/\">www.arsrna.cn</a></p>\n"},{"title":"【教程】纯前端做一个歌词显示的音乐播放器","date":"2021-05-20T06:09:00.000Z","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"https://www.arsrna.cn","authorAbout":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","authorDesc":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","comments":1,"keywords":"程序,开发,html,JavaScript,前端","description":null,"index_img":"https://arsrnasitehk-1257609559.cos.ap-hongkong.myqcloud.com/blogs/08-1202L08-1203K/QQ%E6%88%AA%E5%9B%BE20210520135833.jpg","_content":"节目：[08-1202L/08-1203K]：【教程】纯前端做一个歌词显示的音乐播放器\n\n![效果](https://res.arsrna.cn/blogs/08-1202L08-1203K/r7yxduv7vk.png)\n\n# 用到的文件：\n\nBootstrap 4.6.0 CSS：[https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.6.0/css/bootstrap.css](https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.6.0/css/bootstrap.css)\n\n一段音乐及这首歌的lrc歌词（只要带时间的都可以，这里用lrc举例）\n\n浏览器\n\njquery（可选，为了查找元素更方便）：[https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.js](https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.js)\n\n# 原理及实现：\n\n## 音乐播放\n\n通过html5的`<audio>`属性进行播放\n\n这里为了方便不开发进度条和控制进度的工具，直接用各个浏览器渲染的audio标签\n\n并且宽度设置为100%\n\n```\n<audio id=\"audio\" src=\"mp3/Flower - 秋風のアンサー.mp3\" controls style=\"width:100%\"></audio>\n```\n\n**注意，audio要指定一个id，方便后续获取**\n\n## 歌曲显示\n\n自己设置好\n\n![](https://res.arsrna.cn/blogs/08-1202L08-1203K/u0ek1jo0fc.png)\n\n为了美观，我用Bootstrap的jumbotrom大块屏\n\n```\n<div class=\"jumbotron\">\n        <h1 class=\"display-4\">秋風のアンサー</h1>\n        <p class=\"lead\">Flower</p>\n</div>\n```\n\n# 歌词显示（核心部分）\n\n## 预设置：\n\n因为LRC是timelrc 的格式，js不能读取，但js有个很相似的格式：json，因此我们可以把lrc转为json，类似于：\n\n```\n[00:01.00]powered\n[00:02.00]by\n[00:03.00]Ar-Sr-Na\n```\n\n```\n{\"time\":1,\"lrc\":\"Powered\"},\n{\"time\":2,\"lrc\":\"by\"},\n{\"time\":3,\"lrc\":\"Ar-Sr-Na\"},\n```\n\n所以先要处理lrc\n\n用sublime打开lrc\n\n![](https://res.arsrna.cn/blogs/08-1202L08-1203K/v92y1vmqj6.png)\n\n鼠标对准第一个中括号，按住中键不放，指针将会一直沿着你鼠标的方向选择，滑到最底部选中所有时间\n\n![](https://res.arsrna.cn/blogs/08-1202L08-1203K/0lhfuwmmxc.png)\n\nCtrl+C复制，在Excel里粘贴\n\n![](https://res.arsrna.cn/blogs/08-1202L08-1203K/xndrtzk5wl.png)\n\n最好留两个单元格计算\n\n分钟单元格输入函数：=LEFT(C2,2)；C2是你的LRC时间所在单元格，下同\n\n秒数单元格输入函数：=RIGHT(C2,5)\n\n这样分秒就分离了\n\n然后将分钟+秒变成js能读取的时间\n\n输入函数：=分钟单元格\\*60+秒钟单元格\n\n鼠标在单元格右下角下拖快速填充到底\n\n同样用Sublime，在第一个\"]\"右中括号那里按住中键选择（注意最好选择进中键，不然对于有些空行的歌词会复制不了）\n\n![](https://res.arsrna.cn/blogs/08-1202L08-1203K/3wlg6vt78v.png)\n\n粘贴进Excel\n\n![](https://res.arsrna.cn/blogs/08-1202L08-1203K/3foiexpflb.png)\n\n然后替换 ] 为 空\n\n复制具有时间和歌词的两列，去到Excel转json的网站\n\n[在线Excel、CSV转JSON格式-BeJSON.com](https://www.bejson.com/json/col2json/)\n\n![](https://res.arsrna.cn/blogs/08-1202L08-1203K/lexcaixaw8.png)\n\n转换完毕，接下来就是匹配歌词然后播放了\n\n## 匹配音频和歌词时间点\n\n这部分我想了很久，一直没办法找到方法，现在有个问题，我想让每句播放的时候来个动画，但是现在刷新频率太快，各位大佬支个招吧\n\nhtml里添加个显示歌词的元素，我用span，并且用Bootstrap的字体\n\n```\n<span id=\"lrc\" class=\"lead\"></span>\n```\n\n**注意，文本要指定一个id，方便后续获取**\n\njs里有个操作，currentTime\n\n给歌词json赋值\n\n```\nvar lrcjson = {\"time\":261.96,\"lrc\":\"ごめんね 好きなの Answer to you\"},{......};\n```\n\n获取音频和文字控件：\n\n```\nvar audio = document.getElementById('audio');\nvar lrcHTML= document.getElementById('lrc');\n```\n\n要匹配音频和歌词时间点，就要不断判断和遍历歌词数组\n\n遍历数组可以这样来：\n\n```\nfor(i1=0;i1<lrcjson.length;i1++) {\n//每句歌词时间：lrcjson[i1].time\n//每句歌词：lrcjson[i1].lrc\n]\n```\n\n## 判断音频与对应歌词\n\n直接用audio.currentTime与上述遍历数组查找lrcjsoni1.time是行不通的，因为他们的时间点不可能完全精确，有0.01ms的误差都不行\n\n![浏览器获取的音频进度](https://res.arsrna.cn/blogs/08-1202L08-1203K/4df1i9zmn6.png)\n\n![应该对应的歌词](https://res.arsrna.cn/blogs/08-1202L08-1203K/n5ghnu2m1r.png)\n\n```\n{\"time\":122.09,\"lrc\":\"不安なのよ だからお願い\"},\n```\n\n所以只能用模糊搜索\n\n### 当当前时间大于数组里某个数组的时间大小时，判定就是该数组，通过该数组就能获取到时间和歌词从而显示\n\n当音频播放时不断执行事件：\n\n```\naudio.ontimeupdate=function(e) { }\n```\n\n遍历歌词的同时不断查找匹配歌词\n\n```\nfor(i1=0;i1<lrcjson.length;i1++) {\n\tif (audio.currentTime > lrcjson[i1].timeout) {\n   //歌词：lrcjson[i1].lrc\n\t}\n   }\n```\n\n播放的时候不断查找，不断遍历数组\n\n```\naudio.ontimeupdate=function(e){\nfor(i1=0;i1<lrcjson.length;i1++) {\n  if(audio.currentTime > lrcjson[i1].timeout) {\n  //歌词：lrcjson[i1].lrc\n   }\n }\n}\n```\n\n如果你用console输出，就会看到速度非常快，所以不适合在html创建元素或者document.write，只能用innerHTML不断刷新元素\n\n前面已经讲到获取歌词元素了，所以直接可以对歌词操作：\n\n```\nlrc.innerHTML=lrcjson[i1].lrc;\n```\n\n## 总代码\n\nJavascript\n\n```\nlrcjson = {\"time\":261.96,\"lrc\":\"ごめんね 好きなの Answer to you\"},{...}\nlrc = document.getElementById('lrc');\naudio.ontimeupdate=function(e) {\nfor(i1=0;i1<lrcjson.length;i1++) {\n\tif (audio.currentTime > lrcjson[i1].time) {\n\t\tlrc.innerHTML=lrcjson[i1].lrc;\n\t}\n   }\n}\n```\n\nHTML：\n\n```\n<div class=\"jumbotron\">\n    <h1 class=\"display-4\">秋風のアンサー</h1>\n    <p class=\"lead\">Flower</p>\n    <span class=\"lead\" type=\"text\" id=\"lrc\"></span>\n    <br />\n    <audio id=\"audio\" src=\"mp3/Flower - 秋風のアンサー.mp3\" controls style=\"width:100%\"></audio>\n</div>\n```\n\n预览：\n\n[https://codepen.io/arsrna/full/vYxyqaK](https://codepen.io/arsrna/full/vYxyqaK)\n\n# Powered by Ar-Sr-Na（[www.arsrna.cn](https://www.arsrna.cn)）\n\n# 到此，教程结束 未经允许禁止转载！\n","source":"_posts/08-1202L-08-1203K.md","raw":"---\ntitle: 【教程】纯前端做一个歌词显示的音乐播放器\ndate: 2021-5-20 14:09\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: https://www.arsrna.cn\nauthorAbout: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\nauthorDesc: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\ncategories: 技术\ncomments: true\ntags: \nkeywords: 程序,开发,html,JavaScript,前端\ndescription: \nindex_img: 'https://arsrnasitehk-1257609559.cos.ap-hongkong.myqcloud.com/blogs/08-1202L08-1203K/QQ%E6%88%AA%E5%9B%BE20210520135833.jpg'\n---\n节目：[08-1202L/08-1203K]：【教程】纯前端做一个歌词显示的音乐播放器\n\n![效果](https://res.arsrna.cn/blogs/08-1202L08-1203K/r7yxduv7vk.png)\n\n# 用到的文件：\n\nBootstrap 4.6.0 CSS：[https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.6.0/css/bootstrap.css](https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.6.0/css/bootstrap.css)\n\n一段音乐及这首歌的lrc歌词（只要带时间的都可以，这里用lrc举例）\n\n浏览器\n\njquery（可选，为了查找元素更方便）：[https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.js](https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.js)\n\n# 原理及实现：\n\n## 音乐播放\n\n通过html5的`<audio>`属性进行播放\n\n这里为了方便不开发进度条和控制进度的工具，直接用各个浏览器渲染的audio标签\n\n并且宽度设置为100%\n\n```\n<audio id=\"audio\" src=\"mp3/Flower - 秋風のアンサー.mp3\" controls style=\"width:100%\"></audio>\n```\n\n**注意，audio要指定一个id，方便后续获取**\n\n## 歌曲显示\n\n自己设置好\n\n![](https://res.arsrna.cn/blogs/08-1202L08-1203K/u0ek1jo0fc.png)\n\n为了美观，我用Bootstrap的jumbotrom大块屏\n\n```\n<div class=\"jumbotron\">\n        <h1 class=\"display-4\">秋風のアンサー</h1>\n        <p class=\"lead\">Flower</p>\n</div>\n```\n\n# 歌词显示（核心部分）\n\n## 预设置：\n\n因为LRC是timelrc 的格式，js不能读取，但js有个很相似的格式：json，因此我们可以把lrc转为json，类似于：\n\n```\n[00:01.00]powered\n[00:02.00]by\n[00:03.00]Ar-Sr-Na\n```\n\n```\n{\"time\":1,\"lrc\":\"Powered\"},\n{\"time\":2,\"lrc\":\"by\"},\n{\"time\":3,\"lrc\":\"Ar-Sr-Na\"},\n```\n\n所以先要处理lrc\n\n用sublime打开lrc\n\n![](https://res.arsrna.cn/blogs/08-1202L08-1203K/v92y1vmqj6.png)\n\n鼠标对准第一个中括号，按住中键不放，指针将会一直沿着你鼠标的方向选择，滑到最底部选中所有时间\n\n![](https://res.arsrna.cn/blogs/08-1202L08-1203K/0lhfuwmmxc.png)\n\nCtrl+C复制，在Excel里粘贴\n\n![](https://res.arsrna.cn/blogs/08-1202L08-1203K/xndrtzk5wl.png)\n\n最好留两个单元格计算\n\n分钟单元格输入函数：=LEFT(C2,2)；C2是你的LRC时间所在单元格，下同\n\n秒数单元格输入函数：=RIGHT(C2,5)\n\n这样分秒就分离了\n\n然后将分钟+秒变成js能读取的时间\n\n输入函数：=分钟单元格\\*60+秒钟单元格\n\n鼠标在单元格右下角下拖快速填充到底\n\n同样用Sublime，在第一个\"]\"右中括号那里按住中键选择（注意最好选择进中键，不然对于有些空行的歌词会复制不了）\n\n![](https://res.arsrna.cn/blogs/08-1202L08-1203K/3wlg6vt78v.png)\n\n粘贴进Excel\n\n![](https://res.arsrna.cn/blogs/08-1202L08-1203K/3foiexpflb.png)\n\n然后替换 ] 为 空\n\n复制具有时间和歌词的两列，去到Excel转json的网站\n\n[在线Excel、CSV转JSON格式-BeJSON.com](https://www.bejson.com/json/col2json/)\n\n![](https://res.arsrna.cn/blogs/08-1202L08-1203K/lexcaixaw8.png)\n\n转换完毕，接下来就是匹配歌词然后播放了\n\n## 匹配音频和歌词时间点\n\n这部分我想了很久，一直没办法找到方法，现在有个问题，我想让每句播放的时候来个动画，但是现在刷新频率太快，各位大佬支个招吧\n\nhtml里添加个显示歌词的元素，我用span，并且用Bootstrap的字体\n\n```\n<span id=\"lrc\" class=\"lead\"></span>\n```\n\n**注意，文本要指定一个id，方便后续获取**\n\njs里有个操作，currentTime\n\n给歌词json赋值\n\n```\nvar lrcjson = {\"time\":261.96,\"lrc\":\"ごめんね 好きなの Answer to you\"},{......};\n```\n\n获取音频和文字控件：\n\n```\nvar audio = document.getElementById('audio');\nvar lrcHTML= document.getElementById('lrc');\n```\n\n要匹配音频和歌词时间点，就要不断判断和遍历歌词数组\n\n遍历数组可以这样来：\n\n```\nfor(i1=0;i1<lrcjson.length;i1++) {\n//每句歌词时间：lrcjson[i1].time\n//每句歌词：lrcjson[i1].lrc\n]\n```\n\n## 判断音频与对应歌词\n\n直接用audio.currentTime与上述遍历数组查找lrcjsoni1.time是行不通的，因为他们的时间点不可能完全精确，有0.01ms的误差都不行\n\n![浏览器获取的音频进度](https://res.arsrna.cn/blogs/08-1202L08-1203K/4df1i9zmn6.png)\n\n![应该对应的歌词](https://res.arsrna.cn/blogs/08-1202L08-1203K/n5ghnu2m1r.png)\n\n```\n{\"time\":122.09,\"lrc\":\"不安なのよ だからお願い\"},\n```\n\n所以只能用模糊搜索\n\n### 当当前时间大于数组里某个数组的时间大小时，判定就是该数组，通过该数组就能获取到时间和歌词从而显示\n\n当音频播放时不断执行事件：\n\n```\naudio.ontimeupdate=function(e) { }\n```\n\n遍历歌词的同时不断查找匹配歌词\n\n```\nfor(i1=0;i1<lrcjson.length;i1++) {\n\tif (audio.currentTime > lrcjson[i1].timeout) {\n   //歌词：lrcjson[i1].lrc\n\t}\n   }\n```\n\n播放的时候不断查找，不断遍历数组\n\n```\naudio.ontimeupdate=function(e){\nfor(i1=0;i1<lrcjson.length;i1++) {\n  if(audio.currentTime > lrcjson[i1].timeout) {\n  //歌词：lrcjson[i1].lrc\n   }\n }\n}\n```\n\n如果你用console输出，就会看到速度非常快，所以不适合在html创建元素或者document.write，只能用innerHTML不断刷新元素\n\n前面已经讲到获取歌词元素了，所以直接可以对歌词操作：\n\n```\nlrc.innerHTML=lrcjson[i1].lrc;\n```\n\n## 总代码\n\nJavascript\n\n```\nlrcjson = {\"time\":261.96,\"lrc\":\"ごめんね 好きなの Answer to you\"},{...}\nlrc = document.getElementById('lrc');\naudio.ontimeupdate=function(e) {\nfor(i1=0;i1<lrcjson.length;i1++) {\n\tif (audio.currentTime > lrcjson[i1].time) {\n\t\tlrc.innerHTML=lrcjson[i1].lrc;\n\t}\n   }\n}\n```\n\nHTML：\n\n```\n<div class=\"jumbotron\">\n    <h1 class=\"display-4\">秋風のアンサー</h1>\n    <p class=\"lead\">Flower</p>\n    <span class=\"lead\" type=\"text\" id=\"lrc\"></span>\n    <br />\n    <audio id=\"audio\" src=\"mp3/Flower - 秋風のアンサー.mp3\" controls style=\"width:100%\"></audio>\n</div>\n```\n\n预览：\n\n[https://codepen.io/arsrna/full/vYxyqaK](https://codepen.io/arsrna/full/vYxyqaK)\n\n# Powered by Ar-Sr-Na（[www.arsrna.cn](https://www.arsrna.cn)）\n\n# 到此，教程结束 未经允许禁止转载！\n","slug":"08-1202L-08-1203K","published":1,"updated":"2023-01-17T08:55:38.565Z","layout":"post","photos":[],"link":"","_id":"clod0d6xq002xc0nd3no1arao","content":"<p>节目：[08-1202L&#x2F;08-1203K]：【教程】纯前端做一个歌词显示的音乐播放器</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202L08-1203K/r7yxduv7vk.png\" alt=\"效果\"></p>\n<h1 id=\"用到的文件：\"><a href=\"#用到的文件：\" class=\"headerlink\" title=\"用到的文件：\"></a>用到的文件：</h1><p>Bootstrap 4.6.0 CSS：<a href=\"https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.6.0/css/bootstrap.css\">https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.6.0/css/bootstrap.css</a></p>\n<p>一段音乐及这首歌的lrc歌词（只要带时间的都可以，这里用lrc举例）</p>\n<p>浏览器</p>\n<p>jquery（可选，为了查找元素更方便）：<a href=\"https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.js\">https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.js</a></p>\n<h1 id=\"原理及实现：\"><a href=\"#原理及实现：\" class=\"headerlink\" title=\"原理及实现：\"></a>原理及实现：</h1><h2 id=\"音乐播放\"><a href=\"#音乐播放\" class=\"headerlink\" title=\"音乐播放\"></a>音乐播放</h2><p>通过html5的<code>&lt;audio&gt;</code>属性进行播放</p>\n<p>这里为了方便不开发进度条和控制进度的工具，直接用各个浏览器渲染的audio标签</p>\n<p>并且宽度设置为100%</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">&lt;audio <span class=\"hljs-attribute\">id</span>=<span class=\"hljs-string\">&quot;audio&quot;</span> <span class=\"hljs-attribute\">src</span>=<span class=\"hljs-string\">&quot;mp3/Flower - 秋風のアンサー.mp3&quot;</span> controls <span class=\"hljs-attribute\">style</span>=<span class=\"hljs-string\">&quot;width:100%&quot;</span>&gt;&lt;/audio&gt;<br></code></pre></td></tr></table></figure>\n\n<p><strong>注意，audio要指定一个id，方便后续获取</strong></p>\n<h2 id=\"歌曲显示\"><a href=\"#歌曲显示\" class=\"headerlink\" title=\"歌曲显示\"></a>歌曲显示</h2><p>自己设置好</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202L08-1203K/u0ek1jo0fc.png\"></p>\n<p>为了美观，我用Bootstrap的jumbotrom大块屏</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;jumbotron&quot;</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;display-4&quot;</span>&gt;</span>秋風のアンサー<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;lead&quot;</span>&gt;</span>Flower<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"歌词显示（核心部分）\"><a href=\"#歌词显示（核心部分）\" class=\"headerlink\" title=\"歌词显示（核心部分）\"></a>歌词显示（核心部分）</h1><h2 id=\"预设置：\"><a href=\"#预设置：\" class=\"headerlink\" title=\"预设置：\"></a>预设置：</h2><p>因为LRC是timelrc 的格式，js不能读取，但js有个很相似的格式：json，因此我们可以把lrc转为json，类似于：</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\">[<span class=\"hljs-meta\">00:01.00</span>]powered<br>[<span class=\"hljs-meta\">00:02.00</span>]<span class=\"hljs-keyword\">by</span><br>[<span class=\"hljs-meta\">00:03.00</span>]Ar-Sr-Na<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">&#123;&quot;<span class=\"hljs-selector-tag\">time</span>&quot;:<span class=\"hljs-number\">1</span>,<span class=\"hljs-string\">&quot;lrc&quot;</span>:<span class=\"hljs-string\">&quot;Powered&quot;</span>&#125;,<br>&#123;&quot;<span class=\"hljs-selector-tag\">time</span>&quot;:<span class=\"hljs-number\">2</span>,<span class=\"hljs-string\">&quot;lrc&quot;</span>:<span class=\"hljs-string\">&quot;by&quot;</span>&#125;,<br>&#123;&quot;<span class=\"hljs-selector-tag\">time</span>&quot;:<span class=\"hljs-number\">3</span>,<span class=\"hljs-string\">&quot;lrc&quot;</span>:<span class=\"hljs-string\">&quot;Ar-Sr-Na&quot;</span>&#125;,<br></code></pre></td></tr></table></figure>\n\n<p>所以先要处理lrc</p>\n<p>用sublime打开lrc</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202L08-1203K/v92y1vmqj6.png\"></p>\n<p>鼠标对准第一个中括号，按住中键不放，指针将会一直沿着你鼠标的方向选择，滑到最底部选中所有时间</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202L08-1203K/0lhfuwmmxc.png\"></p>\n<p>Ctrl+C复制，在Excel里粘贴</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202L08-1203K/xndrtzk5wl.png\"></p>\n<p>最好留两个单元格计算</p>\n<p>分钟单元格输入函数：&#x3D;LEFT(C2,2)；C2是你的LRC时间所在单元格，下同</p>\n<p>秒数单元格输入函数：&#x3D;RIGHT(C2,5)</p>\n<p>这样分秒就分离了</p>\n<p>然后将分钟+秒变成js能读取的时间</p>\n<p>输入函数：&#x3D;分钟单元格*60+秒钟单元格</p>\n<p>鼠标在单元格右下角下拖快速填充到底</p>\n<p>同样用Sublime，在第一个”]”右中括号那里按住中键选择（注意最好选择进中键，不然对于有些空行的歌词会复制不了）</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202L08-1203K/3wlg6vt78v.png\"></p>\n<p>粘贴进Excel</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202L08-1203K/3foiexpflb.png\"></p>\n<p>然后替换 ] 为 空</p>\n<p>复制具有时间和歌词的两列，去到Excel转json的网站</p>\n<p><a href=\"https://www.bejson.com/json/col2json/\">在线Excel、CSV转JSON格式-BeJSON.com</a></p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202L08-1203K/lexcaixaw8.png\"></p>\n<p>转换完毕，接下来就是匹配歌词然后播放了</p>\n<h2 id=\"匹配音频和歌词时间点\"><a href=\"#匹配音频和歌词时间点\" class=\"headerlink\" title=\"匹配音频和歌词时间点\"></a>匹配音频和歌词时间点</h2><p>这部分我想了很久，一直没办法找到方法，现在有个问题，我想让每句播放的时候来个动画，但是现在刷新频率太快，各位大佬支个招吧</p>\n<p>html里添加个显示歌词的元素，我用span，并且用Bootstrap的字体</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">&lt;span <span class=\"hljs-attribute\">id</span>=<span class=\"hljs-string\">&quot;lrc&quot;</span> <span class=\"hljs-attribute\">class</span>=<span class=\"hljs-string\">&quot;lead&quot;</span>&gt;&lt;/span&gt;<br></code></pre></td></tr></table></figure>\n\n<p><strong>注意，文本要指定一个id，方便后续获取</strong></p>\n<p>js里有个操作，currentTime</p>\n<p>给歌词json赋值</p>\n<figure class=\"highlight nim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nim\"><span class=\"hljs-keyword\">var</span> lrcjson = &#123;<span class=\"hljs-string\">&quot;time&quot;</span>:<span class=\"hljs-number\">261</span>.<span class=\"hljs-number\">96</span>,<span class=\"hljs-string\">&quot;lrc&quot;</span>:<span class=\"hljs-string\">&quot;ごめんね 好きなの Answer to you&quot;</span>&#125;,<span class=\"hljs-meta\">&#123;......&#125;</span>;<br></code></pre></td></tr></table></figure>\n\n<p>获取音频和文字控件：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">var</span> audio = <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">&#x27;audio&#x27;</span>);<br><span class=\"hljs-keyword\">var</span> lrcHTML= <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">&#x27;lrc&#x27;</span>);<br></code></pre></td></tr></table></figure>\n\n<p>要匹配音频和歌词时间点，就要不断判断和遍历歌词数组</p>\n<p>遍历数组可以这样来：</p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs maxima\"><span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">i1</span>=<span class=\"hljs-number\">0</span>;<span class=\"hljs-built_in\">i1</span>&lt;lrcjson.<span class=\"hljs-built_in\">length</span>;<span class=\"hljs-built_in\">i1</span>++) &#123;<br>//每句歌词时间：lrcjson[<span class=\"hljs-built_in\">i1</span>].<span class=\"hljs-built_in\">time</span><br>//每句歌词：lrcjson[<span class=\"hljs-built_in\">i1</span>].lrc<br>]<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"判断音频与对应歌词\"><a href=\"#判断音频与对应歌词\" class=\"headerlink\" title=\"判断音频与对应歌词\"></a>判断音频与对应歌词</h2><p>直接用audio.currentTime与上述遍历数组查找lrcjsoni1.time是行不通的，因为他们的时间点不可能完全精确，有0.01ms的误差都不行</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202L08-1203K/4df1i9zmn6.png\" alt=\"浏览器获取的音频进度\"></p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202L08-1203K/n5ghnu2m1r.png\" alt=\"应该对应的歌词\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">&#123;&quot;<span class=\"hljs-selector-tag\">time</span>&quot;:<span class=\"hljs-number\">122.09</span>,<span class=\"hljs-string\">&quot;lrc&quot;</span>:<span class=\"hljs-string\">&quot;不安なのよ だからお願い&quot;</span>&#125;,<br></code></pre></td></tr></table></figure>\n\n<p>所以只能用模糊搜索</p>\n<h3 id=\"当当前时间大于数组里某个数组的时间大小时，判定就是该数组，通过该数组就能获取到时间和歌词从而显示\"><a href=\"#当当前时间大于数组里某个数组的时间大小时，判定就是该数组，通过该数组就能获取到时间和歌词从而显示\" class=\"headerlink\" title=\"当当前时间大于数组里某个数组的时间大小时，判定就是该数组，通过该数组就能获取到时间和歌词从而显示\"></a>当当前时间大于数组里某个数组的时间大小时，判定就是该数组，通过该数组就能获取到时间和歌词从而显示</h3><p>当音频播放时不断执行事件：</p>\n<figure class=\"highlight wren\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs wren\"><span class=\"hljs-variable\">audio</span>.<span class=\"hljs-property\">ontimeupdate</span><span class=\"hljs-operator\">=</span><span class=\"hljs-title function_\">function</span>(<span class=\"hljs-params\">e</span>) &#123; &#125;<br></code></pre></td></tr></table></figure>\n\n<p>遍历歌词的同时不断查找匹配歌词</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\"><span class=\"hljs-function\"><span class=\"hljs-title\">for</span><span class=\"hljs-params\">(i1=<span class=\"hljs-number\">0</span>;i1&lt;lrcjson.length;i1++)</span></span> &#123;<br>\t<span class=\"hljs-keyword\">if</span> (<span class=\"hljs-selector-tag\">audio</span><span class=\"hljs-selector-class\">.currentTime</span> &gt; lrcjson<span class=\"hljs-selector-attr\">[i1]</span>.timeout) &#123;<br>   <span class=\"hljs-comment\">//歌词：lrcjson[i1].lrc</span><br>\t&#125;<br>   &#125;<br></code></pre></td></tr></table></figure>\n\n<p>播放的时候不断查找，不断遍历数组</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\"><span class=\"hljs-selector-tag\">audio</span>.ontimeupdate=<span class=\"hljs-built_in\">function</span>(e)&#123;<br><span class=\"hljs-function\"><span class=\"hljs-title\">for</span><span class=\"hljs-params\">(i1=<span class=\"hljs-number\">0</span>;i1&lt;lrcjson.length;i1++)</span></span> &#123;<br>  <span class=\"hljs-built_in\">if</span>(<span class=\"hljs-selector-tag\">audio</span><span class=\"hljs-selector-class\">.currentTime</span> &gt; lrcjson<span class=\"hljs-selector-attr\">[i1]</span>.timeout) &#123;<br>  <span class=\"hljs-comment\">//歌词：lrcjson[i1].lrc</span><br>   &#125;<br> &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>如果你用console输出，就会看到速度非常快，所以不适合在html创建元素或者document.write，只能用innerHTML不断刷新元素</p>\n<p>前面已经讲到获取歌词元素了，所以直接可以对歌词操作：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-attr\">lrc.innerHTML</span>=lrcjson[i1].lrc<span class=\"hljs-comment\">;</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"总代码\"><a href=\"#总代码\" class=\"headerlink\" title=\"总代码\"></a>总代码</h2><p>Javascript</p>\n<figure class=\"highlight nim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nim\">lrcjson = &#123;<span class=\"hljs-string\">&quot;time&quot;</span>:<span class=\"hljs-number\">261</span>.<span class=\"hljs-number\">96</span>,<span class=\"hljs-string\">&quot;lrc&quot;</span>:<span class=\"hljs-string\">&quot;ごめんね 好きなの Answer to you&quot;</span>&#125;,<span class=\"hljs-meta\">&#123;...&#125;</span><br>lrc = document.getElementById(&#x27;lrc&#x27;);<br>audio.ontimeupdate=function(e) &#123;<br><span class=\"hljs-keyword\">for</span>(i1=<span class=\"hljs-number\">0</span>;i1&lt;lrcjson.length;i1++) &#123;<br>\t<span class=\"hljs-keyword\">if</span> (audio.currentTime &gt; lrcjson[i1].time) &#123;<br>\t\tlrc.innerHTML=lrcjson[i1].lrc;<br>\t&#125;<br>   &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>HTML：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;jumbotron&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;display-4&quot;</span>&gt;</span>秋風のアンサー<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;lead&quot;</span>&gt;</span>Flower<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;lead&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;lrc&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">audio</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;audio&quot;</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;mp3/Flower - 秋風のアンサー.mp3&quot;</span> <span class=\"hljs-attr\">controls</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;width:100%&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">audio</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>预览：</p>\n<p><a href=\"https://codepen.io/arsrna/full/vYxyqaK\">https://codepen.io/arsrna/full/vYxyqaK</a></p>\n<h1 id=\"Powered-by-Ar-Sr-Na（www-arsrna-cn）\"><a href=\"#Powered-by-Ar-Sr-Na（www-arsrna-cn）\" class=\"headerlink\" title=\"Powered by Ar-Sr-Na（www.arsrna.cn）\"></a>Powered by Ar-Sr-Na（<a href=\"https://www.arsrna.cn/\">www.arsrna.cn</a>）</h1><h1 id=\"到此，教程结束-未经允许禁止转载！\"><a href=\"#到此，教程结束-未经允许禁止转载！\" class=\"headerlink\" title=\"到此，教程结束 未经允许禁止转载！\"></a>到此，教程结束 未经允许禁止转载！</h1>","site":{"data":{}},"excerpt":"","more":"<p>节目：[08-1202L&#x2F;08-1203K]：【教程】纯前端做一个歌词显示的音乐播放器</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202L08-1203K/r7yxduv7vk.png\" alt=\"效果\"></p>\n<h1 id=\"用到的文件：\"><a href=\"#用到的文件：\" class=\"headerlink\" title=\"用到的文件：\"></a>用到的文件：</h1><p>Bootstrap 4.6.0 CSS：<a href=\"https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.6.0/css/bootstrap.css\">https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.6.0/css/bootstrap.css</a></p>\n<p>一段音乐及这首歌的lrc歌词（只要带时间的都可以，这里用lrc举例）</p>\n<p>浏览器</p>\n<p>jquery（可选，为了查找元素更方便）：<a href=\"https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.js\">https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.js</a></p>\n<h1 id=\"原理及实现：\"><a href=\"#原理及实现：\" class=\"headerlink\" title=\"原理及实现：\"></a>原理及实现：</h1><h2 id=\"音乐播放\"><a href=\"#音乐播放\" class=\"headerlink\" title=\"音乐播放\"></a>音乐播放</h2><p>通过html5的<code>&lt;audio&gt;</code>属性进行播放</p>\n<p>这里为了方便不开发进度条和控制进度的工具，直接用各个浏览器渲染的audio标签</p>\n<p>并且宽度设置为100%</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">&lt;audio <span class=\"hljs-attribute\">id</span>=<span class=\"hljs-string\">&quot;audio&quot;</span> <span class=\"hljs-attribute\">src</span>=<span class=\"hljs-string\">&quot;mp3/Flower - 秋風のアンサー.mp3&quot;</span> controls <span class=\"hljs-attribute\">style</span>=<span class=\"hljs-string\">&quot;width:100%&quot;</span>&gt;&lt;/audio&gt;<br></code></pre></td></tr></table></figure>\n\n<p><strong>注意，audio要指定一个id，方便后续获取</strong></p>\n<h2 id=\"歌曲显示\"><a href=\"#歌曲显示\" class=\"headerlink\" title=\"歌曲显示\"></a>歌曲显示</h2><p>自己设置好</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202L08-1203K/u0ek1jo0fc.png\"></p>\n<p>为了美观，我用Bootstrap的jumbotrom大块屏</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;jumbotron&quot;</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;display-4&quot;</span>&gt;</span>秋風のアンサー<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;lead&quot;</span>&gt;</span>Flower<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"歌词显示（核心部分）\"><a href=\"#歌词显示（核心部分）\" class=\"headerlink\" title=\"歌词显示（核心部分）\"></a>歌词显示（核心部分）</h1><h2 id=\"预设置：\"><a href=\"#预设置：\" class=\"headerlink\" title=\"预设置：\"></a>预设置：</h2><p>因为LRC是timelrc 的格式，js不能读取，但js有个很相似的格式：json，因此我们可以把lrc转为json，类似于：</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\">[<span class=\"hljs-meta\">00:01.00</span>]powered<br>[<span class=\"hljs-meta\">00:02.00</span>]<span class=\"hljs-keyword\">by</span><br>[<span class=\"hljs-meta\">00:03.00</span>]Ar-Sr-Na<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">&#123;&quot;<span class=\"hljs-selector-tag\">time</span>&quot;:<span class=\"hljs-number\">1</span>,<span class=\"hljs-string\">&quot;lrc&quot;</span>:<span class=\"hljs-string\">&quot;Powered&quot;</span>&#125;,<br>&#123;&quot;<span class=\"hljs-selector-tag\">time</span>&quot;:<span class=\"hljs-number\">2</span>,<span class=\"hljs-string\">&quot;lrc&quot;</span>:<span class=\"hljs-string\">&quot;by&quot;</span>&#125;,<br>&#123;&quot;<span class=\"hljs-selector-tag\">time</span>&quot;:<span class=\"hljs-number\">3</span>,<span class=\"hljs-string\">&quot;lrc&quot;</span>:<span class=\"hljs-string\">&quot;Ar-Sr-Na&quot;</span>&#125;,<br></code></pre></td></tr></table></figure>\n\n<p>所以先要处理lrc</p>\n<p>用sublime打开lrc</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202L08-1203K/v92y1vmqj6.png\"></p>\n<p>鼠标对准第一个中括号，按住中键不放，指针将会一直沿着你鼠标的方向选择，滑到最底部选中所有时间</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202L08-1203K/0lhfuwmmxc.png\"></p>\n<p>Ctrl+C复制，在Excel里粘贴</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202L08-1203K/xndrtzk5wl.png\"></p>\n<p>最好留两个单元格计算</p>\n<p>分钟单元格输入函数：&#x3D;LEFT(C2,2)；C2是你的LRC时间所在单元格，下同</p>\n<p>秒数单元格输入函数：&#x3D;RIGHT(C2,5)</p>\n<p>这样分秒就分离了</p>\n<p>然后将分钟+秒变成js能读取的时间</p>\n<p>输入函数：&#x3D;分钟单元格*60+秒钟单元格</p>\n<p>鼠标在单元格右下角下拖快速填充到底</p>\n<p>同样用Sublime，在第一个”]”右中括号那里按住中键选择（注意最好选择进中键，不然对于有些空行的歌词会复制不了）</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202L08-1203K/3wlg6vt78v.png\"></p>\n<p>粘贴进Excel</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202L08-1203K/3foiexpflb.png\"></p>\n<p>然后替换 ] 为 空</p>\n<p>复制具有时间和歌词的两列，去到Excel转json的网站</p>\n<p><a href=\"https://www.bejson.com/json/col2json/\">在线Excel、CSV转JSON格式-BeJSON.com</a></p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202L08-1203K/lexcaixaw8.png\"></p>\n<p>转换完毕，接下来就是匹配歌词然后播放了</p>\n<h2 id=\"匹配音频和歌词时间点\"><a href=\"#匹配音频和歌词时间点\" class=\"headerlink\" title=\"匹配音频和歌词时间点\"></a>匹配音频和歌词时间点</h2><p>这部分我想了很久，一直没办法找到方法，现在有个问题，我想让每句播放的时候来个动画，但是现在刷新频率太快，各位大佬支个招吧</p>\n<p>html里添加个显示歌词的元素，我用span，并且用Bootstrap的字体</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">&lt;span <span class=\"hljs-attribute\">id</span>=<span class=\"hljs-string\">&quot;lrc&quot;</span> <span class=\"hljs-attribute\">class</span>=<span class=\"hljs-string\">&quot;lead&quot;</span>&gt;&lt;/span&gt;<br></code></pre></td></tr></table></figure>\n\n<p><strong>注意，文本要指定一个id，方便后续获取</strong></p>\n<p>js里有个操作，currentTime</p>\n<p>给歌词json赋值</p>\n<figure class=\"highlight nim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nim\"><span class=\"hljs-keyword\">var</span> lrcjson = &#123;<span class=\"hljs-string\">&quot;time&quot;</span>:<span class=\"hljs-number\">261</span>.<span class=\"hljs-number\">96</span>,<span class=\"hljs-string\">&quot;lrc&quot;</span>:<span class=\"hljs-string\">&quot;ごめんね 好きなの Answer to you&quot;</span>&#125;,<span class=\"hljs-meta\">&#123;......&#125;</span>;<br></code></pre></td></tr></table></figure>\n\n<p>获取音频和文字控件：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dart\"><span class=\"hljs-keyword\">var</span> audio = <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">&#x27;audio&#x27;</span>);<br><span class=\"hljs-keyword\">var</span> lrcHTML= <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">&#x27;lrc&#x27;</span>);<br></code></pre></td></tr></table></figure>\n\n<p>要匹配音频和歌词时间点，就要不断判断和遍历歌词数组</p>\n<p>遍历数组可以这样来：</p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs maxima\"><span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">i1</span>=<span class=\"hljs-number\">0</span>;<span class=\"hljs-built_in\">i1</span>&lt;lrcjson.<span class=\"hljs-built_in\">length</span>;<span class=\"hljs-built_in\">i1</span>++) &#123;<br>//每句歌词时间：lrcjson[<span class=\"hljs-built_in\">i1</span>].<span class=\"hljs-built_in\">time</span><br>//每句歌词：lrcjson[<span class=\"hljs-built_in\">i1</span>].lrc<br>]<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"判断音频与对应歌词\"><a href=\"#判断音频与对应歌词\" class=\"headerlink\" title=\"判断音频与对应歌词\"></a>判断音频与对应歌词</h2><p>直接用audio.currentTime与上述遍历数组查找lrcjsoni1.time是行不通的，因为他们的时间点不可能完全精确，有0.01ms的误差都不行</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202L08-1203K/4df1i9zmn6.png\" alt=\"浏览器获取的音频进度\"></p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202L08-1203K/n5ghnu2m1r.png\" alt=\"应该对应的歌词\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">&#123;&quot;<span class=\"hljs-selector-tag\">time</span>&quot;:<span class=\"hljs-number\">122.09</span>,<span class=\"hljs-string\">&quot;lrc&quot;</span>:<span class=\"hljs-string\">&quot;不安なのよ だからお願い&quot;</span>&#125;,<br></code></pre></td></tr></table></figure>\n\n<p>所以只能用模糊搜索</p>\n<h3 id=\"当当前时间大于数组里某个数组的时间大小时，判定就是该数组，通过该数组就能获取到时间和歌词从而显示\"><a href=\"#当当前时间大于数组里某个数组的时间大小时，判定就是该数组，通过该数组就能获取到时间和歌词从而显示\" class=\"headerlink\" title=\"当当前时间大于数组里某个数组的时间大小时，判定就是该数组，通过该数组就能获取到时间和歌词从而显示\"></a>当当前时间大于数组里某个数组的时间大小时，判定就是该数组，通过该数组就能获取到时间和歌词从而显示</h3><p>当音频播放时不断执行事件：</p>\n<figure class=\"highlight wren\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs wren\"><span class=\"hljs-variable\">audio</span>.<span class=\"hljs-property\">ontimeupdate</span><span class=\"hljs-operator\">=</span><span class=\"hljs-title function_\">function</span>(<span class=\"hljs-params\">e</span>) &#123; &#125;<br></code></pre></td></tr></table></figure>\n\n<p>遍历歌词的同时不断查找匹配歌词</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\"><span class=\"hljs-function\"><span class=\"hljs-title\">for</span><span class=\"hljs-params\">(i1=<span class=\"hljs-number\">0</span>;i1&lt;lrcjson.length;i1++)</span></span> &#123;<br>\t<span class=\"hljs-keyword\">if</span> (<span class=\"hljs-selector-tag\">audio</span><span class=\"hljs-selector-class\">.currentTime</span> &gt; lrcjson<span class=\"hljs-selector-attr\">[i1]</span>.timeout) &#123;<br>   <span class=\"hljs-comment\">//歌词：lrcjson[i1].lrc</span><br>\t&#125;<br>   &#125;<br></code></pre></td></tr></table></figure>\n\n<p>播放的时候不断查找，不断遍历数组</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\"><span class=\"hljs-selector-tag\">audio</span>.ontimeupdate=<span class=\"hljs-built_in\">function</span>(e)&#123;<br><span class=\"hljs-function\"><span class=\"hljs-title\">for</span><span class=\"hljs-params\">(i1=<span class=\"hljs-number\">0</span>;i1&lt;lrcjson.length;i1++)</span></span> &#123;<br>  <span class=\"hljs-built_in\">if</span>(<span class=\"hljs-selector-tag\">audio</span><span class=\"hljs-selector-class\">.currentTime</span> &gt; lrcjson<span class=\"hljs-selector-attr\">[i1]</span>.timeout) &#123;<br>  <span class=\"hljs-comment\">//歌词：lrcjson[i1].lrc</span><br>   &#125;<br> &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>如果你用console输出，就会看到速度非常快，所以不适合在html创建元素或者document.write，只能用innerHTML不断刷新元素</p>\n<p>前面已经讲到获取歌词元素了，所以直接可以对歌词操作：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-attr\">lrc.innerHTML</span>=lrcjson[i1].lrc<span class=\"hljs-comment\">;</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"总代码\"><a href=\"#总代码\" class=\"headerlink\" title=\"总代码\"></a>总代码</h2><p>Javascript</p>\n<figure class=\"highlight nim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nim\">lrcjson = &#123;<span class=\"hljs-string\">&quot;time&quot;</span>:<span class=\"hljs-number\">261</span>.<span class=\"hljs-number\">96</span>,<span class=\"hljs-string\">&quot;lrc&quot;</span>:<span class=\"hljs-string\">&quot;ごめんね 好きなの Answer to you&quot;</span>&#125;,<span class=\"hljs-meta\">&#123;...&#125;</span><br>lrc = document.getElementById(&#x27;lrc&#x27;);<br>audio.ontimeupdate=function(e) &#123;<br><span class=\"hljs-keyword\">for</span>(i1=<span class=\"hljs-number\">0</span>;i1&lt;lrcjson.length;i1++) &#123;<br>\t<span class=\"hljs-keyword\">if</span> (audio.currentTime &gt; lrcjson[i1].time) &#123;<br>\t\tlrc.innerHTML=lrcjson[i1].lrc;<br>\t&#125;<br>   &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>HTML：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;jumbotron&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;display-4&quot;</span>&gt;</span>秋風のアンサー<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;lead&quot;</span>&gt;</span>Flower<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;lead&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;lrc&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">audio</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;audio&quot;</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;mp3/Flower - 秋風のアンサー.mp3&quot;</span> <span class=\"hljs-attr\">controls</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;width:100%&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">audio</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>预览：</p>\n<p><a href=\"https://codepen.io/arsrna/full/vYxyqaK\">https://codepen.io/arsrna/full/vYxyqaK</a></p>\n<h1 id=\"Powered-by-Ar-Sr-Na（www-arsrna-cn）\"><a href=\"#Powered-by-Ar-Sr-Na（www-arsrna-cn）\" class=\"headerlink\" title=\"Powered by Ar-Sr-Na（www.arsrna.cn）\"></a>Powered by Ar-Sr-Na（<a href=\"https://www.arsrna.cn/\">www.arsrna.cn</a>）</h1><h1 id=\"到此，教程结束-未经允许禁止转载！\"><a href=\"#到此，教程结束-未经允许禁止转载！\" class=\"headerlink\" title=\"到此，教程结束 未经允许禁止转载！\"></a>到此，教程结束 未经允许禁止转载！</h1>"},{"title":"【教程】纯原生异步特性，教你用JavaScript快速获取壁纸站","date":"2021-10-04T07:20:23.000Z","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"https://www.arsrna.cn","authorAbout":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","authorDesc":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","comments":1,"keywords":"程序,开发,html,JavaScript,前端","description":null,"index_img":"https://res.arsrna.cn/blogs/08-1202S-08-1203R/hdpic.jpg","_content":"节目编号：08-1202S/08-1203R\n\n切记请勿用于违法用途，一切后果与作者无关！请尊重原作者著作权，除学习外禁止未经同意随意抓取数据，禁止应用于商业化行为！\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/lovi5rlpmf.jpg)\n\n---\n\n# 原理架构分析\n\n众所周知网页渲染出来还是html，而html都是由一部分一部分的标签组成的，对于表格，图库这类网站来说，这一部分和一部分是相似的结构，比如`<tr><td>`，`<div class=\"xxx\">`，通过class，id，tagName的规律，不难找到相似元素，本期就以壁纸站为例：\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/ky190sc2fk.png)\n\n第一步，打开F12,开发者工具分析结构\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/kee1hww7qx.png)\n\n这一个个整齐的DIV，就是每一个图块对应的结构，他们的query选择器为'.thumb-container-big'\n\n再把元素展开看看\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/mjtnu4mik4.png)\n\n| 元素Class  | 内容                           |\n| :--------- | :----------------------------- |\n| boxgrid    | 图片容器，放上面那张缩略图的   |\n| boxcaption | 图片的一些描述，下面的描述文字 |\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/91p454stak.png)\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/wyur18v7xf.png)\n\n我们正好只要这两部分，原图和标题\n\n接下来展开boxgrid\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/w7hfd9iv9p.png)\n\n<table>\n  <tr>\n    <th class=\"align-left\">元素</th>\n    <th class=\"align-left\">属性</th>\n    <th class=\"align-left\">内容</th>\n  </tr>\n  <tr>\n    <td>a</td>\n    <td>href</td>\n    <td>跳转地址</td>\n  </tr>\n  <tr>\n    <td rowspan=\"3\">picture</td>\n    <td>source</td>\n    <td rowspan=\"3\">全都是图片源，我们要的就是这个</td>\n  </tr>\n  <tr>\n    <td>source</td>\n  </tr>\n  <tr>\n    <td>source</td>\n  </tr>\n</table>\n\n控制台里发现最大的一张\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/m7ryazhrbc.png)\n\n600\\*375显然不是我们要的分辨率，进入图片详情看看\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/9kn9cecppd.png)\n\n1920\\*1080的，他们的URL分别如下：\n\n缩略：533/thumbbig-533007.png\n\n原图：533/533007.png\n\n多看几张，缩略图都是thumbbig-xxx.webp，原图都是xxx.png\n\n所以我们只需要替换掉thumbbig-为空，.webp为png即可\n\n或者如果我们注意到元素id正好对应图片的名称\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/hp08it29w4.png)\n\n替换掉thumb\\_即可，但是我们就无法获取上级目录了\n\n如果要获取，就得用indexOf索引内容，太过于复杂，所以还是老老实实根据Picture里面的source属性吧\n\n# 理论存在实践开始\n\n考虑到一些网站没有jquery，所以整个过程全部是原生js运行\n\n## 捕捉父级元素\n\n案例中的元素class为thumb-container-big\n\n所以引入方法\n\n````JavaScript\ndocument.getElementsByClassName()\n````\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/c1u3l8bmv5.png)\n\n已经捕获到了31个元素，先用第一个元素分析\n\n## 捕捉子元素\n\n````JavaScript\ndocument.getElementsByClassName('thumb-container-big')[0].childNodes\n````\n\n一步一步抓下去\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/q06mry330c.png)\n\nPS：这里用jQuery会更方便些\n\n最后得到代码：\n\n````JavaScript\ndocument.getElementsByClassName('thumb-container-big')[0]\n.childNodes[1]\n.childNodes[1]\n.childNodes[1]\n.childNodes[1]\n.childNodes[1]\n````\n\n这时候已经获取到我们的Picture元素了\n\n只需要获取他的属性srcset就能获得缩略图地址\n\n所以我们用attributes对象获得属性：\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/cggfz46gpc.png)\n\n````JavaScript\nattributes[1]\n````\n\n正是我们想要的链接\n\n但是获取出来的确实一个xml格式的内容：\n\n````html\nsrcset=\"https://images8.alphacoders.com/533/thumb-350-533007.webp\"\n````\n\n转化为文本：.textContent\n\n````JavaScript\ndocument.getElementsByClassName('thumb-container-big')[0].childNodes[1].childNodes[1].childNodes[1].childNodes[1].childNodes[1].attributes[1].textContent\n\n\n这就是我们第一个元素捕获的方法，接下来就很简单了，把它封装为一个方法，方便调用：\n\n````JavaScript\nfunction getLink(count) {\n  return(document.getElementsByClassName('thumb-container-big')[count].childNodes[1].childNodes[1].childNodes[1].childNodes[1].childNodes[1].attributes[1].textContent)\n}\n````\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/o534hccr4l.png)\n\n## 获得原图\n\n根据上面的分析，我们对链接进行字符串替换：\n\n````JavaScript\ngetLink(0).replace('thumb-350-','').replace('.webp','.png')\n````\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/gfb7mr8vh3.png)\n\n## 遍历循环\n\n由于class的数量正好是图片数量，所以直接根据class进行遍历\n\n````JavaScript\nvar elem = document.getElementsByClassName('thumb-container-big')\nfor(i0=0;i0<elem.length;i0++){\n  console.log(getLink(i0).replace('thumb-350-','').replace('.webp','.png'))\n}\n````\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/a9u4sqtk7k.png)\n\n我们的代码已经很完美，但是我不希望在控制台里输出，想要保存到文本文档怎么办？直接post到一个支持保存文件的后端即可，在这里不介绍\n\n代码运行速度非常地快，回车一瞬间就全部跑完了，可见异步执行的威力\n\n# 技术总结\n\n优点：迅速，轻量，便捷\n\n缺点：需要手动翻页，手动运行代码，半自动化\n","source":"_posts/08-1202S-08-1203R.md","raw":"---\ntitle: 【教程】纯原生异步特性，教你用JavaScript快速获取壁纸站\ndate: 2021-10-4 15:20:23\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: https://www.arsrna.cn\nauthorAbout: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\nauthorDesc: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\ncategories: 技术\ncomments: true\ntags: \nkeywords: 程序,开发,html,JavaScript,前端\ndescription: \nindex_img: 'https://res.arsrna.cn/blogs/08-1202S-08-1203R/hdpic.jpg'\n---\n节目编号：08-1202S/08-1203R\n\n切记请勿用于违法用途，一切后果与作者无关！请尊重原作者著作权，除学习外禁止未经同意随意抓取数据，禁止应用于商业化行为！\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/lovi5rlpmf.jpg)\n\n---\n\n# 原理架构分析\n\n众所周知网页渲染出来还是html，而html都是由一部分一部分的标签组成的，对于表格，图库这类网站来说，这一部分和一部分是相似的结构，比如`<tr><td>`，`<div class=\"xxx\">`，通过class，id，tagName的规律，不难找到相似元素，本期就以壁纸站为例：\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/ky190sc2fk.png)\n\n第一步，打开F12,开发者工具分析结构\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/kee1hww7qx.png)\n\n这一个个整齐的DIV，就是每一个图块对应的结构，他们的query选择器为'.thumb-container-big'\n\n再把元素展开看看\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/mjtnu4mik4.png)\n\n| 元素Class  | 内容                           |\n| :--------- | :----------------------------- |\n| boxgrid    | 图片容器，放上面那张缩略图的   |\n| boxcaption | 图片的一些描述，下面的描述文字 |\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/91p454stak.png)\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/wyur18v7xf.png)\n\n我们正好只要这两部分，原图和标题\n\n接下来展开boxgrid\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/w7hfd9iv9p.png)\n\n<table>\n  <tr>\n    <th class=\"align-left\">元素</th>\n    <th class=\"align-left\">属性</th>\n    <th class=\"align-left\">内容</th>\n  </tr>\n  <tr>\n    <td>a</td>\n    <td>href</td>\n    <td>跳转地址</td>\n  </tr>\n  <tr>\n    <td rowspan=\"3\">picture</td>\n    <td>source</td>\n    <td rowspan=\"3\">全都是图片源，我们要的就是这个</td>\n  </tr>\n  <tr>\n    <td>source</td>\n  </tr>\n  <tr>\n    <td>source</td>\n  </tr>\n</table>\n\n控制台里发现最大的一张\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/m7ryazhrbc.png)\n\n600\\*375显然不是我们要的分辨率，进入图片详情看看\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/9kn9cecppd.png)\n\n1920\\*1080的，他们的URL分别如下：\n\n缩略：533/thumbbig-533007.png\n\n原图：533/533007.png\n\n多看几张，缩略图都是thumbbig-xxx.webp，原图都是xxx.png\n\n所以我们只需要替换掉thumbbig-为空，.webp为png即可\n\n或者如果我们注意到元素id正好对应图片的名称\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/hp08it29w4.png)\n\n替换掉thumb\\_即可，但是我们就无法获取上级目录了\n\n如果要获取，就得用indexOf索引内容，太过于复杂，所以还是老老实实根据Picture里面的source属性吧\n\n# 理论存在实践开始\n\n考虑到一些网站没有jquery，所以整个过程全部是原生js运行\n\n## 捕捉父级元素\n\n案例中的元素class为thumb-container-big\n\n所以引入方法\n\n````JavaScript\ndocument.getElementsByClassName()\n````\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/c1u3l8bmv5.png)\n\n已经捕获到了31个元素，先用第一个元素分析\n\n## 捕捉子元素\n\n````JavaScript\ndocument.getElementsByClassName('thumb-container-big')[0].childNodes\n````\n\n一步一步抓下去\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/q06mry330c.png)\n\nPS：这里用jQuery会更方便些\n\n最后得到代码：\n\n````JavaScript\ndocument.getElementsByClassName('thumb-container-big')[0]\n.childNodes[1]\n.childNodes[1]\n.childNodes[1]\n.childNodes[1]\n.childNodes[1]\n````\n\n这时候已经获取到我们的Picture元素了\n\n只需要获取他的属性srcset就能获得缩略图地址\n\n所以我们用attributes对象获得属性：\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/cggfz46gpc.png)\n\n````JavaScript\nattributes[1]\n````\n\n正是我们想要的链接\n\n但是获取出来的确实一个xml格式的内容：\n\n````html\nsrcset=\"https://images8.alphacoders.com/533/thumb-350-533007.webp\"\n````\n\n转化为文本：.textContent\n\n````JavaScript\ndocument.getElementsByClassName('thumb-container-big')[0].childNodes[1].childNodes[1].childNodes[1].childNodes[1].childNodes[1].attributes[1].textContent\n\n\n这就是我们第一个元素捕获的方法，接下来就很简单了，把它封装为一个方法，方便调用：\n\n````JavaScript\nfunction getLink(count) {\n  return(document.getElementsByClassName('thumb-container-big')[count].childNodes[1].childNodes[1].childNodes[1].childNodes[1].childNodes[1].attributes[1].textContent)\n}\n````\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/o534hccr4l.png)\n\n## 获得原图\n\n根据上面的分析，我们对链接进行字符串替换：\n\n````JavaScript\ngetLink(0).replace('thumb-350-','').replace('.webp','.png')\n````\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/gfb7mr8vh3.png)\n\n## 遍历循环\n\n由于class的数量正好是图片数量，所以直接根据class进行遍历\n\n````JavaScript\nvar elem = document.getElementsByClassName('thumb-container-big')\nfor(i0=0;i0<elem.length;i0++){\n  console.log(getLink(i0).replace('thumb-350-','').replace('.webp','.png'))\n}\n````\n\n![](https://res.arsrna.cn/blogs/08-1202S-08-1203R/a9u4sqtk7k.png)\n\n我们的代码已经很完美，但是我不希望在控制台里输出，想要保存到文本文档怎么办？直接post到一个支持保存文件的后端即可，在这里不介绍\n\n代码运行速度非常地快，回车一瞬间就全部跑完了，可见异步执行的威力\n\n# 技术总结\n\n优点：迅速，轻量，便捷\n\n缺点：需要手动翻页，手动运行代码，半自动化\n","slug":"08-1202S-08-1203R","published":1,"updated":"2023-01-17T08:55:38.566Z","layout":"post","photos":[],"link":"","_id":"clod0d6xr002yc0nd040ddvli","content":"<p>节目编号：08-1202S&#x2F;08-1203R</p>\n<p>切记请勿用于违法用途，一切后果与作者无关！请尊重原作者著作权，除学习外禁止未经同意随意抓取数据，禁止应用于商业化行为！</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/lovi5rlpmf.jpg\"></p>\n<hr>\n<h1 id=\"原理架构分析\"><a href=\"#原理架构分析\" class=\"headerlink\" title=\"原理架构分析\"></a>原理架构分析</h1><p>众所周知网页渲染出来还是html，而html都是由一部分一部分的标签组成的，对于表格，图库这类网站来说，这一部分和一部分是相似的结构，比如<code>&lt;tr&gt;&lt;td&gt;</code>，<code>&lt;div class=&quot;xxx&quot;&gt;</code>，通过class，id，tagName的规律，不难找到相似元素，本期就以壁纸站为例：</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/ky190sc2fk.png\"></p>\n<p>第一步，打开F12,开发者工具分析结构</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/kee1hww7qx.png\"></p>\n<p>这一个个整齐的DIV，就是每一个图块对应的结构，他们的query选择器为’.thumb-container-big’</p>\n<p>再把元素展开看看</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/mjtnu4mik4.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">元素Class</th>\n<th align=\"left\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">boxgrid</td>\n<td align=\"left\">图片容器，放上面那张缩略图的</td>\n</tr>\n<tr>\n<td align=\"left\">boxcaption</td>\n<td align=\"left\">图片的一些描述，下面的描述文字</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/91p454stak.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/wyur18v7xf.png\"></p>\n<p>我们正好只要这两部分，原图和标题</p>\n<p>接下来展开boxgrid</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/w7hfd9iv9p.png\"></p>\n<table>\n  <tr>\n    <th class=\"align-left\">元素</th>\n    <th class=\"align-left\">属性</th>\n    <th class=\"align-left\">内容</th>\n  </tr>\n  <tr>\n    <td>a</td>\n    <td>href</td>\n    <td>跳转地址</td>\n  </tr>\n  <tr>\n    <td rowspan=\"3\">picture</td>\n    <td>source</td>\n    <td rowspan=\"3\">全都是图片源，我们要的就是这个</td>\n  </tr>\n  <tr>\n    <td>source</td>\n  </tr>\n  <tr>\n    <td>source</td>\n  </tr>\n</table>\n\n<p>控制台里发现最大的一张</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/m7ryazhrbc.png\"></p>\n<p>600*375显然不是我们要的分辨率，进入图片详情看看</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/9kn9cecppd.png\"></p>\n<p>1920*1080的，他们的URL分别如下：</p>\n<p>缩略：533&#x2F;thumbbig-533007.png</p>\n<p>原图：533&#x2F;533007.png</p>\n<p>多看几张，缩略图都是thumbbig-xxx.webp，原图都是xxx.png</p>\n<p>所以我们只需要替换掉thumbbig-为空，.webp为png即可</p>\n<p>或者如果我们注意到元素id正好对应图片的名称</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/hp08it29w4.png\"></p>\n<p>替换掉thumb_即可，但是我们就无法获取上级目录了</p>\n<p>如果要获取，就得用indexOf索引内容，太过于复杂，所以还是老老实实根据Picture里面的source属性吧</p>\n<h1 id=\"理论存在实践开始\"><a href=\"#理论存在实践开始\" class=\"headerlink\" title=\"理论存在实践开始\"></a>理论存在实践开始</h1><p>考虑到一些网站没有jquery，所以整个过程全部是原生js运行</p>\n<h2 id=\"捕捉父级元素\"><a href=\"#捕捉父级元素\" class=\"headerlink\" title=\"捕捉父级元素\"></a>捕捉父级元素</h2><p>案例中的元素class为thumb-container-big</p>\n<p>所以引入方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs JavaScript\"><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByClassName</span>()<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/c1u3l8bmv5.png\"></p>\n<p>已经捕获到了31个元素，先用第一个元素分析</p>\n<h2 id=\"捕捉子元素\"><a href=\"#捕捉子元素\" class=\"headerlink\" title=\"捕捉子元素\"></a>捕捉子元素</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs JavaScript\"><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByClassName</span>(<span class=\"hljs-string\">&#x27;thumb-container-big&#x27;</span>)[<span class=\"hljs-number\">0</span>].<span class=\"hljs-property\">childNodes</span><br></code></pre></td></tr></table></figure>\n\n<p>一步一步抓下去</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/q06mry330c.png\"></p>\n<p>PS：这里用jQuery会更方便些</p>\n<p>最后得到代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs JavaScript\"><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByClassName</span>(<span class=\"hljs-string\">&#x27;thumb-container-big&#x27;</span>)[<span class=\"hljs-number\">0</span>]<br>.<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>]<br>.<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>]<br>.<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>]<br>.<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>]<br>.<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>]<br></code></pre></td></tr></table></figure>\n\n<p>这时候已经获取到我们的Picture元素了</p>\n<p>只需要获取他的属性srcset就能获得缩略图地址</p>\n<p>所以我们用attributes对象获得属性：</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/cggfz46gpc.png\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs JavaScript\">attributes[<span class=\"hljs-number\">1</span>]<br></code></pre></td></tr></table></figure>\n\n<p>正是我们想要的链接</p>\n<p>但是获取出来的确实一个xml格式的内容：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\">srcset=&quot;https://images8.alphacoders.com/533/thumb-350-533007.webp&quot;<br></code></pre></td></tr></table></figure>\n\n<p>转化为文本：.textContent</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs JavaScript\"><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByClassName</span>(<span class=\"hljs-string\">&#x27;thumb-container-big&#x27;</span>)[<span class=\"hljs-number\">0</span>].<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">attributes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">textContent</span><br><br><br>这就是我们第一个元素捕获的方法，接下来就很简单了，把它封装为一个方法，方便调用：<br><br><span class=\"hljs-string\">``</span><span class=\"hljs-string\">``</span><span class=\"hljs-title class_\">JavaScript</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getLink</span>(<span class=\"hljs-params\">count</span>) &#123;<br>  <span class=\"hljs-keyword\">return</span>(<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByClassName</span>(<span class=\"hljs-string\">&#x27;thumb-container-big&#x27;</span>)[count].<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">attributes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">textContent</span>)<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/o534hccr4l.png\"></p>\n<h2 id=\"获得原图\"><a href=\"#获得原图\" class=\"headerlink\" title=\"获得原图\"></a>获得原图</h2><p>根据上面的分析，我们对链接进行字符串替换：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs JavaScript\"><span class=\"hljs-title function_\">getLink</span>(<span class=\"hljs-number\">0</span>).<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&#x27;thumb-350-&#x27;</span>,<span class=\"hljs-string\">&#x27;&#x27;</span>).<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&#x27;.webp&#x27;</span>,<span class=\"hljs-string\">&#x27;.png&#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/gfb7mr8vh3.png\"></p>\n<h2 id=\"遍历循环\"><a href=\"#遍历循环\" class=\"headerlink\" title=\"遍历循环\"></a>遍历循环</h2><p>由于class的数量正好是图片数量，所以直接根据class进行遍历</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs JavaScript\"><span class=\"hljs-keyword\">var</span> elem = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByClassName</span>(<span class=\"hljs-string\">&#x27;thumb-container-big&#x27;</span>)<br><span class=\"hljs-keyword\">for</span>(i0=<span class=\"hljs-number\">0</span>;i0&lt;elem.<span class=\"hljs-property\">length</span>;i0++)&#123;<br>  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title function_\">getLink</span>(i0).<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&#x27;thumb-350-&#x27;</span>,<span class=\"hljs-string\">&#x27;&#x27;</span>).<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&#x27;.webp&#x27;</span>,<span class=\"hljs-string\">&#x27;.png&#x27;</span>))<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/a9u4sqtk7k.png\"></p>\n<p>我们的代码已经很完美，但是我不希望在控制台里输出，想要保存到文本文档怎么办？直接post到一个支持保存文件的后端即可，在这里不介绍</p>\n<p>代码运行速度非常地快，回车一瞬间就全部跑完了，可见异步执行的威力</p>\n<h1 id=\"技术总结\"><a href=\"#技术总结\" class=\"headerlink\" title=\"技术总结\"></a>技术总结</h1><p>优点：迅速，轻量，便捷</p>\n<p>缺点：需要手动翻页，手动运行代码，半自动化</p>\n","site":{"data":{}},"excerpt":"","more":"<p>节目编号：08-1202S&#x2F;08-1203R</p>\n<p>切记请勿用于违法用途，一切后果与作者无关！请尊重原作者著作权，除学习外禁止未经同意随意抓取数据，禁止应用于商业化行为！</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/lovi5rlpmf.jpg\"></p>\n<hr>\n<h1 id=\"原理架构分析\"><a href=\"#原理架构分析\" class=\"headerlink\" title=\"原理架构分析\"></a>原理架构分析</h1><p>众所周知网页渲染出来还是html，而html都是由一部分一部分的标签组成的，对于表格，图库这类网站来说，这一部分和一部分是相似的结构，比如<code>&lt;tr&gt;&lt;td&gt;</code>，<code>&lt;div class=&quot;xxx&quot;&gt;</code>，通过class，id，tagName的规律，不难找到相似元素，本期就以壁纸站为例：</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/ky190sc2fk.png\"></p>\n<p>第一步，打开F12,开发者工具分析结构</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/kee1hww7qx.png\"></p>\n<p>这一个个整齐的DIV，就是每一个图块对应的结构，他们的query选择器为’.thumb-container-big’</p>\n<p>再把元素展开看看</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/mjtnu4mik4.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">元素Class</th>\n<th align=\"left\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">boxgrid</td>\n<td align=\"left\">图片容器，放上面那张缩略图的</td>\n</tr>\n<tr>\n<td align=\"left\">boxcaption</td>\n<td align=\"left\">图片的一些描述，下面的描述文字</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/91p454stak.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/wyur18v7xf.png\"></p>\n<p>我们正好只要这两部分，原图和标题</p>\n<p>接下来展开boxgrid</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/w7hfd9iv9p.png\"></p>\n<table>\n  <tr>\n    <th class=\"align-left\">元素</th>\n    <th class=\"align-left\">属性</th>\n    <th class=\"align-left\">内容</th>\n  </tr>\n  <tr>\n    <td>a</td>\n    <td>href</td>\n    <td>跳转地址</td>\n  </tr>\n  <tr>\n    <td rowspan=\"3\">picture</td>\n    <td>source</td>\n    <td rowspan=\"3\">全都是图片源，我们要的就是这个</td>\n  </tr>\n  <tr>\n    <td>source</td>\n  </tr>\n  <tr>\n    <td>source</td>\n  </tr>\n</table>\n\n<p>控制台里发现最大的一张</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/m7ryazhrbc.png\"></p>\n<p>600*375显然不是我们要的分辨率，进入图片详情看看</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/9kn9cecppd.png\"></p>\n<p>1920*1080的，他们的URL分别如下：</p>\n<p>缩略：533&#x2F;thumbbig-533007.png</p>\n<p>原图：533&#x2F;533007.png</p>\n<p>多看几张，缩略图都是thumbbig-xxx.webp，原图都是xxx.png</p>\n<p>所以我们只需要替换掉thumbbig-为空，.webp为png即可</p>\n<p>或者如果我们注意到元素id正好对应图片的名称</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/hp08it29w4.png\"></p>\n<p>替换掉thumb_即可，但是我们就无法获取上级目录了</p>\n<p>如果要获取，就得用indexOf索引内容，太过于复杂，所以还是老老实实根据Picture里面的source属性吧</p>\n<h1 id=\"理论存在实践开始\"><a href=\"#理论存在实践开始\" class=\"headerlink\" title=\"理论存在实践开始\"></a>理论存在实践开始</h1><p>考虑到一些网站没有jquery，所以整个过程全部是原生js运行</p>\n<h2 id=\"捕捉父级元素\"><a href=\"#捕捉父级元素\" class=\"headerlink\" title=\"捕捉父级元素\"></a>捕捉父级元素</h2><p>案例中的元素class为thumb-container-big</p>\n<p>所以引入方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs JavaScript\"><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByClassName</span>()<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/c1u3l8bmv5.png\"></p>\n<p>已经捕获到了31个元素，先用第一个元素分析</p>\n<h2 id=\"捕捉子元素\"><a href=\"#捕捉子元素\" class=\"headerlink\" title=\"捕捉子元素\"></a>捕捉子元素</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs JavaScript\"><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByClassName</span>(<span class=\"hljs-string\">&#x27;thumb-container-big&#x27;</span>)[<span class=\"hljs-number\">0</span>].<span class=\"hljs-property\">childNodes</span><br></code></pre></td></tr></table></figure>\n\n<p>一步一步抓下去</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/q06mry330c.png\"></p>\n<p>PS：这里用jQuery会更方便些</p>\n<p>最后得到代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs JavaScript\"><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByClassName</span>(<span class=\"hljs-string\">&#x27;thumb-container-big&#x27;</span>)[<span class=\"hljs-number\">0</span>]<br>.<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>]<br>.<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>]<br>.<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>]<br>.<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>]<br>.<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>]<br></code></pre></td></tr></table></figure>\n\n<p>这时候已经获取到我们的Picture元素了</p>\n<p>只需要获取他的属性srcset就能获得缩略图地址</p>\n<p>所以我们用attributes对象获得属性：</p>\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/cggfz46gpc.png\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs JavaScript\">attributes[<span class=\"hljs-number\">1</span>]<br></code></pre></td></tr></table></figure>\n\n<p>正是我们想要的链接</p>\n<p>但是获取出来的确实一个xml格式的内容：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\">srcset=&quot;https://images8.alphacoders.com/533/thumb-350-533007.webp&quot;<br></code></pre></td></tr></table></figure>\n\n<p>转化为文本：.textContent</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs JavaScript\"><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByClassName</span>(<span class=\"hljs-string\">&#x27;thumb-container-big&#x27;</span>)[<span class=\"hljs-number\">0</span>].<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">attributes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">textContent</span><br><br><br>这就是我们第一个元素捕获的方法，接下来就很简单了，把它封装为一个方法，方便调用：<br><br><span class=\"hljs-string\">``</span><span class=\"hljs-string\">``</span><span class=\"hljs-title class_\">JavaScript</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getLink</span>(<span class=\"hljs-params\">count</span>) &#123;<br>  <span class=\"hljs-keyword\">return</span>(<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByClassName</span>(<span class=\"hljs-string\">&#x27;thumb-container-big&#x27;</span>)[count].<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">childNodes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">attributes</span>[<span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">textContent</span>)<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/o534hccr4l.png\"></p>\n<h2 id=\"获得原图\"><a href=\"#获得原图\" class=\"headerlink\" title=\"获得原图\"></a>获得原图</h2><p>根据上面的分析，我们对链接进行字符串替换：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs JavaScript\"><span class=\"hljs-title function_\">getLink</span>(<span class=\"hljs-number\">0</span>).<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&#x27;thumb-350-&#x27;</span>,<span class=\"hljs-string\">&#x27;&#x27;</span>).<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&#x27;.webp&#x27;</span>,<span class=\"hljs-string\">&#x27;.png&#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/gfb7mr8vh3.png\"></p>\n<h2 id=\"遍历循环\"><a href=\"#遍历循环\" class=\"headerlink\" title=\"遍历循环\"></a>遍历循环</h2><p>由于class的数量正好是图片数量，所以直接根据class进行遍历</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs JavaScript\"><span class=\"hljs-keyword\">var</span> elem = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByClassName</span>(<span class=\"hljs-string\">&#x27;thumb-container-big&#x27;</span>)<br><span class=\"hljs-keyword\">for</span>(i0=<span class=\"hljs-number\">0</span>;i0&lt;elem.<span class=\"hljs-property\">length</span>;i0++)&#123;<br>  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title function_\">getLink</span>(i0).<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&#x27;thumb-350-&#x27;</span>,<span class=\"hljs-string\">&#x27;&#x27;</span>).<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&#x27;.webp&#x27;</span>,<span class=\"hljs-string\">&#x27;.png&#x27;</span>))<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://res.arsrna.cn/blogs/08-1202S-08-1203R/a9u4sqtk7k.png\"></p>\n<p>我们的代码已经很完美，但是我不希望在控制台里输出，想要保存到文本文档怎么办？直接post到一个支持保存文件的后端即可，在这里不介绍</p>\n<p>代码运行速度非常地快，回车一瞬间就全部跑完了，可见异步执行的威力</p>\n<h1 id=\"技术总结\"><a href=\"#技术总结\" class=\"headerlink\" title=\"技术总结\"></a>技术总结</h1><p>优点：迅速，轻量，便捷</p>\n<p>缺点：需要手动翻页，手动运行代码，半自动化</p>\n"},{"title":"【GPU服务器】blender高性能渲染","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"www.arsrna.cn","authorAbout":"突破计算边界，构筑数字视界，www.arsrna.cn","authorDesc":"突破计算边界，构筑数字视界，www.arsrna.cn","comments":1,"index_img":"https://res.arsrna.cn/blog-images/1976489/hdpic.png","date":"2022-04-10T08:44:00.000Z","keywords":"GPU,云服务器渲染","description":"https://res.arsrna.cn/blog-images/1976489/hdpic.png","_content":"# 快速开始\n\n本文介绍如何使用GPU服务器提交一个渲染作业，高效率完成blender的动画图片渲染，并导出渲染图片。具体操作步骤如下：\n\n## 步骤1：准备环境\n\n### 系统环境\n\nblender在Windows上运行较为稳定易用，所以建议使用腾讯云的Windows Server 2019，已经预装好驱动\n\n前往blender官网安装blender [Download — blender.org](https://www.blender.org/download/)\n\n如果您希望只渲染，我们开发了一个专门用来blender渲染的软件：ArSrNa Blender渲染助手：[https://www.arsrna.cn/app/render](https://www.arsrna.cn/app/render)\n\n## 步骤2：准备渲染文件以及参数\n\n1.将渲染的文件打包为 .blend 格式的文件\n\n![](https://res.arsrna.cn/blog-images/1976489/d6adf6fb0c699bc90d2b6c60ff0652e8.png)\n\n2.上传到对象存储，若无对象存储资源，请前往控制台开通 [概览 - 对象存储 - 控制台 (tencent.com)](https://console.cloud.tencent.com/cos)\n\n操作请参考 [对象存储 上传对象 - 控制台指南 - 文档中心 - 腾讯云 (tencent.com)](https://cloud.tencent.com/document/product/436/13321)\n\n注意，创建存储桶这一步操作记得将地域改为与CVM**同地区**，保证在内网传输文件，不仅省下了流量费，而且节省了服务器的上传带宽，哪怕没有开通公网IP都可以进行上下载\n\n## 步骤3 服务器选型\n\n参考 [GPU 云服务器 渲染型实例 - 实例类型 - 文档中心 - 腾讯云 (tencent.com)](https://cloud.tencent.com/document/product/560/63854) 选择合适的显卡类型，避免显卡初始化失败。\n\n![](https://res.arsrna.cn/blog-images/1976489/cacabf30596d3449d628b850d79d4689.png)\n\n本次测试使用的是GN7vw机型，搭载NVIDIA Tesla T4 GRID驱动\n\n![](https://res.arsrna.cn/blog-images/1976489/8c0cc48e243bdc133af54ea813a1334c.png)\n\n![](https://res.arsrna.cn/blog-images/1976489/1f8ac5493b4ab341a05b3b82d74d405e.png)\n\n如果是自己的镜像没有GRID图形驱动，将无法使用渲染OpenGL功能，请安装驱动：[GPU 云服务器 安装 NVIDIA GRID 驱动 - 操作指南 - 文档中心 - 腾讯云 (tencent.com)](https://cloud.tencent.com/document/product/560/30060)\n\n# 服务器内操作\n\n## 方案一：命令行渲染（稳定）\n\n直接通过对象存储链接，内网下载文件\n\n![](https://res.arsrna.cn/blog-images/1976489/127f2e0fc2804717ac1c72a68afa35d2.png)\n\n.按照之前操作，安装好Blender [Download — blender.org](https://www.blender.org/download/)\n\n建议使用zip安装，解压到指定位置\n\n![](https://res.arsrna.cn/blog-images/1976489/2c59c18dd2902e96df8651c7107f25d6.png)\n\n**配置环境变量**\n\n右击此电脑，属性，高级，环境变量\n\n![](https://res.arsrna.cn/blog-images/1976489/f2beefb176b9808b0a7a47f9f5e77ef0.png)\n\n### 重启服务器\n\n开机后运行Windows+R键，输入CMD\n\n![](https://res.arsrna.cn/blog-images/1976489/d165002418b4d2ae0b78c15f1b94dc9e.png)\n\n命令行输入\n\n```js\nblender\n```\n\n如果能够启动blender页面，证明已经成功\n\n![](https://res.arsrna.cn/blog-images/1976489/da4eb0a53e62d0b10d96e9958c0b26c0.png)\n\n### 渲染参数设定\n\n建议直接在blender里面设定好所有的参数，命令行只是确定渲染的帧数\n\n![](https://res.arsrna.cn/blog-images/1976489/125eb85da484fc39de87409f86db9987.png)\n\n建议将工程文件（blend）保存在好记的位置，这里以C:\\test.blend为例\n\n### **简单图像命令行**\n\n```js\nblender -b \"C:\\test.blend\" -o frame_##### -f 2128\n```\n\n运行上述代码后，将会执行\n\n![](https://res.arsrna.cn/blog-images/1976489/d4d93c79df44f167403a3bdbc13910d0.png)\n\n一段时间后，就可以在工程目录下看到输出的内容了\n\n上述代码的作用\n\n| 参数 | 内容                                                                    |\n| :--- | :---------------------------------------------------------------------- |\n| -b   | 静默运行（不运行GUI界面），后跟工程目录地址，如果带有空格的，要加双引号 |\n| -o   | 输出目录及文件名，#代表帧号，一个#代表一位数，不足的会补0               |\n| -f   | 渲染的帧号，要保证这个参数在最后面                                      |\n\n### 动画图像命令行\n\n```js\nblender -b \"C:\\test.blend\" -o \"/out/frame_#####\" -s 2128 -e 3000\n```\n\n将会渲染**2128**到**3000**帧，并输出到 **工程目录/out/** 目录下\n\n### 注意事项\n\n命令行没有指定的参数，都要通过工程文件来设置，否则将按照工程文件的设置进行输入\n\n例如上述代码，如果没有设置起始与结束帧，将会按照工程文件里的设置进行输出\n\n![](https://res.arsrna.cn/blog-images/1976489/3044462353304258aa12fd2b4b2ec881.png)\n\n命令行更多参数请查阅 [命令行渲染 — Blender Manual](https://docs.blender.org/manual/zh-hans/dev/advanced/command_line/render.html)\n\n## 方案2：命令行渲染助手（简单操作）\n\n在https://www.arsrna.cn/app/render 下载完软件之后，解压打开\n\n按照提示运行即可\n\n![](https://res.arsrna.cn/blog-images/1976489/e13d1a95ec6de3fe556c856d4eead199.png)\n\n## 方案3：blender直接渲染（纯原生）\n\n设置好所有参数之后，直接在工具栏-渲染-渲染图像（或者渲染动画）\n\n![](https://res.arsrna.cn/blog-images/1976489/5dc5a6f2a641668ed58a5866fb6bb10b.png)\n\n# 总结\n\n## 优缺点\n\n腾讯云GPU服务器提供了强大的处理性能，云端的高可用性，以及提供了GRID图型驱动license，与本地相比，省去了申请GRID License的时间以及费用\n\n经过本人的测试，80G的内存渲染1整天，blender没有出现闪退的情况，即使出现紧急情况，也可以使用手机远程桌面修复问题，本地如果没有搭建好远程桌面环境，很难解决突发情况\n\n云端可以随时切换配置，如果配置不够可以随意升级，而本地无法弹性无缝切换，业务会中断\n\n到此，教程就结束了，更多可能需要大家一同探索\n\nPowered by Ar-Sr-Na\n","source":"_posts/1976489.md","raw":"---\ntitle: 【GPU服务器】blender高性能渲染\nauthor: Ar-Sr-Na\navatar: https://res.arsrna.cn/icon2.jpg\nauthorLink: www.arsrna.cn\nauthorAbout: 突破计算边界，构筑数字视界，www.arsrna.cn\nauthorDesc: 突破计算边界，构筑数字视界，www.arsrna.cn\ncategories: 技术\ncomments: true\nindex_img: https://res.arsrna.cn/blog-images/1976489/hdpic.png\ndate: 2022-4-10 16:44\ntags: GPU,云服务器渲染,blender\nkeywords: GPU,云服务器渲染\ndescription: https://res.arsrna.cn/blog-images/1976489/hdpic.png\n---\n# 快速开始\n\n本文介绍如何使用GPU服务器提交一个渲染作业，高效率完成blender的动画图片渲染，并导出渲染图片。具体操作步骤如下：\n\n## 步骤1：准备环境\n\n### 系统环境\n\nblender在Windows上运行较为稳定易用，所以建议使用腾讯云的Windows Server 2019，已经预装好驱动\n\n前往blender官网安装blender [Download — blender.org](https://www.blender.org/download/)\n\n如果您希望只渲染，我们开发了一个专门用来blender渲染的软件：ArSrNa Blender渲染助手：[https://www.arsrna.cn/app/render](https://www.arsrna.cn/app/render)\n\n## 步骤2：准备渲染文件以及参数\n\n1.将渲染的文件打包为 .blend 格式的文件\n\n![](https://res.arsrna.cn/blog-images/1976489/d6adf6fb0c699bc90d2b6c60ff0652e8.png)\n\n2.上传到对象存储，若无对象存储资源，请前往控制台开通 [概览 - 对象存储 - 控制台 (tencent.com)](https://console.cloud.tencent.com/cos)\n\n操作请参考 [对象存储 上传对象 - 控制台指南 - 文档中心 - 腾讯云 (tencent.com)](https://cloud.tencent.com/document/product/436/13321)\n\n注意，创建存储桶这一步操作记得将地域改为与CVM**同地区**，保证在内网传输文件，不仅省下了流量费，而且节省了服务器的上传带宽，哪怕没有开通公网IP都可以进行上下载\n\n## 步骤3 服务器选型\n\n参考 [GPU 云服务器 渲染型实例 - 实例类型 - 文档中心 - 腾讯云 (tencent.com)](https://cloud.tencent.com/document/product/560/63854) 选择合适的显卡类型，避免显卡初始化失败。\n\n![](https://res.arsrna.cn/blog-images/1976489/cacabf30596d3449d628b850d79d4689.png)\n\n本次测试使用的是GN7vw机型，搭载NVIDIA Tesla T4 GRID驱动\n\n![](https://res.arsrna.cn/blog-images/1976489/8c0cc48e243bdc133af54ea813a1334c.png)\n\n![](https://res.arsrna.cn/blog-images/1976489/1f8ac5493b4ab341a05b3b82d74d405e.png)\n\n如果是自己的镜像没有GRID图形驱动，将无法使用渲染OpenGL功能，请安装驱动：[GPU 云服务器 安装 NVIDIA GRID 驱动 - 操作指南 - 文档中心 - 腾讯云 (tencent.com)](https://cloud.tencent.com/document/product/560/30060)\n\n# 服务器内操作\n\n## 方案一：命令行渲染（稳定）\n\n直接通过对象存储链接，内网下载文件\n\n![](https://res.arsrna.cn/blog-images/1976489/127f2e0fc2804717ac1c72a68afa35d2.png)\n\n.按照之前操作，安装好Blender [Download — blender.org](https://www.blender.org/download/)\n\n建议使用zip安装，解压到指定位置\n\n![](https://res.arsrna.cn/blog-images/1976489/2c59c18dd2902e96df8651c7107f25d6.png)\n\n**配置环境变量**\n\n右击此电脑，属性，高级，环境变量\n\n![](https://res.arsrna.cn/blog-images/1976489/f2beefb176b9808b0a7a47f9f5e77ef0.png)\n\n### 重启服务器\n\n开机后运行Windows+R键，输入CMD\n\n![](https://res.arsrna.cn/blog-images/1976489/d165002418b4d2ae0b78c15f1b94dc9e.png)\n\n命令行输入\n\n```js\nblender\n```\n\n如果能够启动blender页面，证明已经成功\n\n![](https://res.arsrna.cn/blog-images/1976489/da4eb0a53e62d0b10d96e9958c0b26c0.png)\n\n### 渲染参数设定\n\n建议直接在blender里面设定好所有的参数，命令行只是确定渲染的帧数\n\n![](https://res.arsrna.cn/blog-images/1976489/125eb85da484fc39de87409f86db9987.png)\n\n建议将工程文件（blend）保存在好记的位置，这里以C:\\test.blend为例\n\n### **简单图像命令行**\n\n```js\nblender -b \"C:\\test.blend\" -o frame_##### -f 2128\n```\n\n运行上述代码后，将会执行\n\n![](https://res.arsrna.cn/blog-images/1976489/d4d93c79df44f167403a3bdbc13910d0.png)\n\n一段时间后，就可以在工程目录下看到输出的内容了\n\n上述代码的作用\n\n| 参数 | 内容                                                                    |\n| :--- | :---------------------------------------------------------------------- |\n| -b   | 静默运行（不运行GUI界面），后跟工程目录地址，如果带有空格的，要加双引号 |\n| -o   | 输出目录及文件名，#代表帧号，一个#代表一位数，不足的会补0               |\n| -f   | 渲染的帧号，要保证这个参数在最后面                                      |\n\n### 动画图像命令行\n\n```js\nblender -b \"C:\\test.blend\" -o \"/out/frame_#####\" -s 2128 -e 3000\n```\n\n将会渲染**2128**到**3000**帧，并输出到 **工程目录/out/** 目录下\n\n### 注意事项\n\n命令行没有指定的参数，都要通过工程文件来设置，否则将按照工程文件的设置进行输入\n\n例如上述代码，如果没有设置起始与结束帧，将会按照工程文件里的设置进行输出\n\n![](https://res.arsrna.cn/blog-images/1976489/3044462353304258aa12fd2b4b2ec881.png)\n\n命令行更多参数请查阅 [命令行渲染 — Blender Manual](https://docs.blender.org/manual/zh-hans/dev/advanced/command_line/render.html)\n\n## 方案2：命令行渲染助手（简单操作）\n\n在https://www.arsrna.cn/app/render 下载完软件之后，解压打开\n\n按照提示运行即可\n\n![](https://res.arsrna.cn/blog-images/1976489/e13d1a95ec6de3fe556c856d4eead199.png)\n\n## 方案3：blender直接渲染（纯原生）\n\n设置好所有参数之后，直接在工具栏-渲染-渲染图像（或者渲染动画）\n\n![](https://res.arsrna.cn/blog-images/1976489/5dc5a6f2a641668ed58a5866fb6bb10b.png)\n\n# 总结\n\n## 优缺点\n\n腾讯云GPU服务器提供了强大的处理性能，云端的高可用性，以及提供了GRID图型驱动license，与本地相比，省去了申请GRID License的时间以及费用\n\n经过本人的测试，80G的内存渲染1整天，blender没有出现闪退的情况，即使出现紧急情况，也可以使用手机远程桌面修复问题，本地如果没有搭建好远程桌面环境，很难解决突发情况\n\n云端可以随时切换配置，如果配置不够可以随意升级，而本地无法弹性无缝切换，业务会中断\n\n到此，教程就结束了，更多可能需要大家一同探索\n\nPowered by Ar-Sr-Na\n","slug":"1976489","published":1,"updated":"2023-01-17T08:55:38.567Z","layout":"post","photos":[],"link":"","_id":"clod0d6xr002zc0nd3ooy4evh","content":"<h1 id=\"快速开始\"><a href=\"#快速开始\" class=\"headerlink\" title=\"快速开始\"></a>快速开始</h1><p>本文介绍如何使用GPU服务器提交一个渲染作业，高效率完成blender的动画图片渲染，并导出渲染图片。具体操作步骤如下：</p>\n<h2 id=\"步骤1：准备环境\"><a href=\"#步骤1：准备环境\" class=\"headerlink\" title=\"步骤1：准备环境\"></a>步骤1：准备环境</h2><h3 id=\"系统环境\"><a href=\"#系统环境\" class=\"headerlink\" title=\"系统环境\"></a>系统环境</h3><p>blender在Windows上运行较为稳定易用，所以建议使用腾讯云的Windows Server 2019，已经预装好驱动</p>\n<p>前往blender官网安装blender <a href=\"https://www.blender.org/download/\">Download — blender.org</a></p>\n<p>如果您希望只渲染，我们开发了一个专门用来blender渲染的软件：ArSrNa Blender渲染助手：<a href=\"https://www.arsrna.cn/app/render\">https://www.arsrna.cn/app/render</a></p>\n<h2 id=\"步骤2：准备渲染文件以及参数\"><a href=\"#步骤2：准备渲染文件以及参数\" class=\"headerlink\" title=\"步骤2：准备渲染文件以及参数\"></a>步骤2：准备渲染文件以及参数</h2><p>1.将渲染的文件打包为 .blend 格式的文件</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/d6adf6fb0c699bc90d2b6c60ff0652e8.png\"></p>\n<p>2.上传到对象存储，若无对象存储资源，请前往控制台开通 <a href=\"https://console.cloud.tencent.com/cos\">概览 - 对象存储 - 控制台 (tencent.com)</a></p>\n<p>操作请参考 <a href=\"https://cloud.tencent.com/document/product/436/13321\">对象存储 上传对象 - 控制台指南 - 文档中心 - 腾讯云 (tencent.com)</a></p>\n<p>注意，创建存储桶这一步操作记得将地域改为与CVM<strong>同地区</strong>，保证在内网传输文件，不仅省下了流量费，而且节省了服务器的上传带宽，哪怕没有开通公网IP都可以进行上下载</p>\n<h2 id=\"步骤3-服务器选型\"><a href=\"#步骤3-服务器选型\" class=\"headerlink\" title=\"步骤3 服务器选型\"></a>步骤3 服务器选型</h2><p>参考 <a href=\"https://cloud.tencent.com/document/product/560/63854\">GPU 云服务器 渲染型实例 - 实例类型 - 文档中心 - 腾讯云 (tencent.com)</a> 选择合适的显卡类型，避免显卡初始化失败。</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/cacabf30596d3449d628b850d79d4689.png\"></p>\n<p>本次测试使用的是GN7vw机型，搭载NVIDIA Tesla T4 GRID驱动</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/8c0cc48e243bdc133af54ea813a1334c.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/1f8ac5493b4ab341a05b3b82d74d405e.png\"></p>\n<p>如果是自己的镜像没有GRID图形驱动，将无法使用渲染OpenGL功能，请安装驱动：<a href=\"https://cloud.tencent.com/document/product/560/30060\">GPU 云服务器 安装 NVIDIA GRID 驱动 - 操作指南 - 文档中心 - 腾讯云 (tencent.com)</a></p>\n<h1 id=\"服务器内操作\"><a href=\"#服务器内操作\" class=\"headerlink\" title=\"服务器内操作\"></a>服务器内操作</h1><h2 id=\"方案一：命令行渲染（稳定）\"><a href=\"#方案一：命令行渲染（稳定）\" class=\"headerlink\" title=\"方案一：命令行渲染（稳定）\"></a>方案一：命令行渲染（稳定）</h2><p>直接通过对象存储链接，内网下载文件</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/127f2e0fc2804717ac1c72a68afa35d2.png\"></p>\n<p>.按照之前操作，安装好Blender <a href=\"https://www.blender.org/download/\">Download — blender.org</a></p>\n<p>建议使用zip安装，解压到指定位置</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/2c59c18dd2902e96df8651c7107f25d6.png\"></p>\n<p><strong>配置环境变量</strong></p>\n<p>右击此电脑，属性，高级，环境变量</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/f2beefb176b9808b0a7a47f9f5e77ef0.png\"></p>\n<h3 id=\"重启服务器\"><a href=\"#重启服务器\" class=\"headerlink\" title=\"重启服务器\"></a>重启服务器</h3><p>开机后运行Windows+R键，输入CMD</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/d165002418b4d2ae0b78c15f1b94dc9e.png\"></p>\n<p>命令行输入</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">blender<br></code></pre></td></tr></table></figure>\n\n<p>如果能够启动blender页面，证明已经成功</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/da4eb0a53e62d0b10d96e9958c0b26c0.png\"></p>\n<h3 id=\"渲染参数设定\"><a href=\"#渲染参数设定\" class=\"headerlink\" title=\"渲染参数设定\"></a>渲染参数设定</h3><p>建议直接在blender里面设定好所有的参数，命令行只是确定渲染的帧数</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/125eb85da484fc39de87409f86db9987.png\"></p>\n<p>建议将工程文件（blend）保存在好记的位置，这里以C:\\test.blend为例</p>\n<h3 id=\"简单图像命令行\"><a href=\"#简单图像命令行\" class=\"headerlink\" title=\"简单图像命令行\"></a><strong>简单图像命令行</strong></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">blender -b <span class=\"hljs-string\">&quot;C:\\test.blend&quot;</span> -o frame_##### -f <span class=\"hljs-number\">2128</span><br></code></pre></td></tr></table></figure>\n\n<p>运行上述代码后，将会执行</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/d4d93c79df44f167403a3bdbc13910d0.png\"></p>\n<p>一段时间后，就可以在工程目录下看到输出的内容了</p>\n<p>上述代码的作用</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">-b</td>\n<td align=\"left\">静默运行（不运行GUI界面），后跟工程目录地址，如果带有空格的，要加双引号</td>\n</tr>\n<tr>\n<td align=\"left\">-o</td>\n<td align=\"left\">输出目录及文件名，#代表帧号，一个#代表一位数，不足的会补0</td>\n</tr>\n<tr>\n<td align=\"left\">-f</td>\n<td align=\"left\">渲染的帧号，要保证这个参数在最后面</td>\n</tr>\n</tbody></table>\n<h3 id=\"动画图像命令行\"><a href=\"#动画图像命令行\" class=\"headerlink\" title=\"动画图像命令行\"></a>动画图像命令行</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">blender -b <span class=\"hljs-string\">&quot;C:\\test.blend&quot;</span> -o <span class=\"hljs-string\">&quot;/out/frame_#####&quot;</span> -s <span class=\"hljs-number\">2128</span> -e <span class=\"hljs-number\">3000</span><br></code></pre></td></tr></table></figure>\n\n<p>将会渲染<strong>2128</strong>到<strong>3000</strong>帧，并输出到 <strong>工程目录&#x2F;out&#x2F;</strong> 目录下</p>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p>命令行没有指定的参数，都要通过工程文件来设置，否则将按照工程文件的设置进行输入</p>\n<p>例如上述代码，如果没有设置起始与结束帧，将会按照工程文件里的设置进行输出</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/3044462353304258aa12fd2b4b2ec881.png\"></p>\n<p>命令行更多参数请查阅 <a href=\"https://docs.blender.org/manual/zh-hans/dev/advanced/command_line/render.html\">命令行渲染 — Blender Manual</a></p>\n<h2 id=\"方案2：命令行渲染助手（简单操作）\"><a href=\"#方案2：命令行渲染助手（简单操作）\" class=\"headerlink\" title=\"方案2：命令行渲染助手（简单操作）\"></a>方案2：命令行渲染助手（简单操作）</h2><p>在<a href=\"https://www.arsrna.cn/app/render\">https://www.arsrna.cn/app/render</a> 下载完软件之后，解压打开</p>\n<p>按照提示运行即可</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/e13d1a95ec6de3fe556c856d4eead199.png\"></p>\n<h2 id=\"方案3：blender直接渲染（纯原生）\"><a href=\"#方案3：blender直接渲染（纯原生）\" class=\"headerlink\" title=\"方案3：blender直接渲染（纯原生）\"></a>方案3：blender直接渲染（纯原生）</h2><p>设置好所有参数之后，直接在工具栏-渲染-渲染图像（或者渲染动画）</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/5dc5a6f2a641668ed58a5866fb6bb10b.png\"></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><h2 id=\"优缺点\"><a href=\"#优缺点\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h2><p>腾讯云GPU服务器提供了强大的处理性能，云端的高可用性，以及提供了GRID图型驱动license，与本地相比，省去了申请GRID License的时间以及费用</p>\n<p>经过本人的测试，80G的内存渲染1整天，blender没有出现闪退的情况，即使出现紧急情况，也可以使用手机远程桌面修复问题，本地如果没有搭建好远程桌面环境，很难解决突发情况</p>\n<p>云端可以随时切换配置，如果配置不够可以随意升级，而本地无法弹性无缝切换，业务会中断</p>\n<p>到此，教程就结束了，更多可能需要大家一同探索</p>\n<p>Powered by Ar-Sr-Na</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"快速开始\"><a href=\"#快速开始\" class=\"headerlink\" title=\"快速开始\"></a>快速开始</h1><p>本文介绍如何使用GPU服务器提交一个渲染作业，高效率完成blender的动画图片渲染，并导出渲染图片。具体操作步骤如下：</p>\n<h2 id=\"步骤1：准备环境\"><a href=\"#步骤1：准备环境\" class=\"headerlink\" title=\"步骤1：准备环境\"></a>步骤1：准备环境</h2><h3 id=\"系统环境\"><a href=\"#系统环境\" class=\"headerlink\" title=\"系统环境\"></a>系统环境</h3><p>blender在Windows上运行较为稳定易用，所以建议使用腾讯云的Windows Server 2019，已经预装好驱动</p>\n<p>前往blender官网安装blender <a href=\"https://www.blender.org/download/\">Download — blender.org</a></p>\n<p>如果您希望只渲染，我们开发了一个专门用来blender渲染的软件：ArSrNa Blender渲染助手：<a href=\"https://www.arsrna.cn/app/render\">https://www.arsrna.cn/app/render</a></p>\n<h2 id=\"步骤2：准备渲染文件以及参数\"><a href=\"#步骤2：准备渲染文件以及参数\" class=\"headerlink\" title=\"步骤2：准备渲染文件以及参数\"></a>步骤2：准备渲染文件以及参数</h2><p>1.将渲染的文件打包为 .blend 格式的文件</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/d6adf6fb0c699bc90d2b6c60ff0652e8.png\"></p>\n<p>2.上传到对象存储，若无对象存储资源，请前往控制台开通 <a href=\"https://console.cloud.tencent.com/cos\">概览 - 对象存储 - 控制台 (tencent.com)</a></p>\n<p>操作请参考 <a href=\"https://cloud.tencent.com/document/product/436/13321\">对象存储 上传对象 - 控制台指南 - 文档中心 - 腾讯云 (tencent.com)</a></p>\n<p>注意，创建存储桶这一步操作记得将地域改为与CVM<strong>同地区</strong>，保证在内网传输文件，不仅省下了流量费，而且节省了服务器的上传带宽，哪怕没有开通公网IP都可以进行上下载</p>\n<h2 id=\"步骤3-服务器选型\"><a href=\"#步骤3-服务器选型\" class=\"headerlink\" title=\"步骤3 服务器选型\"></a>步骤3 服务器选型</h2><p>参考 <a href=\"https://cloud.tencent.com/document/product/560/63854\">GPU 云服务器 渲染型实例 - 实例类型 - 文档中心 - 腾讯云 (tencent.com)</a> 选择合适的显卡类型，避免显卡初始化失败。</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/cacabf30596d3449d628b850d79d4689.png\"></p>\n<p>本次测试使用的是GN7vw机型，搭载NVIDIA Tesla T4 GRID驱动</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/8c0cc48e243bdc133af54ea813a1334c.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/1f8ac5493b4ab341a05b3b82d74d405e.png\"></p>\n<p>如果是自己的镜像没有GRID图形驱动，将无法使用渲染OpenGL功能，请安装驱动：<a href=\"https://cloud.tencent.com/document/product/560/30060\">GPU 云服务器 安装 NVIDIA GRID 驱动 - 操作指南 - 文档中心 - 腾讯云 (tencent.com)</a></p>\n<h1 id=\"服务器内操作\"><a href=\"#服务器内操作\" class=\"headerlink\" title=\"服务器内操作\"></a>服务器内操作</h1><h2 id=\"方案一：命令行渲染（稳定）\"><a href=\"#方案一：命令行渲染（稳定）\" class=\"headerlink\" title=\"方案一：命令行渲染（稳定）\"></a>方案一：命令行渲染（稳定）</h2><p>直接通过对象存储链接，内网下载文件</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/127f2e0fc2804717ac1c72a68afa35d2.png\"></p>\n<p>.按照之前操作，安装好Blender <a href=\"https://www.blender.org/download/\">Download — blender.org</a></p>\n<p>建议使用zip安装，解压到指定位置</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/2c59c18dd2902e96df8651c7107f25d6.png\"></p>\n<p><strong>配置环境变量</strong></p>\n<p>右击此电脑，属性，高级，环境变量</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/f2beefb176b9808b0a7a47f9f5e77ef0.png\"></p>\n<h3 id=\"重启服务器\"><a href=\"#重启服务器\" class=\"headerlink\" title=\"重启服务器\"></a>重启服务器</h3><p>开机后运行Windows+R键，输入CMD</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/d165002418b4d2ae0b78c15f1b94dc9e.png\"></p>\n<p>命令行输入</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">blender<br></code></pre></td></tr></table></figure>\n\n<p>如果能够启动blender页面，证明已经成功</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/da4eb0a53e62d0b10d96e9958c0b26c0.png\"></p>\n<h3 id=\"渲染参数设定\"><a href=\"#渲染参数设定\" class=\"headerlink\" title=\"渲染参数设定\"></a>渲染参数设定</h3><p>建议直接在blender里面设定好所有的参数，命令行只是确定渲染的帧数</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/125eb85da484fc39de87409f86db9987.png\"></p>\n<p>建议将工程文件（blend）保存在好记的位置，这里以C:\\test.blend为例</p>\n<h3 id=\"简单图像命令行\"><a href=\"#简单图像命令行\" class=\"headerlink\" title=\"简单图像命令行\"></a><strong>简单图像命令行</strong></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">blender -b <span class=\"hljs-string\">&quot;C:\\test.blend&quot;</span> -o frame_##### -f <span class=\"hljs-number\">2128</span><br></code></pre></td></tr></table></figure>\n\n<p>运行上述代码后，将会执行</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/d4d93c79df44f167403a3bdbc13910d0.png\"></p>\n<p>一段时间后，就可以在工程目录下看到输出的内容了</p>\n<p>上述代码的作用</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">-b</td>\n<td align=\"left\">静默运行（不运行GUI界面），后跟工程目录地址，如果带有空格的，要加双引号</td>\n</tr>\n<tr>\n<td align=\"left\">-o</td>\n<td align=\"left\">输出目录及文件名，#代表帧号，一个#代表一位数，不足的会补0</td>\n</tr>\n<tr>\n<td align=\"left\">-f</td>\n<td align=\"left\">渲染的帧号，要保证这个参数在最后面</td>\n</tr>\n</tbody></table>\n<h3 id=\"动画图像命令行\"><a href=\"#动画图像命令行\" class=\"headerlink\" title=\"动画图像命令行\"></a>动画图像命令行</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">blender -b <span class=\"hljs-string\">&quot;C:\\test.blend&quot;</span> -o <span class=\"hljs-string\">&quot;/out/frame_#####&quot;</span> -s <span class=\"hljs-number\">2128</span> -e <span class=\"hljs-number\">3000</span><br></code></pre></td></tr></table></figure>\n\n<p>将会渲染<strong>2128</strong>到<strong>3000</strong>帧，并输出到 <strong>工程目录&#x2F;out&#x2F;</strong> 目录下</p>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p>命令行没有指定的参数，都要通过工程文件来设置，否则将按照工程文件的设置进行输入</p>\n<p>例如上述代码，如果没有设置起始与结束帧，将会按照工程文件里的设置进行输出</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/3044462353304258aa12fd2b4b2ec881.png\"></p>\n<p>命令行更多参数请查阅 <a href=\"https://docs.blender.org/manual/zh-hans/dev/advanced/command_line/render.html\">命令行渲染 — Blender Manual</a></p>\n<h2 id=\"方案2：命令行渲染助手（简单操作）\"><a href=\"#方案2：命令行渲染助手（简单操作）\" class=\"headerlink\" title=\"方案2：命令行渲染助手（简单操作）\"></a>方案2：命令行渲染助手（简单操作）</h2><p>在<a href=\"https://www.arsrna.cn/app/render\">https://www.arsrna.cn/app/render</a> 下载完软件之后，解压打开</p>\n<p>按照提示运行即可</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/e13d1a95ec6de3fe556c856d4eead199.png\"></p>\n<h2 id=\"方案3：blender直接渲染（纯原生）\"><a href=\"#方案3：blender直接渲染（纯原生）\" class=\"headerlink\" title=\"方案3：blender直接渲染（纯原生）\"></a>方案3：blender直接渲染（纯原生）</h2><p>设置好所有参数之后，直接在工具栏-渲染-渲染图像（或者渲染动画）</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1976489/5dc5a6f2a641668ed58a5866fb6bb10b.png\"></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><h2 id=\"优缺点\"><a href=\"#优缺点\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h2><p>腾讯云GPU服务器提供了强大的处理性能，云端的高可用性，以及提供了GRID图型驱动license，与本地相比，省去了申请GRID License的时间以及费用</p>\n<p>经过本人的测试，80G的内存渲染1整天，blender没有出现闪退的情况，即使出现紧急情况，也可以使用手机远程桌面修复问题，本地如果没有搭建好远程桌面环境，很难解决突发情况</p>\n<p>云端可以随时切换配置，如果配置不够可以随意升级，而本地无法弹性无缝切换，业务会中断</p>\n<p>到此，教程就结束了，更多可能需要大家一同探索</p>\n<p>Powered by Ar-Sr-Na</p>\n"},{"title":"【blender X MMD】摄像机景深对焦篇——百度都不一定找得到的问题","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"www.arsrna.cn","authorAbout":"突破计算边界，构筑数字视界，www.arsrna.cn","authorDesc":"突破计算边界，构筑数字视界，www.arsrna.cn","comments":1,"date":"2022-04-04T07:20:00.000Z","keywords":"摄影,渲染,跟踪,对焦,3d,blender,焦距","description":"摄像机自动对焦不准确，怎么解决？","index_img":"https://res.arsrna.cn/blogs/blender%E6%91%84%E5%83%8F%E6%9C%BA%E6%99%AF%E6%B7%B1%E5%AF%B9%E7%84%A6/0001.JPEG_copwh","_content":"# 前言\n\n2022年了，blender的用户其实也不少，我就是其中之一，正因为它的Eevee渲染器和GPL开源免费的特性，让我极快离开了C4D来到了Blender，因为是个开源免费软件，所以问题自然很多，闪退，保存未响应，各种报错，各种乱码，都是很正常的，而今天我遇到的这个问题，在搜索了无数页必应，都找不到需要的答案，摄像机自动对焦不准确\n\n![](https://res.arsrna.cn/blog-images/1972305/c2e89079bbe920318974d4d226a01ada.png)\n\n![](https://res.arsrna.cn/blog-images/1972305/a198bf59efe98baba4c35702ca71ddc4.png)\n\n![](https://res.arsrna.cn/blog-images/1972305/362012f6352a7cb446ef1c60b9cb58c5.png)\n\n对焦明明选择了脸，但是脸还是一片糊\n\n![](https://res.arsrna.cn/blog-images/1972305/c9fc17423d1beec1c2402a8a37440540.png)\n\n![](https://res.arsrna.cn/blog-images/1972305/e96dfd7849e95a6dc7e019789920c2db.png)\n\n仔细一看，摄像机焦点和物体位置偏离了非常远的距离\n\n![](https://res.arsrna.cn/blog-images/1972305/7ace8c4124c174b4079f60870638988c.png)\n\n_添加描述_\n\n究其原因，可能是物体中心点的问题，也有可能是mmd tools插件生成的动画不会改变物体位移的原因，所以自动跟踪显然是不行的\n\n# 思路\n\n## 计算距离（失败）\n\n而我偶然间发现一种思路，可以使用blender变量，测量摄像机到物体的距离，然后设置摄像机对焦距离，这样估计就成了\n\n可这个方案，就是blender实现物体对焦的方案，所以，失败了\n\n## 利用空物体辅助对焦（成功）\n\n既然物体本身存在顶点问题导致对不上焦，那么我们就使用一个新物体，顶点在中心的物体，让摄像机跟踪，焦点就是顶点，然后这个空物体跟着我们要运动的模型一起运动，是不是就行了？\n\n实际上是——成功了\n\n# 教程\n\n## 1.新建空物体\n\n建议使用与对焦物体相似的形状，我使用的是球体（头部）\n\n![](https://res.arsrna.cn/blog-images/1972305/7f66e7c6cc1dc51acc05e9499efbdb21.png)\n\n## 2.设置摄像机对焦\n\n摄像机开启景深，将**聚焦到物体**这一项选择到刚刚新建的空物体上\n\n![](https://res.arsrna.cn/blog-images/1972305/6620704da6dc7041c745762e9894152f.png)\n\n_其他设置按照之前工程来进行，比如光圈因项目而异，是调整景深深浅度的数值_\n\n这时候移动空物体，焦点就会随之变化\n\n![](https://res.arsrna.cn/blog-images/1972305/a8c6e0871146b7162b3637acb1fde993.png)\n\n![](https://res.arsrna.cn/blog-images/1972305/4e58e77e2cbca2d75669afd7b06d9b4b.png)\n\n但是现在只能手动移动，我们要做的是跟踪对焦物体\n\n## 3.跟踪对焦物体\n\n选择空物体\n\n![](https://res.arsrna.cn/blog-images/1972305/43022deab3b470c4456f5b2c75f3437c.png)\n\n在**物体属性-关系**处，将**父级选择**_**对焦的物体的骨骼**_，父级类型选择**骨骼，**父级骨骼选择控制跟踪对象的骨骼\n\n![](https://res.arsrna.cn/blog-images/1972305/9b1d107d388c53ac3f02551556133317.png)\n\n如果没有骨骼，父级就选对焦物体，类型选择顶点\n\n![](https://res.arsrna.cn/blog-images/1972305/5350fe1c3c4e82ca1d875287b608ee99.png)\n\n然后将空物体移动到对焦物体上，如果预览页面是合焦的，就成功了\n\n这时候物体运动将会被跟踪\n\n![](https://res.arsrna.cn/blog-images/1972305/56350b8e9eefe769bcb0223ba0041e3d.png)\n\n![](https://res.arsrna.cn/blog-images/1972305/297c2f485f4aabc11fd75e8916fd81f5.png)\n\n现在不管怎么乱飞，都是合焦的了，哪怕是一只拖鞋也可以完美对焦刀锐奶化\n\n到此，教程就结束了，感谢支持\n\nPowered by Ar-Sr-Na [www.arsrna.cn](https://www.arsrna.cn)\n","source":"_posts/1972305.md","raw":"---\ntitle: 【blender X MMD】摄像机景深对焦篇——百度都不一定找得到的问题\nauthor: Ar-Sr-Na\navatar: https://res.arsrna.cn/icon2.jpg\nauthorLink: www.arsrna.cn\nauthorAbout: 突破计算边界，构筑数字视界，www.arsrna.cn\nauthorDesc: 突破计算边界，构筑数字视界，www.arsrna.cn\ncategories: 技术\ncomments: true\ndate: 2022-4-4 15:20\ntags: 摄影,渲染,跟踪,对焦,3d,blender,焦距\nkeywords: 摄影,渲染,跟踪,对焦,3d,blender,焦距\ndescription: 摄像机自动对焦不准确，怎么解决？\nindex_img: https://res.arsrna.cn/blogs/blender%E6%91%84%E5%83%8F%E6%9C%BA%E6%99%AF%E6%B7%B1%E5%AF%B9%E7%84%A6/0001.JPEG_copwh\n---\n# 前言\n\n2022年了，blender的用户其实也不少，我就是其中之一，正因为它的Eevee渲染器和GPL开源免费的特性，让我极快离开了C4D来到了Blender，因为是个开源免费软件，所以问题自然很多，闪退，保存未响应，各种报错，各种乱码，都是很正常的，而今天我遇到的这个问题，在搜索了无数页必应，都找不到需要的答案，摄像机自动对焦不准确\n\n![](https://res.arsrna.cn/blog-images/1972305/c2e89079bbe920318974d4d226a01ada.png)\n\n![](https://res.arsrna.cn/blog-images/1972305/a198bf59efe98baba4c35702ca71ddc4.png)\n\n![](https://res.arsrna.cn/blog-images/1972305/362012f6352a7cb446ef1c60b9cb58c5.png)\n\n对焦明明选择了脸，但是脸还是一片糊\n\n![](https://res.arsrna.cn/blog-images/1972305/c9fc17423d1beec1c2402a8a37440540.png)\n\n![](https://res.arsrna.cn/blog-images/1972305/e96dfd7849e95a6dc7e019789920c2db.png)\n\n仔细一看，摄像机焦点和物体位置偏离了非常远的距离\n\n![](https://res.arsrna.cn/blog-images/1972305/7ace8c4124c174b4079f60870638988c.png)\n\n_添加描述_\n\n究其原因，可能是物体中心点的问题，也有可能是mmd tools插件生成的动画不会改变物体位移的原因，所以自动跟踪显然是不行的\n\n# 思路\n\n## 计算距离（失败）\n\n而我偶然间发现一种思路，可以使用blender变量，测量摄像机到物体的距离，然后设置摄像机对焦距离，这样估计就成了\n\n可这个方案，就是blender实现物体对焦的方案，所以，失败了\n\n## 利用空物体辅助对焦（成功）\n\n既然物体本身存在顶点问题导致对不上焦，那么我们就使用一个新物体，顶点在中心的物体，让摄像机跟踪，焦点就是顶点，然后这个空物体跟着我们要运动的模型一起运动，是不是就行了？\n\n实际上是——成功了\n\n# 教程\n\n## 1.新建空物体\n\n建议使用与对焦物体相似的形状，我使用的是球体（头部）\n\n![](https://res.arsrna.cn/blog-images/1972305/7f66e7c6cc1dc51acc05e9499efbdb21.png)\n\n## 2.设置摄像机对焦\n\n摄像机开启景深，将**聚焦到物体**这一项选择到刚刚新建的空物体上\n\n![](https://res.arsrna.cn/blog-images/1972305/6620704da6dc7041c745762e9894152f.png)\n\n_其他设置按照之前工程来进行，比如光圈因项目而异，是调整景深深浅度的数值_\n\n这时候移动空物体，焦点就会随之变化\n\n![](https://res.arsrna.cn/blog-images/1972305/a8c6e0871146b7162b3637acb1fde993.png)\n\n![](https://res.arsrna.cn/blog-images/1972305/4e58e77e2cbca2d75669afd7b06d9b4b.png)\n\n但是现在只能手动移动，我们要做的是跟踪对焦物体\n\n## 3.跟踪对焦物体\n\n选择空物体\n\n![](https://res.arsrna.cn/blog-images/1972305/43022deab3b470c4456f5b2c75f3437c.png)\n\n在**物体属性-关系**处，将**父级选择**_**对焦的物体的骨骼**_，父级类型选择**骨骼，**父级骨骼选择控制跟踪对象的骨骼\n\n![](https://res.arsrna.cn/blog-images/1972305/9b1d107d388c53ac3f02551556133317.png)\n\n如果没有骨骼，父级就选对焦物体，类型选择顶点\n\n![](https://res.arsrna.cn/blog-images/1972305/5350fe1c3c4e82ca1d875287b608ee99.png)\n\n然后将空物体移动到对焦物体上，如果预览页面是合焦的，就成功了\n\n这时候物体运动将会被跟踪\n\n![](https://res.arsrna.cn/blog-images/1972305/56350b8e9eefe769bcb0223ba0041e3d.png)\n\n![](https://res.arsrna.cn/blog-images/1972305/297c2f485f4aabc11fd75e8916fd81f5.png)\n\n现在不管怎么乱飞，都是合焦的了，哪怕是一只拖鞋也可以完美对焦刀锐奶化\n\n到此，教程就结束了，感谢支持\n\nPowered by Ar-Sr-Na [www.arsrna.cn](https://www.arsrna.cn)\n","slug":"1972305","published":1,"updated":"2023-01-17T08:55:38.567Z","layout":"post","photos":[],"link":"","_id":"clod0d6xr0030c0ndbn0shjbl","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>2022年了，blender的用户其实也不少，我就是其中之一，正因为它的Eevee渲染器和GPL开源免费的特性，让我极快离开了C4D来到了Blender，因为是个开源免费软件，所以问题自然很多，闪退，保存未响应，各种报错，各种乱码，都是很正常的，而今天我遇到的这个问题，在搜索了无数页必应，都找不到需要的答案，摄像机自动对焦不准确</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/c2e89079bbe920318974d4d226a01ada.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/a198bf59efe98baba4c35702ca71ddc4.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/362012f6352a7cb446ef1c60b9cb58c5.png\"></p>\n<p>对焦明明选择了脸，但是脸还是一片糊</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/c9fc17423d1beec1c2402a8a37440540.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/e96dfd7849e95a6dc7e019789920c2db.png\"></p>\n<p>仔细一看，摄像机焦点和物体位置偏离了非常远的距离</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/7ace8c4124c174b4079f60870638988c.png\"></p>\n<p><em>添加描述</em></p>\n<p>究其原因，可能是物体中心点的问题，也有可能是mmd tools插件生成的动画不会改变物体位移的原因，所以自动跟踪显然是不行的</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><h2 id=\"计算距离（失败）\"><a href=\"#计算距离（失败）\" class=\"headerlink\" title=\"计算距离（失败）\"></a>计算距离（失败）</h2><p>而我偶然间发现一种思路，可以使用blender变量，测量摄像机到物体的距离，然后设置摄像机对焦距离，这样估计就成了</p>\n<p>可这个方案，就是blender实现物体对焦的方案，所以，失败了</p>\n<h2 id=\"利用空物体辅助对焦（成功）\"><a href=\"#利用空物体辅助对焦（成功）\" class=\"headerlink\" title=\"利用空物体辅助对焦（成功）\"></a>利用空物体辅助对焦（成功）</h2><p>既然物体本身存在顶点问题导致对不上焦，那么我们就使用一个新物体，顶点在中心的物体，让摄像机跟踪，焦点就是顶点，然后这个空物体跟着我们要运动的模型一起运动，是不是就行了？</p>\n<p>实际上是——成功了</p>\n<h1 id=\"教程\"><a href=\"#教程\" class=\"headerlink\" title=\"教程\"></a>教程</h1><h2 id=\"1-新建空物体\"><a href=\"#1-新建空物体\" class=\"headerlink\" title=\"1.新建空物体\"></a>1.新建空物体</h2><p>建议使用与对焦物体相似的形状，我使用的是球体（头部）</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/7f66e7c6cc1dc51acc05e9499efbdb21.png\"></p>\n<h2 id=\"2-设置摄像机对焦\"><a href=\"#2-设置摄像机对焦\" class=\"headerlink\" title=\"2.设置摄像机对焦\"></a>2.设置摄像机对焦</h2><p>摄像机开启景深，将<strong>聚焦到物体</strong>这一项选择到刚刚新建的空物体上</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/6620704da6dc7041c745762e9894152f.png\"></p>\n<p><em>其他设置按照之前工程来进行，比如光圈因项目而异，是调整景深深浅度的数值</em></p>\n<p>这时候移动空物体，焦点就会随之变化</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/a8c6e0871146b7162b3637acb1fde993.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/4e58e77e2cbca2d75669afd7b06d9b4b.png\"></p>\n<p>但是现在只能手动移动，我们要做的是跟踪对焦物体</p>\n<h2 id=\"3-跟踪对焦物体\"><a href=\"#3-跟踪对焦物体\" class=\"headerlink\" title=\"3.跟踪对焦物体\"></a>3.跟踪对焦物体</h2><p>选择空物体</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/43022deab3b470c4456f5b2c75f3437c.png\"></p>\n<p>在<strong>物体属性-关系</strong>处，将<strong>父级选择</strong>_<strong>对焦的物体的骨骼</strong>_，父级类型选择<strong>骨骼，</strong>父级骨骼选择控制跟踪对象的骨骼</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/9b1d107d388c53ac3f02551556133317.png\"></p>\n<p>如果没有骨骼，父级就选对焦物体，类型选择顶点</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/5350fe1c3c4e82ca1d875287b608ee99.png\"></p>\n<p>然后将空物体移动到对焦物体上，如果预览页面是合焦的，就成功了</p>\n<p>这时候物体运动将会被跟踪</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/56350b8e9eefe769bcb0223ba0041e3d.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/297c2f485f4aabc11fd75e8916fd81f5.png\"></p>\n<p>现在不管怎么乱飞，都是合焦的了，哪怕是一只拖鞋也可以完美对焦刀锐奶化</p>\n<p>到此，教程就结束了，感谢支持</p>\n<p>Powered by Ar-Sr-Na <a href=\"https://www.arsrna.cn/\">www.arsrna.cn</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>2022年了，blender的用户其实也不少，我就是其中之一，正因为它的Eevee渲染器和GPL开源免费的特性，让我极快离开了C4D来到了Blender，因为是个开源免费软件，所以问题自然很多，闪退，保存未响应，各种报错，各种乱码，都是很正常的，而今天我遇到的这个问题，在搜索了无数页必应，都找不到需要的答案，摄像机自动对焦不准确</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/c2e89079bbe920318974d4d226a01ada.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/a198bf59efe98baba4c35702ca71ddc4.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/362012f6352a7cb446ef1c60b9cb58c5.png\"></p>\n<p>对焦明明选择了脸，但是脸还是一片糊</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/c9fc17423d1beec1c2402a8a37440540.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/e96dfd7849e95a6dc7e019789920c2db.png\"></p>\n<p>仔细一看，摄像机焦点和物体位置偏离了非常远的距离</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/7ace8c4124c174b4079f60870638988c.png\"></p>\n<p><em>添加描述</em></p>\n<p>究其原因，可能是物体中心点的问题，也有可能是mmd tools插件生成的动画不会改变物体位移的原因，所以自动跟踪显然是不行的</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><h2 id=\"计算距离（失败）\"><a href=\"#计算距离（失败）\" class=\"headerlink\" title=\"计算距离（失败）\"></a>计算距离（失败）</h2><p>而我偶然间发现一种思路，可以使用blender变量，测量摄像机到物体的距离，然后设置摄像机对焦距离，这样估计就成了</p>\n<p>可这个方案，就是blender实现物体对焦的方案，所以，失败了</p>\n<h2 id=\"利用空物体辅助对焦（成功）\"><a href=\"#利用空物体辅助对焦（成功）\" class=\"headerlink\" title=\"利用空物体辅助对焦（成功）\"></a>利用空物体辅助对焦（成功）</h2><p>既然物体本身存在顶点问题导致对不上焦，那么我们就使用一个新物体，顶点在中心的物体，让摄像机跟踪，焦点就是顶点，然后这个空物体跟着我们要运动的模型一起运动，是不是就行了？</p>\n<p>实际上是——成功了</p>\n<h1 id=\"教程\"><a href=\"#教程\" class=\"headerlink\" title=\"教程\"></a>教程</h1><h2 id=\"1-新建空物体\"><a href=\"#1-新建空物体\" class=\"headerlink\" title=\"1.新建空物体\"></a>1.新建空物体</h2><p>建议使用与对焦物体相似的形状，我使用的是球体（头部）</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/7f66e7c6cc1dc51acc05e9499efbdb21.png\"></p>\n<h2 id=\"2-设置摄像机对焦\"><a href=\"#2-设置摄像机对焦\" class=\"headerlink\" title=\"2.设置摄像机对焦\"></a>2.设置摄像机对焦</h2><p>摄像机开启景深，将<strong>聚焦到物体</strong>这一项选择到刚刚新建的空物体上</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/6620704da6dc7041c745762e9894152f.png\"></p>\n<p><em>其他设置按照之前工程来进行，比如光圈因项目而异，是调整景深深浅度的数值</em></p>\n<p>这时候移动空物体，焦点就会随之变化</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/a8c6e0871146b7162b3637acb1fde993.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/4e58e77e2cbca2d75669afd7b06d9b4b.png\"></p>\n<p>但是现在只能手动移动，我们要做的是跟踪对焦物体</p>\n<h2 id=\"3-跟踪对焦物体\"><a href=\"#3-跟踪对焦物体\" class=\"headerlink\" title=\"3.跟踪对焦物体\"></a>3.跟踪对焦物体</h2><p>选择空物体</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/43022deab3b470c4456f5b2c75f3437c.png\"></p>\n<p>在<strong>物体属性-关系</strong>处，将<strong>父级选择</strong>_<strong>对焦的物体的骨骼</strong>_，父级类型选择<strong>骨骼，</strong>父级骨骼选择控制跟踪对象的骨骼</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/9b1d107d388c53ac3f02551556133317.png\"></p>\n<p>如果没有骨骼，父级就选对焦物体，类型选择顶点</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/5350fe1c3c4e82ca1d875287b608ee99.png\"></p>\n<p>然后将空物体移动到对焦物体上，如果预览页面是合焦的，就成功了</p>\n<p>这时候物体运动将会被跟踪</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/56350b8e9eefe769bcb0223ba0041e3d.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/1972305/297c2f485f4aabc11fd75e8916fd81f5.png\"></p>\n<p>现在不管怎么乱飞，都是合焦的了，哪怕是一只拖鞋也可以完美对焦刀锐奶化</p>\n<p>到此，教程就结束了，感谢支持</p>\n<p>Powered by Ar-Sr-Na <a href=\"https://www.arsrna.cn/\">www.arsrna.cn</a></p>\n"},{"title":"【DNS 解析】使用DNSPOD实现动态公网解析（DDNS）","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"www.arsrna.cn","comments":1,"index_img":"https://res.arsrna.cn/blog-images/2008264/77372918da18e5a76c5593103b068b33.png","authorAbout":"突破计算边界，构筑数字视界，www.arsrna.cn","authorDesc":"突破计算边界，构筑数字视界，www.arsrna.cn","description":"家里或者公司分配了一个公网IP，但它每过1周就变了，如果我要用它远程桌面，意味着一周就要改一次IP，记一个新的IP，非常复杂，该如何用一个固定的地址来替代这些变化的IP并且实现定时自动替换呢？","date":"2022-06-08T03:23:00.000Z","_content":"注：本文用到的所有代码已开源：https://arsrna.coding.net/public/website-mainsite/ArSrNaDDNS/git/\n\n安装请参考上页面的README.md\n\n# 前言\n\n背景\n\n家里或者公司分配了一个公网IP，但它每过1周就变了，如果我要用它远程桌面，意味着一周就要改一次IP，记一个新的IP，非常复杂，该如何用一个固定的地址来替代这些变化的IP并且实现定时自动替换呢？\n\n亦或者我有一台腾讯云按量付费的CVM，如果我选择关机不计费时，再次开机IP就变了。虽然可以通过购买EIP来固定这个地址，但是成本稍微高了。替代的办法就是动态解析，用一个别名代替变换的IP\n\n而如上，别名就是域名，用一个固定的域名，解析到这些IP，即可实现DDNS\n\n## 原理\n\n基本流程就是获取公网IP，然后修改某个域名的解析为获得的IP\n\n流程图如下\n\n![](https://res.arsrna.cn/blog-images/2008264/3f682615db76276d3cbf857cf437cae2.png)\n\n# 教程\n\n## 准备\n\n### 环境\n\n需要下载Nodejs：[Node.js 中文网 (nodejs.cn)](http://nodejs.cn/)\n\n在命令行运行\n\n```js\nnode-v\n```\n\n以及\n\n```js\nnpm -v\n```\n\n如果都能正常输出即可\n\n### 新建项目\n\n新建一个文件夹，名字任意\n\n然后新建一个js，名称任意，但最好纯英文，例如 index.js\n\n## 获取公网IP\n\n在这里，我们使用npm模块：nodejs-publicip\n\n首先在项目目录执行\n\n```shell\nnpm i --save nodejs-publicip\n```\n\n在index.js中加入：\n\n```js\nconst PublicIp = require('nodejs-publicip');\n```\n\n根据这个npm包的说明，知道获取公网的方法为：\n\n```js\nnew PublicIp()\n    .queryPublicIPAddresses()\n    .then((result) => {\n        console.log(JSON.stringify(result));\n        //成功回调事件\n    })\n    .catch((err) => {\n        console.log(err);\n    });\n```\n\n如果获取成功了，将会输出：\n\n```js\n{\"ipv4\":\"124.000.000.000\",\"ipv6\":\"0000:0000:0000:0000:0000\"}\n```\n\n## DNSPodSDK\n\n### 流程\n\n根据官网API文档，可以知道，设置解析必须要这几个参数\n\n| 参数名称   | 必选 | 类型    | 描述                                                    |\n| :--------- | :--- | :------ | :------------------------------------------------------ |\n| Domain     | 是   | String  | 域名，这里举例：arirs.cn                                |\n| RecordType | 是   | String  | 记录类型，A为IPv4，AAAA为IPv6                           |\n| RecordLine | 是   | String  | 记录线路，使用“默认”                                  |\n| Value      | 是   | String  | 记录值，这里是公网IP值，为上面的函数返回值 getIP().ipv4 |\n| RecordId   | 是   | Integer | 记录 ID，需要通过DescribeRecordList获取                 |\n| SubDomain  | 否   | String  | 主机记录，子域名，比如ddns1，就是ddns1.arirs.cn         |\n| TTL        | 否   | Integer | TTL，免费版默认600s                                     |\n\n在上表中，可以直接得到的信息除了RecordId，其它都可以直接从控制台得到\n\nRecordId需要另一个API获得：DescribeRecordList\n\n这个API只需要传入：Domain，Subdomain 即可获得\n\n那么，我们的流程将会是如此\n\n![](https://res.arsrna.cn/blog-images/2008264/77372918da18e5a76c5593103b068b33.png)\n\n### 获取RecordId\n\n首先需要在域名解析控制台处新建一个域名解析记录，可参考\n\n[DNS 解析 DNSPod 快速添加域名解析-快速入门-文档中心-腾讯云-腾讯云 (tencent.com)](https://cloud.tencent.com/document/product/302/3446)\n\n添加的记录先用一个 0.0.0.0占用，比如\n\n![](https://res.arsrna.cn/blog-images/2008264/a635f4426b914cef8045cb8dac6d1804.png)\n\n在API Explorer DNSPod修改解析方法下 [API Explorer - 云 API - 控制台 (tencent.com)](https://console.cloud.tencent.com/api/explorer?Product=dnspod&Version=2021-03-23&Action=DescribeRecordList&SignVersion=)\n\n填写以下参数\n\n| 参数      | 说明                                |\n| :-------- | :---------------------------------- |\n| Domain    | 域名，比如 arirs.cn                 |\n| Subdomain | 子域名解析记录，上图表示的是  ddns1 |\n|           |                                     |\n|           |                                     |\n|           |                                     |\n\n![](https://res.arsrna.cn/blog-images/2008264/bb173353313f78ae0795ea695870a14c.png)\n\n完成后在 在线调用 处点击 发送请求\n\n即可获得RecordId\n\n![](https://res.arsrna.cn/blog-images/2008264/1220b4f789b6325d6a117f9c6360f030.png)\n\n### 使用SDK修改解析\n\n在项目目录里面打开终端，键入\n\n```shell\nnpm i --save tencentcloud-sdk-nodejs-dnspod\n```\n\n安装腾讯云的Nodejs SDK\n\n在API Explorer的 修改记录（DNSPOD） [点此进入 ](https://console.cloud.tencent.com/api/explorer?Product=dnspod&Version=2021-03-23&Action=ModifyRecord&SignVersion=)里面，按照上文的参数，输入进去\n\n![](https://res.arsrna.cn/blog-images/2008264/0869e35e4b71cff84649b8d05c36005c.png)\n\n切换到代码生成这一栏，选择Nodejs\n\n![](https://res.arsrna.cn/blog-images/2008264/dbdc98e0e046f5c0afd55f51047b6acf.png)\n\n把代码复制下来，除了第一行原来的引用要换为\n\n```js\nconst tencentcloud =require(\"tencentcloud-sdk-nodejs-dnspod\");\n```\n\n那么代码就是\n\n```js\nconst clientConfig = {\n  credential: {\n    secretId: \"SecretId\",\n    secretKey: \"SecretKey\",\n  },\n  region: \"\",\n  profile: {\n    httpProfile: {\n      endpoint: \"dnspod.tencentcloudapi.com\",\n    },\n  },\n};\n\nconst client = new DnspodClient(clientConfig);\nconst params = {\n    \"Domain\": \"你的域名\",\n    \"SubDomain\": \"你的子域名\",\n    \"RecordType\": \"A\",\n    \"RecordLine\": \"默认\",\n    \"Value\": ip,\n    \"TTL\": 600,\n    \"RecordId\": 你所获取到的ID\n};\nclient.ModifyRecord(params).then(\n  (data) => {\n    console.log(data);\n  },\n  (err) => {\n    console.error(\"error\", err);\n  }\n);\n```\n\n根据文档，把代码修改成自己的参数\n\n然后封包为方法，方便调用\n\n```js\nfunction changeIP(ip){\nconst clientConfig = {\n  credential: {\n    secretId: \"SecretId\",\n    secretKey: \"SecretKey\",\n  },\n  region: \"\",\n  profile: {\n    httpProfile: {\n      endpoint: \"dnspod.tencentcloudapi.com\",\n    },\n  },\n};\n\nconst client = new DnspodClient(clientConfig);\nconst params = {\n    \"Domain\": \"你的域名\",\n    \"SubDomain\": \"你的子域名\",\n    \"RecordType\": \"A\",\n    \"RecordLine\": \"默认\",\n    \"Value\": ip,\n    \"TTL\": 600,\n    \"RecordId\": 你所获取到的ID\n};\nclient.ModifyRecord(params).then(\n  (data) => {\n    console.log(data);\n  },\n  (err) => {\n    console.error(\"error\", err);\n  }\n);\n}\n```\n\n在上面获取IP那部分将回调设置为调用这个函数即可\n\n```js\nnew PublicIp()\n    .queryPublicIPAddresses()\n    .then((result) => {\n        changeIP(result.ipv4)\n    })\n    .catch((err) => {\n        console.log(err);\n    });\n```\n\n到这里，就算完成这一流程了\n\n可以运行一下看下结果\n\n```js\nnode index.js\n```\n\n出现类似这样的就是成功了\n\n![](https://res.arsrna.cn/blog-images/2008264/a228930e434600d568dec636139a7323.png)\n\n### 总代码\n\n```js\nconst PublicIp = require('nodejs-publicip');\n// Depends on tencentcloud-sdk-nodejs version 4.0.3 or higher\nconst tencentcloud = require(\"tencentcloud-sdk-nodejs-dnspod\");\nconst DnspodClient = tencentcloud.dnspod.v20210323.Client;\n\nnew PublicIp()\n    .queryPublicIPAddresses()\n    .then((result) => {\n        changeIP(result.ipv4);\n    })\n    .catch((err) => {\n        console.log(err);\n    });\n\n\nfunction changeIP(ip){\nconst clientConfig = {\n  credential: {\n    secretId: \"替换为你的secretId\",\n    secretKey: \"替换为你的secretKey\",\n  },\n  region: \"\",\n  profile: {\n    httpProfile: {\n      endpoint: \"dnspod.tencentcloudapi.com\",\n    },\n  },\n};\n\nconst client = new DnspodClient(clientConfig);\nconst params = {\n    \"Domain\": \"你的域名\",\n    \"SubDomain\": \"子域名\",\n    \"RecordType\": \"A（IPV6为AAAA）\",\n    \"RecordLine\": \"默认\",\n    \"Value\": ip,\n    \"TTL\": 600,\n    \"RecordId\": 替换成你的Recordid\n};\nclient.ModifyRecord(params).then(\n  (data) => {\n    console.log(data);\n  },\n  (err) => {\n    console.error(\"error\", err);\n  }\n);\n}\n```\n\n代码可以前往\n\n# 自动化\n\n现在已经可以通过命令行\n\n```shell\nnode index.js\n```\n\n来运行这个程序了\n\n那么就把他打包为cmd\n\n![](https://res.arsrna.cn/blog-images/2008264/ee21497c9117c97f1f503e2a3caf6cc4.png)\n\n## Windows中每周执行一次\n\n可参考文章：[windows设置定时任务执行程序命令\\_13271972的技术博客\\_51CTO博客](https://blog.51cto.com/u_13281972/2983264)\n\n## Nodejs原生循环执行\n\n如果你的业务场景很复杂，需要几分钟就变一次解析（而且你的套餐TTL很短）的情况下，建议直接使用setInterval定时器来进行操作\n\n只需要在PublicIP这个方法前后包裹一个SetInterval\n\n```js\nsetInterval(function(e){\n  new PublicIp()\n    .queryPublicIPAddresses()\n    .then((result) => {\n        changeIP(result.ipv4);\n    })\n    .catch((err) => {\n        console.log(err);\n    });\n},600000) //这里的数字是定时器的速度，单位毫秒，也就是多少毫秒执行一次\n```\n\n再次运行 node index.js 即可\n\n到此，教程就结束了，更多可能，需要我们一起探索\n\nPowered by Ar-Sr-Na\n","source":"_posts/2008264.md","raw":"---\ntitle: 【DNS 解析】使用DNSPOD实现动态公网解析（DDNS）\nauthor: Ar-Sr-Na\ntags: DNS 解析,Node.js,JavaScript,我永远喜欢布洛妮娅,DDNS,动态DNS,编程,公网,DNSPod,categories:,技术\navatar: https://res.arsrna.cn/icon2.jpg\nauthorLink: www.arsrna.cn\ncomments: true\nindex_img: https://res.arsrna.cn/blog-images/2008264/77372918da18e5a76c5593103b068b33.png\nauthorAbout: 突破计算边界，构筑数字视界，www.arsrna.cn\nauthorDesc: 突破计算边界，构筑数字视界，www.arsrna.cn\ndescription: 家里或者公司分配了一个公网IP，但它每过1周就变了，如果我要用它远程桌面，意味着一周就要改一次IP，记一个新的IP，非常复杂，该如何用一个固定的地址来替代这些变化的IP并且实现定时自动替换呢？\ndate: 2022-06-08 11:23:00\n---\n注：本文用到的所有代码已开源：https://arsrna.coding.net/public/website-mainsite/ArSrNaDDNS/git/\n\n安装请参考上页面的README.md\n\n# 前言\n\n背景\n\n家里或者公司分配了一个公网IP，但它每过1周就变了，如果我要用它远程桌面，意味着一周就要改一次IP，记一个新的IP，非常复杂，该如何用一个固定的地址来替代这些变化的IP并且实现定时自动替换呢？\n\n亦或者我有一台腾讯云按量付费的CVM，如果我选择关机不计费时，再次开机IP就变了。虽然可以通过购买EIP来固定这个地址，但是成本稍微高了。替代的办法就是动态解析，用一个别名代替变换的IP\n\n而如上，别名就是域名，用一个固定的域名，解析到这些IP，即可实现DDNS\n\n## 原理\n\n基本流程就是获取公网IP，然后修改某个域名的解析为获得的IP\n\n流程图如下\n\n![](https://res.arsrna.cn/blog-images/2008264/3f682615db76276d3cbf857cf437cae2.png)\n\n# 教程\n\n## 准备\n\n### 环境\n\n需要下载Nodejs：[Node.js 中文网 (nodejs.cn)](http://nodejs.cn/)\n\n在命令行运行\n\n```js\nnode-v\n```\n\n以及\n\n```js\nnpm -v\n```\n\n如果都能正常输出即可\n\n### 新建项目\n\n新建一个文件夹，名字任意\n\n然后新建一个js，名称任意，但最好纯英文，例如 index.js\n\n## 获取公网IP\n\n在这里，我们使用npm模块：nodejs-publicip\n\n首先在项目目录执行\n\n```shell\nnpm i --save nodejs-publicip\n```\n\n在index.js中加入：\n\n```js\nconst PublicIp = require('nodejs-publicip');\n```\n\n根据这个npm包的说明，知道获取公网的方法为：\n\n```js\nnew PublicIp()\n    .queryPublicIPAddresses()\n    .then((result) => {\n        console.log(JSON.stringify(result));\n        //成功回调事件\n    })\n    .catch((err) => {\n        console.log(err);\n    });\n```\n\n如果获取成功了，将会输出：\n\n```js\n{\"ipv4\":\"124.000.000.000\",\"ipv6\":\"0000:0000:0000:0000:0000\"}\n```\n\n## DNSPodSDK\n\n### 流程\n\n根据官网API文档，可以知道，设置解析必须要这几个参数\n\n| 参数名称   | 必选 | 类型    | 描述                                                    |\n| :--------- | :--- | :------ | :------------------------------------------------------ |\n| Domain     | 是   | String  | 域名，这里举例：arirs.cn                                |\n| RecordType | 是   | String  | 记录类型，A为IPv4，AAAA为IPv6                           |\n| RecordLine | 是   | String  | 记录线路，使用“默认”                                  |\n| Value      | 是   | String  | 记录值，这里是公网IP值，为上面的函数返回值 getIP().ipv4 |\n| RecordId   | 是   | Integer | 记录 ID，需要通过DescribeRecordList获取                 |\n| SubDomain  | 否   | String  | 主机记录，子域名，比如ddns1，就是ddns1.arirs.cn         |\n| TTL        | 否   | Integer | TTL，免费版默认600s                                     |\n\n在上表中，可以直接得到的信息除了RecordId，其它都可以直接从控制台得到\n\nRecordId需要另一个API获得：DescribeRecordList\n\n这个API只需要传入：Domain，Subdomain 即可获得\n\n那么，我们的流程将会是如此\n\n![](https://res.arsrna.cn/blog-images/2008264/77372918da18e5a76c5593103b068b33.png)\n\n### 获取RecordId\n\n首先需要在域名解析控制台处新建一个域名解析记录，可参考\n\n[DNS 解析 DNSPod 快速添加域名解析-快速入门-文档中心-腾讯云-腾讯云 (tencent.com)](https://cloud.tencent.com/document/product/302/3446)\n\n添加的记录先用一个 0.0.0.0占用，比如\n\n![](https://res.arsrna.cn/blog-images/2008264/a635f4426b914cef8045cb8dac6d1804.png)\n\n在API Explorer DNSPod修改解析方法下 [API Explorer - 云 API - 控制台 (tencent.com)](https://console.cloud.tencent.com/api/explorer?Product=dnspod&Version=2021-03-23&Action=DescribeRecordList&SignVersion=)\n\n填写以下参数\n\n| 参数      | 说明                                |\n| :-------- | :---------------------------------- |\n| Domain    | 域名，比如 arirs.cn                 |\n| Subdomain | 子域名解析记录，上图表示的是  ddns1 |\n|           |                                     |\n|           |                                     |\n|           |                                     |\n\n![](https://res.arsrna.cn/blog-images/2008264/bb173353313f78ae0795ea695870a14c.png)\n\n完成后在 在线调用 处点击 发送请求\n\n即可获得RecordId\n\n![](https://res.arsrna.cn/blog-images/2008264/1220b4f789b6325d6a117f9c6360f030.png)\n\n### 使用SDK修改解析\n\n在项目目录里面打开终端，键入\n\n```shell\nnpm i --save tencentcloud-sdk-nodejs-dnspod\n```\n\n安装腾讯云的Nodejs SDK\n\n在API Explorer的 修改记录（DNSPOD） [点此进入 ](https://console.cloud.tencent.com/api/explorer?Product=dnspod&Version=2021-03-23&Action=ModifyRecord&SignVersion=)里面，按照上文的参数，输入进去\n\n![](https://res.arsrna.cn/blog-images/2008264/0869e35e4b71cff84649b8d05c36005c.png)\n\n切换到代码生成这一栏，选择Nodejs\n\n![](https://res.arsrna.cn/blog-images/2008264/dbdc98e0e046f5c0afd55f51047b6acf.png)\n\n把代码复制下来，除了第一行原来的引用要换为\n\n```js\nconst tencentcloud =require(\"tencentcloud-sdk-nodejs-dnspod\");\n```\n\n那么代码就是\n\n```js\nconst clientConfig = {\n  credential: {\n    secretId: \"SecretId\",\n    secretKey: \"SecretKey\",\n  },\n  region: \"\",\n  profile: {\n    httpProfile: {\n      endpoint: \"dnspod.tencentcloudapi.com\",\n    },\n  },\n};\n\nconst client = new DnspodClient(clientConfig);\nconst params = {\n    \"Domain\": \"你的域名\",\n    \"SubDomain\": \"你的子域名\",\n    \"RecordType\": \"A\",\n    \"RecordLine\": \"默认\",\n    \"Value\": ip,\n    \"TTL\": 600,\n    \"RecordId\": 你所获取到的ID\n};\nclient.ModifyRecord(params).then(\n  (data) => {\n    console.log(data);\n  },\n  (err) => {\n    console.error(\"error\", err);\n  }\n);\n```\n\n根据文档，把代码修改成自己的参数\n\n然后封包为方法，方便调用\n\n```js\nfunction changeIP(ip){\nconst clientConfig = {\n  credential: {\n    secretId: \"SecretId\",\n    secretKey: \"SecretKey\",\n  },\n  region: \"\",\n  profile: {\n    httpProfile: {\n      endpoint: \"dnspod.tencentcloudapi.com\",\n    },\n  },\n};\n\nconst client = new DnspodClient(clientConfig);\nconst params = {\n    \"Domain\": \"你的域名\",\n    \"SubDomain\": \"你的子域名\",\n    \"RecordType\": \"A\",\n    \"RecordLine\": \"默认\",\n    \"Value\": ip,\n    \"TTL\": 600,\n    \"RecordId\": 你所获取到的ID\n};\nclient.ModifyRecord(params).then(\n  (data) => {\n    console.log(data);\n  },\n  (err) => {\n    console.error(\"error\", err);\n  }\n);\n}\n```\n\n在上面获取IP那部分将回调设置为调用这个函数即可\n\n```js\nnew PublicIp()\n    .queryPublicIPAddresses()\n    .then((result) => {\n        changeIP(result.ipv4)\n    })\n    .catch((err) => {\n        console.log(err);\n    });\n```\n\n到这里，就算完成这一流程了\n\n可以运行一下看下结果\n\n```js\nnode index.js\n```\n\n出现类似这样的就是成功了\n\n![](https://res.arsrna.cn/blog-images/2008264/a228930e434600d568dec636139a7323.png)\n\n### 总代码\n\n```js\nconst PublicIp = require('nodejs-publicip');\n// Depends on tencentcloud-sdk-nodejs version 4.0.3 or higher\nconst tencentcloud = require(\"tencentcloud-sdk-nodejs-dnspod\");\nconst DnspodClient = tencentcloud.dnspod.v20210323.Client;\n\nnew PublicIp()\n    .queryPublicIPAddresses()\n    .then((result) => {\n        changeIP(result.ipv4);\n    })\n    .catch((err) => {\n        console.log(err);\n    });\n\n\nfunction changeIP(ip){\nconst clientConfig = {\n  credential: {\n    secretId: \"替换为你的secretId\",\n    secretKey: \"替换为你的secretKey\",\n  },\n  region: \"\",\n  profile: {\n    httpProfile: {\n      endpoint: \"dnspod.tencentcloudapi.com\",\n    },\n  },\n};\n\nconst client = new DnspodClient(clientConfig);\nconst params = {\n    \"Domain\": \"你的域名\",\n    \"SubDomain\": \"子域名\",\n    \"RecordType\": \"A（IPV6为AAAA）\",\n    \"RecordLine\": \"默认\",\n    \"Value\": ip,\n    \"TTL\": 600,\n    \"RecordId\": 替换成你的Recordid\n};\nclient.ModifyRecord(params).then(\n  (data) => {\n    console.log(data);\n  },\n  (err) => {\n    console.error(\"error\", err);\n  }\n);\n}\n```\n\n代码可以前往\n\n# 自动化\n\n现在已经可以通过命令行\n\n```shell\nnode index.js\n```\n\n来运行这个程序了\n\n那么就把他打包为cmd\n\n![](https://res.arsrna.cn/blog-images/2008264/ee21497c9117c97f1f503e2a3caf6cc4.png)\n\n## Windows中每周执行一次\n\n可参考文章：[windows设置定时任务执行程序命令\\_13271972的技术博客\\_51CTO博客](https://blog.51cto.com/u_13281972/2983264)\n\n## Nodejs原生循环执行\n\n如果你的业务场景很复杂，需要几分钟就变一次解析（而且你的套餐TTL很短）的情况下，建议直接使用setInterval定时器来进行操作\n\n只需要在PublicIP这个方法前后包裹一个SetInterval\n\n```js\nsetInterval(function(e){\n  new PublicIp()\n    .queryPublicIPAddresses()\n    .then((result) => {\n        changeIP(result.ipv4);\n    })\n    .catch((err) => {\n        console.log(err);\n    });\n},600000) //这里的数字是定时器的速度，单位毫秒，也就是多少毫秒执行一次\n```\n\n再次运行 node index.js 即可\n\n到此，教程就结束了，更多可能，需要我们一起探索\n\nPowered by Ar-Sr-Na\n","slug":"2008264","published":1,"updated":"2023-01-17T08:55:38.568Z","layout":"post","photos":[],"link":"","_id":"clod0d6xs0033c0nd53habxiy","content":"<p>注：本文用到的所有代码已开源：<a href=\"https://arsrna.coding.net/public/website-mainsite/ArSrNaDDNS/git/\">https://arsrna.coding.net/public/website-mainsite/ArSrNaDDNS/git/</a></p>\n<p>安装请参考上页面的README.md</p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>背景</p>\n<p>家里或者公司分配了一个公网IP，但它每过1周就变了，如果我要用它远程桌面，意味着一周就要改一次IP，记一个新的IP，非常复杂，该如何用一个固定的地址来替代这些变化的IP并且实现定时自动替换呢？</p>\n<p>亦或者我有一台腾讯云按量付费的CVM，如果我选择关机不计费时，再次开机IP就变了。虽然可以通过购买EIP来固定这个地址，但是成本稍微高了。替代的办法就是动态解析，用一个别名代替变换的IP</p>\n<p>而如上，别名就是域名，用一个固定的域名，解析到这些IP，即可实现DDNS</p>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>基本流程就是获取公网IP，然后修改某个域名的解析为获得的IP</p>\n<p>流程图如下</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2008264/3f682615db76276d3cbf857cf437cae2.png\"></p>\n<h1 id=\"教程\"><a href=\"#教程\" class=\"headerlink\" title=\"教程\"></a>教程</h1><h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><p>需要下载Nodejs：<a href=\"http://nodejs.cn/\">Node.js 中文网 (nodejs.cn)</a></p>\n<p>在命令行运行</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">node-v<br></code></pre></td></tr></table></figure>\n\n<p>以及</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">npm -v<br></code></pre></td></tr></table></figure>\n\n<p>如果都能正常输出即可</p>\n<h3 id=\"新建项目\"><a href=\"#新建项目\" class=\"headerlink\" title=\"新建项目\"></a>新建项目</h3><p>新建一个文件夹，名字任意</p>\n<p>然后新建一个js，名称任意，但最好纯英文，例如 index.js</p>\n<h2 id=\"获取公网IP\"><a href=\"#获取公网IP\" class=\"headerlink\" title=\"获取公网IP\"></a>获取公网IP</h2><p>在这里，我们使用npm模块：nodejs-publicip</p>\n<p>首先在项目目录执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">npm i --save nodejs-publicip<br></code></pre></td></tr></table></figure>\n\n<p>在index.js中加入：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">PublicIp</span> = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;nodejs-publicip&#x27;</span>);<br></code></pre></td></tr></table></figure>\n\n<p>根据这个npm包的说明，知道获取公网的方法为：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">PublicIp</span>()<br>    .<span class=\"hljs-title function_\">queryPublicIPAddresses</span>()<br>    .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">result</span>) =&gt;</span> &#123;<br>        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(result));<br>        <span class=\"hljs-comment\">//成功回调事件</span><br>    &#125;)<br>    .<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(err);<br>    &#125;);<br></code></pre></td></tr></table></figure>\n\n<p>如果获取成功了，将会输出：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&#123;<span class=\"hljs-string\">&quot;ipv4&quot;</span>:<span class=\"hljs-string\">&quot;124.000.000.000&quot;</span>,<span class=\"hljs-string\">&quot;ipv6&quot;</span>:<span class=\"hljs-string\">&quot;0000:0000:0000:0000:0000&quot;</span>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"DNSPodSDK\"><a href=\"#DNSPodSDK\" class=\"headerlink\" title=\"DNSPodSDK\"></a>DNSPodSDK</h2><h3 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h3><p>根据官网API文档，可以知道，设置解析必须要这几个参数</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数名称</th>\n<th align=\"left\">必选</th>\n<th align=\"left\">类型</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Domain</td>\n<td align=\"left\">是</td>\n<td align=\"left\">String</td>\n<td align=\"left\">域名，这里举例：arirs.cn</td>\n</tr>\n<tr>\n<td align=\"left\">RecordType</td>\n<td align=\"left\">是</td>\n<td align=\"left\">String</td>\n<td align=\"left\">记录类型，A为IPv4，AAAA为IPv6</td>\n</tr>\n<tr>\n<td align=\"left\">RecordLine</td>\n<td align=\"left\">是</td>\n<td align=\"left\">String</td>\n<td align=\"left\">记录线路，使用“默认”</td>\n</tr>\n<tr>\n<td align=\"left\">Value</td>\n<td align=\"left\">是</td>\n<td align=\"left\">String</td>\n<td align=\"left\">记录值，这里是公网IP值，为上面的函数返回值 getIP().ipv4</td>\n</tr>\n<tr>\n<td align=\"left\">RecordId</td>\n<td align=\"left\">是</td>\n<td align=\"left\">Integer</td>\n<td align=\"left\">记录 ID，需要通过DescribeRecordList获取</td>\n</tr>\n<tr>\n<td align=\"left\">SubDomain</td>\n<td align=\"left\">否</td>\n<td align=\"left\">String</td>\n<td align=\"left\">主机记录，子域名，比如ddns1，就是ddns1.arirs.cn</td>\n</tr>\n<tr>\n<td align=\"left\">TTL</td>\n<td align=\"left\">否</td>\n<td align=\"left\">Integer</td>\n<td align=\"left\">TTL，免费版默认600s</td>\n</tr>\n</tbody></table>\n<p>在上表中，可以直接得到的信息除了RecordId，其它都可以直接从控制台得到</p>\n<p>RecordId需要另一个API获得：DescribeRecordList</p>\n<p>这个API只需要传入：Domain，Subdomain 即可获得</p>\n<p>那么，我们的流程将会是如此</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2008264/77372918da18e5a76c5593103b068b33.png\"></p>\n<h3 id=\"获取RecordId\"><a href=\"#获取RecordId\" class=\"headerlink\" title=\"获取RecordId\"></a>获取RecordId</h3><p>首先需要在域名解析控制台处新建一个域名解析记录，可参考</p>\n<p><a href=\"https://cloud.tencent.com/document/product/302/3446\">DNS 解析 DNSPod 快速添加域名解析-快速入门-文档中心-腾讯云-腾讯云 (tencent.com)</a></p>\n<p>添加的记录先用一个 0.0.0.0占用，比如</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2008264/a635f4426b914cef8045cb8dac6d1804.png\"></p>\n<p>在API Explorer DNSPod修改解析方法下 <a href=\"https://console.cloud.tencent.com/api/explorer?Product=dnspod&Version=2021-03-23&Action=DescribeRecordList&SignVersion=\">API Explorer - 云 API - 控制台 (tencent.com)</a></p>\n<p>填写以下参数</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Domain</td>\n<td align=\"left\">域名，比如 arirs.cn</td>\n</tr>\n<tr>\n<td align=\"left\">Subdomain</td>\n<td align=\"left\">子域名解析记录，上图表示的是  ddns1</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://res.arsrna.cn/blog-images/2008264/bb173353313f78ae0795ea695870a14c.png\"></p>\n<p>完成后在 在线调用 处点击 发送请求</p>\n<p>即可获得RecordId</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2008264/1220b4f789b6325d6a117f9c6360f030.png\"></p>\n<h3 id=\"使用SDK修改解析\"><a href=\"#使用SDK修改解析\" class=\"headerlink\" title=\"使用SDK修改解析\"></a>使用SDK修改解析</h3><p>在项目目录里面打开终端，键入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">npm i --save tencentcloud-sdk-nodejs-dnspod<br></code></pre></td></tr></table></figure>\n\n<p>安装腾讯云的Nodejs SDK</p>\n<p>在API Explorer的 修改记录（DNSPOD） <a href=\"https://console.cloud.tencent.com/api/explorer?Product=dnspod&Version=2021-03-23&Action=ModifyRecord&SignVersion=\">点此进入 </a>里面，按照上文的参数，输入进去</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2008264/0869e35e4b71cff84649b8d05c36005c.png\"></p>\n<p>切换到代码生成这一栏，选择Nodejs</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2008264/dbdc98e0e046f5c0afd55f51047b6acf.png\"></p>\n<p>把代码复制下来，除了第一行原来的引用要换为</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> tencentcloud =<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;tencentcloud-sdk-nodejs-dnspod&quot;</span>);<br></code></pre></td></tr></table></figure>\n\n<p>那么代码就是</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> clientConfig = &#123;<br>  <span class=\"hljs-attr\">credential</span>: &#123;<br>    <span class=\"hljs-attr\">secretId</span>: <span class=\"hljs-string\">&quot;SecretId&quot;</span>,<br>    <span class=\"hljs-attr\">secretKey</span>: <span class=\"hljs-string\">&quot;SecretKey&quot;</span>,<br>  &#125;,<br>  <span class=\"hljs-attr\">region</span>: <span class=\"hljs-string\">&quot;&quot;</span>,<br>  <span class=\"hljs-attr\">profile</span>: &#123;<br>    <span class=\"hljs-attr\">httpProfile</span>: &#123;<br>      <span class=\"hljs-attr\">endpoint</span>: <span class=\"hljs-string\">&quot;dnspod.tencentcloudapi.com&quot;</span>,<br>    &#125;,<br>  &#125;,<br>&#125;;<br><br><span class=\"hljs-keyword\">const</span> client = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">DnspodClient</span>(clientConfig);<br><span class=\"hljs-keyword\">const</span> params = &#123;<br>    <span class=\"hljs-string\">&quot;Domain&quot;</span>: <span class=\"hljs-string\">&quot;你的域名&quot;</span>,<br>    <span class=\"hljs-string\">&quot;SubDomain&quot;</span>: <span class=\"hljs-string\">&quot;你的子域名&quot;</span>,<br>    <span class=\"hljs-string\">&quot;RecordType&quot;</span>: <span class=\"hljs-string\">&quot;A&quot;</span>,<br>    <span class=\"hljs-string\">&quot;RecordLine&quot;</span>: <span class=\"hljs-string\">&quot;默认&quot;</span>,<br>    <span class=\"hljs-string\">&quot;Value&quot;</span>: ip,<br>    <span class=\"hljs-string\">&quot;TTL&quot;</span>: <span class=\"hljs-number\">600</span>,<br>    <span class=\"hljs-string\">&quot;RecordId&quot;</span>: 你所获取到的<span class=\"hljs-variable constant_\">ID</span><br>&#125;;<br>client.<span class=\"hljs-title class_\">ModifyRecord</span>(params).<span class=\"hljs-title function_\">then</span>(<br>  <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(data);<br>  &#125;,<br>  <span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">&quot;error&quot;</span>, err);<br>  &#125;<br>);<br></code></pre></td></tr></table></figure>\n\n<p>根据文档，把代码修改成自己的参数</p>\n<p>然后封包为方法，方便调用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">changeIP</span>(<span class=\"hljs-params\">ip</span>)&#123;<br><span class=\"hljs-keyword\">const</span> clientConfig = &#123;<br>  <span class=\"hljs-attr\">credential</span>: &#123;<br>    <span class=\"hljs-attr\">secretId</span>: <span class=\"hljs-string\">&quot;SecretId&quot;</span>,<br>    <span class=\"hljs-attr\">secretKey</span>: <span class=\"hljs-string\">&quot;SecretKey&quot;</span>,<br>  &#125;,<br>  <span class=\"hljs-attr\">region</span>: <span class=\"hljs-string\">&quot;&quot;</span>,<br>  <span class=\"hljs-attr\">profile</span>: &#123;<br>    <span class=\"hljs-attr\">httpProfile</span>: &#123;<br>      <span class=\"hljs-attr\">endpoint</span>: <span class=\"hljs-string\">&quot;dnspod.tencentcloudapi.com&quot;</span>,<br>    &#125;,<br>  &#125;,<br>&#125;;<br><br><span class=\"hljs-keyword\">const</span> client = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">DnspodClient</span>(clientConfig);<br><span class=\"hljs-keyword\">const</span> params = &#123;<br>    <span class=\"hljs-string\">&quot;Domain&quot;</span>: <span class=\"hljs-string\">&quot;你的域名&quot;</span>,<br>    <span class=\"hljs-string\">&quot;SubDomain&quot;</span>: <span class=\"hljs-string\">&quot;你的子域名&quot;</span>,<br>    <span class=\"hljs-string\">&quot;RecordType&quot;</span>: <span class=\"hljs-string\">&quot;A&quot;</span>,<br>    <span class=\"hljs-string\">&quot;RecordLine&quot;</span>: <span class=\"hljs-string\">&quot;默认&quot;</span>,<br>    <span class=\"hljs-string\">&quot;Value&quot;</span>: ip,<br>    <span class=\"hljs-string\">&quot;TTL&quot;</span>: <span class=\"hljs-number\">600</span>,<br>    <span class=\"hljs-string\">&quot;RecordId&quot;</span>: 你所获取到的<span class=\"hljs-variable constant_\">ID</span><br>&#125;;<br>client.<span class=\"hljs-title class_\">ModifyRecord</span>(params).<span class=\"hljs-title function_\">then</span>(<br>  <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(data);<br>  &#125;,<br>  <span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">&quot;error&quot;</span>, err);<br>  &#125;<br>);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>在上面获取IP那部分将回调设置为调用这个函数即可</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">PublicIp</span>()<br>    .<span class=\"hljs-title function_\">queryPublicIPAddresses</span>()<br>    .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">result</span>) =&gt;</span> &#123;<br>        <span class=\"hljs-title function_\">changeIP</span>(result.<span class=\"hljs-property\">ipv4</span>)<br>    &#125;)<br>    .<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(err);<br>    &#125;);<br></code></pre></td></tr></table></figure>\n\n<p>到这里，就算完成这一流程了</p>\n<p>可以运行一下看下结果</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">node index.<span class=\"hljs-property\">js</span><br></code></pre></td></tr></table></figure>\n\n<p>出现类似这样的就是成功了</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2008264/a228930e434600d568dec636139a7323.png\"></p>\n<h3 id=\"总代码\"><a href=\"#总代码\" class=\"headerlink\" title=\"总代码\"></a>总代码</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">PublicIp</span> = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;nodejs-publicip&#x27;</span>);<br><span class=\"hljs-comment\">// Depends on tencentcloud-sdk-nodejs version 4.0.3 or higher</span><br><span class=\"hljs-keyword\">const</span> tencentcloud = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;tencentcloud-sdk-nodejs-dnspod&quot;</span>);<br><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">DnspodClient</span> = tencentcloud.<span class=\"hljs-property\">dnspod</span>.<span class=\"hljs-property\">v20210323</span>.<span class=\"hljs-property\">Client</span>;<br><br><span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">PublicIp</span>()<br>    .<span class=\"hljs-title function_\">queryPublicIPAddresses</span>()<br>    .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">result</span>) =&gt;</span> &#123;<br>        <span class=\"hljs-title function_\">changeIP</span>(result.<span class=\"hljs-property\">ipv4</span>);<br>    &#125;)<br>    .<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(err);<br>    &#125;);<br><br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">changeIP</span>(<span class=\"hljs-params\">ip</span>)&#123;<br><span class=\"hljs-keyword\">const</span> clientConfig = &#123;<br>  <span class=\"hljs-attr\">credential</span>: &#123;<br>    <span class=\"hljs-attr\">secretId</span>: <span class=\"hljs-string\">&quot;替换为你的secretId&quot;</span>,<br>    <span class=\"hljs-attr\">secretKey</span>: <span class=\"hljs-string\">&quot;替换为你的secretKey&quot;</span>,<br>  &#125;,<br>  <span class=\"hljs-attr\">region</span>: <span class=\"hljs-string\">&quot;&quot;</span>,<br>  <span class=\"hljs-attr\">profile</span>: &#123;<br>    <span class=\"hljs-attr\">httpProfile</span>: &#123;<br>      <span class=\"hljs-attr\">endpoint</span>: <span class=\"hljs-string\">&quot;dnspod.tencentcloudapi.com&quot;</span>,<br>    &#125;,<br>  &#125;,<br>&#125;;<br><br><span class=\"hljs-keyword\">const</span> client = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">DnspodClient</span>(clientConfig);<br><span class=\"hljs-keyword\">const</span> params = &#123;<br>    <span class=\"hljs-string\">&quot;Domain&quot;</span>: <span class=\"hljs-string\">&quot;你的域名&quot;</span>,<br>    <span class=\"hljs-string\">&quot;SubDomain&quot;</span>: <span class=\"hljs-string\">&quot;子域名&quot;</span>,<br>    <span class=\"hljs-string\">&quot;RecordType&quot;</span>: <span class=\"hljs-string\">&quot;A（IPV6为AAAA）&quot;</span>,<br>    <span class=\"hljs-string\">&quot;RecordLine&quot;</span>: <span class=\"hljs-string\">&quot;默认&quot;</span>,<br>    <span class=\"hljs-string\">&quot;Value&quot;</span>: ip,<br>    <span class=\"hljs-string\">&quot;TTL&quot;</span>: <span class=\"hljs-number\">600</span>,<br>    <span class=\"hljs-string\">&quot;RecordId&quot;</span>: 替换成你的<span class=\"hljs-title class_\">Recordid</span><br>&#125;;<br>client.<span class=\"hljs-title class_\">ModifyRecord</span>(params).<span class=\"hljs-title function_\">then</span>(<br>  <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(data);<br>  &#125;,<br>  <span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">&quot;error&quot;</span>, err);<br>  &#125;<br>);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>代码可以前往</p>\n<h1 id=\"自动化\"><a href=\"#自动化\" class=\"headerlink\" title=\"自动化\"></a>自动化</h1><p>现在已经可以通过命令行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">node index.js<br></code></pre></td></tr></table></figure>\n\n<p>来运行这个程序了</p>\n<p>那么就把他打包为cmd</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2008264/ee21497c9117c97f1f503e2a3caf6cc4.png\"></p>\n<h2 id=\"Windows中每周执行一次\"><a href=\"#Windows中每周执行一次\" class=\"headerlink\" title=\"Windows中每周执行一次\"></a>Windows中每周执行一次</h2><p>可参考文章：<a href=\"https://blog.51cto.com/u_13281972/2983264\">windows设置定时任务执行程序命令_13271972的技术博客_51CTO博客</a></p>\n<h2 id=\"Nodejs原生循环执行\"><a href=\"#Nodejs原生循环执行\" class=\"headerlink\" title=\"Nodejs原生循环执行\"></a>Nodejs原生循环执行</h2><p>如果你的业务场景很复杂，需要几分钟就变一次解析（而且你的套餐TTL很短）的情况下，建议直接使用setInterval定时器来进行操作</p>\n<p>只需要在PublicIP这个方法前后包裹一个SetInterval</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-built_in\">setInterval</span>(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">e</span>)&#123;<br>  <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">PublicIp</span>()<br>    .<span class=\"hljs-title function_\">queryPublicIPAddresses</span>()<br>    .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">result</span>) =&gt;</span> &#123;<br>        <span class=\"hljs-title function_\">changeIP</span>(result.<span class=\"hljs-property\">ipv4</span>);<br>    &#125;)<br>    .<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(err);<br>    &#125;);<br>&#125;,<span class=\"hljs-number\">600000</span>) <span class=\"hljs-comment\">//这里的数字是定时器的速度，单位毫秒，也就是多少毫秒执行一次</span><br></code></pre></td></tr></table></figure>\n\n<p>再次运行 node index.js 即可</p>\n<p>到此，教程就结束了，更多可能，需要我们一起探索</p>\n<p>Powered by Ar-Sr-Na</p>\n","site":{"data":{}},"excerpt":"","more":"<p>注：本文用到的所有代码已开源：<a href=\"https://arsrna.coding.net/public/website-mainsite/ArSrNaDDNS/git/\">https://arsrna.coding.net/public/website-mainsite/ArSrNaDDNS/git/</a></p>\n<p>安装请参考上页面的README.md</p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>背景</p>\n<p>家里或者公司分配了一个公网IP，但它每过1周就变了，如果我要用它远程桌面，意味着一周就要改一次IP，记一个新的IP，非常复杂，该如何用一个固定的地址来替代这些变化的IP并且实现定时自动替换呢？</p>\n<p>亦或者我有一台腾讯云按量付费的CVM，如果我选择关机不计费时，再次开机IP就变了。虽然可以通过购买EIP来固定这个地址，但是成本稍微高了。替代的办法就是动态解析，用一个别名代替变换的IP</p>\n<p>而如上，别名就是域名，用一个固定的域名，解析到这些IP，即可实现DDNS</p>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>基本流程就是获取公网IP，然后修改某个域名的解析为获得的IP</p>\n<p>流程图如下</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2008264/3f682615db76276d3cbf857cf437cae2.png\"></p>\n<h1 id=\"教程\"><a href=\"#教程\" class=\"headerlink\" title=\"教程\"></a>教程</h1><h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><p>需要下载Nodejs：<a href=\"http://nodejs.cn/\">Node.js 中文网 (nodejs.cn)</a></p>\n<p>在命令行运行</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">node-v<br></code></pre></td></tr></table></figure>\n\n<p>以及</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">npm -v<br></code></pre></td></tr></table></figure>\n\n<p>如果都能正常输出即可</p>\n<h3 id=\"新建项目\"><a href=\"#新建项目\" class=\"headerlink\" title=\"新建项目\"></a>新建项目</h3><p>新建一个文件夹，名字任意</p>\n<p>然后新建一个js，名称任意，但最好纯英文，例如 index.js</p>\n<h2 id=\"获取公网IP\"><a href=\"#获取公网IP\" class=\"headerlink\" title=\"获取公网IP\"></a>获取公网IP</h2><p>在这里，我们使用npm模块：nodejs-publicip</p>\n<p>首先在项目目录执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">npm i --save nodejs-publicip<br></code></pre></td></tr></table></figure>\n\n<p>在index.js中加入：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">PublicIp</span> = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;nodejs-publicip&#x27;</span>);<br></code></pre></td></tr></table></figure>\n\n<p>根据这个npm包的说明，知道获取公网的方法为：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">PublicIp</span>()<br>    .<span class=\"hljs-title function_\">queryPublicIPAddresses</span>()<br>    .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">result</span>) =&gt;</span> &#123;<br>        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(result));<br>        <span class=\"hljs-comment\">//成功回调事件</span><br>    &#125;)<br>    .<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(err);<br>    &#125;);<br></code></pre></td></tr></table></figure>\n\n<p>如果获取成功了，将会输出：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&#123;<span class=\"hljs-string\">&quot;ipv4&quot;</span>:<span class=\"hljs-string\">&quot;124.000.000.000&quot;</span>,<span class=\"hljs-string\">&quot;ipv6&quot;</span>:<span class=\"hljs-string\">&quot;0000:0000:0000:0000:0000&quot;</span>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"DNSPodSDK\"><a href=\"#DNSPodSDK\" class=\"headerlink\" title=\"DNSPodSDK\"></a>DNSPodSDK</h2><h3 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h3><p>根据官网API文档，可以知道，设置解析必须要这几个参数</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数名称</th>\n<th align=\"left\">必选</th>\n<th align=\"left\">类型</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Domain</td>\n<td align=\"left\">是</td>\n<td align=\"left\">String</td>\n<td align=\"left\">域名，这里举例：arirs.cn</td>\n</tr>\n<tr>\n<td align=\"left\">RecordType</td>\n<td align=\"left\">是</td>\n<td align=\"left\">String</td>\n<td align=\"left\">记录类型，A为IPv4，AAAA为IPv6</td>\n</tr>\n<tr>\n<td align=\"left\">RecordLine</td>\n<td align=\"left\">是</td>\n<td align=\"left\">String</td>\n<td align=\"left\">记录线路，使用“默认”</td>\n</tr>\n<tr>\n<td align=\"left\">Value</td>\n<td align=\"left\">是</td>\n<td align=\"left\">String</td>\n<td align=\"left\">记录值，这里是公网IP值，为上面的函数返回值 getIP().ipv4</td>\n</tr>\n<tr>\n<td align=\"left\">RecordId</td>\n<td align=\"left\">是</td>\n<td align=\"left\">Integer</td>\n<td align=\"left\">记录 ID，需要通过DescribeRecordList获取</td>\n</tr>\n<tr>\n<td align=\"left\">SubDomain</td>\n<td align=\"left\">否</td>\n<td align=\"left\">String</td>\n<td align=\"left\">主机记录，子域名，比如ddns1，就是ddns1.arirs.cn</td>\n</tr>\n<tr>\n<td align=\"left\">TTL</td>\n<td align=\"left\">否</td>\n<td align=\"left\">Integer</td>\n<td align=\"left\">TTL，免费版默认600s</td>\n</tr>\n</tbody></table>\n<p>在上表中，可以直接得到的信息除了RecordId，其它都可以直接从控制台得到</p>\n<p>RecordId需要另一个API获得：DescribeRecordList</p>\n<p>这个API只需要传入：Domain，Subdomain 即可获得</p>\n<p>那么，我们的流程将会是如此</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2008264/77372918da18e5a76c5593103b068b33.png\"></p>\n<h3 id=\"获取RecordId\"><a href=\"#获取RecordId\" class=\"headerlink\" title=\"获取RecordId\"></a>获取RecordId</h3><p>首先需要在域名解析控制台处新建一个域名解析记录，可参考</p>\n<p><a href=\"https://cloud.tencent.com/document/product/302/3446\">DNS 解析 DNSPod 快速添加域名解析-快速入门-文档中心-腾讯云-腾讯云 (tencent.com)</a></p>\n<p>添加的记录先用一个 0.0.0.0占用，比如</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2008264/a635f4426b914cef8045cb8dac6d1804.png\"></p>\n<p>在API Explorer DNSPod修改解析方法下 <a href=\"https://console.cloud.tencent.com/api/explorer?Product=dnspod&Version=2021-03-23&Action=DescribeRecordList&SignVersion=\">API Explorer - 云 API - 控制台 (tencent.com)</a></p>\n<p>填写以下参数</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Domain</td>\n<td align=\"left\">域名，比如 arirs.cn</td>\n</tr>\n<tr>\n<td align=\"left\">Subdomain</td>\n<td align=\"left\">子域名解析记录，上图表示的是  ddns1</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://res.arsrna.cn/blog-images/2008264/bb173353313f78ae0795ea695870a14c.png\"></p>\n<p>完成后在 在线调用 处点击 发送请求</p>\n<p>即可获得RecordId</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2008264/1220b4f789b6325d6a117f9c6360f030.png\"></p>\n<h3 id=\"使用SDK修改解析\"><a href=\"#使用SDK修改解析\" class=\"headerlink\" title=\"使用SDK修改解析\"></a>使用SDK修改解析</h3><p>在项目目录里面打开终端，键入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">npm i --save tencentcloud-sdk-nodejs-dnspod<br></code></pre></td></tr></table></figure>\n\n<p>安装腾讯云的Nodejs SDK</p>\n<p>在API Explorer的 修改记录（DNSPOD） <a href=\"https://console.cloud.tencent.com/api/explorer?Product=dnspod&Version=2021-03-23&Action=ModifyRecord&SignVersion=\">点此进入 </a>里面，按照上文的参数，输入进去</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2008264/0869e35e4b71cff84649b8d05c36005c.png\"></p>\n<p>切换到代码生成这一栏，选择Nodejs</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2008264/dbdc98e0e046f5c0afd55f51047b6acf.png\"></p>\n<p>把代码复制下来，除了第一行原来的引用要换为</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> tencentcloud =<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;tencentcloud-sdk-nodejs-dnspod&quot;</span>);<br></code></pre></td></tr></table></figure>\n\n<p>那么代码就是</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> clientConfig = &#123;<br>  <span class=\"hljs-attr\">credential</span>: &#123;<br>    <span class=\"hljs-attr\">secretId</span>: <span class=\"hljs-string\">&quot;SecretId&quot;</span>,<br>    <span class=\"hljs-attr\">secretKey</span>: <span class=\"hljs-string\">&quot;SecretKey&quot;</span>,<br>  &#125;,<br>  <span class=\"hljs-attr\">region</span>: <span class=\"hljs-string\">&quot;&quot;</span>,<br>  <span class=\"hljs-attr\">profile</span>: &#123;<br>    <span class=\"hljs-attr\">httpProfile</span>: &#123;<br>      <span class=\"hljs-attr\">endpoint</span>: <span class=\"hljs-string\">&quot;dnspod.tencentcloudapi.com&quot;</span>,<br>    &#125;,<br>  &#125;,<br>&#125;;<br><br><span class=\"hljs-keyword\">const</span> client = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">DnspodClient</span>(clientConfig);<br><span class=\"hljs-keyword\">const</span> params = &#123;<br>    <span class=\"hljs-string\">&quot;Domain&quot;</span>: <span class=\"hljs-string\">&quot;你的域名&quot;</span>,<br>    <span class=\"hljs-string\">&quot;SubDomain&quot;</span>: <span class=\"hljs-string\">&quot;你的子域名&quot;</span>,<br>    <span class=\"hljs-string\">&quot;RecordType&quot;</span>: <span class=\"hljs-string\">&quot;A&quot;</span>,<br>    <span class=\"hljs-string\">&quot;RecordLine&quot;</span>: <span class=\"hljs-string\">&quot;默认&quot;</span>,<br>    <span class=\"hljs-string\">&quot;Value&quot;</span>: ip,<br>    <span class=\"hljs-string\">&quot;TTL&quot;</span>: <span class=\"hljs-number\">600</span>,<br>    <span class=\"hljs-string\">&quot;RecordId&quot;</span>: 你所获取到的<span class=\"hljs-variable constant_\">ID</span><br>&#125;;<br>client.<span class=\"hljs-title class_\">ModifyRecord</span>(params).<span class=\"hljs-title function_\">then</span>(<br>  <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(data);<br>  &#125;,<br>  <span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">&quot;error&quot;</span>, err);<br>  &#125;<br>);<br></code></pre></td></tr></table></figure>\n\n<p>根据文档，把代码修改成自己的参数</p>\n<p>然后封包为方法，方便调用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">changeIP</span>(<span class=\"hljs-params\">ip</span>)&#123;<br><span class=\"hljs-keyword\">const</span> clientConfig = &#123;<br>  <span class=\"hljs-attr\">credential</span>: &#123;<br>    <span class=\"hljs-attr\">secretId</span>: <span class=\"hljs-string\">&quot;SecretId&quot;</span>,<br>    <span class=\"hljs-attr\">secretKey</span>: <span class=\"hljs-string\">&quot;SecretKey&quot;</span>,<br>  &#125;,<br>  <span class=\"hljs-attr\">region</span>: <span class=\"hljs-string\">&quot;&quot;</span>,<br>  <span class=\"hljs-attr\">profile</span>: &#123;<br>    <span class=\"hljs-attr\">httpProfile</span>: &#123;<br>      <span class=\"hljs-attr\">endpoint</span>: <span class=\"hljs-string\">&quot;dnspod.tencentcloudapi.com&quot;</span>,<br>    &#125;,<br>  &#125;,<br>&#125;;<br><br><span class=\"hljs-keyword\">const</span> client = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">DnspodClient</span>(clientConfig);<br><span class=\"hljs-keyword\">const</span> params = &#123;<br>    <span class=\"hljs-string\">&quot;Domain&quot;</span>: <span class=\"hljs-string\">&quot;你的域名&quot;</span>,<br>    <span class=\"hljs-string\">&quot;SubDomain&quot;</span>: <span class=\"hljs-string\">&quot;你的子域名&quot;</span>,<br>    <span class=\"hljs-string\">&quot;RecordType&quot;</span>: <span class=\"hljs-string\">&quot;A&quot;</span>,<br>    <span class=\"hljs-string\">&quot;RecordLine&quot;</span>: <span class=\"hljs-string\">&quot;默认&quot;</span>,<br>    <span class=\"hljs-string\">&quot;Value&quot;</span>: ip,<br>    <span class=\"hljs-string\">&quot;TTL&quot;</span>: <span class=\"hljs-number\">600</span>,<br>    <span class=\"hljs-string\">&quot;RecordId&quot;</span>: 你所获取到的<span class=\"hljs-variable constant_\">ID</span><br>&#125;;<br>client.<span class=\"hljs-title class_\">ModifyRecord</span>(params).<span class=\"hljs-title function_\">then</span>(<br>  <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(data);<br>  &#125;,<br>  <span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">&quot;error&quot;</span>, err);<br>  &#125;<br>);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>在上面获取IP那部分将回调设置为调用这个函数即可</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">PublicIp</span>()<br>    .<span class=\"hljs-title function_\">queryPublicIPAddresses</span>()<br>    .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">result</span>) =&gt;</span> &#123;<br>        <span class=\"hljs-title function_\">changeIP</span>(result.<span class=\"hljs-property\">ipv4</span>)<br>    &#125;)<br>    .<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(err);<br>    &#125;);<br></code></pre></td></tr></table></figure>\n\n<p>到这里，就算完成这一流程了</p>\n<p>可以运行一下看下结果</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">node index.<span class=\"hljs-property\">js</span><br></code></pre></td></tr></table></figure>\n\n<p>出现类似这样的就是成功了</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2008264/a228930e434600d568dec636139a7323.png\"></p>\n<h3 id=\"总代码\"><a href=\"#总代码\" class=\"headerlink\" title=\"总代码\"></a>总代码</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">PublicIp</span> = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;nodejs-publicip&#x27;</span>);<br><span class=\"hljs-comment\">// Depends on tencentcloud-sdk-nodejs version 4.0.3 or higher</span><br><span class=\"hljs-keyword\">const</span> tencentcloud = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;tencentcloud-sdk-nodejs-dnspod&quot;</span>);<br><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">DnspodClient</span> = tencentcloud.<span class=\"hljs-property\">dnspod</span>.<span class=\"hljs-property\">v20210323</span>.<span class=\"hljs-property\">Client</span>;<br><br><span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">PublicIp</span>()<br>    .<span class=\"hljs-title function_\">queryPublicIPAddresses</span>()<br>    .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">result</span>) =&gt;</span> &#123;<br>        <span class=\"hljs-title function_\">changeIP</span>(result.<span class=\"hljs-property\">ipv4</span>);<br>    &#125;)<br>    .<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(err);<br>    &#125;);<br><br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">changeIP</span>(<span class=\"hljs-params\">ip</span>)&#123;<br><span class=\"hljs-keyword\">const</span> clientConfig = &#123;<br>  <span class=\"hljs-attr\">credential</span>: &#123;<br>    <span class=\"hljs-attr\">secretId</span>: <span class=\"hljs-string\">&quot;替换为你的secretId&quot;</span>,<br>    <span class=\"hljs-attr\">secretKey</span>: <span class=\"hljs-string\">&quot;替换为你的secretKey&quot;</span>,<br>  &#125;,<br>  <span class=\"hljs-attr\">region</span>: <span class=\"hljs-string\">&quot;&quot;</span>,<br>  <span class=\"hljs-attr\">profile</span>: &#123;<br>    <span class=\"hljs-attr\">httpProfile</span>: &#123;<br>      <span class=\"hljs-attr\">endpoint</span>: <span class=\"hljs-string\">&quot;dnspod.tencentcloudapi.com&quot;</span>,<br>    &#125;,<br>  &#125;,<br>&#125;;<br><br><span class=\"hljs-keyword\">const</span> client = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">DnspodClient</span>(clientConfig);<br><span class=\"hljs-keyword\">const</span> params = &#123;<br>    <span class=\"hljs-string\">&quot;Domain&quot;</span>: <span class=\"hljs-string\">&quot;你的域名&quot;</span>,<br>    <span class=\"hljs-string\">&quot;SubDomain&quot;</span>: <span class=\"hljs-string\">&quot;子域名&quot;</span>,<br>    <span class=\"hljs-string\">&quot;RecordType&quot;</span>: <span class=\"hljs-string\">&quot;A（IPV6为AAAA）&quot;</span>,<br>    <span class=\"hljs-string\">&quot;RecordLine&quot;</span>: <span class=\"hljs-string\">&quot;默认&quot;</span>,<br>    <span class=\"hljs-string\">&quot;Value&quot;</span>: ip,<br>    <span class=\"hljs-string\">&quot;TTL&quot;</span>: <span class=\"hljs-number\">600</span>,<br>    <span class=\"hljs-string\">&quot;RecordId&quot;</span>: 替换成你的<span class=\"hljs-title class_\">Recordid</span><br>&#125;;<br>client.<span class=\"hljs-title class_\">ModifyRecord</span>(params).<span class=\"hljs-title function_\">then</span>(<br>  <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(data);<br>  &#125;,<br>  <span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">&quot;error&quot;</span>, err);<br>  &#125;<br>);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>代码可以前往</p>\n<h1 id=\"自动化\"><a href=\"#自动化\" class=\"headerlink\" title=\"自动化\"></a>自动化</h1><p>现在已经可以通过命令行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">node index.js<br></code></pre></td></tr></table></figure>\n\n<p>来运行这个程序了</p>\n<p>那么就把他打包为cmd</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2008264/ee21497c9117c97f1f503e2a3caf6cc4.png\"></p>\n<h2 id=\"Windows中每周执行一次\"><a href=\"#Windows中每周执行一次\" class=\"headerlink\" title=\"Windows中每周执行一次\"></a>Windows中每周执行一次</h2><p>可参考文章：<a href=\"https://blog.51cto.com/u_13281972/2983264\">windows设置定时任务执行程序命令_13271972的技术博客_51CTO博客</a></p>\n<h2 id=\"Nodejs原生循环执行\"><a href=\"#Nodejs原生循环执行\" class=\"headerlink\" title=\"Nodejs原生循环执行\"></a>Nodejs原生循环执行</h2><p>如果你的业务场景很复杂，需要几分钟就变一次解析（而且你的套餐TTL很短）的情况下，建议直接使用setInterval定时器来进行操作</p>\n<p>只需要在PublicIP这个方法前后包裹一个SetInterval</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-built_in\">setInterval</span>(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">e</span>)&#123;<br>  <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">PublicIp</span>()<br>    .<span class=\"hljs-title function_\">queryPublicIPAddresses</span>()<br>    .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">result</span>) =&gt;</span> &#123;<br>        <span class=\"hljs-title function_\">changeIP</span>(result.<span class=\"hljs-property\">ipv4</span>);<br>    &#125;)<br>    .<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(err);<br>    &#125;);<br>&#125;,<span class=\"hljs-number\">600000</span>) <span class=\"hljs-comment\">//这里的数字是定时器的速度，单位毫秒，也就是多少毫秒执行一次</span><br></code></pre></td></tr></table></figure>\n\n<p>再次运行 node index.js 即可</p>\n<p>到此，教程就结束了，更多可能，需要我们一起探索</p>\n<p>Powered by Ar-Sr-Na</p>\n"},{"title":"2021，大半年来，我们向大家交出一份答卷","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"https://www.arsrna.cn","authorAbout":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","authorDesc":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","comments":1,"date":"2021-08-13T09:34:02.000Z","keywords":"总结","description":"2021，大半年来，我们向大家交出一份答卷","index_img":"https://res.arsrna.cn/blogs/2021-4ybirth/DSC09882.JPG_copwh","_content":"节目编号：\n\n# 我们学会了什么\n\n## 科普\n\n2019年7月，这是我来到广西南宁后第一次参加南宁良牙文化传播举办的月邪漫展，是南宁市一年两度的大展，两年后的1月29，我通过邮件联系上了这家公司，为了科普项目的需要，我们了解了举办一次展会需要多少资金，收入从哪来，如何推测观众渴望的嘉宾，怎么才能估算规模，提前几个月开始策划，只为了提供游客最好的体验，做科普项目也有两年了，这个项目，不仅仅只是我自己的只是储量展现给大家，如同大家上学的时候，接触的知识绝不止于学校围墙内的知识，社会动荡和一些娱乐圈子每天都能接触不同的瓜，但是大家可能不会深钻这些“瓜”，而我作为科普自媒体，想要了解为什么这么发生了，就必须得深究。如今，我们正和数十家公司和小伙伴们不断联系，互相交往，互相促进，这正是知识的力量\n\n## Coding\n\n2021，我接触了后端到前端的过渡开发，从前端再到全栈开发，她们的第一个应用是RTC实时音视频系统，为音视频通话提供动力，虽逻辑不是很紧密，但是仅靠这几千行代码就能在千里之外连接彼此，或许这正是代码的力量吧\n\n4月，为了参加一个AI相关的比赛，通过腾讯云API完成应用，对于鉴权等方面我还是很不熟悉，自己搭建了个Node.js的应用，但是上线之前发现我还要把它搬到云端，我是Serverless重度应用，必须迁移到Serverless架构，这意味着所有代码都得改造，我去求助腾讯云的工程师，他非常耐心的解决问题，直到半夜两点，为什么？我问他，同时也在问我自己——为了尽仅有的一份力突破技术边界去探索\n\n## 新领域——电子\n\n与电子的故事从2015年就能说起，电子是一个无穷无尽的领域，偶然间接触到了伊朗作死哥的视频，从一开始看整活到后面真真正正的学习\n\n最近又有一个好玩的东西——LM3915，关于他的故事，我么下期再讲。\n\n同时我不得不感谢那天接通我电话的客服，虽然我的问的都是奇怪的问题，比如导入BOM清单，PCB转原理图，焊盘打过孔......真正有价值的是她的一句话：“立创eda现在有个训练营活动，您可以去公众号了解一下”我并没有当做广告忽视掉它，我详细了解了活动，报名了活动，接下来是这个作品的故事：\n\n我在7月12填了表，许多人可能在这一步就感觉输给了对手，我觉得这个训练营没有名次，有的只是训练的机会\n\n7月13,14......21,22每天都在更新我的作品，从最开始的TDA2030，到TDA7297，到TDA2003\n\n只有功放功能或许太单调，来点个性化的吧\n\n![](https://res.arsrna.cn/blogs/2021-4ybirth/20210814152648.png_copwh)\n\n它是一款均衡器和功放，花了一个月时间去设计，优化，调试\n\n就连以前捣鼓的前端也没有继续完成，因为电子实在是有无穷大的魅力，要是软件与硬件结合起来，只要感想，它们就能做。\n甚至于与元器件们产生了感情；第一次设计，花了2周，回来发现功放和均衡器电源短路，又花了1周改进均衡器成功了，但是功放没声音，结果发现买了假芯片非常无语。第三次不用这颗芯片转而使用便宜点的2003，到手后，花了一下午焊接，通电，灯光正常，接入音响然后\n\n**它响了**\n\n<div id=\"player\"></div>\n<script type=\"text/javascript\" src=\"https://player.dogecloud.com/js/loader\"></script>\n<script type=\"text/javascript\">\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: '3fbd60cdabefef47',\n    autoPlay: false\n});\n</script>\n\n非常洪亮，非常清晰，虽然不及所谓的通透，但至少它响了，这是我第一次制作功放，这一声响证明了一个月的努力没有白费，也感谢oshwhub的刘工给予了非常多的技术支持，也感谢特别可爱的小橘，更离不开的是我们的群友，好的精神不断感染着我，从一开始的放弃，到群友们的作品给我的动力，直到灯亮音响，虽没获得好的名次，但我是2200人参加中，550人制作里，116人完成的获奖25人之一，我也是获奖名单中唯二一个两个工程获奖的用户（嘴上说奖没我的份了，结果还是进了个榜单）\n\n![最长那个是我，两个工程](https://res.arsrna.cn/blogs/2021-4ybirth/3FFC371353887F89C10B099B3EE00CF2.JPG_copwh)\n\n颁奖就在昨天，吃着饭，看着直播，每一个环节甚是期待\n\n[https://oshwhub.com/13026918161/gflm3915](工程-功放)\n\n[https://oshwhub.com/13026918161/lm3600_5](工程-均衡器)\n\n电子的世界，难以描述，难以想象，一颗不起眼的电子却能推动全人类的发展，小到01005大到拳头的电阻电容，无形中改变着我们对科技的认知，物联网这个圈子，蕴含着无限潜能，如同我们的标语，跨越边界，触碰极限，只要敢想，甚至天马行空，就能够从中取得灵感，实现梦想的前提是想，我们有团队，也有朋友，你们也有，大家都有，想得出来分享给大家，我们共同实现这触碰极限的梦想，这是骨子里的叛逆，超越一切不可能，改变一切理所应当，我们与大家共同探索，一同超越，为每一颗电子注入青春活力\n\n如今，用自己的努力换来了别人的认可，立创eda也希望我们能够继续坚持自己的这份热情，同时也会在资金上给予支持，“只要你有梦想，我们帮你实现”\n\n## 做视频\n\n因为今年精力都不在做视频上了，更新频率较低，有一天晚上我在反思还要不要做下去，想起很久以前我视频的经历，在这里有一个小问题问大家\n\n***大家还记得 **爱拍** 这个原创平台吗？***\n\n我人生中第一个视频就是在爱拍上发的，当年的生死狙击，4399的视频全是在那看的，不知在哪年，它突然终止了服务\n\n做视频可以改变你对生活的角度，从主观到客观，但绝不是活在别人眼里，活在镜头里，甚至被101010的数据困在笼子里，我们要的是自由的生活，但是自由是在客观下的自由，做视频不仅仅是分享自己的生活，也要让观众产生共鸣，所以不可或缺的就是在别人眼里被接受。\n\n今天无意间才想到爱拍，现在发视频都是在腾讯云+社区和bilibili，爱拍见证了我视频质量的提高，同时b站记录了我对领域边界的突破，腾讯云+社区上的技术文章让我理解藐视理所当然，每一个视频平台都有着他们的故事，上演的确是我们的故事，改变故事的，是我们\n\n所以，爱拍会回来吗\n\n2021-8-14 Ar-Sr-Na 有感写下\n","source":"_posts/2021-4ybirth.md","raw":"---\ntitle: 2021，大半年来，我们向大家交出一份答卷\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: 'https://www.arsrna.cn'\nauthorAbout: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\nauthorDesc: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\ncomments: true\ndate: 2021-08-13 17:34:02\ncategories: 技术\ntags: 总结\nkeywords: 总结\ndescription: 2021，大半年来，我们向大家交出一份答卷\nindex_img: https://res.arsrna.cn/blogs/2021-4ybirth/DSC09882.JPG_copwh\n---\n节目编号：\n\n# 我们学会了什么\n\n## 科普\n\n2019年7月，这是我来到广西南宁后第一次参加南宁良牙文化传播举办的月邪漫展，是南宁市一年两度的大展，两年后的1月29，我通过邮件联系上了这家公司，为了科普项目的需要，我们了解了举办一次展会需要多少资金，收入从哪来，如何推测观众渴望的嘉宾，怎么才能估算规模，提前几个月开始策划，只为了提供游客最好的体验，做科普项目也有两年了，这个项目，不仅仅只是我自己的只是储量展现给大家，如同大家上学的时候，接触的知识绝不止于学校围墙内的知识，社会动荡和一些娱乐圈子每天都能接触不同的瓜，但是大家可能不会深钻这些“瓜”，而我作为科普自媒体，想要了解为什么这么发生了，就必须得深究。如今，我们正和数十家公司和小伙伴们不断联系，互相交往，互相促进，这正是知识的力量\n\n## Coding\n\n2021，我接触了后端到前端的过渡开发，从前端再到全栈开发，她们的第一个应用是RTC实时音视频系统，为音视频通话提供动力，虽逻辑不是很紧密，但是仅靠这几千行代码就能在千里之外连接彼此，或许这正是代码的力量吧\n\n4月，为了参加一个AI相关的比赛，通过腾讯云API完成应用，对于鉴权等方面我还是很不熟悉，自己搭建了个Node.js的应用，但是上线之前发现我还要把它搬到云端，我是Serverless重度应用，必须迁移到Serverless架构，这意味着所有代码都得改造，我去求助腾讯云的工程师，他非常耐心的解决问题，直到半夜两点，为什么？我问他，同时也在问我自己——为了尽仅有的一份力突破技术边界去探索\n\n## 新领域——电子\n\n与电子的故事从2015年就能说起，电子是一个无穷无尽的领域，偶然间接触到了伊朗作死哥的视频，从一开始看整活到后面真真正正的学习\n\n最近又有一个好玩的东西——LM3915，关于他的故事，我么下期再讲。\n\n同时我不得不感谢那天接通我电话的客服，虽然我的问的都是奇怪的问题，比如导入BOM清单，PCB转原理图，焊盘打过孔......真正有价值的是她的一句话：“立创eda现在有个训练营活动，您可以去公众号了解一下”我并没有当做广告忽视掉它，我详细了解了活动，报名了活动，接下来是这个作品的故事：\n\n我在7月12填了表，许多人可能在这一步就感觉输给了对手，我觉得这个训练营没有名次，有的只是训练的机会\n\n7月13,14......21,22每天都在更新我的作品，从最开始的TDA2030，到TDA7297，到TDA2003\n\n只有功放功能或许太单调，来点个性化的吧\n\n![](https://res.arsrna.cn/blogs/2021-4ybirth/20210814152648.png_copwh)\n\n它是一款均衡器和功放，花了一个月时间去设计，优化，调试\n\n就连以前捣鼓的前端也没有继续完成，因为电子实在是有无穷大的魅力，要是软件与硬件结合起来，只要感想，它们就能做。\n甚至于与元器件们产生了感情；第一次设计，花了2周，回来发现功放和均衡器电源短路，又花了1周改进均衡器成功了，但是功放没声音，结果发现买了假芯片非常无语。第三次不用这颗芯片转而使用便宜点的2003，到手后，花了一下午焊接，通电，灯光正常，接入音响然后\n\n**它响了**\n\n<div id=\"player\"></div>\n<script type=\"text/javascript\" src=\"https://player.dogecloud.com/js/loader\"></script>\n<script type=\"text/javascript\">\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: '3fbd60cdabefef47',\n    autoPlay: false\n});\n</script>\n\n非常洪亮，非常清晰，虽然不及所谓的通透，但至少它响了，这是我第一次制作功放，这一声响证明了一个月的努力没有白费，也感谢oshwhub的刘工给予了非常多的技术支持，也感谢特别可爱的小橘，更离不开的是我们的群友，好的精神不断感染着我，从一开始的放弃，到群友们的作品给我的动力，直到灯亮音响，虽没获得好的名次，但我是2200人参加中，550人制作里，116人完成的获奖25人之一，我也是获奖名单中唯二一个两个工程获奖的用户（嘴上说奖没我的份了，结果还是进了个榜单）\n\n![最长那个是我，两个工程](https://res.arsrna.cn/blogs/2021-4ybirth/3FFC371353887F89C10B099B3EE00CF2.JPG_copwh)\n\n颁奖就在昨天，吃着饭，看着直播，每一个环节甚是期待\n\n[https://oshwhub.com/13026918161/gflm3915](工程-功放)\n\n[https://oshwhub.com/13026918161/lm3600_5](工程-均衡器)\n\n电子的世界，难以描述，难以想象，一颗不起眼的电子却能推动全人类的发展，小到01005大到拳头的电阻电容，无形中改变着我们对科技的认知，物联网这个圈子，蕴含着无限潜能，如同我们的标语，跨越边界，触碰极限，只要敢想，甚至天马行空，就能够从中取得灵感，实现梦想的前提是想，我们有团队，也有朋友，你们也有，大家都有，想得出来分享给大家，我们共同实现这触碰极限的梦想，这是骨子里的叛逆，超越一切不可能，改变一切理所应当，我们与大家共同探索，一同超越，为每一颗电子注入青春活力\n\n如今，用自己的努力换来了别人的认可，立创eda也希望我们能够继续坚持自己的这份热情，同时也会在资金上给予支持，“只要你有梦想，我们帮你实现”\n\n## 做视频\n\n因为今年精力都不在做视频上了，更新频率较低，有一天晚上我在反思还要不要做下去，想起很久以前我视频的经历，在这里有一个小问题问大家\n\n***大家还记得 **爱拍** 这个原创平台吗？***\n\n我人生中第一个视频就是在爱拍上发的，当年的生死狙击，4399的视频全是在那看的，不知在哪年，它突然终止了服务\n\n做视频可以改变你对生活的角度，从主观到客观，但绝不是活在别人眼里，活在镜头里，甚至被101010的数据困在笼子里，我们要的是自由的生活，但是自由是在客观下的自由，做视频不仅仅是分享自己的生活，也要让观众产生共鸣，所以不可或缺的就是在别人眼里被接受。\n\n今天无意间才想到爱拍，现在发视频都是在腾讯云+社区和bilibili，爱拍见证了我视频质量的提高，同时b站记录了我对领域边界的突破，腾讯云+社区上的技术文章让我理解藐视理所当然，每一个视频平台都有着他们的故事，上演的确是我们的故事，改变故事的，是我们\n\n所以，爱拍会回来吗\n\n2021-8-14 Ar-Sr-Na 有感写下\n","slug":"2021-4ybirth","published":1,"updated":"2023-01-17T08:55:38.570Z","layout":"post","photos":[],"link":"","_id":"clod0d6xt0036c0nd8ogf176e","content":"<p>节目编号：</p>\n<h1 id=\"我们学会了什么\"><a href=\"#我们学会了什么\" class=\"headerlink\" title=\"我们学会了什么\"></a>我们学会了什么</h1><h2 id=\"科普\"><a href=\"#科普\" class=\"headerlink\" title=\"科普\"></a>科普</h2><p>2019年7月，这是我来到广西南宁后第一次参加南宁良牙文化传播举办的月邪漫展，是南宁市一年两度的大展，两年后的1月29，我通过邮件联系上了这家公司，为了科普项目的需要，我们了解了举办一次展会需要多少资金，收入从哪来，如何推测观众渴望的嘉宾，怎么才能估算规模，提前几个月开始策划，只为了提供游客最好的体验，做科普项目也有两年了，这个项目，不仅仅只是我自己的只是储量展现给大家，如同大家上学的时候，接触的知识绝不止于学校围墙内的知识，社会动荡和一些娱乐圈子每天都能接触不同的瓜，但是大家可能不会深钻这些“瓜”，而我作为科普自媒体，想要了解为什么这么发生了，就必须得深究。如今，我们正和数十家公司和小伙伴们不断联系，互相交往，互相促进，这正是知识的力量</p>\n<h2 id=\"Coding\"><a href=\"#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2><p>2021，我接触了后端到前端的过渡开发，从前端再到全栈开发，她们的第一个应用是RTC实时音视频系统，为音视频通话提供动力，虽逻辑不是很紧密，但是仅靠这几千行代码就能在千里之外连接彼此，或许这正是代码的力量吧</p>\n<p>4月，为了参加一个AI相关的比赛，通过腾讯云API完成应用，对于鉴权等方面我还是很不熟悉，自己搭建了个Node.js的应用，但是上线之前发现我还要把它搬到云端，我是Serverless重度应用，必须迁移到Serverless架构，这意味着所有代码都得改造，我去求助腾讯云的工程师，他非常耐心的解决问题，直到半夜两点，为什么？我问他，同时也在问我自己——为了尽仅有的一份力突破技术边界去探索</p>\n<h2 id=\"新领域——电子\"><a href=\"#新领域——电子\" class=\"headerlink\" title=\"新领域——电子\"></a>新领域——电子</h2><p>与电子的故事从2015年就能说起，电子是一个无穷无尽的领域，偶然间接触到了伊朗作死哥的视频，从一开始看整活到后面真真正正的学习</p>\n<p>最近又有一个好玩的东西——LM3915，关于他的故事，我么下期再讲。</p>\n<p>同时我不得不感谢那天接通我电话的客服，虽然我的问的都是奇怪的问题，比如导入BOM清单，PCB转原理图，焊盘打过孔……真正有价值的是她的一句话：“立创eda现在有个训练营活动，您可以去公众号了解一下”我并没有当做广告忽视掉它，我详细了解了活动，报名了活动，接下来是这个作品的故事：</p>\n<p>我在7月12填了表，许多人可能在这一步就感觉输给了对手，我觉得这个训练营没有名次，有的只是训练的机会</p>\n<p>7月13,14……21,22每天都在更新我的作品，从最开始的TDA2030，到TDA7297，到TDA2003</p>\n<p>只有功放功能或许太单调，来点个性化的吧</p>\n<p><img src=\"https://res.arsrna.cn/blogs/2021-4ybirth/20210814152648.png_copwh\"></p>\n<p>它是一款均衡器和功放，花了一个月时间去设计，优化，调试</p>\n<p>就连以前捣鼓的前端也没有继续完成，因为电子实在是有无穷大的魅力，要是软件与硬件结合起来，只要感想，它们就能做。<br>甚至于与元器件们产生了感情；第一次设计，花了2周，回来发现功放和均衡器电源短路，又花了1周改进均衡器成功了，但是功放没声音，结果发现买了假芯片非常无语。第三次不用这颗芯片转而使用便宜点的2003，到手后，花了一下午焊接，通电，灯光正常，接入音响然后</p>\n<p><strong>它响了</strong></p>\n<div id=\"player\"></div>\n<script type=\"text/javascript\" src=\"https://player.dogecloud.com/js/loader\"></script>\n<script type=\"text/javascript\">\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: '3fbd60cdabefef47',\n    autoPlay: false\n});\n</script>\n\n<p>非常洪亮，非常清晰，虽然不及所谓的通透，但至少它响了，这是我第一次制作功放，这一声响证明了一个月的努力没有白费，也感谢oshwhub的刘工给予了非常多的技术支持，也感谢特别可爱的小橘，更离不开的是我们的群友，好的精神不断感染着我，从一开始的放弃，到群友们的作品给我的动力，直到灯亮音响，虽没获得好的名次，但我是2200人参加中，550人制作里，116人完成的获奖25人之一，我也是获奖名单中唯二一个两个工程获奖的用户（嘴上说奖没我的份了，结果还是进了个榜单）</p>\n<p><img src=\"https://res.arsrna.cn/blogs/2021-4ybirth/3FFC371353887F89C10B099B3EE00CF2.JPG_copwh\" alt=\"最长那个是我，两个工程\"></p>\n<p>颁奖就在昨天，吃着饭，看着直播，每一个环节甚是期待</p>\n<p><a href=\"%E5%B7%A5%E7%A8%8B-%E5%8A%9F%E6%94%BE\">https://oshwhub.com/13026918161/gflm3915</a></p>\n<p><a href=\"%E5%B7%A5%E7%A8%8B-%E5%9D%87%E8%A1%A1%E5%99%A8\">https://oshwhub.com/13026918161/lm3600_5</a></p>\n<p>电子的世界，难以描述，难以想象，一颗不起眼的电子却能推动全人类的发展，小到01005大到拳头的电阻电容，无形中改变着我们对科技的认知，物联网这个圈子，蕴含着无限潜能，如同我们的标语，跨越边界，触碰极限，只要敢想，甚至天马行空，就能够从中取得灵感，实现梦想的前提是想，我们有团队，也有朋友，你们也有，大家都有，想得出来分享给大家，我们共同实现这触碰极限的梦想，这是骨子里的叛逆，超越一切不可能，改变一切理所应当，我们与大家共同探索，一同超越，为每一颗电子注入青春活力</p>\n<p>如今，用自己的努力换来了别人的认可，立创eda也希望我们能够继续坚持自己的这份热情，同时也会在资金上给予支持，“只要你有梦想，我们帮你实现”</p>\n<h2 id=\"做视频\"><a href=\"#做视频\" class=\"headerlink\" title=\"做视频\"></a>做视频</h2><p>因为今年精力都不在做视频上了，更新频率较低，有一天晚上我在反思还要不要做下去，想起很久以前我视频的经历，在这里有一个小问题问大家</p>\n<p><em><strong>大家还记得 <strong>爱拍</strong> 这个原创平台吗？</strong></em></p>\n<p>我人生中第一个视频就是在爱拍上发的，当年的生死狙击，4399的视频全是在那看的，不知在哪年，它突然终止了服务</p>\n<p>做视频可以改变你对生活的角度，从主观到客观，但绝不是活在别人眼里，活在镜头里，甚至被101010的数据困在笼子里，我们要的是自由的生活，但是自由是在客观下的自由，做视频不仅仅是分享自己的生活，也要让观众产生共鸣，所以不可或缺的就是在别人眼里被接受。</p>\n<p>今天无意间才想到爱拍，现在发视频都是在腾讯云+社区和bilibili，爱拍见证了我视频质量的提高，同时b站记录了我对领域边界的突破，腾讯云+社区上的技术文章让我理解藐视理所当然，每一个视频平台都有着他们的故事，上演的确是我们的故事，改变故事的，是我们</p>\n<p>所以，爱拍会回来吗</p>\n<p>2021-8-14 Ar-Sr-Na 有感写下</p>\n","site":{"data":{}},"excerpt":"","more":"<p>节目编号：</p>\n<h1 id=\"我们学会了什么\"><a href=\"#我们学会了什么\" class=\"headerlink\" title=\"我们学会了什么\"></a>我们学会了什么</h1><h2 id=\"科普\"><a href=\"#科普\" class=\"headerlink\" title=\"科普\"></a>科普</h2><p>2019年7月，这是我来到广西南宁后第一次参加南宁良牙文化传播举办的月邪漫展，是南宁市一年两度的大展，两年后的1月29，我通过邮件联系上了这家公司，为了科普项目的需要，我们了解了举办一次展会需要多少资金，收入从哪来，如何推测观众渴望的嘉宾，怎么才能估算规模，提前几个月开始策划，只为了提供游客最好的体验，做科普项目也有两年了，这个项目，不仅仅只是我自己的只是储量展现给大家，如同大家上学的时候，接触的知识绝不止于学校围墙内的知识，社会动荡和一些娱乐圈子每天都能接触不同的瓜，但是大家可能不会深钻这些“瓜”，而我作为科普自媒体，想要了解为什么这么发生了，就必须得深究。如今，我们正和数十家公司和小伙伴们不断联系，互相交往，互相促进，这正是知识的力量</p>\n<h2 id=\"Coding\"><a href=\"#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2><p>2021，我接触了后端到前端的过渡开发，从前端再到全栈开发，她们的第一个应用是RTC实时音视频系统，为音视频通话提供动力，虽逻辑不是很紧密，但是仅靠这几千行代码就能在千里之外连接彼此，或许这正是代码的力量吧</p>\n<p>4月，为了参加一个AI相关的比赛，通过腾讯云API完成应用，对于鉴权等方面我还是很不熟悉，自己搭建了个Node.js的应用，但是上线之前发现我还要把它搬到云端，我是Serverless重度应用，必须迁移到Serverless架构，这意味着所有代码都得改造，我去求助腾讯云的工程师，他非常耐心的解决问题，直到半夜两点，为什么？我问他，同时也在问我自己——为了尽仅有的一份力突破技术边界去探索</p>\n<h2 id=\"新领域——电子\"><a href=\"#新领域——电子\" class=\"headerlink\" title=\"新领域——电子\"></a>新领域——电子</h2><p>与电子的故事从2015年就能说起，电子是一个无穷无尽的领域，偶然间接触到了伊朗作死哥的视频，从一开始看整活到后面真真正正的学习</p>\n<p>最近又有一个好玩的东西——LM3915，关于他的故事，我么下期再讲。</p>\n<p>同时我不得不感谢那天接通我电话的客服，虽然我的问的都是奇怪的问题，比如导入BOM清单，PCB转原理图，焊盘打过孔……真正有价值的是她的一句话：“立创eda现在有个训练营活动，您可以去公众号了解一下”我并没有当做广告忽视掉它，我详细了解了活动，报名了活动，接下来是这个作品的故事：</p>\n<p>我在7月12填了表，许多人可能在这一步就感觉输给了对手，我觉得这个训练营没有名次，有的只是训练的机会</p>\n<p>7月13,14……21,22每天都在更新我的作品，从最开始的TDA2030，到TDA7297，到TDA2003</p>\n<p>只有功放功能或许太单调，来点个性化的吧</p>\n<p><img src=\"https://res.arsrna.cn/blogs/2021-4ybirth/20210814152648.png_copwh\"></p>\n<p>它是一款均衡器和功放，花了一个月时间去设计，优化，调试</p>\n<p>就连以前捣鼓的前端也没有继续完成，因为电子实在是有无穷大的魅力，要是软件与硬件结合起来，只要感想，它们就能做。<br>甚至于与元器件们产生了感情；第一次设计，花了2周，回来发现功放和均衡器电源短路，又花了1周改进均衡器成功了，但是功放没声音，结果发现买了假芯片非常无语。第三次不用这颗芯片转而使用便宜点的2003，到手后，花了一下午焊接，通电，灯光正常，接入音响然后</p>\n<p><strong>它响了</strong></p>\n<div id=\"player\"></div>\n<script type=\"text/javascript\" src=\"https://player.dogecloud.com/js/loader\"></script>\n<script type=\"text/javascript\">\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: '3fbd60cdabefef47',\n    autoPlay: false\n});\n</script>\n\n<p>非常洪亮，非常清晰，虽然不及所谓的通透，但至少它响了，这是我第一次制作功放，这一声响证明了一个月的努力没有白费，也感谢oshwhub的刘工给予了非常多的技术支持，也感谢特别可爱的小橘，更离不开的是我们的群友，好的精神不断感染着我，从一开始的放弃，到群友们的作品给我的动力，直到灯亮音响，虽没获得好的名次，但我是2200人参加中，550人制作里，116人完成的获奖25人之一，我也是获奖名单中唯二一个两个工程获奖的用户（嘴上说奖没我的份了，结果还是进了个榜单）</p>\n<p><img src=\"https://res.arsrna.cn/blogs/2021-4ybirth/3FFC371353887F89C10B099B3EE00CF2.JPG_copwh\" alt=\"最长那个是我，两个工程\"></p>\n<p>颁奖就在昨天，吃着饭，看着直播，每一个环节甚是期待</p>\n<p><a href=\"%E5%B7%A5%E7%A8%8B-%E5%8A%9F%E6%94%BE\">https://oshwhub.com/13026918161/gflm3915</a></p>\n<p><a href=\"%E5%B7%A5%E7%A8%8B-%E5%9D%87%E8%A1%A1%E5%99%A8\">https://oshwhub.com/13026918161/lm3600_5</a></p>\n<p>电子的世界，难以描述，难以想象，一颗不起眼的电子却能推动全人类的发展，小到01005大到拳头的电阻电容，无形中改变着我们对科技的认知，物联网这个圈子，蕴含着无限潜能，如同我们的标语，跨越边界，触碰极限，只要敢想，甚至天马行空，就能够从中取得灵感，实现梦想的前提是想，我们有团队，也有朋友，你们也有，大家都有，想得出来分享给大家，我们共同实现这触碰极限的梦想，这是骨子里的叛逆，超越一切不可能，改变一切理所应当，我们与大家共同探索，一同超越，为每一颗电子注入青春活力</p>\n<p>如今，用自己的努力换来了别人的认可，立创eda也希望我们能够继续坚持自己的这份热情，同时也会在资金上给予支持，“只要你有梦想，我们帮你实现”</p>\n<h2 id=\"做视频\"><a href=\"#做视频\" class=\"headerlink\" title=\"做视频\"></a>做视频</h2><p>因为今年精力都不在做视频上了，更新频率较低，有一天晚上我在反思还要不要做下去，想起很久以前我视频的经历，在这里有一个小问题问大家</p>\n<p><em><strong>大家还记得 <strong>爱拍</strong> 这个原创平台吗？</strong></em></p>\n<p>我人生中第一个视频就是在爱拍上发的，当年的生死狙击，4399的视频全是在那看的，不知在哪年，它突然终止了服务</p>\n<p>做视频可以改变你对生活的角度，从主观到客观，但绝不是活在别人眼里，活在镜头里，甚至被101010的数据困在笼子里，我们要的是自由的生活，但是自由是在客观下的自由，做视频不仅仅是分享自己的生活，也要让观众产生共鸣，所以不可或缺的就是在别人眼里被接受。</p>\n<p>今天无意间才想到爱拍，现在发视频都是在腾讯云+社区和bilibili，爱拍见证了我视频质量的提高，同时b站记录了我对领域边界的突破，腾讯云+社区上的技术文章让我理解藐视理所当然，每一个视频平台都有着他们的故事，上演的确是我们的故事，改变故事的，是我们</p>\n<p>所以，爱拍会回来吗</p>\n<p>2021-8-14 Ar-Sr-Na 有感写下</p>\n"},{"title":"【GPU服务器】图像深度学习超分辨率放大（Real-ESRGAN）","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"www.arsrna.cn","authorAbout":"突破计算边界，构筑数字视界，www.arsrna.cn","authorDesc":"突破计算边界，构筑数字视界，www.arsrna.cn","comments":1,"description":"本文介绍如何使用GPU服务器，使用ESRGAN完成图像放大作","index_img":"https://res.arsrna.cn/blog-images/2011313/393a059558724bf8a1fdf03d39c37fd4.png","date":"2022-06-08T03:16:00.000Z","_content":"# 前言\n\n## 技术提要\n\nESRGAN全称为Enhanced Super-Resolution Generative Adversarial Networks\n\n该技术相关论文：[https://arxiv.org/pdf/1809.00219.pdf](https://arxiv.org/pdf/1809.00219.pdf)\n\n太过复杂的技术原理不做赘述。\n\n通过输入图像输入，邻近插值后寻找马赛克位置插值，同时对二次插值后的位置使用AI的模型进行消除噪声，消除伪影\n\n开山之作为SRCNN\n\n![](https://res.arsrna.cn/blog-images/2011313/393a059558724bf8a1fdf03d39c37fd4.png)\n\nESRGAN则是在以上所有技术上再先进一步，改进了质量\n\n作者地址：[github.com](https://github.com/xinntao/ESRGAN)\n\n## 运行环境需求\n\n### 硬件\n\n由于需要调用AI核心，而且针对的是图形处理，所以需要用到具有图形功能的设备\n\n可以选购腾讯云的GPU服务器，推荐使用GT4或GN7机型，并安装好GRID驱动\n\n驱动安装：[GPU 云服务器 安装 NVIDIA GRID 驱动-操作指南-文档中心-腾讯云-腾讯云 (tencent.com)](https://cloud.tencent.com/document/product/560/30060)\n\n测试图片：\n\n原图 1340\\*1748\n\n![](https://res.arsrna.cn/blog-images/2011313/85962a84491a13f6d137a05212ad1ac8.png)\n\n以下是测试内容及预期结果\n\n其中，主观质量为放大线条连续度，越高越好\n\n| 内容\\*放大倍数       | 显卡型号（显卡&#124; 显存） | 主观质量 | 处理耗时/s |\n| :------------------- | :-------------------------- | :------- | :--------- |\n| 动画图片\\*4          | NVIDIA Tesla T4 16G         | 9        | 19         |\n| 动画图片\\*4          | NVIDIA Tesla T4 GRID1/2 8G  | 9        | 35         |\n| 动画图片\\*16(\\*4\\*4) | NVIDIA Tesla T4 16G         | 10       | 300+       |\n| 动画图片\\*16(\\*4\\*4) | NVIDIA Tesla T4 GRID1/2 8G  | 10       | 150        |\n\n这里推荐腾讯云的GN7机型，提供Tesla T4显卡，并预制好GPU GRID图形驱动\n\n### 软件\n\n需要用到图片训练模型（ESRGAN自带），训练的图片\n\n模型下载：[Tags · xinntao/ESRGAN · GitHub](https://github.com/xinntao/ESRGAN/tags)\n\n# 使用方法教程\n\n## 命令行调用\n\n打开命令行，cd到realesrgan的目录\n\n在这里，输入图片在 同目录下，为 `input.jpg`\n\n```shell\n.\\realesrgan-ncnn-vulkan.exe -i input.jpg -o output.jpg -n realesrgan-x4plus-anime\n```\n\n| 参数 | 内容             |\n| :--- | :--------------- |\n| -i   | 设置输入图片路径 |\n| -o   | 设置图片输出路径 |\n| -n   | 设置模型         |\n\n如果不在同目录的，要用绝对路径，例如\n\n`F:\\realsgan\\input.png`\n\n带有空格的目录名，要用引号包括起来，例如\n\n`\"F:\\Develop file\\realsgan\\input test.png\"`\n\n回车之后就可以进行处理了\n\n![](https://res.arsrna.cn/blog-images/2011313/6e45dcdaa660f9eb5dabaa71ec614753.png)\n\n执行到100%的时候就会在设置输出目录下输出 output.jpg\n\n![](https://res.arsrna.cn/blog-images/2011313/9a5a4422f8ea9f02df304cd8c7e7758e.png)\n\n分辨率对比\n\n![](https://res.arsrna.cn/blog-images/2011313/9b115b8a674d0ceedfacf6c318efe7b1.png)\n\n正好放大了4倍\n\n同时对比一下图片差异（左边原图，右边放大4倍）\n\n![未缩放](https://res.arsrna.cn/blog-images/2011313/ed6cdefb900953e8aaaf001eb58d9282.png)\n\n![缩放500%](https://res.arsrna.cn/blog-images/2011313/c70ac1eeca0a41b48d4b7438d4b0b281.png)\n\n## 腾讯云自动助手调用\n\n确认服务器已经安装 TATSVC\n\n### 安装自动化助手\n\n如果没有安装，请登录服务器，右键开始菜单，Powershell管理员打开\n\n![image.png](https://res.arsrna.cn/blog-images/2011313/4792d2b5371087a9cb505f7c86a64c7d.png)\n\n键入如下命令\n\n```shell\nwget https://tat-gz-1258344699.cos.ap-guangzhou.myqcloud.com/tat_agent_windows_i686.zip -OutFile .\\tat_agent_windows_i686.zip;Expand-Archive -Path .\\tat_agent_windows_i686.zip -DestinationPath .\\tat_agent_windows_i686;.\\tat_agent_windows_i686\\install.bat;Remove-Item -Recurse -Force .\\tat_agent_windows_i686, .\\tat_agent_windows_i686.zip\n```\n\n回车\n\n![image.png](https://res.arsrna.cn/blog-images/2011313/302c75596b042ecdf7fc1b8d742ebc1a.png)\n\n### 控制台新建命令\n\n在云服务器控制台-自动化助手-我的命令（[https://console.cloud.tencent.com/cvm/command](https://console.cloud.tencent.com/cvm/command)）\n\n处新建一个命令\n\n![image.png](https://res.arsrna.cn/blog-images/2011313/fc3346e5efb9f22f813c86df82f3b5e0.png)\n\n按图示完成配置\n\n在命令内容里键入\n\n```shell\n.\\realesrgan-ncnn-vulkan.exe -i {{input}} -o {{output}} -n realesrgan-x4plus-anime\n```\n\n其中，`{{input}}`与 `{{output}}`都是命令参数，方便执行的时候更改不同文件\n\n这里展示下我的配置，推荐使用这串命令，这样每次就不用设置输出路径和名称了：\n\n```js\n.\\realesrgan-ncnn-vulkan.exe -i {{inputPath}}.{{ext}} -o {{inputPath}}_4x.{{ext}} -n realesrgan-x4plus-anime\n```\n\n其中，`{{inputPath}}`是输入路径，`{{ext}}`是后缀名\n\n例如 `G:\\OneDrive - ArSrNa CC\\Wallpaper\\22-16061GFT0400.jpg`转化过去就是\n\n```shell\n$inputPath=\"G:\\OneDrive - ArSrNa CC\\Wallpaper\\22-16061GFT0400\"\n$ext=\"jpg\"\n```\n\n执行的时候只需要这么填写参数\n\n| 参数      | 内容                                                | 说明                     |\n| :-------- | :-------------------------------------------------- | :----------------------- |\n| inputPath | \"G:\\OneDrive - ArSrNa CC\\Wallpaper\\22-16061GFT0400\" | 输入的路径（包含到文件） |\n| ext       | \"jpg\"                                               | 后缀名                   |\n\n### 执行命令\n\n对命令单击执行\n\n![image.png](https://res.arsrna.cn/blog-images/2011313/aa6c429e24361c9d7923d1866cf371d9.png)\n\n调整好参数，选中主机\n\n![image.png](https://res.arsrna.cn/blog-images/2011313/3e756208fbb439a324bcc69cb59c4d39.png)\n\n最后点击执行命令就可以跟踪命令运行的状态了\n\n![image.png](https://res.arsrna.cn/blog-images/2011313/db5936f5c22b9e238f929b93d82b1242.png)\n\n完成之后会有提示\n\n![image.png](https://res.arsrna.cn/blog-images/2011313/cacb9f6a99c3175c13967fb62eaa442a.png)\n\n回到服务器，找到 input\\_out.jpg ，就是输出的结果\n\n![image.png](https://res.arsrna.cn/blog-images/2011313/457e370ba72d0e0458fb092f4e3c5db8.png)\n\n## API调用\n\n### 操作\n\n通过API操作自动化助手，对服务器进行处理，这种方法适用于Web，app等在线处理平台\n\n首先在API Explorer里找到TAT产品触发命令（[在这里](https://console.cloud.tencent.com/api/explorer?Product=tat&Version=2020-10-28&Action=InvokeCommand&SignVersion=)）\n\n根据参数填写\n\n![image.png](https://res.arsrna.cn/blog-images/2011313/a03f8d5daf4f2901ed445bd172697282.png)\n\n| 参数名        | 参数   | 说明                                                                                                                                                                                                                                                                                                             |\n| :------------ | :----- | :--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Region        | 地域   | 要与命令，CVM所在地域一致                                                                                                                                                                                                                                                                                        |\n| CommandId     | 命令ID | 可在自动化助手里面找到ID                                                                                                                                                                                                                                                                                         |\n| InstanceIds.N | 实例ID | 可在CVM控制台获取                                                                                                                                                                                                                                                                                                |\n| Parameters    | 参数   | Command 的自定义参数。字段类型为json encoded string。如：{\\\"varA\\\": \\\"222\\\"}。 key为自定义参数名称，value为该参数的默认取值。kv均为字符串型。 如果未提供该参数取值，将使用 Command 的 DefaultParameters 进行替换。 自定义参数最多20个。 自定义参数名称需符合以下规范：字符数目上限64，可选范围【a-zA-Z0-9-\\_】。 |\n\n如上所示，之前的示例对应的参数表如下表\n\n| 参数名        | 参数                                      |\n| :------------ | :---------------------------------------- |\n| Region        | ap-chengdu                                |\n| CommandId     | cmd-mg...sq                               |\n| InstanceIds.N | array(\"ins-0b...oy7\")                     |\n| Parameters    | {\\\"inputPath\\\":\\\"input\\\",\\\"ext\\\":\\\"jpg\\\"} |\n\n切换到代码生成处，选择业务对应代码进行代码改编即可，将(\"SecretId\", \"SecretKey\")改为自己的秘钥，可在访问管理获得\n\n例如我的Nodejs，将函数封包后如下：\n\n```js\n// Depends on tencentcloud-sdk-nodejs version 4.0.3 or higher\nconst tencentcloud = require(\"tencentcloud-sdk-nodejs\");\nconst TatClient = tencentcloud.tat.v20201028.Client;\n\nconst clientConfig = {\n  credential: {\n    secretId: \"SecretId\",\n    secretKey: \"SecretKey\",\n  },\n  region: \"ap-chengdu\",\n  profile: {\n    httpProfile: {\n      endpoint: \"tat.tencentcloudapi.com\",\n    },\n  },\n};\n\nfunction esrgan(inputPath,ext){\nconst client = new TatClient(clientConfig);\nconst params = {\n    \"CommandId\": \"cmd-mg...esq\",\n    \"InstanceIds\": [\n        \"ins-0b...oy7\"\n    ],\n    \"Parameters\": JSON.stringfy({\n\t   inputPath : inputPath,\n       ext : ext\n      })\n};\nclient.InvokeCommand(params).then(\n  (data) => {\n    return(data);\n  },\n  (err) => {\n    return(\"error\", err);\n  }\n);\n}\n```\n\n调用的时候只用 `esrgan('文件','后缀')`即可\n\n### 查询执行过程与结果\n\n使用 查询执行任务 (TAT) 这个API即可获得执行信息\n\n（[API Explorer](https://console.cloud.tencent.com/api/explorer?Product=tat&Version=2020-10-28&Action=DescribeInvocationTasks&SignVersion=)）\n\n在这里，参数需要过滤\n\n先查询账号下所有执行的任务，然后过滤最新的任务，把隐藏输出改为False\n\n| 参数       | 设置             | 说明                                                                                                                                                                                                                                                                                                                                                                                                                 |\n| :--------- | :--------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Region     | 地域             | 与命令地域相同                                                                                                                                                                                                                                                                                                                                                                                                       |\n| Filters.N  | 过滤条件         | invocation-id - String - 是否必填：否 -（过滤条件）按照执行活动ID过滤。invocation-task-id - String - 是否必填：否 -（过滤条件）按照执行任务ID过滤。`<br>`instance-id - String - 是否必填：否 -（过滤条件）按照实例ID过滤。`<br>`command-id - String - 是否必填：否 -（过滤条件）按照命令ID过滤。`<br>`每次请求的 Filters 的上限为10， Filter.Values 的上限为5。参数不支持同时指定 InvocationTaskIds 和 Filters |\n| HideOutput | 是否隐藏执行内容 | 这里为了查询，设置为False                                                                                                                                                                                                                                                                                                                                                                                            |\n\nFilters.N如此设置\n\n![](https://res.arsrna.cn/blog-images/2011313/87dcde34c201927259a66e831757ca54.png)\n\n![](https://res.arsrna.cn/blog-images/2011313/eacd3900f81ac4f97084e90d56f6cdf1.png)\n\n### 调用结果\n\n点击在线调用\n\n![](https://res.arsrna.cn/blog-images/2011313/c333988167754e2e6f0d3f756c2ef327.png)\n\n确认正常后生成代码，最后嵌入业务即可\n\n![](https://res.arsrna.cn/blog-images/2011313/aabacbffb34c0b3f0911a47d5f657a03.png)\n\n## 软件直接执行（推荐）\n\n我自己开发了一个软件，并且已开源，可以直接用图形界面进行操作，简洁方便\n\n[https://arsrna.coding.net/public/aresrgan/apps/git/files](https://arsrna.coding.net/public/aresrgan/apps/git/files)\n\n下载地址：[https://arsrna.coding.net/s/025a61cd-dd39-4503-a3c1-16a69a9290eb](https://arsrna.coding.net/s/025a61cd-dd39-4503-a3c1-16a69a9290eb)，查看密码：w6ho\n\n同时也推荐一些较好的软件：\n\n- [Waifu2x-Extension-GUI](https://github.com/AaronFeng753/Waifu2x-Extension-GUI) by [AaronFeng753](https://github.com/AaronFeng753)\n- [Squirrel-RIFE](https://github.com/Justin62628/Squirrel-RIFE) by [Justin62628](https://github.com/Justin62628)\n- [Real-GUI](https://github.com/scifx/Real-GUI) by [scifx](https://github.com/scifx)\n- [Real-ESRGAN\\_GUI](https://github.com/net2cn/Real-ESRGAN_GUI) by [net2cn](https://github.com/net2cn)\n- [Real-ESRGAN-EGUI](https://github.com/WGzeyu/Real-ESRGAN-EGUI) by [WGzeyu](https://github.com/WGzeyu)\n- [anime\\_upscaler](https://github.com/shangar21/anime_upscaler) by [shangar21](https://github.com/shangar21)\n- [RealESRGAN-GUI](https://github.com/Baiyuetribe/paper2gui/blob/main/Video%252520Super%252520Resolution/RealESRGAN-GUI.md) by [Baiyuetribe](https://github.com/Baiyuetribe)\n\n# 总结\n\n老图片，旧照片，经过压缩的图片，如果你想用来做壁纸，用来做背景，画质会惨不忍睹，又或者联系不上作者拿到原图，不方便拿到的原图，通过这个技术修复老照片，将会是一个取中的方式。\n\n但是因为处理照片需要极大的算力，老电脑可能无法快速完成，借助腾讯云GPU服务器，依据分布式的优点和云端的稳定性，我们能够快速且方便的对图片进行处理，同时还保证了服务的稳定运行，不干扰本地的工作，一切都在云端\n\nPowered by Ar-Sr-Na  更多可能，需要我们共同探索\n","source":"_posts/2011313.md","raw":"---\ntitle: 【GPU服务器】图像深度学习超分辨率放大（Real-ESRGAN）\nauthor: Ar-Sr-Na\ntags: AI,人工智能,GPU服务器,渲染,图像放大,加速,分布式,我永远喜欢布洛妮娅\ncategories: 技术\navatar: https://res.arsrna.cn/icon2.jpg\nauthorLink: www.arsrna.cn\nauthorAbout: 突破计算边界，构筑数字视界，www.arsrna.cn\nauthorDesc: 突破计算边界，构筑数字视界，www.arsrna.cn\ncomments: true\ndescription: 本文介绍如何使用GPU服务器，使用ESRGAN完成图像放大作\nindex_img: https://res.arsrna.cn/blog-images/2011313/393a059558724bf8a1fdf03d39c37fd4.png\ndate: 2022-06-08 11:16:00\n---\n# 前言\n\n## 技术提要\n\nESRGAN全称为Enhanced Super-Resolution Generative Adversarial Networks\n\n该技术相关论文：[https://arxiv.org/pdf/1809.00219.pdf](https://arxiv.org/pdf/1809.00219.pdf)\n\n太过复杂的技术原理不做赘述。\n\n通过输入图像输入，邻近插值后寻找马赛克位置插值，同时对二次插值后的位置使用AI的模型进行消除噪声，消除伪影\n\n开山之作为SRCNN\n\n![](https://res.arsrna.cn/blog-images/2011313/393a059558724bf8a1fdf03d39c37fd4.png)\n\nESRGAN则是在以上所有技术上再先进一步，改进了质量\n\n作者地址：[github.com](https://github.com/xinntao/ESRGAN)\n\n## 运行环境需求\n\n### 硬件\n\n由于需要调用AI核心，而且针对的是图形处理，所以需要用到具有图形功能的设备\n\n可以选购腾讯云的GPU服务器，推荐使用GT4或GN7机型，并安装好GRID驱动\n\n驱动安装：[GPU 云服务器 安装 NVIDIA GRID 驱动-操作指南-文档中心-腾讯云-腾讯云 (tencent.com)](https://cloud.tencent.com/document/product/560/30060)\n\n测试图片：\n\n原图 1340\\*1748\n\n![](https://res.arsrna.cn/blog-images/2011313/85962a84491a13f6d137a05212ad1ac8.png)\n\n以下是测试内容及预期结果\n\n其中，主观质量为放大线条连续度，越高越好\n\n| 内容\\*放大倍数       | 显卡型号（显卡&#124; 显存） | 主观质量 | 处理耗时/s |\n| :------------------- | :-------------------------- | :------- | :--------- |\n| 动画图片\\*4          | NVIDIA Tesla T4 16G         | 9        | 19         |\n| 动画图片\\*4          | NVIDIA Tesla T4 GRID1/2 8G  | 9        | 35         |\n| 动画图片\\*16(\\*4\\*4) | NVIDIA Tesla T4 16G         | 10       | 300+       |\n| 动画图片\\*16(\\*4\\*4) | NVIDIA Tesla T4 GRID1/2 8G  | 10       | 150        |\n\n这里推荐腾讯云的GN7机型，提供Tesla T4显卡，并预制好GPU GRID图形驱动\n\n### 软件\n\n需要用到图片训练模型（ESRGAN自带），训练的图片\n\n模型下载：[Tags · xinntao/ESRGAN · GitHub](https://github.com/xinntao/ESRGAN/tags)\n\n# 使用方法教程\n\n## 命令行调用\n\n打开命令行，cd到realesrgan的目录\n\n在这里，输入图片在 同目录下，为 `input.jpg`\n\n```shell\n.\\realesrgan-ncnn-vulkan.exe -i input.jpg -o output.jpg -n realesrgan-x4plus-anime\n```\n\n| 参数 | 内容             |\n| :--- | :--------------- |\n| -i   | 设置输入图片路径 |\n| -o   | 设置图片输出路径 |\n| -n   | 设置模型         |\n\n如果不在同目录的，要用绝对路径，例如\n\n`F:\\realsgan\\input.png`\n\n带有空格的目录名，要用引号包括起来，例如\n\n`\"F:\\Develop file\\realsgan\\input test.png\"`\n\n回车之后就可以进行处理了\n\n![](https://res.arsrna.cn/blog-images/2011313/6e45dcdaa660f9eb5dabaa71ec614753.png)\n\n执行到100%的时候就会在设置输出目录下输出 output.jpg\n\n![](https://res.arsrna.cn/blog-images/2011313/9a5a4422f8ea9f02df304cd8c7e7758e.png)\n\n分辨率对比\n\n![](https://res.arsrna.cn/blog-images/2011313/9b115b8a674d0ceedfacf6c318efe7b1.png)\n\n正好放大了4倍\n\n同时对比一下图片差异（左边原图，右边放大4倍）\n\n![未缩放](https://res.arsrna.cn/blog-images/2011313/ed6cdefb900953e8aaaf001eb58d9282.png)\n\n![缩放500%](https://res.arsrna.cn/blog-images/2011313/c70ac1eeca0a41b48d4b7438d4b0b281.png)\n\n## 腾讯云自动助手调用\n\n确认服务器已经安装 TATSVC\n\n### 安装自动化助手\n\n如果没有安装，请登录服务器，右键开始菜单，Powershell管理员打开\n\n![image.png](https://res.arsrna.cn/blog-images/2011313/4792d2b5371087a9cb505f7c86a64c7d.png)\n\n键入如下命令\n\n```shell\nwget https://tat-gz-1258344699.cos.ap-guangzhou.myqcloud.com/tat_agent_windows_i686.zip -OutFile .\\tat_agent_windows_i686.zip;Expand-Archive -Path .\\tat_agent_windows_i686.zip -DestinationPath .\\tat_agent_windows_i686;.\\tat_agent_windows_i686\\install.bat;Remove-Item -Recurse -Force .\\tat_agent_windows_i686, .\\tat_agent_windows_i686.zip\n```\n\n回车\n\n![image.png](https://res.arsrna.cn/blog-images/2011313/302c75596b042ecdf7fc1b8d742ebc1a.png)\n\n### 控制台新建命令\n\n在云服务器控制台-自动化助手-我的命令（[https://console.cloud.tencent.com/cvm/command](https://console.cloud.tencent.com/cvm/command)）\n\n处新建一个命令\n\n![image.png](https://res.arsrna.cn/blog-images/2011313/fc3346e5efb9f22f813c86df82f3b5e0.png)\n\n按图示完成配置\n\n在命令内容里键入\n\n```shell\n.\\realesrgan-ncnn-vulkan.exe -i {{input}} -o {{output}} -n realesrgan-x4plus-anime\n```\n\n其中，`{{input}}`与 `{{output}}`都是命令参数，方便执行的时候更改不同文件\n\n这里展示下我的配置，推荐使用这串命令，这样每次就不用设置输出路径和名称了：\n\n```js\n.\\realesrgan-ncnn-vulkan.exe -i {{inputPath}}.{{ext}} -o {{inputPath}}_4x.{{ext}} -n realesrgan-x4plus-anime\n```\n\n其中，`{{inputPath}}`是输入路径，`{{ext}}`是后缀名\n\n例如 `G:\\OneDrive - ArSrNa CC\\Wallpaper\\22-16061GFT0400.jpg`转化过去就是\n\n```shell\n$inputPath=\"G:\\OneDrive - ArSrNa CC\\Wallpaper\\22-16061GFT0400\"\n$ext=\"jpg\"\n```\n\n执行的时候只需要这么填写参数\n\n| 参数      | 内容                                                | 说明                     |\n| :-------- | :-------------------------------------------------- | :----------------------- |\n| inputPath | \"G:\\OneDrive - ArSrNa CC\\Wallpaper\\22-16061GFT0400\" | 输入的路径（包含到文件） |\n| ext       | \"jpg\"                                               | 后缀名                   |\n\n### 执行命令\n\n对命令单击执行\n\n![image.png](https://res.arsrna.cn/blog-images/2011313/aa6c429e24361c9d7923d1866cf371d9.png)\n\n调整好参数，选中主机\n\n![image.png](https://res.arsrna.cn/blog-images/2011313/3e756208fbb439a324bcc69cb59c4d39.png)\n\n最后点击执行命令就可以跟踪命令运行的状态了\n\n![image.png](https://res.arsrna.cn/blog-images/2011313/db5936f5c22b9e238f929b93d82b1242.png)\n\n完成之后会有提示\n\n![image.png](https://res.arsrna.cn/blog-images/2011313/cacb9f6a99c3175c13967fb62eaa442a.png)\n\n回到服务器，找到 input\\_out.jpg ，就是输出的结果\n\n![image.png](https://res.arsrna.cn/blog-images/2011313/457e370ba72d0e0458fb092f4e3c5db8.png)\n\n## API调用\n\n### 操作\n\n通过API操作自动化助手，对服务器进行处理，这种方法适用于Web，app等在线处理平台\n\n首先在API Explorer里找到TAT产品触发命令（[在这里](https://console.cloud.tencent.com/api/explorer?Product=tat&Version=2020-10-28&Action=InvokeCommand&SignVersion=)）\n\n根据参数填写\n\n![image.png](https://res.arsrna.cn/blog-images/2011313/a03f8d5daf4f2901ed445bd172697282.png)\n\n| 参数名        | 参数   | 说明                                                                                                                                                                                                                                                                                                             |\n| :------------ | :----- | :--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Region        | 地域   | 要与命令，CVM所在地域一致                                                                                                                                                                                                                                                                                        |\n| CommandId     | 命令ID | 可在自动化助手里面找到ID                                                                                                                                                                                                                                                                                         |\n| InstanceIds.N | 实例ID | 可在CVM控制台获取                                                                                                                                                                                                                                                                                                |\n| Parameters    | 参数   | Command 的自定义参数。字段类型为json encoded string。如：{\\\"varA\\\": \\\"222\\\"}。 key为自定义参数名称，value为该参数的默认取值。kv均为字符串型。 如果未提供该参数取值，将使用 Command 的 DefaultParameters 进行替换。 自定义参数最多20个。 自定义参数名称需符合以下规范：字符数目上限64，可选范围【a-zA-Z0-9-\\_】。 |\n\n如上所示，之前的示例对应的参数表如下表\n\n| 参数名        | 参数                                      |\n| :------------ | :---------------------------------------- |\n| Region        | ap-chengdu                                |\n| CommandId     | cmd-mg...sq                               |\n| InstanceIds.N | array(\"ins-0b...oy7\")                     |\n| Parameters    | {\\\"inputPath\\\":\\\"input\\\",\\\"ext\\\":\\\"jpg\\\"} |\n\n切换到代码生成处，选择业务对应代码进行代码改编即可，将(\"SecretId\", \"SecretKey\")改为自己的秘钥，可在访问管理获得\n\n例如我的Nodejs，将函数封包后如下：\n\n```js\n// Depends on tencentcloud-sdk-nodejs version 4.0.3 or higher\nconst tencentcloud = require(\"tencentcloud-sdk-nodejs\");\nconst TatClient = tencentcloud.tat.v20201028.Client;\n\nconst clientConfig = {\n  credential: {\n    secretId: \"SecretId\",\n    secretKey: \"SecretKey\",\n  },\n  region: \"ap-chengdu\",\n  profile: {\n    httpProfile: {\n      endpoint: \"tat.tencentcloudapi.com\",\n    },\n  },\n};\n\nfunction esrgan(inputPath,ext){\nconst client = new TatClient(clientConfig);\nconst params = {\n    \"CommandId\": \"cmd-mg...esq\",\n    \"InstanceIds\": [\n        \"ins-0b...oy7\"\n    ],\n    \"Parameters\": JSON.stringfy({\n\t   inputPath : inputPath,\n       ext : ext\n      })\n};\nclient.InvokeCommand(params).then(\n  (data) => {\n    return(data);\n  },\n  (err) => {\n    return(\"error\", err);\n  }\n);\n}\n```\n\n调用的时候只用 `esrgan('文件','后缀')`即可\n\n### 查询执行过程与结果\n\n使用 查询执行任务 (TAT) 这个API即可获得执行信息\n\n（[API Explorer](https://console.cloud.tencent.com/api/explorer?Product=tat&Version=2020-10-28&Action=DescribeInvocationTasks&SignVersion=)）\n\n在这里，参数需要过滤\n\n先查询账号下所有执行的任务，然后过滤最新的任务，把隐藏输出改为False\n\n| 参数       | 设置             | 说明                                                                                                                                                                                                                                                                                                                                                                                                                 |\n| :--------- | :--------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Region     | 地域             | 与命令地域相同                                                                                                                                                                                                                                                                                                                                                                                                       |\n| Filters.N  | 过滤条件         | invocation-id - String - 是否必填：否 -（过滤条件）按照执行活动ID过滤。invocation-task-id - String - 是否必填：否 -（过滤条件）按照执行任务ID过滤。`<br>`instance-id - String - 是否必填：否 -（过滤条件）按照实例ID过滤。`<br>`command-id - String - 是否必填：否 -（过滤条件）按照命令ID过滤。`<br>`每次请求的 Filters 的上限为10， Filter.Values 的上限为5。参数不支持同时指定 InvocationTaskIds 和 Filters |\n| HideOutput | 是否隐藏执行内容 | 这里为了查询，设置为False                                                                                                                                                                                                                                                                                                                                                                                            |\n\nFilters.N如此设置\n\n![](https://res.arsrna.cn/blog-images/2011313/87dcde34c201927259a66e831757ca54.png)\n\n![](https://res.arsrna.cn/blog-images/2011313/eacd3900f81ac4f97084e90d56f6cdf1.png)\n\n### 调用结果\n\n点击在线调用\n\n![](https://res.arsrna.cn/blog-images/2011313/c333988167754e2e6f0d3f756c2ef327.png)\n\n确认正常后生成代码，最后嵌入业务即可\n\n![](https://res.arsrna.cn/blog-images/2011313/aabacbffb34c0b3f0911a47d5f657a03.png)\n\n## 软件直接执行（推荐）\n\n我自己开发了一个软件，并且已开源，可以直接用图形界面进行操作，简洁方便\n\n[https://arsrna.coding.net/public/aresrgan/apps/git/files](https://arsrna.coding.net/public/aresrgan/apps/git/files)\n\n下载地址：[https://arsrna.coding.net/s/025a61cd-dd39-4503-a3c1-16a69a9290eb](https://arsrna.coding.net/s/025a61cd-dd39-4503-a3c1-16a69a9290eb)，查看密码：w6ho\n\n同时也推荐一些较好的软件：\n\n- [Waifu2x-Extension-GUI](https://github.com/AaronFeng753/Waifu2x-Extension-GUI) by [AaronFeng753](https://github.com/AaronFeng753)\n- [Squirrel-RIFE](https://github.com/Justin62628/Squirrel-RIFE) by [Justin62628](https://github.com/Justin62628)\n- [Real-GUI](https://github.com/scifx/Real-GUI) by [scifx](https://github.com/scifx)\n- [Real-ESRGAN\\_GUI](https://github.com/net2cn/Real-ESRGAN_GUI) by [net2cn](https://github.com/net2cn)\n- [Real-ESRGAN-EGUI](https://github.com/WGzeyu/Real-ESRGAN-EGUI) by [WGzeyu](https://github.com/WGzeyu)\n- [anime\\_upscaler](https://github.com/shangar21/anime_upscaler) by [shangar21](https://github.com/shangar21)\n- [RealESRGAN-GUI](https://github.com/Baiyuetribe/paper2gui/blob/main/Video%252520Super%252520Resolution/RealESRGAN-GUI.md) by [Baiyuetribe](https://github.com/Baiyuetribe)\n\n# 总结\n\n老图片，旧照片，经过压缩的图片，如果你想用来做壁纸，用来做背景，画质会惨不忍睹，又或者联系不上作者拿到原图，不方便拿到的原图，通过这个技术修复老照片，将会是一个取中的方式。\n\n但是因为处理照片需要极大的算力，老电脑可能无法快速完成，借助腾讯云GPU服务器，依据分布式的优点和云端的稳定性，我们能够快速且方便的对图片进行处理，同时还保证了服务的稳定运行，不干扰本地的工作，一切都在云端\n\nPowered by Ar-Sr-Na  更多可能，需要我们共同探索\n","slug":"2011313","published":1,"updated":"2023-01-17T08:55:38.569Z","layout":"post","photos":[],"link":"","_id":"clod0d6xt0038c0nd3avkeelb","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><h2 id=\"技术提要\"><a href=\"#技术提要\" class=\"headerlink\" title=\"技术提要\"></a>技术提要</h2><p>ESRGAN全称为Enhanced Super-Resolution Generative Adversarial Networks</p>\n<p>该技术相关论文：<a href=\"https://arxiv.org/pdf/1809.00219.pdf\">https://arxiv.org/pdf/1809.00219.pdf</a></p>\n<p>太过复杂的技术原理不做赘述。</p>\n<p>通过输入图像输入，邻近插值后寻找马赛克位置插值，同时对二次插值后的位置使用AI的模型进行消除噪声，消除伪影</p>\n<p>开山之作为SRCNN</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/393a059558724bf8a1fdf03d39c37fd4.png\"></p>\n<p>ESRGAN则是在以上所有技术上再先进一步，改进了质量</p>\n<p>作者地址：<a href=\"https://github.com/xinntao/ESRGAN\">github.com</a></p>\n<h2 id=\"运行环境需求\"><a href=\"#运行环境需求\" class=\"headerlink\" title=\"运行环境需求\"></a>运行环境需求</h2><h3 id=\"硬件\"><a href=\"#硬件\" class=\"headerlink\" title=\"硬件\"></a>硬件</h3><p>由于需要调用AI核心，而且针对的是图形处理，所以需要用到具有图形功能的设备</p>\n<p>可以选购腾讯云的GPU服务器，推荐使用GT4或GN7机型，并安装好GRID驱动</p>\n<p>驱动安装：<a href=\"https://cloud.tencent.com/document/product/560/30060\">GPU 云服务器 安装 NVIDIA GRID 驱动-操作指南-文档中心-腾讯云-腾讯云 (tencent.com)</a></p>\n<p>测试图片：</p>\n<p>原图 1340*1748</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/85962a84491a13f6d137a05212ad1ac8.png\"></p>\n<p>以下是测试内容及预期结果</p>\n<p>其中，主观质量为放大线条连续度，越高越好</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">内容*放大倍数</th>\n<th align=\"left\">显卡型号（显卡&amp;#124; 显存）</th>\n<th align=\"left\">主观质量</th>\n<th align=\"left\">处理耗时&#x2F;s</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">动画图片*4</td>\n<td align=\"left\">NVIDIA Tesla T4 16G</td>\n<td align=\"left\">9</td>\n<td align=\"left\">19</td>\n</tr>\n<tr>\n<td align=\"left\">动画图片*4</td>\n<td align=\"left\">NVIDIA Tesla T4 GRID1&#x2F;2 8G</td>\n<td align=\"left\">9</td>\n<td align=\"left\">35</td>\n</tr>\n<tr>\n<td align=\"left\">动画图片*16(*4*4)</td>\n<td align=\"left\">NVIDIA Tesla T4 16G</td>\n<td align=\"left\">10</td>\n<td align=\"left\">300+</td>\n</tr>\n<tr>\n<td align=\"left\">动画图片*16(*4*4)</td>\n<td align=\"left\">NVIDIA Tesla T4 GRID1&#x2F;2 8G</td>\n<td align=\"left\">10</td>\n<td align=\"left\">150</td>\n</tr>\n</tbody></table>\n<p>这里推荐腾讯云的GN7机型，提供Tesla T4显卡，并预制好GPU GRID图形驱动</p>\n<h3 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a>软件</h3><p>需要用到图片训练模型（ESRGAN自带），训练的图片</p>\n<p>模型下载：<a href=\"https://github.com/xinntao/ESRGAN/tags\">Tags · xinntao&#x2F;ESRGAN · GitHub</a></p>\n<h1 id=\"使用方法教程\"><a href=\"#使用方法教程\" class=\"headerlink\" title=\"使用方法教程\"></a>使用方法教程</h1><h2 id=\"命令行调用\"><a href=\"#命令行调用\" class=\"headerlink\" title=\"命令行调用\"></a>命令行调用</h2><p>打开命令行，cd到realesrgan的目录</p>\n<p>在这里，输入图片在 同目录下，为 <code>input.jpg</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">.\\realesrgan-ncnn-vulkan.exe -i input.jpg -o output.jpg -n realesrgan-x4plus-anime<br></code></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">-i</td>\n<td align=\"left\">设置输入图片路径</td>\n</tr>\n<tr>\n<td align=\"left\">-o</td>\n<td align=\"left\">设置图片输出路径</td>\n</tr>\n<tr>\n<td align=\"left\">-n</td>\n<td align=\"left\">设置模型</td>\n</tr>\n</tbody></table>\n<p>如果不在同目录的，要用绝对路径，例如</p>\n<p><code>F:\\realsgan\\input.png</code></p>\n<p>带有空格的目录名，要用引号包括起来，例如</p>\n<p><code>&quot;F:\\Develop file\\realsgan\\input test.png&quot;</code></p>\n<p>回车之后就可以进行处理了</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/6e45dcdaa660f9eb5dabaa71ec614753.png\"></p>\n<p>执行到100%的时候就会在设置输出目录下输出 output.jpg</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/9a5a4422f8ea9f02df304cd8c7e7758e.png\"></p>\n<p>分辨率对比</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/9b115b8a674d0ceedfacf6c318efe7b1.png\"></p>\n<p>正好放大了4倍</p>\n<p>同时对比一下图片差异（左边原图，右边放大4倍）</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/ed6cdefb900953e8aaaf001eb58d9282.png\" alt=\"未缩放\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/c70ac1eeca0a41b48d4b7438d4b0b281.png\" alt=\"缩放500%\"></p>\n<h2 id=\"腾讯云自动助手调用\"><a href=\"#腾讯云自动助手调用\" class=\"headerlink\" title=\"腾讯云自动助手调用\"></a>腾讯云自动助手调用</h2><p>确认服务器已经安装 TATSVC</p>\n<h3 id=\"安装自动化助手\"><a href=\"#安装自动化助手\" class=\"headerlink\" title=\"安装自动化助手\"></a>安装自动化助手</h3><p>如果没有安装，请登录服务器，右键开始菜单，Powershell管理员打开</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/4792d2b5371087a9cb505f7c86a64c7d.png\" alt=\"image.png\"></p>\n<p>键入如下命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">wget https://tat-gz-1258344699.cos.ap-guangzhou.myqcloud.com/tat_agent_windows_i686.zip -OutFile .\\tat_agent_windows_i686.zip;Expand-Archive -Path .\\tat_agent_windows_i686.zip -DestinationPath .\\tat_agent_windows_i686;.\\tat_agent_windows_i686\\install.bat;Remove-Item -Recurse -Force .\\tat_agent_windows_i686, .\\tat_agent_windows_i686.zip<br></code></pre></td></tr></table></figure>\n\n<p>回车</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/302c75596b042ecdf7fc1b8d742ebc1a.png\" alt=\"image.png\"></p>\n<h3 id=\"控制台新建命令\"><a href=\"#控制台新建命令\" class=\"headerlink\" title=\"控制台新建命令\"></a>控制台新建命令</h3><p>在云服务器控制台-自动化助手-我的命令（<a href=\"https://console.cloud.tencent.com/cvm/command\">https://console.cloud.tencent.com/cvm/command</a>）</p>\n<p>处新建一个命令</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/fc3346e5efb9f22f813c86df82f3b5e0.png\" alt=\"image.png\"></p>\n<p>按图示完成配置</p>\n<p>在命令内容里键入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">.\\realesrgan-ncnn-vulkan.exe -i &#123;&#123;input&#125;&#125; -o &#123;&#123;output&#125;&#125; -n realesrgan-x4plus-anime<br></code></pre></td></tr></table></figure>\n\n<p>其中，<code>&#123;&#123;input&#125;&#125;</code>与 <code>&#123;&#123;output&#125;&#125;</code>都是命令参数，方便执行的时候更改不同文件</p>\n<p>这里展示下我的配置，推荐使用这串命令，这样每次就不用设置输出路径和名称了：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">.\\realesrgan-ncnn-vulkan.<span class=\"hljs-property\">exe</span> -i &#123;&#123;inputPath&#125;&#125;.&#123;&#123;ext&#125;&#125; -o &#123;&#123;inputPath&#125;&#125;_4x.&#123;&#123;ext&#125;&#125; -n realesrgan-x4plus-anime<br></code></pre></td></tr></table></figure>\n\n<p>其中，<code>&#123;&#123;inputPath&#125;&#125;</code>是输入路径，<code>&#123;&#123;ext&#125;&#125;</code>是后缀名</p>\n<p>例如 <code>G:\\OneDrive - ArSrNa CC\\Wallpaper\\22-16061GFT0400.jpg</code>转化过去就是</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">$</span><span class=\"language-bash\">inputPath=<span class=\"hljs-string\">&quot;G:\\OneDrive - ArSrNa CC\\Wallpaper\\22-16061GFT0400&quot;</span></span><br><span class=\"hljs-meta prompt_\">$</span><span class=\"language-bash\">ext=<span class=\"hljs-string\">&quot;jpg&quot;</span></span><br></code></pre></td></tr></table></figure>\n\n<p>执行的时候只需要这么填写参数</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">内容</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">inputPath</td>\n<td align=\"left\">“G:\\OneDrive - ArSrNa CC\\Wallpaper\\22-16061GFT0400”</td>\n<td align=\"left\">输入的路径（包含到文件）</td>\n</tr>\n<tr>\n<td align=\"left\">ext</td>\n<td align=\"left\">“jpg”</td>\n<td align=\"left\">后缀名</td>\n</tr>\n</tbody></table>\n<h3 id=\"执行命令\"><a href=\"#执行命令\" class=\"headerlink\" title=\"执行命令\"></a>执行命令</h3><p>对命令单击执行</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/aa6c429e24361c9d7923d1866cf371d9.png\" alt=\"image.png\"></p>\n<p>调整好参数，选中主机</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/3e756208fbb439a324bcc69cb59c4d39.png\" alt=\"image.png\"></p>\n<p>最后点击执行命令就可以跟踪命令运行的状态了</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/db5936f5c22b9e238f929b93d82b1242.png\" alt=\"image.png\"></p>\n<p>完成之后会有提示</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/cacb9f6a99c3175c13967fb62eaa442a.png\" alt=\"image.png\"></p>\n<p>回到服务器，找到 input_out.jpg ，就是输出的结果</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/457e370ba72d0e0458fb092f4e3c5db8.png\" alt=\"image.png\"></p>\n<h2 id=\"API调用\"><a href=\"#API调用\" class=\"headerlink\" title=\"API调用\"></a>API调用</h2><h3 id=\"操作\"><a href=\"#操作\" class=\"headerlink\" title=\"操作\"></a>操作</h3><p>通过API操作自动化助手，对服务器进行处理，这种方法适用于Web，app等在线处理平台</p>\n<p>首先在API Explorer里找到TAT产品触发命令（<a href=\"https://console.cloud.tencent.com/api/explorer?Product=tat&Version=2020-10-28&Action=InvokeCommand&SignVersion=\">在这里</a>）</p>\n<p>根据参数填写</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/a03f8d5daf4f2901ed445bd172697282.png\" alt=\"image.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数名</th>\n<th align=\"left\">参数</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Region</td>\n<td align=\"left\">地域</td>\n<td align=\"left\">要与命令，CVM所在地域一致</td>\n</tr>\n<tr>\n<td align=\"left\">CommandId</td>\n<td align=\"left\">命令ID</td>\n<td align=\"left\">可在自动化助手里面找到ID</td>\n</tr>\n<tr>\n<td align=\"left\">InstanceIds.N</td>\n<td align=\"left\">实例ID</td>\n<td align=\"left\">可在CVM控制台获取</td>\n</tr>\n<tr>\n<td align=\"left\">Parameters</td>\n<td align=\"left\">参数</td>\n<td align=\"left\">Command 的自定义参数。字段类型为json encoded string。如：{&quot;varA&quot;: &quot;222&quot;}。 key为自定义参数名称，value为该参数的默认取值。kv均为字符串型。 如果未提供该参数取值，将使用 Command 的 DefaultParameters 进行替换。 自定义参数最多20个。 自定义参数名称需符合以下规范：字符数目上限64，可选范围【a-zA-Z0-9-_】。</td>\n</tr>\n</tbody></table>\n<p>如上所示，之前的示例对应的参数表如下表</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数名</th>\n<th align=\"left\">参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Region</td>\n<td align=\"left\">ap-chengdu</td>\n</tr>\n<tr>\n<td align=\"left\">CommandId</td>\n<td align=\"left\">cmd-mg…sq</td>\n</tr>\n<tr>\n<td align=\"left\">InstanceIds.N</td>\n<td align=\"left\">array(“ins-0b…oy7”)</td>\n</tr>\n<tr>\n<td align=\"left\">Parameters</td>\n<td align=\"left\">{&quot;inputPath&quot;:&quot;input&quot;,&quot;ext&quot;:&quot;jpg&quot;}</td>\n</tr>\n</tbody></table>\n<p>切换到代码生成处，选择业务对应代码进行代码改编即可，将(“SecretId”, “SecretKey”)改为自己的秘钥，可在访问管理获得</p>\n<p>例如我的Nodejs，将函数封包后如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-comment\">// Depends on tencentcloud-sdk-nodejs version 4.0.3 or higher</span><br><span class=\"hljs-keyword\">const</span> tencentcloud = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;tencentcloud-sdk-nodejs&quot;</span>);<br><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">TatClient</span> = tencentcloud.<span class=\"hljs-property\">tat</span>.<span class=\"hljs-property\">v20201028</span>.<span class=\"hljs-property\">Client</span>;<br><br><span class=\"hljs-keyword\">const</span> clientConfig = &#123;<br>  <span class=\"hljs-attr\">credential</span>: &#123;<br>    <span class=\"hljs-attr\">secretId</span>: <span class=\"hljs-string\">&quot;SecretId&quot;</span>,<br>    <span class=\"hljs-attr\">secretKey</span>: <span class=\"hljs-string\">&quot;SecretKey&quot;</span>,<br>  &#125;,<br>  <span class=\"hljs-attr\">region</span>: <span class=\"hljs-string\">&quot;ap-chengdu&quot;</span>,<br>  <span class=\"hljs-attr\">profile</span>: &#123;<br>    <span class=\"hljs-attr\">httpProfile</span>: &#123;<br>      <span class=\"hljs-attr\">endpoint</span>: <span class=\"hljs-string\">&quot;tat.tencentcloudapi.com&quot;</span>,<br>    &#125;,<br>  &#125;,<br>&#125;;<br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">esrgan</span>(<span class=\"hljs-params\">inputPath,ext</span>)&#123;<br><span class=\"hljs-keyword\">const</span> client = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TatClient</span>(clientConfig);<br><span class=\"hljs-keyword\">const</span> params = &#123;<br>    <span class=\"hljs-string\">&quot;CommandId&quot;</span>: <span class=\"hljs-string\">&quot;cmd-mg...esq&quot;</span>,<br>    <span class=\"hljs-string\">&quot;InstanceIds&quot;</span>: [<br>        <span class=\"hljs-string\">&quot;ins-0b...oy7&quot;</span><br>    ],<br>    <span class=\"hljs-string\">&quot;Parameters&quot;</span>: <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringfy</span>(&#123;<br>\t   inputPath : inputPath,<br>       ext : ext<br>      &#125;)<br>&#125;;<br>client.<span class=\"hljs-title class_\">InvokeCommand</span>(params).<span class=\"hljs-title function_\">then</span>(<br>  <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-keyword\">return</span>(data);<br>  &#125;,<br>  <span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-keyword\">return</span>(<span class=\"hljs-string\">&quot;error&quot;</span>, err);<br>  &#125;<br>);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>调用的时候只用 <code>esrgan(&#39;文件&#39;,&#39;后缀&#39;)</code>即可</p>\n<h3 id=\"查询执行过程与结果\"><a href=\"#查询执行过程与结果\" class=\"headerlink\" title=\"查询执行过程与结果\"></a>查询执行过程与结果</h3><p>使用 查询执行任务 (TAT) 这个API即可获得执行信息</p>\n<p>（<a href=\"https://console.cloud.tencent.com/api/explorer?Product=tat&Version=2020-10-28&Action=DescribeInvocationTasks&SignVersion=\">API Explorer</a>）</p>\n<p>在这里，参数需要过滤</p>\n<p>先查询账号下所有执行的任务，然后过滤最新的任务，把隐藏输出改为False</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">设置</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Region</td>\n<td align=\"left\">地域</td>\n<td align=\"left\">与命令地域相同</td>\n</tr>\n<tr>\n<td align=\"left\">Filters.N</td>\n<td align=\"left\">过滤条件</td>\n<td align=\"left\">invocation-id - String - 是否必填：否 -（过滤条件）按照执行活动ID过滤。invocation-task-id - String - 是否必填：否 -（过滤条件）按照执行任务ID过滤。<code>&lt;br&gt;</code>instance-id - String - 是否必填：否 -（过滤条件）按照实例ID过滤。<code>&lt;br&gt;</code>command-id - String - 是否必填：否 -（过滤条件）按照命令ID过滤。<code>&lt;br&gt;</code>每次请求的 Filters 的上限为10， Filter.Values 的上限为5。参数不支持同时指定 InvocationTaskIds 和 Filters</td>\n</tr>\n<tr>\n<td align=\"left\">HideOutput</td>\n<td align=\"left\">是否隐藏执行内容</td>\n<td align=\"left\">这里为了查询，设置为False</td>\n</tr>\n</tbody></table>\n<p>Filters.N如此设置</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/87dcde34c201927259a66e831757ca54.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/eacd3900f81ac4f97084e90d56f6cdf1.png\"></p>\n<h3 id=\"调用结果\"><a href=\"#调用结果\" class=\"headerlink\" title=\"调用结果\"></a>调用结果</h3><p>点击在线调用</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/c333988167754e2e6f0d3f756c2ef327.png\"></p>\n<p>确认正常后生成代码，最后嵌入业务即可</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/aabacbffb34c0b3f0911a47d5f657a03.png\"></p>\n<h2 id=\"软件直接执行（推荐）\"><a href=\"#软件直接执行（推荐）\" class=\"headerlink\" title=\"软件直接执行（推荐）\"></a>软件直接执行（推荐）</h2><p>我自己开发了一个软件，并且已开源，可以直接用图形界面进行操作，简洁方便</p>\n<p><a href=\"https://arsrna.coding.net/public/aresrgan/apps/git/files\">https://arsrna.coding.net/public/aresrgan/apps/git/files</a></p>\n<p>下载地址：<a href=\"https://arsrna.coding.net/s/025a61cd-dd39-4503-a3c1-16a69a9290eb\">https://arsrna.coding.net/s/025a61cd-dd39-4503-a3c1-16a69a9290eb</a>，查看密码：w6ho</p>\n<p>同时也推荐一些较好的软件：</p>\n<ul>\n<li><a href=\"https://github.com/AaronFeng753/Waifu2x-Extension-GUI\">Waifu2x-Extension-GUI</a> by <a href=\"https://github.com/AaronFeng753\">AaronFeng753</a></li>\n<li><a href=\"https://github.com/Justin62628/Squirrel-RIFE\">Squirrel-RIFE</a> by <a href=\"https://github.com/Justin62628\">Justin62628</a></li>\n<li><a href=\"https://github.com/scifx/Real-GUI\">Real-GUI</a> by <a href=\"https://github.com/scifx\">scifx</a></li>\n<li><a href=\"https://github.com/net2cn/Real-ESRGAN_GUI\">Real-ESRGAN_GUI</a> by <a href=\"https://github.com/net2cn\">net2cn</a></li>\n<li><a href=\"https://github.com/WGzeyu/Real-ESRGAN-EGUI\">Real-ESRGAN-EGUI</a> by <a href=\"https://github.com/WGzeyu\">WGzeyu</a></li>\n<li><a href=\"https://github.com/shangar21/anime_upscaler\">anime_upscaler</a> by <a href=\"https://github.com/shangar21\">shangar21</a></li>\n<li><a href=\"https://github.com/Baiyuetribe/paper2gui/blob/main/Video%252520Super%252520Resolution/RealESRGAN-GUI.md\">RealESRGAN-GUI</a> by <a href=\"https://github.com/Baiyuetribe\">Baiyuetribe</a></li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>老图片，旧照片，经过压缩的图片，如果你想用来做壁纸，用来做背景，画质会惨不忍睹，又或者联系不上作者拿到原图，不方便拿到的原图，通过这个技术修复老照片，将会是一个取中的方式。</p>\n<p>但是因为处理照片需要极大的算力，老电脑可能无法快速完成，借助腾讯云GPU服务器，依据分布式的优点和云端的稳定性，我们能够快速且方便的对图片进行处理，同时还保证了服务的稳定运行，不干扰本地的工作，一切都在云端</p>\n<p>Powered by Ar-Sr-Na  更多可能，需要我们共同探索</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><h2 id=\"技术提要\"><a href=\"#技术提要\" class=\"headerlink\" title=\"技术提要\"></a>技术提要</h2><p>ESRGAN全称为Enhanced Super-Resolution Generative Adversarial Networks</p>\n<p>该技术相关论文：<a href=\"https://arxiv.org/pdf/1809.00219.pdf\">https://arxiv.org/pdf/1809.00219.pdf</a></p>\n<p>太过复杂的技术原理不做赘述。</p>\n<p>通过输入图像输入，邻近插值后寻找马赛克位置插值，同时对二次插值后的位置使用AI的模型进行消除噪声，消除伪影</p>\n<p>开山之作为SRCNN</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/393a059558724bf8a1fdf03d39c37fd4.png\"></p>\n<p>ESRGAN则是在以上所有技术上再先进一步，改进了质量</p>\n<p>作者地址：<a href=\"https://github.com/xinntao/ESRGAN\">github.com</a></p>\n<h2 id=\"运行环境需求\"><a href=\"#运行环境需求\" class=\"headerlink\" title=\"运行环境需求\"></a>运行环境需求</h2><h3 id=\"硬件\"><a href=\"#硬件\" class=\"headerlink\" title=\"硬件\"></a>硬件</h3><p>由于需要调用AI核心，而且针对的是图形处理，所以需要用到具有图形功能的设备</p>\n<p>可以选购腾讯云的GPU服务器，推荐使用GT4或GN7机型，并安装好GRID驱动</p>\n<p>驱动安装：<a href=\"https://cloud.tencent.com/document/product/560/30060\">GPU 云服务器 安装 NVIDIA GRID 驱动-操作指南-文档中心-腾讯云-腾讯云 (tencent.com)</a></p>\n<p>测试图片：</p>\n<p>原图 1340*1748</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/85962a84491a13f6d137a05212ad1ac8.png\"></p>\n<p>以下是测试内容及预期结果</p>\n<p>其中，主观质量为放大线条连续度，越高越好</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">内容*放大倍数</th>\n<th align=\"left\">显卡型号（显卡&amp;#124; 显存）</th>\n<th align=\"left\">主观质量</th>\n<th align=\"left\">处理耗时&#x2F;s</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">动画图片*4</td>\n<td align=\"left\">NVIDIA Tesla T4 16G</td>\n<td align=\"left\">9</td>\n<td align=\"left\">19</td>\n</tr>\n<tr>\n<td align=\"left\">动画图片*4</td>\n<td align=\"left\">NVIDIA Tesla T4 GRID1&#x2F;2 8G</td>\n<td align=\"left\">9</td>\n<td align=\"left\">35</td>\n</tr>\n<tr>\n<td align=\"left\">动画图片*16(*4*4)</td>\n<td align=\"left\">NVIDIA Tesla T4 16G</td>\n<td align=\"left\">10</td>\n<td align=\"left\">300+</td>\n</tr>\n<tr>\n<td align=\"left\">动画图片*16(*4*4)</td>\n<td align=\"left\">NVIDIA Tesla T4 GRID1&#x2F;2 8G</td>\n<td align=\"left\">10</td>\n<td align=\"left\">150</td>\n</tr>\n</tbody></table>\n<p>这里推荐腾讯云的GN7机型，提供Tesla T4显卡，并预制好GPU GRID图形驱动</p>\n<h3 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a>软件</h3><p>需要用到图片训练模型（ESRGAN自带），训练的图片</p>\n<p>模型下载：<a href=\"https://github.com/xinntao/ESRGAN/tags\">Tags · xinntao&#x2F;ESRGAN · GitHub</a></p>\n<h1 id=\"使用方法教程\"><a href=\"#使用方法教程\" class=\"headerlink\" title=\"使用方法教程\"></a>使用方法教程</h1><h2 id=\"命令行调用\"><a href=\"#命令行调用\" class=\"headerlink\" title=\"命令行调用\"></a>命令行调用</h2><p>打开命令行，cd到realesrgan的目录</p>\n<p>在这里，输入图片在 同目录下，为 <code>input.jpg</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">.\\realesrgan-ncnn-vulkan.exe -i input.jpg -o output.jpg -n realesrgan-x4plus-anime<br></code></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">-i</td>\n<td align=\"left\">设置输入图片路径</td>\n</tr>\n<tr>\n<td align=\"left\">-o</td>\n<td align=\"left\">设置图片输出路径</td>\n</tr>\n<tr>\n<td align=\"left\">-n</td>\n<td align=\"left\">设置模型</td>\n</tr>\n</tbody></table>\n<p>如果不在同目录的，要用绝对路径，例如</p>\n<p><code>F:\\realsgan\\input.png</code></p>\n<p>带有空格的目录名，要用引号包括起来，例如</p>\n<p><code>&quot;F:\\Develop file\\realsgan\\input test.png&quot;</code></p>\n<p>回车之后就可以进行处理了</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/6e45dcdaa660f9eb5dabaa71ec614753.png\"></p>\n<p>执行到100%的时候就会在设置输出目录下输出 output.jpg</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/9a5a4422f8ea9f02df304cd8c7e7758e.png\"></p>\n<p>分辨率对比</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/9b115b8a674d0ceedfacf6c318efe7b1.png\"></p>\n<p>正好放大了4倍</p>\n<p>同时对比一下图片差异（左边原图，右边放大4倍）</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/ed6cdefb900953e8aaaf001eb58d9282.png\" alt=\"未缩放\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/c70ac1eeca0a41b48d4b7438d4b0b281.png\" alt=\"缩放500%\"></p>\n<h2 id=\"腾讯云自动助手调用\"><a href=\"#腾讯云自动助手调用\" class=\"headerlink\" title=\"腾讯云自动助手调用\"></a>腾讯云自动助手调用</h2><p>确认服务器已经安装 TATSVC</p>\n<h3 id=\"安装自动化助手\"><a href=\"#安装自动化助手\" class=\"headerlink\" title=\"安装自动化助手\"></a>安装自动化助手</h3><p>如果没有安装，请登录服务器，右键开始菜单，Powershell管理员打开</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/4792d2b5371087a9cb505f7c86a64c7d.png\" alt=\"image.png\"></p>\n<p>键入如下命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">wget https://tat-gz-1258344699.cos.ap-guangzhou.myqcloud.com/tat_agent_windows_i686.zip -OutFile .\\tat_agent_windows_i686.zip;Expand-Archive -Path .\\tat_agent_windows_i686.zip -DestinationPath .\\tat_agent_windows_i686;.\\tat_agent_windows_i686\\install.bat;Remove-Item -Recurse -Force .\\tat_agent_windows_i686, .\\tat_agent_windows_i686.zip<br></code></pre></td></tr></table></figure>\n\n<p>回车</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/302c75596b042ecdf7fc1b8d742ebc1a.png\" alt=\"image.png\"></p>\n<h3 id=\"控制台新建命令\"><a href=\"#控制台新建命令\" class=\"headerlink\" title=\"控制台新建命令\"></a>控制台新建命令</h3><p>在云服务器控制台-自动化助手-我的命令（<a href=\"https://console.cloud.tencent.com/cvm/command\">https://console.cloud.tencent.com/cvm/command</a>）</p>\n<p>处新建一个命令</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/fc3346e5efb9f22f813c86df82f3b5e0.png\" alt=\"image.png\"></p>\n<p>按图示完成配置</p>\n<p>在命令内容里键入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">.\\realesrgan-ncnn-vulkan.exe -i &#123;&#123;input&#125;&#125; -o &#123;&#123;output&#125;&#125; -n realesrgan-x4plus-anime<br></code></pre></td></tr></table></figure>\n\n<p>其中，<code>&#123;&#123;input&#125;&#125;</code>与 <code>&#123;&#123;output&#125;&#125;</code>都是命令参数，方便执行的时候更改不同文件</p>\n<p>这里展示下我的配置，推荐使用这串命令，这样每次就不用设置输出路径和名称了：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">.\\realesrgan-ncnn-vulkan.<span class=\"hljs-property\">exe</span> -i &#123;&#123;inputPath&#125;&#125;.&#123;&#123;ext&#125;&#125; -o &#123;&#123;inputPath&#125;&#125;_4x.&#123;&#123;ext&#125;&#125; -n realesrgan-x4plus-anime<br></code></pre></td></tr></table></figure>\n\n<p>其中，<code>&#123;&#123;inputPath&#125;&#125;</code>是输入路径，<code>&#123;&#123;ext&#125;&#125;</code>是后缀名</p>\n<p>例如 <code>G:\\OneDrive - ArSrNa CC\\Wallpaper\\22-16061GFT0400.jpg</code>转化过去就是</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">$</span><span class=\"language-bash\">inputPath=<span class=\"hljs-string\">&quot;G:\\OneDrive - ArSrNa CC\\Wallpaper\\22-16061GFT0400&quot;</span></span><br><span class=\"hljs-meta prompt_\">$</span><span class=\"language-bash\">ext=<span class=\"hljs-string\">&quot;jpg&quot;</span></span><br></code></pre></td></tr></table></figure>\n\n<p>执行的时候只需要这么填写参数</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">内容</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">inputPath</td>\n<td align=\"left\">“G:\\OneDrive - ArSrNa CC\\Wallpaper\\22-16061GFT0400”</td>\n<td align=\"left\">输入的路径（包含到文件）</td>\n</tr>\n<tr>\n<td align=\"left\">ext</td>\n<td align=\"left\">“jpg”</td>\n<td align=\"left\">后缀名</td>\n</tr>\n</tbody></table>\n<h3 id=\"执行命令\"><a href=\"#执行命令\" class=\"headerlink\" title=\"执行命令\"></a>执行命令</h3><p>对命令单击执行</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/aa6c429e24361c9d7923d1866cf371d9.png\" alt=\"image.png\"></p>\n<p>调整好参数，选中主机</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/3e756208fbb439a324bcc69cb59c4d39.png\" alt=\"image.png\"></p>\n<p>最后点击执行命令就可以跟踪命令运行的状态了</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/db5936f5c22b9e238f929b93d82b1242.png\" alt=\"image.png\"></p>\n<p>完成之后会有提示</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/cacb9f6a99c3175c13967fb62eaa442a.png\" alt=\"image.png\"></p>\n<p>回到服务器，找到 input_out.jpg ，就是输出的结果</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/457e370ba72d0e0458fb092f4e3c5db8.png\" alt=\"image.png\"></p>\n<h2 id=\"API调用\"><a href=\"#API调用\" class=\"headerlink\" title=\"API调用\"></a>API调用</h2><h3 id=\"操作\"><a href=\"#操作\" class=\"headerlink\" title=\"操作\"></a>操作</h3><p>通过API操作自动化助手，对服务器进行处理，这种方法适用于Web，app等在线处理平台</p>\n<p>首先在API Explorer里找到TAT产品触发命令（<a href=\"https://console.cloud.tencent.com/api/explorer?Product=tat&Version=2020-10-28&Action=InvokeCommand&SignVersion=\">在这里</a>）</p>\n<p>根据参数填写</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/a03f8d5daf4f2901ed445bd172697282.png\" alt=\"image.png\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数名</th>\n<th align=\"left\">参数</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Region</td>\n<td align=\"left\">地域</td>\n<td align=\"left\">要与命令，CVM所在地域一致</td>\n</tr>\n<tr>\n<td align=\"left\">CommandId</td>\n<td align=\"left\">命令ID</td>\n<td align=\"left\">可在自动化助手里面找到ID</td>\n</tr>\n<tr>\n<td align=\"left\">InstanceIds.N</td>\n<td align=\"left\">实例ID</td>\n<td align=\"left\">可在CVM控制台获取</td>\n</tr>\n<tr>\n<td align=\"left\">Parameters</td>\n<td align=\"left\">参数</td>\n<td align=\"left\">Command 的自定义参数。字段类型为json encoded string。如：{&quot;varA&quot;: &quot;222&quot;}。 key为自定义参数名称，value为该参数的默认取值。kv均为字符串型。 如果未提供该参数取值，将使用 Command 的 DefaultParameters 进行替换。 自定义参数最多20个。 自定义参数名称需符合以下规范：字符数目上限64，可选范围【a-zA-Z0-9-_】。</td>\n</tr>\n</tbody></table>\n<p>如上所示，之前的示例对应的参数表如下表</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数名</th>\n<th align=\"left\">参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Region</td>\n<td align=\"left\">ap-chengdu</td>\n</tr>\n<tr>\n<td align=\"left\">CommandId</td>\n<td align=\"left\">cmd-mg…sq</td>\n</tr>\n<tr>\n<td align=\"left\">InstanceIds.N</td>\n<td align=\"left\">array(“ins-0b…oy7”)</td>\n</tr>\n<tr>\n<td align=\"left\">Parameters</td>\n<td align=\"left\">{&quot;inputPath&quot;:&quot;input&quot;,&quot;ext&quot;:&quot;jpg&quot;}</td>\n</tr>\n</tbody></table>\n<p>切换到代码生成处，选择业务对应代码进行代码改编即可，将(“SecretId”, “SecretKey”)改为自己的秘钥，可在访问管理获得</p>\n<p>例如我的Nodejs，将函数封包后如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-comment\">// Depends on tencentcloud-sdk-nodejs version 4.0.3 or higher</span><br><span class=\"hljs-keyword\">const</span> tencentcloud = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;tencentcloud-sdk-nodejs&quot;</span>);<br><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">TatClient</span> = tencentcloud.<span class=\"hljs-property\">tat</span>.<span class=\"hljs-property\">v20201028</span>.<span class=\"hljs-property\">Client</span>;<br><br><span class=\"hljs-keyword\">const</span> clientConfig = &#123;<br>  <span class=\"hljs-attr\">credential</span>: &#123;<br>    <span class=\"hljs-attr\">secretId</span>: <span class=\"hljs-string\">&quot;SecretId&quot;</span>,<br>    <span class=\"hljs-attr\">secretKey</span>: <span class=\"hljs-string\">&quot;SecretKey&quot;</span>,<br>  &#125;,<br>  <span class=\"hljs-attr\">region</span>: <span class=\"hljs-string\">&quot;ap-chengdu&quot;</span>,<br>  <span class=\"hljs-attr\">profile</span>: &#123;<br>    <span class=\"hljs-attr\">httpProfile</span>: &#123;<br>      <span class=\"hljs-attr\">endpoint</span>: <span class=\"hljs-string\">&quot;tat.tencentcloudapi.com&quot;</span>,<br>    &#125;,<br>  &#125;,<br>&#125;;<br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">esrgan</span>(<span class=\"hljs-params\">inputPath,ext</span>)&#123;<br><span class=\"hljs-keyword\">const</span> client = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TatClient</span>(clientConfig);<br><span class=\"hljs-keyword\">const</span> params = &#123;<br>    <span class=\"hljs-string\">&quot;CommandId&quot;</span>: <span class=\"hljs-string\">&quot;cmd-mg...esq&quot;</span>,<br>    <span class=\"hljs-string\">&quot;InstanceIds&quot;</span>: [<br>        <span class=\"hljs-string\">&quot;ins-0b...oy7&quot;</span><br>    ],<br>    <span class=\"hljs-string\">&quot;Parameters&quot;</span>: <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringfy</span>(&#123;<br>\t   inputPath : inputPath,<br>       ext : ext<br>      &#125;)<br>&#125;;<br>client.<span class=\"hljs-title class_\">InvokeCommand</span>(params).<span class=\"hljs-title function_\">then</span>(<br>  <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-keyword\">return</span>(data);<br>  &#125;,<br>  <span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-keyword\">return</span>(<span class=\"hljs-string\">&quot;error&quot;</span>, err);<br>  &#125;<br>);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>调用的时候只用 <code>esrgan(&#39;文件&#39;,&#39;后缀&#39;)</code>即可</p>\n<h3 id=\"查询执行过程与结果\"><a href=\"#查询执行过程与结果\" class=\"headerlink\" title=\"查询执行过程与结果\"></a>查询执行过程与结果</h3><p>使用 查询执行任务 (TAT) 这个API即可获得执行信息</p>\n<p>（<a href=\"https://console.cloud.tencent.com/api/explorer?Product=tat&Version=2020-10-28&Action=DescribeInvocationTasks&SignVersion=\">API Explorer</a>）</p>\n<p>在这里，参数需要过滤</p>\n<p>先查询账号下所有执行的任务，然后过滤最新的任务，把隐藏输出改为False</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">设置</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Region</td>\n<td align=\"left\">地域</td>\n<td align=\"left\">与命令地域相同</td>\n</tr>\n<tr>\n<td align=\"left\">Filters.N</td>\n<td align=\"left\">过滤条件</td>\n<td align=\"left\">invocation-id - String - 是否必填：否 -（过滤条件）按照执行活动ID过滤。invocation-task-id - String - 是否必填：否 -（过滤条件）按照执行任务ID过滤。<code>&lt;br&gt;</code>instance-id - String - 是否必填：否 -（过滤条件）按照实例ID过滤。<code>&lt;br&gt;</code>command-id - String - 是否必填：否 -（过滤条件）按照命令ID过滤。<code>&lt;br&gt;</code>每次请求的 Filters 的上限为10， Filter.Values 的上限为5。参数不支持同时指定 InvocationTaskIds 和 Filters</td>\n</tr>\n<tr>\n<td align=\"left\">HideOutput</td>\n<td align=\"left\">是否隐藏执行内容</td>\n<td align=\"left\">这里为了查询，设置为False</td>\n</tr>\n</tbody></table>\n<p>Filters.N如此设置</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/87dcde34c201927259a66e831757ca54.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/eacd3900f81ac4f97084e90d56f6cdf1.png\"></p>\n<h3 id=\"调用结果\"><a href=\"#调用结果\" class=\"headerlink\" title=\"调用结果\"></a>调用结果</h3><p>点击在线调用</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/c333988167754e2e6f0d3f756c2ef327.png\"></p>\n<p>确认正常后生成代码，最后嵌入业务即可</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2011313/aabacbffb34c0b3f0911a47d5f657a03.png\"></p>\n<h2 id=\"软件直接执行（推荐）\"><a href=\"#软件直接执行（推荐）\" class=\"headerlink\" title=\"软件直接执行（推荐）\"></a>软件直接执行（推荐）</h2><p>我自己开发了一个软件，并且已开源，可以直接用图形界面进行操作，简洁方便</p>\n<p><a href=\"https://arsrna.coding.net/public/aresrgan/apps/git/files\">https://arsrna.coding.net/public/aresrgan/apps/git/files</a></p>\n<p>下载地址：<a href=\"https://arsrna.coding.net/s/025a61cd-dd39-4503-a3c1-16a69a9290eb\">https://arsrna.coding.net/s/025a61cd-dd39-4503-a3c1-16a69a9290eb</a>，查看密码：w6ho</p>\n<p>同时也推荐一些较好的软件：</p>\n<ul>\n<li><a href=\"https://github.com/AaronFeng753/Waifu2x-Extension-GUI\">Waifu2x-Extension-GUI</a> by <a href=\"https://github.com/AaronFeng753\">AaronFeng753</a></li>\n<li><a href=\"https://github.com/Justin62628/Squirrel-RIFE\">Squirrel-RIFE</a> by <a href=\"https://github.com/Justin62628\">Justin62628</a></li>\n<li><a href=\"https://github.com/scifx/Real-GUI\">Real-GUI</a> by <a href=\"https://github.com/scifx\">scifx</a></li>\n<li><a href=\"https://github.com/net2cn/Real-ESRGAN_GUI\">Real-ESRGAN_GUI</a> by <a href=\"https://github.com/net2cn\">net2cn</a></li>\n<li><a href=\"https://github.com/WGzeyu/Real-ESRGAN-EGUI\">Real-ESRGAN-EGUI</a> by <a href=\"https://github.com/WGzeyu\">WGzeyu</a></li>\n<li><a href=\"https://github.com/shangar21/anime_upscaler\">anime_upscaler</a> by <a href=\"https://github.com/shangar21\">shangar21</a></li>\n<li><a href=\"https://github.com/Baiyuetribe/paper2gui/blob/main/Video%252520Super%252520Resolution/RealESRGAN-GUI.md\">RealESRGAN-GUI</a> by <a href=\"https://github.com/Baiyuetribe\">Baiyuetribe</a></li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>老图片，旧照片，经过压缩的图片，如果你想用来做壁纸，用来做背景，画质会惨不忍睹，又或者联系不上作者拿到原图，不方便拿到的原图，通过这个技术修复老照片，将会是一个取中的方式。</p>\n<p>但是因为处理照片需要极大的算力，老电脑可能无法快速完成，借助腾讯云GPU服务器，依据分布式的优点和云端的稳定性，我们能够快速且方便的对图片进行处理，同时还保证了服务的稳定运行，不干扰本地的工作，一切都在云端</p>\n<p>Powered by Ar-Sr-Na  更多可能，需要我们共同探索</p>\n"},{"title":"【用户体验】加载——Websocket与加载在前端交互上的体验提升","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"https://www.arsrna.cn","authorAbout":"突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn","authorDesc":"突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn","comments":1,"date":"2023-05-01T15:28:28.000Z","keywords":"无缝加载,技术,websocket,前端,js","description":"在新游戏《崩坏：星穹铁道》中，每次切后台重进或断网重连时，加载的画面不像崩坏3中叠了一层加载中的layer阻止用户操作，而是塞到了右上角进行加载","index_img":"https://st2-res.arsrna.cn/2277385/o3fv9ozs67.png","_content":"# 前言\n\n​\n\n加载，顾名思义，就是将一些信息，从A载到B，这个过程类似运货，而这个过程不是瞬间发生的，就比如把我从深圳运到广州，用复兴号运我需要10分钟，这个就是加载时间。信息从服务器运到本地，从本地运到服务器也需要一定的时间。\n\n无缝加载，是提升加载体验的一种办法，在加载的过程中，用户可无法做其他事情，而过程又很漫长的情况下用户心情就会很烦躁，比如在高铁上我不能玩任何游戏，也没用书给我阅读，只能静坐着等待到达广州。如果我在这期间开ktv，开斗地主，整个过程就不会无聊了，而且我也不只能静坐等待。\n\n---\n\n# 例子\n\n## 清晰明了的过程\n\n一趟列车从广州开往北京，沿途要经过很多站，如果把列车的窗口门口能看到外界的都封堵上，也没有显示屏告诉你现在开到了哪里，心里一定会很着急，甚至不知道列车有没有开动，开的方向对不对。加载也如此，用户操作后没有反馈，或是久久没有结果，会让用户觉得是不是自己的动作没有生效，是不是自己的电脑卡住了\n\n此时有一个指示，告诉乘客“当前在郑州，还有x站到达北京”，体验上提升了几亿个数量级。如果此时再加上列车速度，更能让乘客感觉到“这车真快”，心理上更加舒服\n\n而程序上，用户按下按钮后，反馈上的交流很重要，运行一段复杂程序时，尽可能把关键步骤告诉用户，比如“正在启动”、“正在初始化”、“正在处理”、“正在保存”。\n\n## 不打断的体验\n\n> 来源于一次对话\n\n在新游戏《崩坏：星穹铁道》中，每次切后台重进或断网重连时，加载的画面不像崩坏3中叠了一层加载中的layer阻止用户操作，而是塞到了右上角进行加载\n\n![崩坏3中的断网加载](https://st2-res.arsrna.cn/2277385/xe1inkbz7b.png)\n\n而这样的好处就是即使经历了某些不该经历的经历之后，用户依然能够正常操作游戏本身，而不用等待加载完毕。\n\n这就是无缝加载的要点，不影响操作\n\n# DEMO\n\n本期以websocket通信为例子，nodejs作为后端。\n\n## 服务端模拟\n\n这里有一个后端，表示当前端发送websocket消息时，后端回复一个JSON消息：\n\n```js\nvar express = require('express')\nvar app = express()\nrequire('express-ws')(app)\n\napp.ws('/load', (ws, req) => {\n    ws.on('message', (msg) => {\n        ws.send(new Date().getTime())\n        setTimeout(() => {\n            ws.send(JSON.stringify({\n                status: true,\n                time: new Date().getTime()\n            }))\n        }, 2000)\n    })\n})\n\napp.listen(4003);\n```\n\nsetTimeout模拟了加载的动作，表示耗时2s\n\n## 前端模拟\n\n建立一个websocket连接，并且监听websocket传来的消息\n\n```js\nvar ws = new WebSocket('ws://localhost:4003/load');\n    ws.onmessage = function (data) {\n        console.log(data.data)\n    }\n```\n\n如果此时我们在控制台操作，得到的结果就是\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/6j87awc6gk.png)\n\n按下回车后，浏览器并没有任何动作，此时我并不知道是否发送成功，只能静等2s后才能接收到后端发来的信息。\n\n此时加入动画，加载器组件来自Ar-Sr-Na：ai.arsrna.cn 里的所有应用均为此控件\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/81t07a4mxr.png)\n\n发送事件之前，将该进度条隐藏，发送按钮按下后，显示进度条，成功后再次隐藏\n\n首先，让进度条隐藏\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/emqb4qp35u.png)\n\n定义发送接收事件，并绑定隐藏事件\n\n```js\nvar ws = new WebSocket('ws://localhost:4003/load');\n    ws.onmessage = function (data) {\n        var msg=JSON.parse(data.data)\n        console.log(msg)\n        if(msg.status) $('#logProgress').hide()\n    }\n\n    function fischl() {\n        $('#logProgress').show()\n        ws.send('')\n    }\n```\n\n这样一来，加载过程就清晰了，用户知道自己做的事件有所反馈\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/l5bxspjn8q.png)\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/btvsv0rd70.png)\n\n# “缝”\n\n如上面所说，崩坏3的加载确实有些差劲，我们把它放到三维视图看看这么差劲的加载是怎么回事\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/47fp3uforn.png)\n\n甚至\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/4flcr57sl0.png)\n\n在加载过程中，应用弹了一个非常阴间的加载动画层，阻止了整个应用的操作，只能静待加载完毕后加载层的消失\n\n而在《崩坏：星穹铁道》中，不是大面积的加载，而是仅把加载动画的位置换到了右上角\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/qgeq6xf7bz.png)\n\n从而避免挡住用户移动视角，移动人物\n\n这样看似很简单的一个操作，对用户体验的影响极大，改起来也不复杂，就上面例子而言，如果我们把整个加载中覆盖整个body层，就是崩坏3的暴力加载，如果做到小进度条，就是不影响体验的加载。\n\n# 重连\n\n由于前端websocket断开后并不会自动重连，而后端也不能主动向前端发起连接，所以一旦断开，这个连接如果不再次连上，就永远失去了连接\n\n但是，websocket对象有一个监听断连事件，一旦检测到断连，就重复进行重连\n\n不过要注意的是，如果这个通信不重要，断开一段时间也不会影响用户在本地进行的操作，重连过程不需要搞那么重大\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/3wnghsicej.png)\n\n一个稍微小的提示就好，尽量不要打断用户的操作\n\n例如上面的例子\n\n```js\nws.onclose = function (data) {\n        $('#lostConn').show();\n        //尝试重连的callback\n        reConnect()\n    }\n```\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/ahoqpedbg0.png)\n\n## 逻辑\n\n尝试重连操作的方法，就是当发现断连时，再次连接\n\n```js\nfunction reConnect() {\n        ws = new WebSocket('ws://localhost:4003/load');\n    }\n```\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/oyc5dfvrvs.png)\n\n但是这样做会出现一个问题，当第二次尝试失败时，将不会继续进行下一次重连，而且间隔很长，所以此时可以使用间隔尝试的方式，一直重连直到成功\n\n```js\nfunction reconnect() {\n        $('#lostConn').show();\n        reConnectTimes++\n        $('#text2').html(`正在尝试找回小姐 第 ${reConnectTimes} 次`);\n         if (lockReconnect) $('#lostConn').hide();return\n        $('#lostConn').show();\n        lockReconnect = true;\n        setTimeout(function () {\n            setWebsocket();\n            lockReconnect = false;\n        }, 1000);//断开后2s自动重连\n    }\n```\n\n把连接websocket的事件封装为方法，把上面的代码一同加入\n\n```js\nvar lockReconnect = false;//websocket连接状态，避免重复连接\n    var reConnectTimes = 0;\n    setWebsocket()\n    function setWebsocket() {\n        ws = new WebSocket('ws://localhost:4003/load');\n\n        ws.onmessage = function (data) {\n            var msg = JSON.parse(data.data)\n            console.log(msg)\n            if (msg.status) $('#logProgress').hide()\n        }\n\n        ws.onclose = function (event) {\n            console.log(\"断连\");\n            reconnect();\n        }\n\n        ws.onerror = function (event) {\n            console.log(\"错误\");\n            reconnect();\n        }\n    }\n```\n\n则总逻辑代码如下：\n\n```js\nvar lockReconnect = false;//websocket连接状态，避免重复连接\n    setWebsocket()\n    function setWebsocket() {\n        ws = new WebSocket('ws://localhost:4003/load');\n        ws.onmessage = function (data) {\n           //消息回调 data.data\n        }\n\n        ws.onclose = function (event) {\n            //console.log(\"断连\");\n            reconnect();\n        }\n\n        ws.onerror = function (event) {\n            //console.log(\"错误\");\n            reconnect();\n        }\n    }\n\nfunction reconnect() {\n        if (lockReconnect) return;\n        lockReconnect = true;\n        setTimeout(function () {\n            setWebsocket();\n            lockReconnect = false;\n        }, 1000);//断开后1s自动重连\n    }\n```\n\n## 演示效果\n\n正常情况下\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/54itzvuehv.png)\n\n服务端主动断开\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/bytlt4bxey.png)\n\n再次启动效果如正常情况。\n\n# 总结\n\n对于一些很不重要的消息，在前端展示其重连加载时，应使用后台默默加载或者稍微提示的方式。例如本地计算的项目，不怎么依赖服务器的项目。\n\n对于中等级别的连接，本地可以计算，但是部分来自服务端，可以采用用户提示式的加载。例如原神从后台切回前台时重新从服务器获取信息的场景，此时人物允许移动转视角操作，但是敏感项目例如充值，产生伤害等应先等待服务器做出相应回复。\n\n对于完全依赖服务端的应用，应采取隔断交互的措施，防止用户在客户端进行操作，得不到服务器验证从而造成恶意修改数据的后果。例如充值场景，在服务器那边没收到“钱”之前，一定不能让客户端提前回调。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/o3fv9ozs67.png)\n\n---\n\nPowered by Ar-Sr-Na\n\n2023-5-1","source":"_posts/2277385.md","raw":"---\ntitle: 【用户体验】加载——Websocket与加载在前端交互上的体验提升\nauthor: Ar-Sr-Na\navatar: https://res.arsrna.cn/icon2.jpg\nauthorLink: https://www.arsrna.cn\nauthorAbout: 突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn\nauthorDesc: 突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn\ncomments: true\ndate: 2023-05-01 23:28:28\ncategories: 技术\ntags: 无缝加载,技术,websocket,前端,js\nkeywords: 无缝加载,技术,websocket,前端,js\ndescription: 在新游戏《崩坏：星穹铁道》中，每次切后台重进或断网重连时，加载的画面不像崩坏3中叠了一层加载中的layer阻止用户操作，而是塞到了右上角进行加载\nindex_img: https://st2-res.arsrna.cn/2277385/o3fv9ozs67.png\n---\n# 前言\n\n​\n\n加载，顾名思义，就是将一些信息，从A载到B，这个过程类似运货，而这个过程不是瞬间发生的，就比如把我从深圳运到广州，用复兴号运我需要10分钟，这个就是加载时间。信息从服务器运到本地，从本地运到服务器也需要一定的时间。\n\n无缝加载，是提升加载体验的一种办法，在加载的过程中，用户可无法做其他事情，而过程又很漫长的情况下用户心情就会很烦躁，比如在高铁上我不能玩任何游戏，也没用书给我阅读，只能静坐着等待到达广州。如果我在这期间开ktv，开斗地主，整个过程就不会无聊了，而且我也不只能静坐等待。\n\n---\n\n# 例子\n\n## 清晰明了的过程\n\n一趟列车从广州开往北京，沿途要经过很多站，如果把列车的窗口门口能看到外界的都封堵上，也没有显示屏告诉你现在开到了哪里，心里一定会很着急，甚至不知道列车有没有开动，开的方向对不对。加载也如此，用户操作后没有反馈，或是久久没有结果，会让用户觉得是不是自己的动作没有生效，是不是自己的电脑卡住了\n\n此时有一个指示，告诉乘客“当前在郑州，还有x站到达北京”，体验上提升了几亿个数量级。如果此时再加上列车速度，更能让乘客感觉到“这车真快”，心理上更加舒服\n\n而程序上，用户按下按钮后，反馈上的交流很重要，运行一段复杂程序时，尽可能把关键步骤告诉用户，比如“正在启动”、“正在初始化”、“正在处理”、“正在保存”。\n\n## 不打断的体验\n\n> 来源于一次对话\n\n在新游戏《崩坏：星穹铁道》中，每次切后台重进或断网重连时，加载的画面不像崩坏3中叠了一层加载中的layer阻止用户操作，而是塞到了右上角进行加载\n\n![崩坏3中的断网加载](https://st2-res.arsrna.cn/2277385/xe1inkbz7b.png)\n\n而这样的好处就是即使经历了某些不该经历的经历之后，用户依然能够正常操作游戏本身，而不用等待加载完毕。\n\n这就是无缝加载的要点，不影响操作\n\n# DEMO\n\n本期以websocket通信为例子，nodejs作为后端。\n\n## 服务端模拟\n\n这里有一个后端，表示当前端发送websocket消息时，后端回复一个JSON消息：\n\n```js\nvar express = require('express')\nvar app = express()\nrequire('express-ws')(app)\n\napp.ws('/load', (ws, req) => {\n    ws.on('message', (msg) => {\n        ws.send(new Date().getTime())\n        setTimeout(() => {\n            ws.send(JSON.stringify({\n                status: true,\n                time: new Date().getTime()\n            }))\n        }, 2000)\n    })\n})\n\napp.listen(4003);\n```\n\nsetTimeout模拟了加载的动作，表示耗时2s\n\n## 前端模拟\n\n建立一个websocket连接，并且监听websocket传来的消息\n\n```js\nvar ws = new WebSocket('ws://localhost:4003/load');\n    ws.onmessage = function (data) {\n        console.log(data.data)\n    }\n```\n\n如果此时我们在控制台操作，得到的结果就是\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/6j87awc6gk.png)\n\n按下回车后，浏览器并没有任何动作，此时我并不知道是否发送成功，只能静等2s后才能接收到后端发来的信息。\n\n此时加入动画，加载器组件来自Ar-Sr-Na：ai.arsrna.cn 里的所有应用均为此控件\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/81t07a4mxr.png)\n\n发送事件之前，将该进度条隐藏，发送按钮按下后，显示进度条，成功后再次隐藏\n\n首先，让进度条隐藏\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/emqb4qp35u.png)\n\n定义发送接收事件，并绑定隐藏事件\n\n```js\nvar ws = new WebSocket('ws://localhost:4003/load');\n    ws.onmessage = function (data) {\n        var msg=JSON.parse(data.data)\n        console.log(msg)\n        if(msg.status) $('#logProgress').hide()\n    }\n\n    function fischl() {\n        $('#logProgress').show()\n        ws.send('')\n    }\n```\n\n这样一来，加载过程就清晰了，用户知道自己做的事件有所反馈\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/l5bxspjn8q.png)\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/btvsv0rd70.png)\n\n# “缝”\n\n如上面所说，崩坏3的加载确实有些差劲，我们把它放到三维视图看看这么差劲的加载是怎么回事\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/47fp3uforn.png)\n\n甚至\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/4flcr57sl0.png)\n\n在加载过程中，应用弹了一个非常阴间的加载动画层，阻止了整个应用的操作，只能静待加载完毕后加载层的消失\n\n而在《崩坏：星穹铁道》中，不是大面积的加载，而是仅把加载动画的位置换到了右上角\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/qgeq6xf7bz.png)\n\n从而避免挡住用户移动视角，移动人物\n\n这样看似很简单的一个操作，对用户体验的影响极大，改起来也不复杂，就上面例子而言，如果我们把整个加载中覆盖整个body层，就是崩坏3的暴力加载，如果做到小进度条，就是不影响体验的加载。\n\n# 重连\n\n由于前端websocket断开后并不会自动重连，而后端也不能主动向前端发起连接，所以一旦断开，这个连接如果不再次连上，就永远失去了连接\n\n但是，websocket对象有一个监听断连事件，一旦检测到断连，就重复进行重连\n\n不过要注意的是，如果这个通信不重要，断开一段时间也不会影响用户在本地进行的操作，重连过程不需要搞那么重大\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/3wnghsicej.png)\n\n一个稍微小的提示就好，尽量不要打断用户的操作\n\n例如上面的例子\n\n```js\nws.onclose = function (data) {\n        $('#lostConn').show();\n        //尝试重连的callback\n        reConnect()\n    }\n```\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/ahoqpedbg0.png)\n\n## 逻辑\n\n尝试重连操作的方法，就是当发现断连时，再次连接\n\n```js\nfunction reConnect() {\n        ws = new WebSocket('ws://localhost:4003/load');\n    }\n```\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/oyc5dfvrvs.png)\n\n但是这样做会出现一个问题，当第二次尝试失败时，将不会继续进行下一次重连，而且间隔很长，所以此时可以使用间隔尝试的方式，一直重连直到成功\n\n```js\nfunction reconnect() {\n        $('#lostConn').show();\n        reConnectTimes++\n        $('#text2').html(`正在尝试找回小姐 第 ${reConnectTimes} 次`);\n         if (lockReconnect) $('#lostConn').hide();return\n        $('#lostConn').show();\n        lockReconnect = true;\n        setTimeout(function () {\n            setWebsocket();\n            lockReconnect = false;\n        }, 1000);//断开后2s自动重连\n    }\n```\n\n把连接websocket的事件封装为方法，把上面的代码一同加入\n\n```js\nvar lockReconnect = false;//websocket连接状态，避免重复连接\n    var reConnectTimes = 0;\n    setWebsocket()\n    function setWebsocket() {\n        ws = new WebSocket('ws://localhost:4003/load');\n\n        ws.onmessage = function (data) {\n            var msg = JSON.parse(data.data)\n            console.log(msg)\n            if (msg.status) $('#logProgress').hide()\n        }\n\n        ws.onclose = function (event) {\n            console.log(\"断连\");\n            reconnect();\n        }\n\n        ws.onerror = function (event) {\n            console.log(\"错误\");\n            reconnect();\n        }\n    }\n```\n\n则总逻辑代码如下：\n\n```js\nvar lockReconnect = false;//websocket连接状态，避免重复连接\n    setWebsocket()\n    function setWebsocket() {\n        ws = new WebSocket('ws://localhost:4003/load');\n        ws.onmessage = function (data) {\n           //消息回调 data.data\n        }\n\n        ws.onclose = function (event) {\n            //console.log(\"断连\");\n            reconnect();\n        }\n\n        ws.onerror = function (event) {\n            //console.log(\"错误\");\n            reconnect();\n        }\n    }\n\nfunction reconnect() {\n        if (lockReconnect) return;\n        lockReconnect = true;\n        setTimeout(function () {\n            setWebsocket();\n            lockReconnect = false;\n        }, 1000);//断开后1s自动重连\n    }\n```\n\n## 演示效果\n\n正常情况下\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/54itzvuehv.png)\n\n服务端主动断开\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/bytlt4bxey.png)\n\n再次启动效果如正常情况。\n\n# 总结\n\n对于一些很不重要的消息，在前端展示其重连加载时，应使用后台默默加载或者稍微提示的方式。例如本地计算的项目，不怎么依赖服务器的项目。\n\n对于中等级别的连接，本地可以计算，但是部分来自服务端，可以采用用户提示式的加载。例如原神从后台切回前台时重新从服务器获取信息的场景，此时人物允许移动转视角操作，但是敏感项目例如充值，产生伤害等应先等待服务器做出相应回复。\n\n对于完全依赖服务端的应用，应采取隔断交互的措施，防止用户在客户端进行操作，得不到服务器验证从而造成恶意修改数据的后果。例如充值场景，在服务器那边没收到“钱”之前，一定不能让客户端提前回调。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2277385/o3fv9ozs67.png)\n\n---\n\nPowered by Ar-Sr-Na\n\n2023-5-1","slug":"2277385","published":1,"updated":"2023-05-01T15:37:28.837Z","layout":"post","photos":[],"link":"","_id":"clod0d6xu003cc0nddck34o26","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>​</p>\n<p>加载，顾名思义，就是将一些信息，从A载到B，这个过程类似运货，而这个过程不是瞬间发生的，就比如把我从深圳运到广州，用复兴号运我需要10分钟，这个就是加载时间。信息从服务器运到本地，从本地运到服务器也需要一定的时间。</p>\n<p>无缝加载，是提升加载体验的一种办法，在加载的过程中，用户可无法做其他事情，而过程又很漫长的情况下用户心情就会很烦躁，比如在高铁上我不能玩任何游戏，也没用书给我阅读，只能静坐着等待到达广州。如果我在这期间开ktv，开斗地主，整个过程就不会无聊了，而且我也不只能静坐等待。</p>\n<hr>\n<h1 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h1><h2 id=\"清晰明了的过程\"><a href=\"#清晰明了的过程\" class=\"headerlink\" title=\"清晰明了的过程\"></a>清晰明了的过程</h2><p>一趟列车从广州开往北京，沿途要经过很多站，如果把列车的窗口门口能看到外界的都封堵上，也没有显示屏告诉你现在开到了哪里，心里一定会很着急，甚至不知道列车有没有开动，开的方向对不对。加载也如此，用户操作后没有反馈，或是久久没有结果，会让用户觉得是不是自己的动作没有生效，是不是自己的电脑卡住了</p>\n<p>此时有一个指示，告诉乘客“当前在郑州，还有x站到达北京”，体验上提升了几亿个数量级。如果此时再加上列车速度，更能让乘客感觉到“这车真快”，心理上更加舒服</p>\n<p>而程序上，用户按下按钮后，反馈上的交流很重要，运行一段复杂程序时，尽可能把关键步骤告诉用户，比如“正在启动”、“正在初始化”、“正在处理”、“正在保存”。</p>\n<h2 id=\"不打断的体验\"><a href=\"#不打断的体验\" class=\"headerlink\" title=\"不打断的体验\"></a>不打断的体验</h2><blockquote>\n<p>来源于一次对话</p>\n</blockquote>\n<p>在新游戏《崩坏：星穹铁道》中，每次切后台重进或断网重连时，加载的画面不像崩坏3中叠了一层加载中的layer阻止用户操作，而是塞到了右上角进行加载</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/xe1inkbz7b.png\" alt=\"崩坏3中的断网加载\"></p>\n<p>而这样的好处就是即使经历了某些不该经历的经历之后，用户依然能够正常操作游戏本身，而不用等待加载完毕。</p>\n<p>这就是无缝加载的要点，不影响操作</p>\n<h1 id=\"DEMO\"><a href=\"#DEMO\" class=\"headerlink\" title=\"DEMO\"></a>DEMO</h1><p>本期以websocket通信为例子，nodejs作为后端。</p>\n<h2 id=\"服务端模拟\"><a href=\"#服务端模拟\" class=\"headerlink\" title=\"服务端模拟\"></a>服务端模拟</h2><p>这里有一个后端，表示当前端发送websocket消息时，后端回复一个JSON消息：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">var</span> express = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;express&#x27;</span>)<br><span class=\"hljs-keyword\">var</span> app = <span class=\"hljs-title function_\">express</span>()<br><span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;express-ws&#x27;</span>)(app)<br><br>app.<span class=\"hljs-title function_\">ws</span>(<span class=\"hljs-string\">&#x27;/load&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">ws, req</span>) =&gt;</span> &#123;<br>    ws.<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">&#x27;message&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">msg</span>) =&gt;</span> &#123;<br>        ws.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>().<span class=\"hljs-title function_\">getTime</span>())<br>        <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-function\">() =&gt;</span> &#123;<br>            ws.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(&#123;<br>                <span class=\"hljs-attr\">status</span>: <span class=\"hljs-literal\">true</span>,<br>                <span class=\"hljs-attr\">time</span>: <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>().<span class=\"hljs-title function_\">getTime</span>()<br>            &#125;))<br>        &#125;, <span class=\"hljs-number\">2000</span>)<br>    &#125;)<br>&#125;)<br><br>app.<span class=\"hljs-title function_\">listen</span>(<span class=\"hljs-number\">4003</span>);<br></code></pre></td></tr></table></figure>\n\n<p>setTimeout模拟了加载的动作，表示耗时2s</p>\n<h2 id=\"前端模拟\"><a href=\"#前端模拟\" class=\"headerlink\" title=\"前端模拟\"></a>前端模拟</h2><p>建立一个websocket连接，并且监听websocket传来的消息</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">var</span> ws = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">WebSocket</span>(<span class=\"hljs-string\">&#x27;ws://localhost:4003/load&#x27;</span>);<br>    ws.<span class=\"hljs-property\">onmessage</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) &#123;<br>        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(data.<span class=\"hljs-property\">data</span>)<br>    &#125;<br></code></pre></td></tr></table></figure>\n\n<p>如果此时我们在控制台操作，得到的结果就是</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/6j87awc6gk.png\" alt=\"请在此添加图片描述\"></p>\n<p>按下回车后，浏览器并没有任何动作，此时我并不知道是否发送成功，只能静等2s后才能接收到后端发来的信息。</p>\n<p>此时加入动画，加载器组件来自Ar-Sr-Na：ai.arsrna.cn 里的所有应用均为此控件</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/81t07a4mxr.png\" alt=\"请在此添加图片描述\"></p>\n<p>发送事件之前，将该进度条隐藏，发送按钮按下后，显示进度条，成功后再次隐藏</p>\n<p>首先，让进度条隐藏</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/emqb4qp35u.png\" alt=\"请在此添加图片描述\"></p>\n<p>定义发送接收事件，并绑定隐藏事件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">var</span> ws = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">WebSocket</span>(<span class=\"hljs-string\">&#x27;ws://localhost:4003/load&#x27;</span>);<br>    ws.<span class=\"hljs-property\">onmessage</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) &#123;<br>        <span class=\"hljs-keyword\">var</span> msg=<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(data.<span class=\"hljs-property\">data</span>)<br>        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(msg)<br>        <span class=\"hljs-keyword\">if</span>(msg.<span class=\"hljs-property\">status</span>) $(<span class=\"hljs-string\">&#x27;#logProgress&#x27;</span>).<span class=\"hljs-title function_\">hide</span>()<br>    &#125;<br><br>    <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">fischl</span>(<span class=\"hljs-params\"></span>) &#123;<br>        $(<span class=\"hljs-string\">&#x27;#logProgress&#x27;</span>).<span class=\"hljs-title function_\">show</span>()<br>        ws.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>)<br>    &#125;<br></code></pre></td></tr></table></figure>\n\n<p>这样一来，加载过程就清晰了，用户知道自己做的事件有所反馈</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/l5bxspjn8q.png\" alt=\"请在此添加图片描述\"></p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/btvsv0rd70.png\" alt=\"请在此添加图片描述\"></p>\n<h1 id=\"“缝”\"><a href=\"#“缝”\" class=\"headerlink\" title=\"“缝”\"></a>“缝”</h1><p>如上面所说，崩坏3的加载确实有些差劲，我们把它放到三维视图看看这么差劲的加载是怎么回事</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/47fp3uforn.png\" alt=\"请在此添加图片描述\"></p>\n<p>甚至</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/4flcr57sl0.png\" alt=\"请在此添加图片描述\"></p>\n<p>在加载过程中，应用弹了一个非常阴间的加载动画层，阻止了整个应用的操作，只能静待加载完毕后加载层的消失</p>\n<p>而在《崩坏：星穹铁道》中，不是大面积的加载，而是仅把加载动画的位置换到了右上角</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/qgeq6xf7bz.png\" alt=\"请在此添加图片描述\"></p>\n<p>从而避免挡住用户移动视角，移动人物</p>\n<p>这样看似很简单的一个操作，对用户体验的影响极大，改起来也不复杂，就上面例子而言，如果我们把整个加载中覆盖整个body层，就是崩坏3的暴力加载，如果做到小进度条，就是不影响体验的加载。</p>\n<h1 id=\"重连\"><a href=\"#重连\" class=\"headerlink\" title=\"重连\"></a>重连</h1><p>由于前端websocket断开后并不会自动重连，而后端也不能主动向前端发起连接，所以一旦断开，这个连接如果不再次连上，就永远失去了连接</p>\n<p>但是，websocket对象有一个监听断连事件，一旦检测到断连，就重复进行重连</p>\n<p>不过要注意的是，如果这个通信不重要，断开一段时间也不会影响用户在本地进行的操作，重连过程不需要搞那么重大</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/3wnghsicej.png\" alt=\"请在此添加图片描述\"></p>\n<p>一个稍微小的提示就好，尽量不要打断用户的操作</p>\n<p>例如上面的例子</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">ws.<span class=\"hljs-property\">onclose</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) &#123;<br>        $(<span class=\"hljs-string\">&#x27;#lostConn&#x27;</span>).<span class=\"hljs-title function_\">show</span>();<br>        <span class=\"hljs-comment\">//尝试重连的callback</span><br>        <span class=\"hljs-title function_\">reConnect</span>()<br>    &#125;<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://st2-res.arsrna.cn/2277385/ahoqpedbg0.png\" alt=\"请在此添加图片描述\"></p>\n<h2 id=\"逻辑\"><a href=\"#逻辑\" class=\"headerlink\" title=\"逻辑\"></a>逻辑</h2><p>尝试重连操作的方法，就是当发现断连时，再次连接</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">reConnect</span>(<span class=\"hljs-params\"></span>) &#123;<br>        ws = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">WebSocket</span>(<span class=\"hljs-string\">&#x27;ws://localhost:4003/load&#x27;</span>);<br>    &#125;<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://st2-res.arsrna.cn/2277385/oyc5dfvrvs.png\" alt=\"请在此添加图片描述\"></p>\n<p>但是这样做会出现一个问题，当第二次尝试失败时，将不会继续进行下一次重连，而且间隔很长，所以此时可以使用间隔尝试的方式，一直重连直到成功</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">reconnect</span>(<span class=\"hljs-params\"></span>) &#123;<br>        $(<span class=\"hljs-string\">&#x27;#lostConn&#x27;</span>).<span class=\"hljs-title function_\">show</span>();<br>        reConnectTimes++<br>        $(<span class=\"hljs-string\">&#x27;#text2&#x27;</span>).<span class=\"hljs-title function_\">html</span>(<span class=\"hljs-string\">`正在尝试找回小姐 第 <span class=\"hljs-subst\">$&#123;reConnectTimes&#125;</span> 次`</span>);<br>         <span class=\"hljs-keyword\">if</span> (lockReconnect) $(<span class=\"hljs-string\">&#x27;#lostConn&#x27;</span>).<span class=\"hljs-title function_\">hide</span>();<span class=\"hljs-keyword\">return</span><br>        $(<span class=\"hljs-string\">&#x27;#lostConn&#x27;</span>).<span class=\"hljs-title function_\">show</span>();<br>        lockReconnect = <span class=\"hljs-literal\">true</span>;<br>        <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) &#123;<br>            <span class=\"hljs-title function_\">setWebsocket</span>();<br>            lockReconnect = <span class=\"hljs-literal\">false</span>;<br>        &#125;, <span class=\"hljs-number\">1000</span>);<span class=\"hljs-comment\">//断开后2s自动重连</span><br>    &#125;<br></code></pre></td></tr></table></figure>\n\n<p>把连接websocket的事件封装为方法，把上面的代码一同加入</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">var</span> lockReconnect = <span class=\"hljs-literal\">false</span>;<span class=\"hljs-comment\">//websocket连接状态，避免重复连接</span><br>    <span class=\"hljs-keyword\">var</span> reConnectTimes = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-title function_\">setWebsocket</span>()<br>    <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">setWebsocket</span>(<span class=\"hljs-params\"></span>) &#123;<br>        ws = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">WebSocket</span>(<span class=\"hljs-string\">&#x27;ws://localhost:4003/load&#x27;</span>);<br><br>        ws.<span class=\"hljs-property\">onmessage</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) &#123;<br>            <span class=\"hljs-keyword\">var</span> msg = <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(data.<span class=\"hljs-property\">data</span>)<br>            <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(msg)<br>            <span class=\"hljs-keyword\">if</span> (msg.<span class=\"hljs-property\">status</span>) $(<span class=\"hljs-string\">&#x27;#logProgress&#x27;</span>).<span class=\"hljs-title function_\">hide</span>()<br>        &#125;<br><br>        ws.<span class=\"hljs-property\">onclose</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">event</span>) &#123;<br>            <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;断连&quot;</span>);<br>            <span class=\"hljs-title function_\">reconnect</span>();<br>        &#125;<br><br>        ws.<span class=\"hljs-property\">onerror</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">event</span>) &#123;<br>            <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;错误&quot;</span>);<br>            <span class=\"hljs-title function_\">reconnect</span>();<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure>\n\n<p>则总逻辑代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">var</span> lockReconnect = <span class=\"hljs-literal\">false</span>;<span class=\"hljs-comment\">//websocket连接状态，避免重复连接</span><br>    <span class=\"hljs-title function_\">setWebsocket</span>()<br>    <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">setWebsocket</span>(<span class=\"hljs-params\"></span>) &#123;<br>        ws = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">WebSocket</span>(<span class=\"hljs-string\">&#x27;ws://localhost:4003/load&#x27;</span>);<br>        ws.<span class=\"hljs-property\">onmessage</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) &#123;<br>           <span class=\"hljs-comment\">//消息回调 data.data</span><br>        &#125;<br><br>        ws.<span class=\"hljs-property\">onclose</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">event</span>) &#123;<br>            <span class=\"hljs-comment\">//console.log(&quot;断连&quot;);</span><br>            <span class=\"hljs-title function_\">reconnect</span>();<br>        &#125;<br><br>        ws.<span class=\"hljs-property\">onerror</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">event</span>) &#123;<br>            <span class=\"hljs-comment\">//console.log(&quot;错误&quot;);</span><br>            <span class=\"hljs-title function_\">reconnect</span>();<br>        &#125;<br>    &#125;<br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">reconnect</span>(<span class=\"hljs-params\"></span>) &#123;<br>        <span class=\"hljs-keyword\">if</span> (lockReconnect) <span class=\"hljs-keyword\">return</span>;<br>        lockReconnect = <span class=\"hljs-literal\">true</span>;<br>        <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) &#123;<br>            <span class=\"hljs-title function_\">setWebsocket</span>();<br>            lockReconnect = <span class=\"hljs-literal\">false</span>;<br>        &#125;, <span class=\"hljs-number\">1000</span>);<span class=\"hljs-comment\">//断开后1s自动重连</span><br>    &#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"演示效果\"><a href=\"#演示效果\" class=\"headerlink\" title=\"演示效果\"></a>演示效果</h2><p>正常情况下</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/54itzvuehv.png\" alt=\"请在此添加图片描述\"></p>\n<p>服务端主动断开</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/bytlt4bxey.png\" alt=\"请在此添加图片描述\"></p>\n<p>再次启动效果如正常情况。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>对于一些很不重要的消息，在前端展示其重连加载时，应使用后台默默加载或者稍微提示的方式。例如本地计算的项目，不怎么依赖服务器的项目。</p>\n<p>对于中等级别的连接，本地可以计算，但是部分来自服务端，可以采用用户提示式的加载。例如原神从后台切回前台时重新从服务器获取信息的场景，此时人物允许移动转视角操作，但是敏感项目例如充值，产生伤害等应先等待服务器做出相应回复。</p>\n<p>对于完全依赖服务端的应用，应采取隔断交互的措施，防止用户在客户端进行操作，得不到服务器验证从而造成恶意修改数据的后果。例如充值场景，在服务器那边没收到“钱”之前，一定不能让客户端提前回调。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/o3fv9ozs67.png\" alt=\"请在此添加图片描述\"></p>\n<hr>\n<p>Powered by Ar-Sr-Na</p>\n<p>2023-5-1</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>​</p>\n<p>加载，顾名思义，就是将一些信息，从A载到B，这个过程类似运货，而这个过程不是瞬间发生的，就比如把我从深圳运到广州，用复兴号运我需要10分钟，这个就是加载时间。信息从服务器运到本地，从本地运到服务器也需要一定的时间。</p>\n<p>无缝加载，是提升加载体验的一种办法，在加载的过程中，用户可无法做其他事情，而过程又很漫长的情况下用户心情就会很烦躁，比如在高铁上我不能玩任何游戏，也没用书给我阅读，只能静坐着等待到达广州。如果我在这期间开ktv，开斗地主，整个过程就不会无聊了，而且我也不只能静坐等待。</p>\n<hr>\n<h1 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h1><h2 id=\"清晰明了的过程\"><a href=\"#清晰明了的过程\" class=\"headerlink\" title=\"清晰明了的过程\"></a>清晰明了的过程</h2><p>一趟列车从广州开往北京，沿途要经过很多站，如果把列车的窗口门口能看到外界的都封堵上，也没有显示屏告诉你现在开到了哪里，心里一定会很着急，甚至不知道列车有没有开动，开的方向对不对。加载也如此，用户操作后没有反馈，或是久久没有结果，会让用户觉得是不是自己的动作没有生效，是不是自己的电脑卡住了</p>\n<p>此时有一个指示，告诉乘客“当前在郑州，还有x站到达北京”，体验上提升了几亿个数量级。如果此时再加上列车速度，更能让乘客感觉到“这车真快”，心理上更加舒服</p>\n<p>而程序上，用户按下按钮后，反馈上的交流很重要，运行一段复杂程序时，尽可能把关键步骤告诉用户，比如“正在启动”、“正在初始化”、“正在处理”、“正在保存”。</p>\n<h2 id=\"不打断的体验\"><a href=\"#不打断的体验\" class=\"headerlink\" title=\"不打断的体验\"></a>不打断的体验</h2><blockquote>\n<p>来源于一次对话</p>\n</blockquote>\n<p>在新游戏《崩坏：星穹铁道》中，每次切后台重进或断网重连时，加载的画面不像崩坏3中叠了一层加载中的layer阻止用户操作，而是塞到了右上角进行加载</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/xe1inkbz7b.png\" alt=\"崩坏3中的断网加载\"></p>\n<p>而这样的好处就是即使经历了某些不该经历的经历之后，用户依然能够正常操作游戏本身，而不用等待加载完毕。</p>\n<p>这就是无缝加载的要点，不影响操作</p>\n<h1 id=\"DEMO\"><a href=\"#DEMO\" class=\"headerlink\" title=\"DEMO\"></a>DEMO</h1><p>本期以websocket通信为例子，nodejs作为后端。</p>\n<h2 id=\"服务端模拟\"><a href=\"#服务端模拟\" class=\"headerlink\" title=\"服务端模拟\"></a>服务端模拟</h2><p>这里有一个后端，表示当前端发送websocket消息时，后端回复一个JSON消息：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">var</span> express = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;express&#x27;</span>)<br><span class=\"hljs-keyword\">var</span> app = <span class=\"hljs-title function_\">express</span>()<br><span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;express-ws&#x27;</span>)(app)<br><br>app.<span class=\"hljs-title function_\">ws</span>(<span class=\"hljs-string\">&#x27;/load&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">ws, req</span>) =&gt;</span> &#123;<br>    ws.<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">&#x27;message&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">msg</span>) =&gt;</span> &#123;<br>        ws.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>().<span class=\"hljs-title function_\">getTime</span>())<br>        <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-function\">() =&gt;</span> &#123;<br>            ws.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(&#123;<br>                <span class=\"hljs-attr\">status</span>: <span class=\"hljs-literal\">true</span>,<br>                <span class=\"hljs-attr\">time</span>: <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>().<span class=\"hljs-title function_\">getTime</span>()<br>            &#125;))<br>        &#125;, <span class=\"hljs-number\">2000</span>)<br>    &#125;)<br>&#125;)<br><br>app.<span class=\"hljs-title function_\">listen</span>(<span class=\"hljs-number\">4003</span>);<br></code></pre></td></tr></table></figure>\n\n<p>setTimeout模拟了加载的动作，表示耗时2s</p>\n<h2 id=\"前端模拟\"><a href=\"#前端模拟\" class=\"headerlink\" title=\"前端模拟\"></a>前端模拟</h2><p>建立一个websocket连接，并且监听websocket传来的消息</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">var</span> ws = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">WebSocket</span>(<span class=\"hljs-string\">&#x27;ws://localhost:4003/load&#x27;</span>);<br>    ws.<span class=\"hljs-property\">onmessage</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) &#123;<br>        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(data.<span class=\"hljs-property\">data</span>)<br>    &#125;<br></code></pre></td></tr></table></figure>\n\n<p>如果此时我们在控制台操作，得到的结果就是</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/6j87awc6gk.png\" alt=\"请在此添加图片描述\"></p>\n<p>按下回车后，浏览器并没有任何动作，此时我并不知道是否发送成功，只能静等2s后才能接收到后端发来的信息。</p>\n<p>此时加入动画，加载器组件来自Ar-Sr-Na：ai.arsrna.cn 里的所有应用均为此控件</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/81t07a4mxr.png\" alt=\"请在此添加图片描述\"></p>\n<p>发送事件之前，将该进度条隐藏，发送按钮按下后，显示进度条，成功后再次隐藏</p>\n<p>首先，让进度条隐藏</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/emqb4qp35u.png\" alt=\"请在此添加图片描述\"></p>\n<p>定义发送接收事件，并绑定隐藏事件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">var</span> ws = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">WebSocket</span>(<span class=\"hljs-string\">&#x27;ws://localhost:4003/load&#x27;</span>);<br>    ws.<span class=\"hljs-property\">onmessage</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) &#123;<br>        <span class=\"hljs-keyword\">var</span> msg=<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(data.<span class=\"hljs-property\">data</span>)<br>        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(msg)<br>        <span class=\"hljs-keyword\">if</span>(msg.<span class=\"hljs-property\">status</span>) $(<span class=\"hljs-string\">&#x27;#logProgress&#x27;</span>).<span class=\"hljs-title function_\">hide</span>()<br>    &#125;<br><br>    <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">fischl</span>(<span class=\"hljs-params\"></span>) &#123;<br>        $(<span class=\"hljs-string\">&#x27;#logProgress&#x27;</span>).<span class=\"hljs-title function_\">show</span>()<br>        ws.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>)<br>    &#125;<br></code></pre></td></tr></table></figure>\n\n<p>这样一来，加载过程就清晰了，用户知道自己做的事件有所反馈</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/l5bxspjn8q.png\" alt=\"请在此添加图片描述\"></p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/btvsv0rd70.png\" alt=\"请在此添加图片描述\"></p>\n<h1 id=\"“缝”\"><a href=\"#“缝”\" class=\"headerlink\" title=\"“缝”\"></a>“缝”</h1><p>如上面所说，崩坏3的加载确实有些差劲，我们把它放到三维视图看看这么差劲的加载是怎么回事</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/47fp3uforn.png\" alt=\"请在此添加图片描述\"></p>\n<p>甚至</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/4flcr57sl0.png\" alt=\"请在此添加图片描述\"></p>\n<p>在加载过程中，应用弹了一个非常阴间的加载动画层，阻止了整个应用的操作，只能静待加载完毕后加载层的消失</p>\n<p>而在《崩坏：星穹铁道》中，不是大面积的加载，而是仅把加载动画的位置换到了右上角</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/qgeq6xf7bz.png\" alt=\"请在此添加图片描述\"></p>\n<p>从而避免挡住用户移动视角，移动人物</p>\n<p>这样看似很简单的一个操作，对用户体验的影响极大，改起来也不复杂，就上面例子而言，如果我们把整个加载中覆盖整个body层，就是崩坏3的暴力加载，如果做到小进度条，就是不影响体验的加载。</p>\n<h1 id=\"重连\"><a href=\"#重连\" class=\"headerlink\" title=\"重连\"></a>重连</h1><p>由于前端websocket断开后并不会自动重连，而后端也不能主动向前端发起连接，所以一旦断开，这个连接如果不再次连上，就永远失去了连接</p>\n<p>但是，websocket对象有一个监听断连事件，一旦检测到断连，就重复进行重连</p>\n<p>不过要注意的是，如果这个通信不重要，断开一段时间也不会影响用户在本地进行的操作，重连过程不需要搞那么重大</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/3wnghsicej.png\" alt=\"请在此添加图片描述\"></p>\n<p>一个稍微小的提示就好，尽量不要打断用户的操作</p>\n<p>例如上面的例子</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">ws.<span class=\"hljs-property\">onclose</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) &#123;<br>        $(<span class=\"hljs-string\">&#x27;#lostConn&#x27;</span>).<span class=\"hljs-title function_\">show</span>();<br>        <span class=\"hljs-comment\">//尝试重连的callback</span><br>        <span class=\"hljs-title function_\">reConnect</span>()<br>    &#125;<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://st2-res.arsrna.cn/2277385/ahoqpedbg0.png\" alt=\"请在此添加图片描述\"></p>\n<h2 id=\"逻辑\"><a href=\"#逻辑\" class=\"headerlink\" title=\"逻辑\"></a>逻辑</h2><p>尝试重连操作的方法，就是当发现断连时，再次连接</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">reConnect</span>(<span class=\"hljs-params\"></span>) &#123;<br>        ws = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">WebSocket</span>(<span class=\"hljs-string\">&#x27;ws://localhost:4003/load&#x27;</span>);<br>    &#125;<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://st2-res.arsrna.cn/2277385/oyc5dfvrvs.png\" alt=\"请在此添加图片描述\"></p>\n<p>但是这样做会出现一个问题，当第二次尝试失败时，将不会继续进行下一次重连，而且间隔很长，所以此时可以使用间隔尝试的方式，一直重连直到成功</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">reconnect</span>(<span class=\"hljs-params\"></span>) &#123;<br>        $(<span class=\"hljs-string\">&#x27;#lostConn&#x27;</span>).<span class=\"hljs-title function_\">show</span>();<br>        reConnectTimes++<br>        $(<span class=\"hljs-string\">&#x27;#text2&#x27;</span>).<span class=\"hljs-title function_\">html</span>(<span class=\"hljs-string\">`正在尝试找回小姐 第 <span class=\"hljs-subst\">$&#123;reConnectTimes&#125;</span> 次`</span>);<br>         <span class=\"hljs-keyword\">if</span> (lockReconnect) $(<span class=\"hljs-string\">&#x27;#lostConn&#x27;</span>).<span class=\"hljs-title function_\">hide</span>();<span class=\"hljs-keyword\">return</span><br>        $(<span class=\"hljs-string\">&#x27;#lostConn&#x27;</span>).<span class=\"hljs-title function_\">show</span>();<br>        lockReconnect = <span class=\"hljs-literal\">true</span>;<br>        <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) &#123;<br>            <span class=\"hljs-title function_\">setWebsocket</span>();<br>            lockReconnect = <span class=\"hljs-literal\">false</span>;<br>        &#125;, <span class=\"hljs-number\">1000</span>);<span class=\"hljs-comment\">//断开后2s自动重连</span><br>    &#125;<br></code></pre></td></tr></table></figure>\n\n<p>把连接websocket的事件封装为方法，把上面的代码一同加入</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">var</span> lockReconnect = <span class=\"hljs-literal\">false</span>;<span class=\"hljs-comment\">//websocket连接状态，避免重复连接</span><br>    <span class=\"hljs-keyword\">var</span> reConnectTimes = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-title function_\">setWebsocket</span>()<br>    <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">setWebsocket</span>(<span class=\"hljs-params\"></span>) &#123;<br>        ws = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">WebSocket</span>(<span class=\"hljs-string\">&#x27;ws://localhost:4003/load&#x27;</span>);<br><br>        ws.<span class=\"hljs-property\">onmessage</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) &#123;<br>            <span class=\"hljs-keyword\">var</span> msg = <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(data.<span class=\"hljs-property\">data</span>)<br>            <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(msg)<br>            <span class=\"hljs-keyword\">if</span> (msg.<span class=\"hljs-property\">status</span>) $(<span class=\"hljs-string\">&#x27;#logProgress&#x27;</span>).<span class=\"hljs-title function_\">hide</span>()<br>        &#125;<br><br>        ws.<span class=\"hljs-property\">onclose</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">event</span>) &#123;<br>            <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;断连&quot;</span>);<br>            <span class=\"hljs-title function_\">reconnect</span>();<br>        &#125;<br><br>        ws.<span class=\"hljs-property\">onerror</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">event</span>) &#123;<br>            <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;错误&quot;</span>);<br>            <span class=\"hljs-title function_\">reconnect</span>();<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure>\n\n<p>则总逻辑代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">var</span> lockReconnect = <span class=\"hljs-literal\">false</span>;<span class=\"hljs-comment\">//websocket连接状态，避免重复连接</span><br>    <span class=\"hljs-title function_\">setWebsocket</span>()<br>    <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">setWebsocket</span>(<span class=\"hljs-params\"></span>) &#123;<br>        ws = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">WebSocket</span>(<span class=\"hljs-string\">&#x27;ws://localhost:4003/load&#x27;</span>);<br>        ws.<span class=\"hljs-property\">onmessage</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) &#123;<br>           <span class=\"hljs-comment\">//消息回调 data.data</span><br>        &#125;<br><br>        ws.<span class=\"hljs-property\">onclose</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">event</span>) &#123;<br>            <span class=\"hljs-comment\">//console.log(&quot;断连&quot;);</span><br>            <span class=\"hljs-title function_\">reconnect</span>();<br>        &#125;<br><br>        ws.<span class=\"hljs-property\">onerror</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">event</span>) &#123;<br>            <span class=\"hljs-comment\">//console.log(&quot;错误&quot;);</span><br>            <span class=\"hljs-title function_\">reconnect</span>();<br>        &#125;<br>    &#125;<br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">reconnect</span>(<span class=\"hljs-params\"></span>) &#123;<br>        <span class=\"hljs-keyword\">if</span> (lockReconnect) <span class=\"hljs-keyword\">return</span>;<br>        lockReconnect = <span class=\"hljs-literal\">true</span>;<br>        <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) &#123;<br>            <span class=\"hljs-title function_\">setWebsocket</span>();<br>            lockReconnect = <span class=\"hljs-literal\">false</span>;<br>        &#125;, <span class=\"hljs-number\">1000</span>);<span class=\"hljs-comment\">//断开后1s自动重连</span><br>    &#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"演示效果\"><a href=\"#演示效果\" class=\"headerlink\" title=\"演示效果\"></a>演示效果</h2><p>正常情况下</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/54itzvuehv.png\" alt=\"请在此添加图片描述\"></p>\n<p>服务端主动断开</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/bytlt4bxey.png\" alt=\"请在此添加图片描述\"></p>\n<p>再次启动效果如正常情况。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>对于一些很不重要的消息，在前端展示其重连加载时，应使用后台默默加载或者稍微提示的方式。例如本地计算的项目，不怎么依赖服务器的项目。</p>\n<p>对于中等级别的连接，本地可以计算，但是部分来自服务端，可以采用用户提示式的加载。例如原神从后台切回前台时重新从服务器获取信息的场景，此时人物允许移动转视角操作，但是敏感项目例如充值，产生伤害等应先等待服务器做出相应回复。</p>\n<p>对于完全依赖服务端的应用，应采取隔断交互的措施，防止用户在客户端进行操作，得不到服务器验证从而造成恶意修改数据的后果。例如充值场景，在服务器那边没收到“钱”之前，一定不能让客户端提前回调。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2277385/o3fv9ozs67.png\" alt=\"请在此添加图片描述\"></p>\n<hr>\n<p>Powered by Ar-Sr-Na</p>\n<p>2023-5-1</p>\n"},{"layout":"posts","date":"2022-12-12T14:03:33.000Z","title":"COS+CVM+CDN 实现低成本高效率往返传输数据","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"www.arsrna.cn","comments":1,"index_img":"https://res.arsrna.cn/blog-images/2066053/zw4zl7301q.png","authorAbout":"突破计算边界，构筑数字视界，www.arsrna.cn","authorDesc":"突破计算边界，构筑数字视界，www.arsrna.cn","description":"如何使用COS+CVM+CDN产品方案，实现本地与云端数据高效率互通？","_content":"\n# 前言\n\n## 背景\n\n比如有这样的情况，客户是专门做影视的，渲染服务器在国内，拍摄组分布在欧洲各地，每天产生的数据高达500G，需要传到云服务器进行转码渲染，处理后数据差不多300G，然后再传回本地做备份\n\n![image.png](https://res.arsrna.cn/blog-images/2066053/37654e329e3bc12ef1246daf2e4d9b67.png)\n\n亦或者是客户对CVM成本敏感，带宽方面紧张，没有开通公网带宽，如何从内网低成本传出与公网隔离的CVM实例的文件？\n\n## 问题\n\n公网传统的办法就是利用ftp，或者远程桌面直接传输\n\n这样的缺点非常明显，不支持断点续传，也不支持文件校验，同时效率非常低，遇到丢包延迟的时候甚至无法顺畅传输\n\n一些公司可能会使用网盘的方式进行传输，但是同样存在缺点，数据不可控，有可能因为协议变更或资源敏感导致客户的数据无故删除，造成极大风险。或是速度无法达标造成效率低下。\n\n若服务器没有公网地址，以上方法均无法正常进行\n\n若服务器存在公网，考虑到公网带宽的成本，按量付费的100Mbps就得25块每小时，[公网网络定价 \\_ 公网网络价格 \\_ 公网网络计费模式 - 腾讯云 (tencent.com)](https://buy.cloud.tencent.com/price/idc)，按照100Mbps带宽全部跑满的情况下，300G数据大约要6小时，差不多一天需要150元\n\n如果是按流量计费的带宽，以成都区为例，每G 0.8元的费用，若每天300G则每天为240元，费用较高\n\n考虑到海外拍摄组传输的问题，直连到国内的服务器的效率不会很高，面临丢包，断连的问题。\n\n​\n\n对于后者无公网IP的，内网似乎没有任何办法直接传输回本地，只能借助其他工具，比如内网传到一台有公网的机器上，但是如此一来又回到了第一个客户的问题\n\n如上所有问题，对于一家注重成本或者刚起步的客户，该如何解决？\n\n# 优化思路\n\n## 重复流量\n\n对于以上场景，从服务器传出来的数据，从本地传入服务器的数据，或多或少都会产生流量费用，中途遇到断连等不可抗力因素的时候，重新传输又会进一步造成费用，所以要考虑的不仅仅是数据传输流程，还要考虑稳定性\n\n如果需要来回传输很多次的，建议所有资源保持一个地域与一个内网，传输的时候不走公网，提高效率减少成本\n\n## 稳定性\n\n如上文所述，遇到不可抗力因素的时候，不支持断点续传分片传输的话，就只能从0开始，既浪费时间又浪费流量\n\n如果文件量大的，建议使用对象存储COS，支持到50T的分片上传，并且最好走内网，提高效率。\n\n## 生态\n\nCOS，CDN，CVM统一使用腾讯云的产品，在同一个账户下1控制台可以直接管理，免去了切换平台切换账号之间的麻烦。\n\nCOS与CDN,CVM在腾讯云内同地域统一走内网。\n\n# 场景优化\n\n## 对象存储COS侧\n\n同地域下，对象存储与CVM默认走内网通道，即使没有开通公网，也能直接对数据进行操作，省去了公网带宽的费用。同时内网流量是完全免费的：[https://cloud.tencent.com/document/product/436/56556](https://cloud.tencent.com/document/product/436/56556)\n\n![image.png](https://res.arsrna.cn/blog-images/2066053/33be78790f3f1f7646619256112584f9.png)\n\n如此一来，从服务器传入传出到对象存储的数据，只收流量之外的费用，而这部分费用可以忽略不计（小于0.001元）\n\n由于是内网通道，相对公网来说更加稳定，速率更高，腾讯云CVM最低内网带宽为2.5Gbps，还有更高内网带宽的机型。\n\n而且对象存储产品支持分片上传，断点续传\n\n本文只讨论流量费用，由于对象存储是作为临时传输用的，1天内会删除，存储费用不考虑在内\n\n## 内容分发网络CDN侧\n\n由于服务器与对象存储在国内，直接从海外上传与下载的体验不是那么好，有可能会遇到高延迟和丢包的情况，这时候可以借助CDN进行加速，\n\n **COS 中的 CDN 适用于以下场景：**\n\n- 对响应延时和下载速度有较高要求的场景。\n- 需跨地区、国家、大洲传输数 GB 至数 TB 数据的场景。\n- 需高密集地反复下载相同内容的场景。\n\n同样CDN到COS之间的流量走的也是内网，流量费用按照未通过CDN直接访问源站产生的公网流量费用+CDN访问的费用 进行收费\n\n![CDN+COS加速计费示例](https://res.arsrna.cn/blog-images/2066053/7b14c0bbc3d1c879bc8ec0dc105b86db.png)\n\n[https://cloud.tencent.com/document/product/228/37849](https://cloud.tencent.com/document/product/228/37849)\n\n按流量计费的价格如下：\n\n![COS流量定价](https://res.arsrna.cn/blog-images/2066053/d6a3f679e801d987893dc9644b4b1cb7.png)\n\n![CDN流量定价](https://res.arsrna.cn/blog-images/2066053/2e73d4e3ee8d979a4b6915b1df66b4a9.png)\n\n![CDN带宽计价](https://res.arsrna.cn/blog-images/2066053/a773d7639a6e6db42bec63123f81d36f.png)\n\n相较于COS在欧洲地区的0.5-0.9元/GB，CDN只需要0.31元/GB，每GB省下了最多0.5元，成本直接减半\n\n上例中300G数据通过COS直接下载的价格为150元，而通过CDN只需要93元\n\n# 对比方案\n\n以下数据均为按量付费（按日或小时计费），CVM带宽100Mbps\n\n1GB=1024MB，1T=1024GB，1MB/s=8Mbps\n\n其中，CVM所在地域为中国大陆，COS与CVM同地域，CDN在欧洲\n\nCVM按带宽计算计费价格公式：数据量\\*1024/(带宽/8)/3600\\*带宽费，单位为（GB,Mbps）\n\n| 数据量 GB | CVM流量费用 | CVM带宽费用 | COS流量费用 | CDN流量费用 |\n|:----|:----|:----|:----|:----|\n| 20 | 16 | 11.37777778 | 10 | 6.2 |\n| 100 | 80 | 56.88888889 | 50 | 31 |\n| 500 | 400 | 284.4444444 | 250 | 155 |\n| 1024 | 819.2 | 582.5422222 | 512 | 317.44 |\n| 5120 | 4096 | 2912.711111 | 2560 | 1331.2 |\n| 10240 | 8192 | 5825.422222 | 5120 | 2252.8 |\n\n\n通过上述数据综合计算下来，CDN的费用是最低最划算的，单价在以上产品中均为最低单价\n\n若使用资源包，COS与CDN流量费用还能进一步折扣\n\n# 实施方案\n\n整个方案的结构如下：\n\n![image.png](https://res.arsrna.cn/blog-images/2066053/8169b0af387691f2e47d33479c4e7592.png)\n\n## 开通相关服务\n\n进入对象存储COS，云服务器CVM，内容分发网络CDN 控制台，首次打开会要求开通授权，根据指引操作即可\n\n## 创建存储桶\n\n可参考：[https://cloud.tencent.com/document/product/436/13309](https://cloud.tencent.com/document/product/436/13309)\n\n**注意，创建存储桶时，地域要与CVM所在地域一致，否则将会通过公网收取费用**\n\n存储桶权限建议设置为私有读写\n\n## 创建CDN服务\n\n可参考：[https://cloud.tencent.com/document/product/228/3149](https://cloud.tencent.com/document/product/228/3149)\n\n注意，CDN源站选择COS源，建议选择https回源，开启私有存储桶访问保证安全。加速类型选择大文件下载或根据业务场景选择\n\n其余配置根据文档指引与业务需要进行配置\n\n## CVM内建议配置\n\n如无公网需要，建议不开通公网，从内网仍然可以访问到对象存储\n\n若系统为Windows，建议使用浏览器或COSCMD工具访问对象\n\n通过浏览器直接访问对象地址即可在CVM进行下载，COSCMD工具指引：[https://cloud.tencent.com/document/product/436/10976](https://cloud.tencent.com/document/product/436/10976)\n\nLinux系统建议直接使用COSFS挂载到本地进行操作：[https://cloud.tencent.com/document/product/436/6883](https://cloud.tencent.com/document/product/436/6883)\n\n## 对象存储的本地数据上传\n\n参考：[控制台操作](https://cloud.tencent.com/document/product/436/13321)\n\n此外还可以使用CosBrowser工具完成：[CosBrowser操作](https://cloud.tencent.com/document/product/436/38103#upload)\n\n对象存储上传会分片上传，极大提升了稳定性，减少了资源内存的占用，而且相较于FTP，对象存储支持断点续传，即使遇到断网的情况，恢复网络后依然能继续上传\n\n## CVM上传数据至对象存储\n\n参考 [COSCMD操作](https://cloud.tencent.com/document/product/436/10976#.E4.B8.8B.E8.BD.BD.E6.96.87.E4.BB.B6.E6.88.96.E6.96.87.E4.BB.B6.E5.A4.B9)\n\n[控制台操作](https://cloud.tencent.com/document/product/436/13321) [https://cloud.tencent.com/document/product/436/13321](https://cloud.tencent.com/document/product/436/13321)\n\n若使用windows服务器，可以安装图形化管理软件COSBrowser\n\n[对象存储 COSBrowser 简介-工具指南-文档中心-腾讯云 (tencent.com)](https://cloud.tencent.com/document/product/436/11366)\n\n![](https://res.arsrna.cn/blog-images/2066053/15a0166af38f5f65b876b091e336b428.png)\n\n​\n\n# 总结\n\n由于业务环境复杂，这种方式仅能节省成本，但是而外增加了操作的时长\n\n但是一般的FTP，RDP等P2P的文件传输，可能会因为断网等不可控因素导致数据中途丢失只能从头传输，增加了风险。使用上述这样的方法更安全可靠。\n\n而且通过COS连接CVM，全部走内网通道，速率，稳定，安全性可以达到最高，同时流量费为0，请求费可以忽略不计\n\n除了传输数据，对象存储还提供了高安全性可靠的数据保障，如果本地文件损坏时，对象存储也能提供一份备份以防万一，如开头所说，客户在本地的备份同样也可以使用对象存储进行备份操作。\n\n通过CDN，能让在COS里的数据更快速稳定地传输到本地，同时也能节省直接从COS下载的流量费用，一举两得的好方法，随着流量的增多，节省的费用将会越来越多，如下为理论上能够节省的费用\n\n数据量 GB\tCVM流量费用\tCDN流量费用\tCDN节省率\n\n![image.png](https://res.arsrna.cn/blog-images/2066053/10cb71814a89a321d2b47984e940508b.png)\n\n可以看到，CDN+COS对比直接从CVM出网，能节省50%以上的费用\n\n​\n\n----\n\n​\n\n教程到此结束，更多可能，我们共同探索\n\nPowered by Ar-Sr-Na","source":"_posts/2066053.md","raw":"---\nlayout: posts\ndate: 2022-12-12 22:03:33\ntags: CDN,COS,CVM,传输,成本优化\ntitle: COS+CVM+CDN 实现低成本高效率往返传输数据\nauthor: Ar-Sr-Na\navatar: https://res.arsrna.cn/icon2.jpg\nauthorLink: www.arsrna.cn\ncomments: true\nindex_img: https://res.arsrna.cn/blog-images/2066053/zw4zl7301q.png\nauthorAbout: 突破计算边界，构筑数字视界，www.arsrna.cn\nauthorDesc: 突破计算边界，构筑数字视界，www.arsrna.cn\ndescription: 如何使用COS+CVM+CDN产品方案，实现本地与云端数据高效率互通？\n---\n\n# 前言\n\n## 背景\n\n比如有这样的情况，客户是专门做影视的，渲染服务器在国内，拍摄组分布在欧洲各地，每天产生的数据高达500G，需要传到云服务器进行转码渲染，处理后数据差不多300G，然后再传回本地做备份\n\n![image.png](https://res.arsrna.cn/blog-images/2066053/37654e329e3bc12ef1246daf2e4d9b67.png)\n\n亦或者是客户对CVM成本敏感，带宽方面紧张，没有开通公网带宽，如何从内网低成本传出与公网隔离的CVM实例的文件？\n\n## 问题\n\n公网传统的办法就是利用ftp，或者远程桌面直接传输\n\n这样的缺点非常明显，不支持断点续传，也不支持文件校验，同时效率非常低，遇到丢包延迟的时候甚至无法顺畅传输\n\n一些公司可能会使用网盘的方式进行传输，但是同样存在缺点，数据不可控，有可能因为协议变更或资源敏感导致客户的数据无故删除，造成极大风险。或是速度无法达标造成效率低下。\n\n若服务器没有公网地址，以上方法均无法正常进行\n\n若服务器存在公网，考虑到公网带宽的成本，按量付费的100Mbps就得25块每小时，[公网网络定价 \\_ 公网网络价格 \\_ 公网网络计费模式 - 腾讯云 (tencent.com)](https://buy.cloud.tencent.com/price/idc)，按照100Mbps带宽全部跑满的情况下，300G数据大约要6小时，差不多一天需要150元\n\n如果是按流量计费的带宽，以成都区为例，每G 0.8元的费用，若每天300G则每天为240元，费用较高\n\n考虑到海外拍摄组传输的问题，直连到国内的服务器的效率不会很高，面临丢包，断连的问题。\n\n​\n\n对于后者无公网IP的，内网似乎没有任何办法直接传输回本地，只能借助其他工具，比如内网传到一台有公网的机器上，但是如此一来又回到了第一个客户的问题\n\n如上所有问题，对于一家注重成本或者刚起步的客户，该如何解决？\n\n# 优化思路\n\n## 重复流量\n\n对于以上场景，从服务器传出来的数据，从本地传入服务器的数据，或多或少都会产生流量费用，中途遇到断连等不可抗力因素的时候，重新传输又会进一步造成费用，所以要考虑的不仅仅是数据传输流程，还要考虑稳定性\n\n如果需要来回传输很多次的，建议所有资源保持一个地域与一个内网，传输的时候不走公网，提高效率减少成本\n\n## 稳定性\n\n如上文所述，遇到不可抗力因素的时候，不支持断点续传分片传输的话，就只能从0开始，既浪费时间又浪费流量\n\n如果文件量大的，建议使用对象存储COS，支持到50T的分片上传，并且最好走内网，提高效率。\n\n## 生态\n\nCOS，CDN，CVM统一使用腾讯云的产品，在同一个账户下1控制台可以直接管理，免去了切换平台切换账号之间的麻烦。\n\nCOS与CDN,CVM在腾讯云内同地域统一走内网。\n\n# 场景优化\n\n## 对象存储COS侧\n\n同地域下，对象存储与CVM默认走内网通道，即使没有开通公网，也能直接对数据进行操作，省去了公网带宽的费用。同时内网流量是完全免费的：[https://cloud.tencent.com/document/product/436/56556](https://cloud.tencent.com/document/product/436/56556)\n\n![image.png](https://res.arsrna.cn/blog-images/2066053/33be78790f3f1f7646619256112584f9.png)\n\n如此一来，从服务器传入传出到对象存储的数据，只收流量之外的费用，而这部分费用可以忽略不计（小于0.001元）\n\n由于是内网通道，相对公网来说更加稳定，速率更高，腾讯云CVM最低内网带宽为2.5Gbps，还有更高内网带宽的机型。\n\n而且对象存储产品支持分片上传，断点续传\n\n本文只讨论流量费用，由于对象存储是作为临时传输用的，1天内会删除，存储费用不考虑在内\n\n## 内容分发网络CDN侧\n\n由于服务器与对象存储在国内，直接从海外上传与下载的体验不是那么好，有可能会遇到高延迟和丢包的情况，这时候可以借助CDN进行加速，\n\n **COS 中的 CDN 适用于以下场景：**\n\n- 对响应延时和下载速度有较高要求的场景。\n- 需跨地区、国家、大洲传输数 GB 至数 TB 数据的场景。\n- 需高密集地反复下载相同内容的场景。\n\n同样CDN到COS之间的流量走的也是内网，流量费用按照未通过CDN直接访问源站产生的公网流量费用+CDN访问的费用 进行收费\n\n![CDN+COS加速计费示例](https://res.arsrna.cn/blog-images/2066053/7b14c0bbc3d1c879bc8ec0dc105b86db.png)\n\n[https://cloud.tencent.com/document/product/228/37849](https://cloud.tencent.com/document/product/228/37849)\n\n按流量计费的价格如下：\n\n![COS流量定价](https://res.arsrna.cn/blog-images/2066053/d6a3f679e801d987893dc9644b4b1cb7.png)\n\n![CDN流量定价](https://res.arsrna.cn/blog-images/2066053/2e73d4e3ee8d979a4b6915b1df66b4a9.png)\n\n![CDN带宽计价](https://res.arsrna.cn/blog-images/2066053/a773d7639a6e6db42bec63123f81d36f.png)\n\n相较于COS在欧洲地区的0.5-0.9元/GB，CDN只需要0.31元/GB，每GB省下了最多0.5元，成本直接减半\n\n上例中300G数据通过COS直接下载的价格为150元，而通过CDN只需要93元\n\n# 对比方案\n\n以下数据均为按量付费（按日或小时计费），CVM带宽100Mbps\n\n1GB=1024MB，1T=1024GB，1MB/s=8Mbps\n\n其中，CVM所在地域为中国大陆，COS与CVM同地域，CDN在欧洲\n\nCVM按带宽计算计费价格公式：数据量\\*1024/(带宽/8)/3600\\*带宽费，单位为（GB,Mbps）\n\n| 数据量 GB | CVM流量费用 | CVM带宽费用 | COS流量费用 | CDN流量费用 |\n|:----|:----|:----|:----|:----|\n| 20 | 16 | 11.37777778 | 10 | 6.2 |\n| 100 | 80 | 56.88888889 | 50 | 31 |\n| 500 | 400 | 284.4444444 | 250 | 155 |\n| 1024 | 819.2 | 582.5422222 | 512 | 317.44 |\n| 5120 | 4096 | 2912.711111 | 2560 | 1331.2 |\n| 10240 | 8192 | 5825.422222 | 5120 | 2252.8 |\n\n\n通过上述数据综合计算下来，CDN的费用是最低最划算的，单价在以上产品中均为最低单价\n\n若使用资源包，COS与CDN流量费用还能进一步折扣\n\n# 实施方案\n\n整个方案的结构如下：\n\n![image.png](https://res.arsrna.cn/blog-images/2066053/8169b0af387691f2e47d33479c4e7592.png)\n\n## 开通相关服务\n\n进入对象存储COS，云服务器CVM，内容分发网络CDN 控制台，首次打开会要求开通授权，根据指引操作即可\n\n## 创建存储桶\n\n可参考：[https://cloud.tencent.com/document/product/436/13309](https://cloud.tencent.com/document/product/436/13309)\n\n**注意，创建存储桶时，地域要与CVM所在地域一致，否则将会通过公网收取费用**\n\n存储桶权限建议设置为私有读写\n\n## 创建CDN服务\n\n可参考：[https://cloud.tencent.com/document/product/228/3149](https://cloud.tencent.com/document/product/228/3149)\n\n注意，CDN源站选择COS源，建议选择https回源，开启私有存储桶访问保证安全。加速类型选择大文件下载或根据业务场景选择\n\n其余配置根据文档指引与业务需要进行配置\n\n## CVM内建议配置\n\n如无公网需要，建议不开通公网，从内网仍然可以访问到对象存储\n\n若系统为Windows，建议使用浏览器或COSCMD工具访问对象\n\n通过浏览器直接访问对象地址即可在CVM进行下载，COSCMD工具指引：[https://cloud.tencent.com/document/product/436/10976](https://cloud.tencent.com/document/product/436/10976)\n\nLinux系统建议直接使用COSFS挂载到本地进行操作：[https://cloud.tencent.com/document/product/436/6883](https://cloud.tencent.com/document/product/436/6883)\n\n## 对象存储的本地数据上传\n\n参考：[控制台操作](https://cloud.tencent.com/document/product/436/13321)\n\n此外还可以使用CosBrowser工具完成：[CosBrowser操作](https://cloud.tencent.com/document/product/436/38103#upload)\n\n对象存储上传会分片上传，极大提升了稳定性，减少了资源内存的占用，而且相较于FTP，对象存储支持断点续传，即使遇到断网的情况，恢复网络后依然能继续上传\n\n## CVM上传数据至对象存储\n\n参考 [COSCMD操作](https://cloud.tencent.com/document/product/436/10976#.E4.B8.8B.E8.BD.BD.E6.96.87.E4.BB.B6.E6.88.96.E6.96.87.E4.BB.B6.E5.A4.B9)\n\n[控制台操作](https://cloud.tencent.com/document/product/436/13321) [https://cloud.tencent.com/document/product/436/13321](https://cloud.tencent.com/document/product/436/13321)\n\n若使用windows服务器，可以安装图形化管理软件COSBrowser\n\n[对象存储 COSBrowser 简介-工具指南-文档中心-腾讯云 (tencent.com)](https://cloud.tencent.com/document/product/436/11366)\n\n![](https://res.arsrna.cn/blog-images/2066053/15a0166af38f5f65b876b091e336b428.png)\n\n​\n\n# 总结\n\n由于业务环境复杂，这种方式仅能节省成本，但是而外增加了操作的时长\n\n但是一般的FTP，RDP等P2P的文件传输，可能会因为断网等不可控因素导致数据中途丢失只能从头传输，增加了风险。使用上述这样的方法更安全可靠。\n\n而且通过COS连接CVM，全部走内网通道，速率，稳定，安全性可以达到最高，同时流量费为0，请求费可以忽略不计\n\n除了传输数据，对象存储还提供了高安全性可靠的数据保障，如果本地文件损坏时，对象存储也能提供一份备份以防万一，如开头所说，客户在本地的备份同样也可以使用对象存储进行备份操作。\n\n通过CDN，能让在COS里的数据更快速稳定地传输到本地，同时也能节省直接从COS下载的流量费用，一举两得的好方法，随着流量的增多，节省的费用将会越来越多，如下为理论上能够节省的费用\n\n数据量 GB\tCVM流量费用\tCDN流量费用\tCDN节省率\n\n![image.png](https://res.arsrna.cn/blog-images/2066053/10cb71814a89a321d2b47984e940508b.png)\n\n可以看到，CDN+COS对比直接从CVM出网，能节省50%以上的费用\n\n​\n\n----\n\n​\n\n教程到此结束，更多可能，我们共同探索\n\nPowered by Ar-Sr-Na","slug":"2066053","published":1,"updated":"2023-01-17T08:55:38.570Z","photos":[],"link":"","_id":"clod0d6xv003dc0ndgy90eiz3","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>比如有这样的情况，客户是专门做影视的，渲染服务器在国内，拍摄组分布在欧洲各地，每天产生的数据高达500G，需要传到云服务器进行转码渲染，处理后数据差不多300G，然后再传回本地做备份</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2066053/37654e329e3bc12ef1246daf2e4d9b67.png\" alt=\"image.png\"></p>\n<p>亦或者是客户对CVM成本敏感，带宽方面紧张，没有开通公网带宽，如何从内网低成本传出与公网隔离的CVM实例的文件？</p>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>公网传统的办法就是利用ftp，或者远程桌面直接传输</p>\n<p>这样的缺点非常明显，不支持断点续传，也不支持文件校验，同时效率非常低，遇到丢包延迟的时候甚至无法顺畅传输</p>\n<p>一些公司可能会使用网盘的方式进行传输，但是同样存在缺点，数据不可控，有可能因为协议变更或资源敏感导致客户的数据无故删除，造成极大风险。或是速度无法达标造成效率低下。</p>\n<p>若服务器没有公网地址，以上方法均无法正常进行</p>\n<p>若服务器存在公网，考虑到公网带宽的成本，按量付费的100Mbps就得25块每小时，<a href=\"https://buy.cloud.tencent.com/price/idc\">公网网络定价 _ 公网网络价格 _ 公网网络计费模式 - 腾讯云 (tencent.com)</a>，按照100Mbps带宽全部跑满的情况下，300G数据大约要6小时，差不多一天需要150元</p>\n<p>如果是按流量计费的带宽，以成都区为例，每G 0.8元的费用，若每天300G则每天为240元，费用较高</p>\n<p>考虑到海外拍摄组传输的问题，直连到国内的服务器的效率不会很高，面临丢包，断连的问题。</p>\n<p>​</p>\n<p>对于后者无公网IP的，内网似乎没有任何办法直接传输回本地，只能借助其他工具，比如内网传到一台有公网的机器上，但是如此一来又回到了第一个客户的问题</p>\n<p>如上所有问题，对于一家注重成本或者刚起步的客户，该如何解决？</p>\n<h1 id=\"优化思路\"><a href=\"#优化思路\" class=\"headerlink\" title=\"优化思路\"></a>优化思路</h1><h2 id=\"重复流量\"><a href=\"#重复流量\" class=\"headerlink\" title=\"重复流量\"></a>重复流量</h2><p>对于以上场景，从服务器传出来的数据，从本地传入服务器的数据，或多或少都会产生流量费用，中途遇到断连等不可抗力因素的时候，重新传输又会进一步造成费用，所以要考虑的不仅仅是数据传输流程，还要考虑稳定性</p>\n<p>如果需要来回传输很多次的，建议所有资源保持一个地域与一个内网，传输的时候不走公网，提高效率减少成本</p>\n<h2 id=\"稳定性\"><a href=\"#稳定性\" class=\"headerlink\" title=\"稳定性\"></a>稳定性</h2><p>如上文所述，遇到不可抗力因素的时候，不支持断点续传分片传输的话，就只能从0开始，既浪费时间又浪费流量</p>\n<p>如果文件量大的，建议使用对象存储COS，支持到50T的分片上传，并且最好走内网，提高效率。</p>\n<h2 id=\"生态\"><a href=\"#生态\" class=\"headerlink\" title=\"生态\"></a>生态</h2><p>COS，CDN，CVM统一使用腾讯云的产品，在同一个账户下1控制台可以直接管理，免去了切换平台切换账号之间的麻烦。</p>\n<p>COS与CDN,CVM在腾讯云内同地域统一走内网。</p>\n<h1 id=\"场景优化\"><a href=\"#场景优化\" class=\"headerlink\" title=\"场景优化\"></a>场景优化</h1><h2 id=\"对象存储COS侧\"><a href=\"#对象存储COS侧\" class=\"headerlink\" title=\"对象存储COS侧\"></a>对象存储COS侧</h2><p>同地域下，对象存储与CVM默认走内网通道，即使没有开通公网，也能直接对数据进行操作，省去了公网带宽的费用。同时内网流量是完全免费的：<a href=\"https://cloud.tencent.com/document/product/436/56556\">https://cloud.tencent.com/document/product/436/56556</a></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2066053/33be78790f3f1f7646619256112584f9.png\" alt=\"image.png\"></p>\n<p>如此一来，从服务器传入传出到对象存储的数据，只收流量之外的费用，而这部分费用可以忽略不计（小于0.001元）</p>\n<p>由于是内网通道，相对公网来说更加稳定，速率更高，腾讯云CVM最低内网带宽为2.5Gbps，还有更高内网带宽的机型。</p>\n<p>而且对象存储产品支持分片上传，断点续传</p>\n<p>本文只讨论流量费用，由于对象存储是作为临时传输用的，1天内会删除，存储费用不考虑在内</p>\n<h2 id=\"内容分发网络CDN侧\"><a href=\"#内容分发网络CDN侧\" class=\"headerlink\" title=\"内容分发网络CDN侧\"></a>内容分发网络CDN侧</h2><p>由于服务器与对象存储在国内，直接从海外上传与下载的体验不是那么好，有可能会遇到高延迟和丢包的情况，这时候可以借助CDN进行加速，</p>\n<p> <strong>COS 中的 CDN 适用于以下场景：</strong></p>\n<ul>\n<li>对响应延时和下载速度有较高要求的场景。</li>\n<li>需跨地区、国家、大洲传输数 GB 至数 TB 数据的场景。</li>\n<li>需高密集地反复下载相同内容的场景。</li>\n</ul>\n<p>同样CDN到COS之间的流量走的也是内网，流量费用按照未通过CDN直接访问源站产生的公网流量费用+CDN访问的费用 进行收费</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2066053/7b14c0bbc3d1c879bc8ec0dc105b86db.png\" alt=\"CDN+COS加速计费示例\"></p>\n<p><a href=\"https://cloud.tencent.com/document/product/228/37849\">https://cloud.tencent.com/document/product/228/37849</a></p>\n<p>按流量计费的价格如下：</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2066053/d6a3f679e801d987893dc9644b4b1cb7.png\" alt=\"COS流量定价\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2066053/2e73d4e3ee8d979a4b6915b1df66b4a9.png\" alt=\"CDN流量定价\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2066053/a773d7639a6e6db42bec63123f81d36f.png\" alt=\"CDN带宽计价\"></p>\n<p>相较于COS在欧洲地区的0.5-0.9元&#x2F;GB，CDN只需要0.31元&#x2F;GB，每GB省下了最多0.5元，成本直接减半</p>\n<p>上例中300G数据通过COS直接下载的价格为150元，而通过CDN只需要93元</p>\n<h1 id=\"对比方案\"><a href=\"#对比方案\" class=\"headerlink\" title=\"对比方案\"></a>对比方案</h1><p>以下数据均为按量付费（按日或小时计费），CVM带宽100Mbps</p>\n<p>1GB&#x3D;1024MB，1T&#x3D;1024GB，1MB&#x2F;s&#x3D;8Mbps</p>\n<p>其中，CVM所在地域为中国大陆，COS与CVM同地域，CDN在欧洲</p>\n<p>CVM按带宽计算计费价格公式：数据量*1024&#x2F;(带宽&#x2F;8)&#x2F;3600*带宽费，单位为（GB,Mbps）</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">数据量 GB</th>\n<th align=\"left\">CVM流量费用</th>\n<th align=\"left\">CVM带宽费用</th>\n<th align=\"left\">COS流量费用</th>\n<th align=\"left\">CDN流量费用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">20</td>\n<td align=\"left\">16</td>\n<td align=\"left\">11.37777778</td>\n<td align=\"left\">10</td>\n<td align=\"left\">6.2</td>\n</tr>\n<tr>\n<td align=\"left\">100</td>\n<td align=\"left\">80</td>\n<td align=\"left\">56.88888889</td>\n<td align=\"left\">50</td>\n<td align=\"left\">31</td>\n</tr>\n<tr>\n<td align=\"left\">500</td>\n<td align=\"left\">400</td>\n<td align=\"left\">284.4444444</td>\n<td align=\"left\">250</td>\n<td align=\"left\">155</td>\n</tr>\n<tr>\n<td align=\"left\">1024</td>\n<td align=\"left\">819.2</td>\n<td align=\"left\">582.5422222</td>\n<td align=\"left\">512</td>\n<td align=\"left\">317.44</td>\n</tr>\n<tr>\n<td align=\"left\">5120</td>\n<td align=\"left\">4096</td>\n<td align=\"left\">2912.711111</td>\n<td align=\"left\">2560</td>\n<td align=\"left\">1331.2</td>\n</tr>\n<tr>\n<td align=\"left\">10240</td>\n<td align=\"left\">8192</td>\n<td align=\"left\">5825.422222</td>\n<td align=\"left\">5120</td>\n<td align=\"left\">2252.8</td>\n</tr>\n</tbody></table>\n<p>通过上述数据综合计算下来，CDN的费用是最低最划算的，单价在以上产品中均为最低单价</p>\n<p>若使用资源包，COS与CDN流量费用还能进一步折扣</p>\n<h1 id=\"实施方案\"><a href=\"#实施方案\" class=\"headerlink\" title=\"实施方案\"></a>实施方案</h1><p>整个方案的结构如下：</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2066053/8169b0af387691f2e47d33479c4e7592.png\" alt=\"image.png\"></p>\n<h2 id=\"开通相关服务\"><a href=\"#开通相关服务\" class=\"headerlink\" title=\"开通相关服务\"></a>开通相关服务</h2><p>进入对象存储COS，云服务器CVM，内容分发网络CDN 控制台，首次打开会要求开通授权，根据指引操作即可</p>\n<h2 id=\"创建存储桶\"><a href=\"#创建存储桶\" class=\"headerlink\" title=\"创建存储桶\"></a>创建存储桶</h2><p>可参考：<a href=\"https://cloud.tencent.com/document/product/436/13309\">https://cloud.tencent.com/document/product/436/13309</a></p>\n<p><strong>注意，创建存储桶时，地域要与CVM所在地域一致，否则将会通过公网收取费用</strong></p>\n<p>存储桶权限建议设置为私有读写</p>\n<h2 id=\"创建CDN服务\"><a href=\"#创建CDN服务\" class=\"headerlink\" title=\"创建CDN服务\"></a>创建CDN服务</h2><p>可参考：<a href=\"https://cloud.tencent.com/document/product/228/3149\">https://cloud.tencent.com/document/product/228/3149</a></p>\n<p>注意，CDN源站选择COS源，建议选择https回源，开启私有存储桶访问保证安全。加速类型选择大文件下载或根据业务场景选择</p>\n<p>其余配置根据文档指引与业务需要进行配置</p>\n<h2 id=\"CVM内建议配置\"><a href=\"#CVM内建议配置\" class=\"headerlink\" title=\"CVM内建议配置\"></a>CVM内建议配置</h2><p>如无公网需要，建议不开通公网，从内网仍然可以访问到对象存储</p>\n<p>若系统为Windows，建议使用浏览器或COSCMD工具访问对象</p>\n<p>通过浏览器直接访问对象地址即可在CVM进行下载，COSCMD工具指引：<a href=\"https://cloud.tencent.com/document/product/436/10976\">https://cloud.tencent.com/document/product/436/10976</a></p>\n<p>Linux系统建议直接使用COSFS挂载到本地进行操作：<a href=\"https://cloud.tencent.com/document/product/436/6883\">https://cloud.tencent.com/document/product/436/6883</a></p>\n<h2 id=\"对象存储的本地数据上传\"><a href=\"#对象存储的本地数据上传\" class=\"headerlink\" title=\"对象存储的本地数据上传\"></a>对象存储的本地数据上传</h2><p>参考：<a href=\"https://cloud.tencent.com/document/product/436/13321\">控制台操作</a></p>\n<p>此外还可以使用CosBrowser工具完成：<a href=\"https://cloud.tencent.com/document/product/436/38103#upload\">CosBrowser操作</a></p>\n<p>对象存储上传会分片上传，极大提升了稳定性，减少了资源内存的占用，而且相较于FTP，对象存储支持断点续传，即使遇到断网的情况，恢复网络后依然能继续上传</p>\n<h2 id=\"CVM上传数据至对象存储\"><a href=\"#CVM上传数据至对象存储\" class=\"headerlink\" title=\"CVM上传数据至对象存储\"></a>CVM上传数据至对象存储</h2><p>参考 <a href=\"https://cloud.tencent.com/document/product/436/10976#.E4.B8.8B.E8.BD.BD.E6.96.87.E4.BB.B6.E6.88.96.E6.96.87.E4.BB.B6.E5.A4.B9\">COSCMD操作</a></p>\n<p><a href=\"https://cloud.tencent.com/document/product/436/13321\">控制台操作</a> <a href=\"https://cloud.tencent.com/document/product/436/13321\">https://cloud.tencent.com/document/product/436/13321</a></p>\n<p>若使用windows服务器，可以安装图形化管理软件COSBrowser</p>\n<p><a href=\"https://cloud.tencent.com/document/product/436/11366\">对象存储 COSBrowser 简介-工具指南-文档中心-腾讯云 (tencent.com)</a></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2066053/15a0166af38f5f65b876b091e336b428.png\"></p>\n<p>​</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>由于业务环境复杂，这种方式仅能节省成本，但是而外增加了操作的时长</p>\n<p>但是一般的FTP，RDP等P2P的文件传输，可能会因为断网等不可控因素导致数据中途丢失只能从头传输，增加了风险。使用上述这样的方法更安全可靠。</p>\n<p>而且通过COS连接CVM，全部走内网通道，速率，稳定，安全性可以达到最高，同时流量费为0，请求费可以忽略不计</p>\n<p>除了传输数据，对象存储还提供了高安全性可靠的数据保障，如果本地文件损坏时，对象存储也能提供一份备份以防万一，如开头所说，客户在本地的备份同样也可以使用对象存储进行备份操作。</p>\n<p>通过CDN，能让在COS里的数据更快速稳定地传输到本地，同时也能节省直接从COS下载的流量费用，一举两得的好方法，随着流量的增多，节省的费用将会越来越多，如下为理论上能够节省的费用</p>\n<p>数据量 GB\tCVM流量费用\tCDN流量费用\tCDN节省率</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2066053/10cb71814a89a321d2b47984e940508b.png\" alt=\"image.png\"></p>\n<p>可以看到，CDN+COS对比直接从CVM出网，能节省50%以上的费用</p>\n<p>​</p>\n<hr>\n<p>​</p>\n<p>教程到此结束，更多可能，我们共同探索</p>\n<p>Powered by Ar-Sr-Na</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>比如有这样的情况，客户是专门做影视的，渲染服务器在国内，拍摄组分布在欧洲各地，每天产生的数据高达500G，需要传到云服务器进行转码渲染，处理后数据差不多300G，然后再传回本地做备份</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2066053/37654e329e3bc12ef1246daf2e4d9b67.png\" alt=\"image.png\"></p>\n<p>亦或者是客户对CVM成本敏感，带宽方面紧张，没有开通公网带宽，如何从内网低成本传出与公网隔离的CVM实例的文件？</p>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>公网传统的办法就是利用ftp，或者远程桌面直接传输</p>\n<p>这样的缺点非常明显，不支持断点续传，也不支持文件校验，同时效率非常低，遇到丢包延迟的时候甚至无法顺畅传输</p>\n<p>一些公司可能会使用网盘的方式进行传输，但是同样存在缺点，数据不可控，有可能因为协议变更或资源敏感导致客户的数据无故删除，造成极大风险。或是速度无法达标造成效率低下。</p>\n<p>若服务器没有公网地址，以上方法均无法正常进行</p>\n<p>若服务器存在公网，考虑到公网带宽的成本，按量付费的100Mbps就得25块每小时，<a href=\"https://buy.cloud.tencent.com/price/idc\">公网网络定价 _ 公网网络价格 _ 公网网络计费模式 - 腾讯云 (tencent.com)</a>，按照100Mbps带宽全部跑满的情况下，300G数据大约要6小时，差不多一天需要150元</p>\n<p>如果是按流量计费的带宽，以成都区为例，每G 0.8元的费用，若每天300G则每天为240元，费用较高</p>\n<p>考虑到海外拍摄组传输的问题，直连到国内的服务器的效率不会很高，面临丢包，断连的问题。</p>\n<p>​</p>\n<p>对于后者无公网IP的，内网似乎没有任何办法直接传输回本地，只能借助其他工具，比如内网传到一台有公网的机器上，但是如此一来又回到了第一个客户的问题</p>\n<p>如上所有问题，对于一家注重成本或者刚起步的客户，该如何解决？</p>\n<h1 id=\"优化思路\"><a href=\"#优化思路\" class=\"headerlink\" title=\"优化思路\"></a>优化思路</h1><h2 id=\"重复流量\"><a href=\"#重复流量\" class=\"headerlink\" title=\"重复流量\"></a>重复流量</h2><p>对于以上场景，从服务器传出来的数据，从本地传入服务器的数据，或多或少都会产生流量费用，中途遇到断连等不可抗力因素的时候，重新传输又会进一步造成费用，所以要考虑的不仅仅是数据传输流程，还要考虑稳定性</p>\n<p>如果需要来回传输很多次的，建议所有资源保持一个地域与一个内网，传输的时候不走公网，提高效率减少成本</p>\n<h2 id=\"稳定性\"><a href=\"#稳定性\" class=\"headerlink\" title=\"稳定性\"></a>稳定性</h2><p>如上文所述，遇到不可抗力因素的时候，不支持断点续传分片传输的话，就只能从0开始，既浪费时间又浪费流量</p>\n<p>如果文件量大的，建议使用对象存储COS，支持到50T的分片上传，并且最好走内网，提高效率。</p>\n<h2 id=\"生态\"><a href=\"#生态\" class=\"headerlink\" title=\"生态\"></a>生态</h2><p>COS，CDN，CVM统一使用腾讯云的产品，在同一个账户下1控制台可以直接管理，免去了切换平台切换账号之间的麻烦。</p>\n<p>COS与CDN,CVM在腾讯云内同地域统一走内网。</p>\n<h1 id=\"场景优化\"><a href=\"#场景优化\" class=\"headerlink\" title=\"场景优化\"></a>场景优化</h1><h2 id=\"对象存储COS侧\"><a href=\"#对象存储COS侧\" class=\"headerlink\" title=\"对象存储COS侧\"></a>对象存储COS侧</h2><p>同地域下，对象存储与CVM默认走内网通道，即使没有开通公网，也能直接对数据进行操作，省去了公网带宽的费用。同时内网流量是完全免费的：<a href=\"https://cloud.tencent.com/document/product/436/56556\">https://cloud.tencent.com/document/product/436/56556</a></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2066053/33be78790f3f1f7646619256112584f9.png\" alt=\"image.png\"></p>\n<p>如此一来，从服务器传入传出到对象存储的数据，只收流量之外的费用，而这部分费用可以忽略不计（小于0.001元）</p>\n<p>由于是内网通道，相对公网来说更加稳定，速率更高，腾讯云CVM最低内网带宽为2.5Gbps，还有更高内网带宽的机型。</p>\n<p>而且对象存储产品支持分片上传，断点续传</p>\n<p>本文只讨论流量费用，由于对象存储是作为临时传输用的，1天内会删除，存储费用不考虑在内</p>\n<h2 id=\"内容分发网络CDN侧\"><a href=\"#内容分发网络CDN侧\" class=\"headerlink\" title=\"内容分发网络CDN侧\"></a>内容分发网络CDN侧</h2><p>由于服务器与对象存储在国内，直接从海外上传与下载的体验不是那么好，有可能会遇到高延迟和丢包的情况，这时候可以借助CDN进行加速，</p>\n<p> <strong>COS 中的 CDN 适用于以下场景：</strong></p>\n<ul>\n<li>对响应延时和下载速度有较高要求的场景。</li>\n<li>需跨地区、国家、大洲传输数 GB 至数 TB 数据的场景。</li>\n<li>需高密集地反复下载相同内容的场景。</li>\n</ul>\n<p>同样CDN到COS之间的流量走的也是内网，流量费用按照未通过CDN直接访问源站产生的公网流量费用+CDN访问的费用 进行收费</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2066053/7b14c0bbc3d1c879bc8ec0dc105b86db.png\" alt=\"CDN+COS加速计费示例\"></p>\n<p><a href=\"https://cloud.tencent.com/document/product/228/37849\">https://cloud.tencent.com/document/product/228/37849</a></p>\n<p>按流量计费的价格如下：</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2066053/d6a3f679e801d987893dc9644b4b1cb7.png\" alt=\"COS流量定价\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2066053/2e73d4e3ee8d979a4b6915b1df66b4a9.png\" alt=\"CDN流量定价\"></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2066053/a773d7639a6e6db42bec63123f81d36f.png\" alt=\"CDN带宽计价\"></p>\n<p>相较于COS在欧洲地区的0.5-0.9元&#x2F;GB，CDN只需要0.31元&#x2F;GB，每GB省下了最多0.5元，成本直接减半</p>\n<p>上例中300G数据通过COS直接下载的价格为150元，而通过CDN只需要93元</p>\n<h1 id=\"对比方案\"><a href=\"#对比方案\" class=\"headerlink\" title=\"对比方案\"></a>对比方案</h1><p>以下数据均为按量付费（按日或小时计费），CVM带宽100Mbps</p>\n<p>1GB&#x3D;1024MB，1T&#x3D;1024GB，1MB&#x2F;s&#x3D;8Mbps</p>\n<p>其中，CVM所在地域为中国大陆，COS与CVM同地域，CDN在欧洲</p>\n<p>CVM按带宽计算计费价格公式：数据量*1024&#x2F;(带宽&#x2F;8)&#x2F;3600*带宽费，单位为（GB,Mbps）</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">数据量 GB</th>\n<th align=\"left\">CVM流量费用</th>\n<th align=\"left\">CVM带宽费用</th>\n<th align=\"left\">COS流量费用</th>\n<th align=\"left\">CDN流量费用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">20</td>\n<td align=\"left\">16</td>\n<td align=\"left\">11.37777778</td>\n<td align=\"left\">10</td>\n<td align=\"left\">6.2</td>\n</tr>\n<tr>\n<td align=\"left\">100</td>\n<td align=\"left\">80</td>\n<td align=\"left\">56.88888889</td>\n<td align=\"left\">50</td>\n<td align=\"left\">31</td>\n</tr>\n<tr>\n<td align=\"left\">500</td>\n<td align=\"left\">400</td>\n<td align=\"left\">284.4444444</td>\n<td align=\"left\">250</td>\n<td align=\"left\">155</td>\n</tr>\n<tr>\n<td align=\"left\">1024</td>\n<td align=\"left\">819.2</td>\n<td align=\"left\">582.5422222</td>\n<td align=\"left\">512</td>\n<td align=\"left\">317.44</td>\n</tr>\n<tr>\n<td align=\"left\">5120</td>\n<td align=\"left\">4096</td>\n<td align=\"left\">2912.711111</td>\n<td align=\"left\">2560</td>\n<td align=\"left\">1331.2</td>\n</tr>\n<tr>\n<td align=\"left\">10240</td>\n<td align=\"left\">8192</td>\n<td align=\"left\">5825.422222</td>\n<td align=\"left\">5120</td>\n<td align=\"left\">2252.8</td>\n</tr>\n</tbody></table>\n<p>通过上述数据综合计算下来，CDN的费用是最低最划算的，单价在以上产品中均为最低单价</p>\n<p>若使用资源包，COS与CDN流量费用还能进一步折扣</p>\n<h1 id=\"实施方案\"><a href=\"#实施方案\" class=\"headerlink\" title=\"实施方案\"></a>实施方案</h1><p>整个方案的结构如下：</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2066053/8169b0af387691f2e47d33479c4e7592.png\" alt=\"image.png\"></p>\n<h2 id=\"开通相关服务\"><a href=\"#开通相关服务\" class=\"headerlink\" title=\"开通相关服务\"></a>开通相关服务</h2><p>进入对象存储COS，云服务器CVM，内容分发网络CDN 控制台，首次打开会要求开通授权，根据指引操作即可</p>\n<h2 id=\"创建存储桶\"><a href=\"#创建存储桶\" class=\"headerlink\" title=\"创建存储桶\"></a>创建存储桶</h2><p>可参考：<a href=\"https://cloud.tencent.com/document/product/436/13309\">https://cloud.tencent.com/document/product/436/13309</a></p>\n<p><strong>注意，创建存储桶时，地域要与CVM所在地域一致，否则将会通过公网收取费用</strong></p>\n<p>存储桶权限建议设置为私有读写</p>\n<h2 id=\"创建CDN服务\"><a href=\"#创建CDN服务\" class=\"headerlink\" title=\"创建CDN服务\"></a>创建CDN服务</h2><p>可参考：<a href=\"https://cloud.tencent.com/document/product/228/3149\">https://cloud.tencent.com/document/product/228/3149</a></p>\n<p>注意，CDN源站选择COS源，建议选择https回源，开启私有存储桶访问保证安全。加速类型选择大文件下载或根据业务场景选择</p>\n<p>其余配置根据文档指引与业务需要进行配置</p>\n<h2 id=\"CVM内建议配置\"><a href=\"#CVM内建议配置\" class=\"headerlink\" title=\"CVM内建议配置\"></a>CVM内建议配置</h2><p>如无公网需要，建议不开通公网，从内网仍然可以访问到对象存储</p>\n<p>若系统为Windows，建议使用浏览器或COSCMD工具访问对象</p>\n<p>通过浏览器直接访问对象地址即可在CVM进行下载，COSCMD工具指引：<a href=\"https://cloud.tencent.com/document/product/436/10976\">https://cloud.tencent.com/document/product/436/10976</a></p>\n<p>Linux系统建议直接使用COSFS挂载到本地进行操作：<a href=\"https://cloud.tencent.com/document/product/436/6883\">https://cloud.tencent.com/document/product/436/6883</a></p>\n<h2 id=\"对象存储的本地数据上传\"><a href=\"#对象存储的本地数据上传\" class=\"headerlink\" title=\"对象存储的本地数据上传\"></a>对象存储的本地数据上传</h2><p>参考：<a href=\"https://cloud.tencent.com/document/product/436/13321\">控制台操作</a></p>\n<p>此外还可以使用CosBrowser工具完成：<a href=\"https://cloud.tencent.com/document/product/436/38103#upload\">CosBrowser操作</a></p>\n<p>对象存储上传会分片上传，极大提升了稳定性，减少了资源内存的占用，而且相较于FTP，对象存储支持断点续传，即使遇到断网的情况，恢复网络后依然能继续上传</p>\n<h2 id=\"CVM上传数据至对象存储\"><a href=\"#CVM上传数据至对象存储\" class=\"headerlink\" title=\"CVM上传数据至对象存储\"></a>CVM上传数据至对象存储</h2><p>参考 <a href=\"https://cloud.tencent.com/document/product/436/10976#.E4.B8.8B.E8.BD.BD.E6.96.87.E4.BB.B6.E6.88.96.E6.96.87.E4.BB.B6.E5.A4.B9\">COSCMD操作</a></p>\n<p><a href=\"https://cloud.tencent.com/document/product/436/13321\">控制台操作</a> <a href=\"https://cloud.tencent.com/document/product/436/13321\">https://cloud.tencent.com/document/product/436/13321</a></p>\n<p>若使用windows服务器，可以安装图形化管理软件COSBrowser</p>\n<p><a href=\"https://cloud.tencent.com/document/product/436/11366\">对象存储 COSBrowser 简介-工具指南-文档中心-腾讯云 (tencent.com)</a></p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2066053/15a0166af38f5f65b876b091e336b428.png\"></p>\n<p>​</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>由于业务环境复杂，这种方式仅能节省成本，但是而外增加了操作的时长</p>\n<p>但是一般的FTP，RDP等P2P的文件传输，可能会因为断网等不可控因素导致数据中途丢失只能从头传输，增加了风险。使用上述这样的方法更安全可靠。</p>\n<p>而且通过COS连接CVM，全部走内网通道，速率，稳定，安全性可以达到最高，同时流量费为0，请求费可以忽略不计</p>\n<p>除了传输数据，对象存储还提供了高安全性可靠的数据保障，如果本地文件损坏时，对象存储也能提供一份备份以防万一，如开头所说，客户在本地的备份同样也可以使用对象存储进行备份操作。</p>\n<p>通过CDN，能让在COS里的数据更快速稳定地传输到本地，同时也能节省直接从COS下载的流量费用，一举两得的好方法，随着流量的增多，节省的费用将会越来越多，如下为理论上能够节省的费用</p>\n<p>数据量 GB\tCVM流量费用\tCDN流量费用\tCDN节省率</p>\n<p><img src=\"https://res.arsrna.cn/blog-images/2066053/10cb71814a89a321d2b47984e940508b.png\" alt=\"image.png\"></p>\n<p>可以看到，CDN+COS对比直接从CVM出网，能节省50%以上的费用</p>\n<p>​</p>\n<hr>\n<p>​</p>\n<p>教程到此结束，更多可能，我们共同探索</p>\n<p>Powered by Ar-Sr-Na</p>\n"},{"title":"【玩转 EdgeOne】加速COS静态网站并实现动态刷新","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"https://www.arsrna.cn","authorAbout":"突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn","authorDesc":"突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn","comments":1,"date":"2023-10-24T15:28:28.000Z","keywords":"js,cos,scf,edgeone,缓存,自动化,刷新,加速,静态网站","description":"截止至目前，腾讯云scf支持接入的加速只有cdn，暂未支持edgeone，如果直接在serverless.yml里面填入在edgeone托管的网站，则会报错，该域名未接入CDN","index_img":"https://st2-res.arsrna.cn/2348693/057bb39826fb7bdd3b7d63d8667afdbc.png","_content":"# 导言\n\n## SCF遇到的问题\n\n腾讯云有一款Serverless Framework产品，可以从本地把网站等框架快速部署到腾讯云产品上而无需复杂的服务器配置。\n\n但是截止至目前，腾讯云scf支持接入的加速只有cdn，暂未支持edgeone，如果直接在serverless.yml里面填入在edgeone托管的网站，则会报错，该域名未接入CDN\n\n## CRA遇到的问题\n\n由于笔者开发使用的是Create-React-App的网站框架，每次部署都需要刷新缓存否则就会造成资源找不到的问题。由于scf建站可以实现自动刷新CDN缓存，但是没办法自动刷新edgeone缓存，即使使用云函数COS触发，也只有CDN的方案，至于EO，只能通过API+SCF的方案来解决。\n\n# 原理\n\n## 触发\n\n因为scf部署网站会更新cos内容，而scf有一个cos触发器，当cos内容改变时会触发函数执行，此时我们就可以利用这种方式来实现动态更新。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/41c879abf1a5bf964d8c583965cc895e.png)\n\n## API\n\n腾讯云EdgeOne（TEO）有一个API接口 `CreatePurgeTask`，即为 `创建清除缓存任务`，可以在 [ApiExplorer](https://console.cloud.tencent.com/api/explorer?Product=teo&Version=2022-09-01&Action=CreatePurgeTask) 找到调用该API的文档和方式\n\n# 实现\n\n## 要求\n\n- 域名必须已经接入eo\n- 后端必须是腾讯云cos\n- 已开通COS，SCF，TEO等服务\n\n**SCF在使用过程中会产生费用（无资源包的会产生最低消费），请务必了解后再使用！**\n\n## API使用\n\n[ApiExplorer](https://console.cloud.tencent.com/api/explorer?Product=teo&Version=2022-09-01&Action=CreatePurgeTask) 找到调用该API的文档和方式\n\n### 参数说明\n\n需要传入的参数如下：\n\n- `ZoneId` 站点ID，可在 [EdgeOne控制台-站点列表](https://console.cloud.tencent.com/edgeone/zones) 找到\n  ![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/95a147f492278235da2423830b4ae678.png)\n- `Type` 清除缓存的类型，请根据需要，查看[产品文档](https://cloud.tencent.com/document/product/1552/70759)来选择，笔者的CRA是整个域名的更新，所以使用 `purge_host`\n- `Method` 节点缓存清除方法，使用刷新变更资源的方式 `invalidate`\n- `Targets` 刷新的目标，根据 `Type` 传入的字段选择。这里使用的是 `purge_host`，所以传入刷新的hostname，例如 `www.arsrna.com`。当然我们这里不一定只给一个域名进行刷新，可以传入多个hostname，以数组的方式传入\n\n## SCF侧接入\n\n### 函数代码\n\n在APIExplorer代码生成处，可以获得SDK运行所需要的代码，这里以nodejs为例，其他语言方法一样。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/cbe83c30ddb620c27722f185aff22a74.png)\n\n进入[SCF控制台](https://console.cloud.tencent.com/scf/list)，单击新建函数，选择 `从头开始`，使用事件函数。\n\n运行环境根据APIExplorer生成代码的语言选择\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/9fe81d1b3cb0b36500b0c41041f56a29.png)\n\n地域尽量选择跟腾讯云TEO SDK相同的地域，在API Explorer的参数 `Region`可以查看\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/18273887b539165f26d96383919d1068.png)\n\n剩下的参数暂时不需要设置，单击完成\n\n进入函数控制台，编辑函数代码\n\n根据各语言的要求，安装对应依赖，引入依赖，新版函数编辑器可以右键文件夹，点击在终端中打开，即可调出终端\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/f34fe1468c6d33a9e9a0b829cbf90437.png)\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/eed2745d339d4b43c6fac3b334a24e0a.png)\n\n根据各语言要求，修改函数代码\n\n### 代码demo\n\n以下为nodejs的demo，可按需修改\n\n```js\nconst tencentcloud = require(\"tencentcloud-sdk-nodejs-teo\");\nconst TeoClient = tencentcloud.teo.v20220901.Client;\n\nexports.main_handler = async (event, context) => {\n    const {secretId,secretKey}=process.env; \n    // 已使用环境变量的方式，不放在代码，建议使用最小权限存储，参见https://cloud.tencent.com/document/product/1278/85305\n    const clientConfig = {\n        credential: {\n          secretId,\n          secretKey,\n        },\n        region: \"ap-guangzhou\",\n        profile: {\n          httpProfile: {\n            endpoint: \"teo.tencentcloudapi.com\",\n          },\n        },\n      };\n      const client = new TeoClient(clientConfig);\n      const params = {\n          \"ZoneId\": \"zone-xxxxxxxxxx\", //ZoneId，可在控制台找到\n          \"Type\": \"purge_host\",\n          \"Method\": \"invalidate\",\n          \"Targets\": [\n              \"arsrna.cn\", //传入域名，可传入多个\n              \"www.arsrna.cn\"\n          ]\n      };\n      return new Promise((resolve,reject)=>{\n        client.CreatePurgeTask(params).then(\n            (data) => {\n              resolve(data);\n            },\n            (err) => {\n              reject(JSON.stringify(err));\n            }\n          );\n      })\n};\n```\n\n在控制台上单击测试，查看函数运行结果\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/3fd25f9e782b34a193b2db1e8be1758b.png)\n\n```\n{\n    \"RequestId\":\"3bcb9c24-c628-4506-b91f-bad40ae6daf4\",\n    \"FailedList\":[],\n    \"JobId\":\"2p0bf4pucgks\"\n}\n```\n\n如果 `FailedList`为空，证明运行成功，可以前往EO控制台查看效果\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/e5b7ffbae3815433c2dda9ad27c397a0.png)\n\n## COS接入\n\n在刚刚函数的控制台处切换到触发器管理，新建一个COS触发器，选择对应存储桶（eo源站设置的存储桶）。事件类型选全部创建并立即启用。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/89f27ceb154f8641e34f6c6b1e5e7747.png)\n\n提交后即可生效，此时往cos增删改文件都会触发刷新缓存的命令。\n\nscf部署网站CLI命令为 `scf deploy`，详细可以查阅serverless framework的说明\n\n# 通用化\n\n我们并不希望一个存储桶一个函数，不仅不方便管理，还会造成多余的资源占用\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/057bb39826fb7bdd3b7d63d8667afdbc.png)\n\n此时可以根据更改的cos桶来进行判断刷新的网站，在函数里面加入映射的关系。\n\n如上图所示，以nodejs代码为例，可以写成\n\n```js\nfunction getEOHosts(bucketName){\n    const mapping={\n        'test-a':['a.com','b.com','c.com'],\n        'test-b':['d.com','e.com','f.com','g.com']\n    }\n    return mapping[bucketName];\n}\n```\n\ncos触发器会向函数发送一个json请求，可以取到对应bucket name\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/dcec72c24dc07a492b6730a9180051cc.png)\n\n上述创建的事件函数里，bucket名称在路径 `event.Records[0].cos.cosBucket.name`下，我们上传一个文件，就可以看到触发了。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/d80b753980f0f1d7dcfad97d3f454ed2.png)\n\n再根据上面的映射，改造代码：\n\n```js\nconst tencentcloud = require(\"tencentcloud-sdk-nodejs-teo\");\nconst TeoClient = tencentcloud.teo.v20220901.Client;\n\nfunction getEOHosts(bucketName){\n  const mapping={\n      'test-a':['a.com','b.com','c.com'],\n      'test-b':['d.com','e.com','f.com','g.com']\n  }\n  return mapping[bucketName];\n}\n\nexports.main_handler = async (event, context) => {\n  const bucketName=event.Records[0].cos.cosBucket.name;\n    const {secretId,secretKey}=process.env;\n    const clientConfig = {\n        credential: {\n          secretId,\n          secretKey,\n        },\n        region: \"ap-guangzhou\",\n        profile: {\n          httpProfile: {\n            endpoint: \"teo.tencentcloudapi.com\",\n          },\n        },\n      };\n  \n      // 实例化要请求产品的client对象,clientProfile是可选的\n      const client = new TeoClient(clientConfig);\n      const params = {\n          \"ZoneId\": \"zone-xxxxxxx\",\n          \"Type\": \"purge_host\",\n          \"Method\": \"invalidate\",\n          \"Targets\": getEOHosts(bucketName)\n      };\n      return new Promise((resolve,reject)=>{\n        client.CreatePurgeTask(params).then(\n            (data) => {\n              resolve(data);\n            },\n            (err) => {\n              reject(JSON.stringify(err));\n            }\n          );\n      })\n};\n```\n\n在scf触发器管理里，创建多个cos触发器，即可实现一个函数，多cos，单eo自动更新\n\n当然，此时只能实现单eo自动更新，如果要实现多eo站点更新，可以在映射里面加入多个参数，这里不再赘述，各语言实现的方式不一样。\n\nAr-Sr-Na原创，未经允许禁止转载\n\n**代码仅做参考，由此造成的一切问题与作者无关。**\n","source":"_posts/2348693.md","raw":"---\ntitle: 【玩转 EdgeOne】加速COS静态网站并实现动态刷新\nauthor: Ar-Sr-Na\navatar: https://res.arsrna.cn/icon2.jpg\nauthorLink: https://www.arsrna.cn\nauthorAbout: 突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn\nauthorDesc: 突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn\ncomments: true\ndate: 2023-10-24 23:28:28\ncategories: 技术\ntags: js,cos,scf,edgeone,缓存,自动化,刷新,加速,静态网站\nkeywords: js,cos,scf,edgeone,缓存,自动化,刷新,加速,静态网站\ndescription: 截止至目前，腾讯云scf支持接入的加速只有cdn，暂未支持edgeone，如果直接在serverless.yml里面填入在edgeone托管的网站，则会报错，该域名未接入CDN\nindex_img: https://st2-res.arsrna.cn/2348693/057bb39826fb7bdd3b7d63d8667afdbc.png\n---\n# 导言\n\n## SCF遇到的问题\n\n腾讯云有一款Serverless Framework产品，可以从本地把网站等框架快速部署到腾讯云产品上而无需复杂的服务器配置。\n\n但是截止至目前，腾讯云scf支持接入的加速只有cdn，暂未支持edgeone，如果直接在serverless.yml里面填入在edgeone托管的网站，则会报错，该域名未接入CDN\n\n## CRA遇到的问题\n\n由于笔者开发使用的是Create-React-App的网站框架，每次部署都需要刷新缓存否则就会造成资源找不到的问题。由于scf建站可以实现自动刷新CDN缓存，但是没办法自动刷新edgeone缓存，即使使用云函数COS触发，也只有CDN的方案，至于EO，只能通过API+SCF的方案来解决。\n\n# 原理\n\n## 触发\n\n因为scf部署网站会更新cos内容，而scf有一个cos触发器，当cos内容改变时会触发函数执行，此时我们就可以利用这种方式来实现动态更新。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/41c879abf1a5bf964d8c583965cc895e.png)\n\n## API\n\n腾讯云EdgeOne（TEO）有一个API接口 `CreatePurgeTask`，即为 `创建清除缓存任务`，可以在 [ApiExplorer](https://console.cloud.tencent.com/api/explorer?Product=teo&Version=2022-09-01&Action=CreatePurgeTask) 找到调用该API的文档和方式\n\n# 实现\n\n## 要求\n\n- 域名必须已经接入eo\n- 后端必须是腾讯云cos\n- 已开通COS，SCF，TEO等服务\n\n**SCF在使用过程中会产生费用（无资源包的会产生最低消费），请务必了解后再使用！**\n\n## API使用\n\n[ApiExplorer](https://console.cloud.tencent.com/api/explorer?Product=teo&Version=2022-09-01&Action=CreatePurgeTask) 找到调用该API的文档和方式\n\n### 参数说明\n\n需要传入的参数如下：\n\n- `ZoneId` 站点ID，可在 [EdgeOne控制台-站点列表](https://console.cloud.tencent.com/edgeone/zones) 找到\n  ![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/95a147f492278235da2423830b4ae678.png)\n- `Type` 清除缓存的类型，请根据需要，查看[产品文档](https://cloud.tencent.com/document/product/1552/70759)来选择，笔者的CRA是整个域名的更新，所以使用 `purge_host`\n- `Method` 节点缓存清除方法，使用刷新变更资源的方式 `invalidate`\n- `Targets` 刷新的目标，根据 `Type` 传入的字段选择。这里使用的是 `purge_host`，所以传入刷新的hostname，例如 `www.arsrna.com`。当然我们这里不一定只给一个域名进行刷新，可以传入多个hostname，以数组的方式传入\n\n## SCF侧接入\n\n### 函数代码\n\n在APIExplorer代码生成处，可以获得SDK运行所需要的代码，这里以nodejs为例，其他语言方法一样。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/cbe83c30ddb620c27722f185aff22a74.png)\n\n进入[SCF控制台](https://console.cloud.tencent.com/scf/list)，单击新建函数，选择 `从头开始`，使用事件函数。\n\n运行环境根据APIExplorer生成代码的语言选择\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/9fe81d1b3cb0b36500b0c41041f56a29.png)\n\n地域尽量选择跟腾讯云TEO SDK相同的地域，在API Explorer的参数 `Region`可以查看\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/18273887b539165f26d96383919d1068.png)\n\n剩下的参数暂时不需要设置，单击完成\n\n进入函数控制台，编辑函数代码\n\n根据各语言的要求，安装对应依赖，引入依赖，新版函数编辑器可以右键文件夹，点击在终端中打开，即可调出终端\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/f34fe1468c6d33a9e9a0b829cbf90437.png)\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/eed2745d339d4b43c6fac3b334a24e0a.png)\n\n根据各语言要求，修改函数代码\n\n### 代码demo\n\n以下为nodejs的demo，可按需修改\n\n```js\nconst tencentcloud = require(\"tencentcloud-sdk-nodejs-teo\");\nconst TeoClient = tencentcloud.teo.v20220901.Client;\n\nexports.main_handler = async (event, context) => {\n    const {secretId,secretKey}=process.env; \n    // 已使用环境变量的方式，不放在代码，建议使用最小权限存储，参见https://cloud.tencent.com/document/product/1278/85305\n    const clientConfig = {\n        credential: {\n          secretId,\n          secretKey,\n        },\n        region: \"ap-guangzhou\",\n        profile: {\n          httpProfile: {\n            endpoint: \"teo.tencentcloudapi.com\",\n          },\n        },\n      };\n      const client = new TeoClient(clientConfig);\n      const params = {\n          \"ZoneId\": \"zone-xxxxxxxxxx\", //ZoneId，可在控制台找到\n          \"Type\": \"purge_host\",\n          \"Method\": \"invalidate\",\n          \"Targets\": [\n              \"arsrna.cn\", //传入域名，可传入多个\n              \"www.arsrna.cn\"\n          ]\n      };\n      return new Promise((resolve,reject)=>{\n        client.CreatePurgeTask(params).then(\n            (data) => {\n              resolve(data);\n            },\n            (err) => {\n              reject(JSON.stringify(err));\n            }\n          );\n      })\n};\n```\n\n在控制台上单击测试，查看函数运行结果\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/3fd25f9e782b34a193b2db1e8be1758b.png)\n\n```\n{\n    \"RequestId\":\"3bcb9c24-c628-4506-b91f-bad40ae6daf4\",\n    \"FailedList\":[],\n    \"JobId\":\"2p0bf4pucgks\"\n}\n```\n\n如果 `FailedList`为空，证明运行成功，可以前往EO控制台查看效果\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/e5b7ffbae3815433c2dda9ad27c397a0.png)\n\n## COS接入\n\n在刚刚函数的控制台处切换到触发器管理，新建一个COS触发器，选择对应存储桶（eo源站设置的存储桶）。事件类型选全部创建并立即启用。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/89f27ceb154f8641e34f6c6b1e5e7747.png)\n\n提交后即可生效，此时往cos增删改文件都会触发刷新缓存的命令。\n\nscf部署网站CLI命令为 `scf deploy`，详细可以查阅serverless framework的说明\n\n# 通用化\n\n我们并不希望一个存储桶一个函数，不仅不方便管理，还会造成多余的资源占用\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/057bb39826fb7bdd3b7d63d8667afdbc.png)\n\n此时可以根据更改的cos桶来进行判断刷新的网站，在函数里面加入映射的关系。\n\n如上图所示，以nodejs代码为例，可以写成\n\n```js\nfunction getEOHosts(bucketName){\n    const mapping={\n        'test-a':['a.com','b.com','c.com'],\n        'test-b':['d.com','e.com','f.com','g.com']\n    }\n    return mapping[bucketName];\n}\n```\n\ncos触发器会向函数发送一个json请求，可以取到对应bucket name\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/dcec72c24dc07a492b6730a9180051cc.png)\n\n上述创建的事件函数里，bucket名称在路径 `event.Records[0].cos.cosBucket.name`下，我们上传一个文件，就可以看到触发了。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2348693/d80b753980f0f1d7dcfad97d3f454ed2.png)\n\n再根据上面的映射，改造代码：\n\n```js\nconst tencentcloud = require(\"tencentcloud-sdk-nodejs-teo\");\nconst TeoClient = tencentcloud.teo.v20220901.Client;\n\nfunction getEOHosts(bucketName){\n  const mapping={\n      'test-a':['a.com','b.com','c.com'],\n      'test-b':['d.com','e.com','f.com','g.com']\n  }\n  return mapping[bucketName];\n}\n\nexports.main_handler = async (event, context) => {\n  const bucketName=event.Records[0].cos.cosBucket.name;\n    const {secretId,secretKey}=process.env;\n    const clientConfig = {\n        credential: {\n          secretId,\n          secretKey,\n        },\n        region: \"ap-guangzhou\",\n        profile: {\n          httpProfile: {\n            endpoint: \"teo.tencentcloudapi.com\",\n          },\n        },\n      };\n  \n      // 实例化要请求产品的client对象,clientProfile是可选的\n      const client = new TeoClient(clientConfig);\n      const params = {\n          \"ZoneId\": \"zone-xxxxxxx\",\n          \"Type\": \"purge_host\",\n          \"Method\": \"invalidate\",\n          \"Targets\": getEOHosts(bucketName)\n      };\n      return new Promise((resolve,reject)=>{\n        client.CreatePurgeTask(params).then(\n            (data) => {\n              resolve(data);\n            },\n            (err) => {\n              reject(JSON.stringify(err));\n            }\n          );\n      })\n};\n```\n\n在scf触发器管理里，创建多个cos触发器，即可实现一个函数，多cos，单eo自动更新\n\n当然，此时只能实现单eo自动更新，如果要实现多eo站点更新，可以在映射里面加入多个参数，这里不再赘述，各语言实现的方式不一样。\n\nAr-Sr-Na原创，未经允许禁止转载\n\n**代码仅做参考，由此造成的一切问题与作者无关。**\n","slug":"2348693","published":1,"updated":"2023-10-24T14:19:22.580Z","layout":"post","photos":[],"link":"","_id":"clod0d6xv003gc0nd62mbauv6","content":"<h1 id=\"导言\"><a href=\"#导言\" class=\"headerlink\" title=\"导言\"></a>导言</h1><h2 id=\"SCF遇到的问题\"><a href=\"#SCF遇到的问题\" class=\"headerlink\" title=\"SCF遇到的问题\"></a>SCF遇到的问题</h2><p>腾讯云有一款Serverless Framework产品，可以从本地把网站等框架快速部署到腾讯云产品上而无需复杂的服务器配置。</p>\n<p>但是截止至目前，腾讯云scf支持接入的加速只有cdn，暂未支持edgeone，如果直接在serverless.yml里面填入在edgeone托管的网站，则会报错，该域名未接入CDN</p>\n<h2 id=\"CRA遇到的问题\"><a href=\"#CRA遇到的问题\" class=\"headerlink\" title=\"CRA遇到的问题\"></a>CRA遇到的问题</h2><p>由于笔者开发使用的是Create-React-App的网站框架，每次部署都需要刷新缓存否则就会造成资源找不到的问题。由于scf建站可以实现自动刷新CDN缓存，但是没办法自动刷新edgeone缓存，即使使用云函数COS触发，也只有CDN的方案，至于EO，只能通过API+SCF的方案来解决。</p>\n<h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><h2 id=\"触发\"><a href=\"#触发\" class=\"headerlink\" title=\"触发\"></a>触发</h2><p>因为scf部署网站会更新cos内容，而scf有一个cos触发器，当cos内容改变时会触发函数执行，此时我们就可以利用这种方式来实现动态更新。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/41c879abf1a5bf964d8c583965cc895e.png\" alt=\"请在此添加图片描述\"></p>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>腾讯云EdgeOne（TEO）有一个API接口 <code>CreatePurgeTask</code>，即为 <code>创建清除缓存任务</code>，可以在 <a href=\"https://console.cloud.tencent.com/api/explorer?Product=teo&Version=2022-09-01&Action=CreatePurgeTask\">ApiExplorer</a> 找到调用该API的文档和方式</p>\n<h1 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h1><h2 id=\"要求\"><a href=\"#要求\" class=\"headerlink\" title=\"要求\"></a>要求</h2><ul>\n<li>域名必须已经接入eo</li>\n<li>后端必须是腾讯云cos</li>\n<li>已开通COS，SCF，TEO等服务</li>\n</ul>\n<p><strong>SCF在使用过程中会产生费用（无资源包的会产生最低消费），请务必了解后再使用！</strong></p>\n<h2 id=\"API使用\"><a href=\"#API使用\" class=\"headerlink\" title=\"API使用\"></a>API使用</h2><p><a href=\"https://console.cloud.tencent.com/api/explorer?Product=teo&Version=2022-09-01&Action=CreatePurgeTask\">ApiExplorer</a> 找到调用该API的文档和方式</p>\n<h3 id=\"参数说明\"><a href=\"#参数说明\" class=\"headerlink\" title=\"参数说明\"></a>参数说明</h3><p>需要传入的参数如下：</p>\n<ul>\n<li><code>ZoneId</code> 站点ID，可在 <a href=\"https://console.cloud.tencent.com/edgeone/zones\">EdgeOne控制台-站点列表</a> 找到<br><img src=\"https://st2-res.arsrna.cn/2348693/95a147f492278235da2423830b4ae678.png\" alt=\"请在此添加图片描述\"></li>\n<li><code>Type</code> 清除缓存的类型，请根据需要，查看<a href=\"https://cloud.tencent.com/document/product/1552/70759\">产品文档</a>来选择，笔者的CRA是整个域名的更新，所以使用 <code>purge_host</code></li>\n<li><code>Method</code> 节点缓存清除方法，使用刷新变更资源的方式 <code>invalidate</code></li>\n<li><code>Targets</code> 刷新的目标，根据 <code>Type</code> 传入的字段选择。这里使用的是 <code>purge_host</code>，所以传入刷新的hostname，例如 <code>www.arsrna.com</code>。当然我们这里不一定只给一个域名进行刷新，可以传入多个hostname，以数组的方式传入</li>\n</ul>\n<h2 id=\"SCF侧接入\"><a href=\"#SCF侧接入\" class=\"headerlink\" title=\"SCF侧接入\"></a>SCF侧接入</h2><h3 id=\"函数代码\"><a href=\"#函数代码\" class=\"headerlink\" title=\"函数代码\"></a>函数代码</h3><p>在APIExplorer代码生成处，可以获得SDK运行所需要的代码，这里以nodejs为例，其他语言方法一样。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/cbe83c30ddb620c27722f185aff22a74.png\" alt=\"请在此添加图片描述\"></p>\n<p>进入<a href=\"https://console.cloud.tencent.com/scf/list\">SCF控制台</a>，单击新建函数，选择 <code>从头开始</code>，使用事件函数。</p>\n<p>运行环境根据APIExplorer生成代码的语言选择</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/9fe81d1b3cb0b36500b0c41041f56a29.png\" alt=\"请在此添加图片描述\"></p>\n<p>地域尽量选择跟腾讯云TEO SDK相同的地域，在API Explorer的参数 <code>Region</code>可以查看</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/18273887b539165f26d96383919d1068.png\" alt=\"请在此添加图片描述\"></p>\n<p>剩下的参数暂时不需要设置，单击完成</p>\n<p>进入函数控制台，编辑函数代码</p>\n<p>根据各语言的要求，安装对应依赖，引入依赖，新版函数编辑器可以右键文件夹，点击在终端中打开，即可调出终端</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/f34fe1468c6d33a9e9a0b829cbf90437.png\" alt=\"请在此添加图片描述\"></p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/eed2745d339d4b43c6fac3b334a24e0a.png\" alt=\"请在此添加图片描述\"></p>\n<p>根据各语言要求，修改函数代码</p>\n<h3 id=\"代码demo\"><a href=\"#代码demo\" class=\"headerlink\" title=\"代码demo\"></a>代码demo</h3><p>以下为nodejs的demo，可按需修改</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> tencentcloud = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;tencentcloud-sdk-nodejs-teo&quot;</span>);<br><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">TeoClient</span> = tencentcloud.<span class=\"hljs-property\">teo</span>.<span class=\"hljs-property\">v20220901</span>.<span class=\"hljs-property\">Client</span>;<br><br><span class=\"hljs-built_in\">exports</span>.<span class=\"hljs-property\">main_handler</span> = <span class=\"hljs-keyword\">async</span> (event, context) =&gt; &#123;<br>    <span class=\"hljs-keyword\">const</span> &#123;secretId,secretKey&#125;=process.<span class=\"hljs-property\">env</span>; <br>    <span class=\"hljs-comment\">// 已使用环境变量的方式，不放在代码，建议使用最小权限存储，参见https://cloud.tencent.com/document/product/1278/85305</span><br>    <span class=\"hljs-keyword\">const</span> clientConfig = &#123;<br>        <span class=\"hljs-attr\">credential</span>: &#123;<br>          secretId,<br>          secretKey,<br>        &#125;,<br>        <span class=\"hljs-attr\">region</span>: <span class=\"hljs-string\">&quot;ap-guangzhou&quot;</span>,<br>        <span class=\"hljs-attr\">profile</span>: &#123;<br>          <span class=\"hljs-attr\">httpProfile</span>: &#123;<br>            <span class=\"hljs-attr\">endpoint</span>: <span class=\"hljs-string\">&quot;teo.tencentcloudapi.com&quot;</span>,<br>          &#125;,<br>        &#125;,<br>      &#125;;<br>      <span class=\"hljs-keyword\">const</span> client = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TeoClient</span>(clientConfig);<br>      <span class=\"hljs-keyword\">const</span> params = &#123;<br>          <span class=\"hljs-string\">&quot;ZoneId&quot;</span>: <span class=\"hljs-string\">&quot;zone-xxxxxxxxxx&quot;</span>, <span class=\"hljs-comment\">//ZoneId，可在控制台找到</span><br>          <span class=\"hljs-string\">&quot;Type&quot;</span>: <span class=\"hljs-string\">&quot;purge_host&quot;</span>,<br>          <span class=\"hljs-string\">&quot;Method&quot;</span>: <span class=\"hljs-string\">&quot;invalidate&quot;</span>,<br>          <span class=\"hljs-string\">&quot;Targets&quot;</span>: [<br>              <span class=\"hljs-string\">&quot;arsrna.cn&quot;</span>, <span class=\"hljs-comment\">//传入域名，可传入多个</span><br>              <span class=\"hljs-string\">&quot;www.arsrna.cn&quot;</span><br>          ]<br>      &#125;;<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve,reject</span>)=&gt;</span>&#123;<br>        client.<span class=\"hljs-title class_\">CreatePurgeTask</span>(params).<span class=\"hljs-title function_\">then</span>(<br>            <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> &#123;<br>              <span class=\"hljs-title function_\">resolve</span>(data);<br>            &#125;,<br>            <span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>              <span class=\"hljs-title function_\">reject</span>(<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(err));<br>            &#125;<br>          );<br>      &#125;)<br>&#125;;<br></code></pre></td></tr></table></figure>\n\n<p>在控制台上单击测试，查看函数运行结果</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/3fd25f9e782b34a193b2db1e8be1758b.png\" alt=\"请在此添加图片描述\"></p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs elixir\">&#123;<br>    <span class=\"hljs-string\">&quot;RequestId&quot;</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">&quot;3bcb9c24-c628-4506-b91f-bad40ae6daf4&quot;</span></span>,<br>    <span class=\"hljs-string\">&quot;FailedList&quot;</span><span class=\"hljs-symbol\">:[]</span>,<br>    <span class=\"hljs-string\">&quot;JobId&quot;</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">&quot;2p0bf4pucgks&quot;</span></span><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>如果 <code>FailedList</code>为空，证明运行成功，可以前往EO控制台查看效果</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/e5b7ffbae3815433c2dda9ad27c397a0.png\" alt=\"请在此添加图片描述\"></p>\n<h2 id=\"COS接入\"><a href=\"#COS接入\" class=\"headerlink\" title=\"COS接入\"></a>COS接入</h2><p>在刚刚函数的控制台处切换到触发器管理，新建一个COS触发器，选择对应存储桶（eo源站设置的存储桶）。事件类型选全部创建并立即启用。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/89f27ceb154f8641e34f6c6b1e5e7747.png\" alt=\"请在此添加图片描述\"></p>\n<p>提交后即可生效，此时往cos增删改文件都会触发刷新缓存的命令。</p>\n<p>scf部署网站CLI命令为 <code>scf deploy</code>，详细可以查阅serverless framework的说明</p>\n<h1 id=\"通用化\"><a href=\"#通用化\" class=\"headerlink\" title=\"通用化\"></a>通用化</h1><p>我们并不希望一个存储桶一个函数，不仅不方便管理，还会造成多余的资源占用</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/057bb39826fb7bdd3b7d63d8667afdbc.png\" alt=\"请在此添加图片描述\"></p>\n<p>此时可以根据更改的cos桶来进行判断刷新的网站，在函数里面加入映射的关系。</p>\n<p>如上图所示，以nodejs代码为例，可以写成</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getEOHosts</span>(<span class=\"hljs-params\">bucketName</span>)&#123;<br>    <span class=\"hljs-keyword\">const</span> mapping=&#123;<br>        <span class=\"hljs-string\">&#x27;test-a&#x27;</span>:[<span class=\"hljs-string\">&#x27;a.com&#x27;</span>,<span class=\"hljs-string\">&#x27;b.com&#x27;</span>,<span class=\"hljs-string\">&#x27;c.com&#x27;</span>],<br>        <span class=\"hljs-string\">&#x27;test-b&#x27;</span>:[<span class=\"hljs-string\">&#x27;d.com&#x27;</span>,<span class=\"hljs-string\">&#x27;e.com&#x27;</span>,<span class=\"hljs-string\">&#x27;f.com&#x27;</span>,<span class=\"hljs-string\">&#x27;g.com&#x27;</span>]<br>    &#125;<br>    <span class=\"hljs-keyword\">return</span> mapping[bucketName];<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>cos触发器会向函数发送一个json请求，可以取到对应bucket name</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/dcec72c24dc07a492b6730a9180051cc.png\" alt=\"请在此添加图片描述\"></p>\n<p>上述创建的事件函数里，bucket名称在路径 <code>event.Records[0].cos.cosBucket.name</code>下，我们上传一个文件，就可以看到触发了。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/d80b753980f0f1d7dcfad97d3f454ed2.png\" alt=\"请在此添加图片描述\"></p>\n<p>再根据上面的映射，改造代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> tencentcloud = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;tencentcloud-sdk-nodejs-teo&quot;</span>);<br><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">TeoClient</span> = tencentcloud.<span class=\"hljs-property\">teo</span>.<span class=\"hljs-property\">v20220901</span>.<span class=\"hljs-property\">Client</span>;<br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getEOHosts</span>(<span class=\"hljs-params\">bucketName</span>)&#123;<br>  <span class=\"hljs-keyword\">const</span> mapping=&#123;<br>      <span class=\"hljs-string\">&#x27;test-a&#x27;</span>:[<span class=\"hljs-string\">&#x27;a.com&#x27;</span>,<span class=\"hljs-string\">&#x27;b.com&#x27;</span>,<span class=\"hljs-string\">&#x27;c.com&#x27;</span>],<br>      <span class=\"hljs-string\">&#x27;test-b&#x27;</span>:[<span class=\"hljs-string\">&#x27;d.com&#x27;</span>,<span class=\"hljs-string\">&#x27;e.com&#x27;</span>,<span class=\"hljs-string\">&#x27;f.com&#x27;</span>,<span class=\"hljs-string\">&#x27;g.com&#x27;</span>]<br>  &#125;<br>  <span class=\"hljs-keyword\">return</span> mapping[bucketName];<br>&#125;<br><br><span class=\"hljs-built_in\">exports</span>.<span class=\"hljs-property\">main_handler</span> = <span class=\"hljs-keyword\">async</span> (event, context) =&gt; &#123;<br>  <span class=\"hljs-keyword\">const</span> bucketName=event.<span class=\"hljs-property\">Records</span>[<span class=\"hljs-number\">0</span>].<span class=\"hljs-property\">cos</span>.<span class=\"hljs-property\">cosBucket</span>.<span class=\"hljs-property\">name</span>;<br>    <span class=\"hljs-keyword\">const</span> &#123;secretId,secretKey&#125;=process.<span class=\"hljs-property\">env</span>;<br>    <span class=\"hljs-keyword\">const</span> clientConfig = &#123;<br>        <span class=\"hljs-attr\">credential</span>: &#123;<br>          secretId,<br>          secretKey,<br>        &#125;,<br>        <span class=\"hljs-attr\">region</span>: <span class=\"hljs-string\">&quot;ap-guangzhou&quot;</span>,<br>        <span class=\"hljs-attr\">profile</span>: &#123;<br>          <span class=\"hljs-attr\">httpProfile</span>: &#123;<br>            <span class=\"hljs-attr\">endpoint</span>: <span class=\"hljs-string\">&quot;teo.tencentcloudapi.com&quot;</span>,<br>          &#125;,<br>        &#125;,<br>      &#125;;<br>  <br>      <span class=\"hljs-comment\">// 实例化要请求产品的client对象,clientProfile是可选的</span><br>      <span class=\"hljs-keyword\">const</span> client = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TeoClient</span>(clientConfig);<br>      <span class=\"hljs-keyword\">const</span> params = &#123;<br>          <span class=\"hljs-string\">&quot;ZoneId&quot;</span>: <span class=\"hljs-string\">&quot;zone-xxxxxxx&quot;</span>,<br>          <span class=\"hljs-string\">&quot;Type&quot;</span>: <span class=\"hljs-string\">&quot;purge_host&quot;</span>,<br>          <span class=\"hljs-string\">&quot;Method&quot;</span>: <span class=\"hljs-string\">&quot;invalidate&quot;</span>,<br>          <span class=\"hljs-string\">&quot;Targets&quot;</span>: <span class=\"hljs-title function_\">getEOHosts</span>(bucketName)<br>      &#125;;<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve,reject</span>)=&gt;</span>&#123;<br>        client.<span class=\"hljs-title class_\">CreatePurgeTask</span>(params).<span class=\"hljs-title function_\">then</span>(<br>            <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> &#123;<br>              <span class=\"hljs-title function_\">resolve</span>(data);<br>            &#125;,<br>            <span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>              <span class=\"hljs-title function_\">reject</span>(<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(err));<br>            &#125;<br>          );<br>      &#125;)<br>&#125;;<br></code></pre></td></tr></table></figure>\n\n<p>在scf触发器管理里，创建多个cos触发器，即可实现一个函数，多cos，单eo自动更新</p>\n<p>当然，此时只能实现单eo自动更新，如果要实现多eo站点更新，可以在映射里面加入多个参数，这里不再赘述，各语言实现的方式不一样。</p>\n<p>Ar-Sr-Na原创，未经允许禁止转载</p>\n<p><strong>代码仅做参考，由此造成的一切问题与作者无关。</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"导言\"><a href=\"#导言\" class=\"headerlink\" title=\"导言\"></a>导言</h1><h2 id=\"SCF遇到的问题\"><a href=\"#SCF遇到的问题\" class=\"headerlink\" title=\"SCF遇到的问题\"></a>SCF遇到的问题</h2><p>腾讯云有一款Serverless Framework产品，可以从本地把网站等框架快速部署到腾讯云产品上而无需复杂的服务器配置。</p>\n<p>但是截止至目前，腾讯云scf支持接入的加速只有cdn，暂未支持edgeone，如果直接在serverless.yml里面填入在edgeone托管的网站，则会报错，该域名未接入CDN</p>\n<h2 id=\"CRA遇到的问题\"><a href=\"#CRA遇到的问题\" class=\"headerlink\" title=\"CRA遇到的问题\"></a>CRA遇到的问题</h2><p>由于笔者开发使用的是Create-React-App的网站框架，每次部署都需要刷新缓存否则就会造成资源找不到的问题。由于scf建站可以实现自动刷新CDN缓存，但是没办法自动刷新edgeone缓存，即使使用云函数COS触发，也只有CDN的方案，至于EO，只能通过API+SCF的方案来解决。</p>\n<h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><h2 id=\"触发\"><a href=\"#触发\" class=\"headerlink\" title=\"触发\"></a>触发</h2><p>因为scf部署网站会更新cos内容，而scf有一个cos触发器，当cos内容改变时会触发函数执行，此时我们就可以利用这种方式来实现动态更新。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/41c879abf1a5bf964d8c583965cc895e.png\" alt=\"请在此添加图片描述\"></p>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>腾讯云EdgeOne（TEO）有一个API接口 <code>CreatePurgeTask</code>，即为 <code>创建清除缓存任务</code>，可以在 <a href=\"https://console.cloud.tencent.com/api/explorer?Product=teo&Version=2022-09-01&Action=CreatePurgeTask\">ApiExplorer</a> 找到调用该API的文档和方式</p>\n<h1 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h1><h2 id=\"要求\"><a href=\"#要求\" class=\"headerlink\" title=\"要求\"></a>要求</h2><ul>\n<li>域名必须已经接入eo</li>\n<li>后端必须是腾讯云cos</li>\n<li>已开通COS，SCF，TEO等服务</li>\n</ul>\n<p><strong>SCF在使用过程中会产生费用（无资源包的会产生最低消费），请务必了解后再使用！</strong></p>\n<h2 id=\"API使用\"><a href=\"#API使用\" class=\"headerlink\" title=\"API使用\"></a>API使用</h2><p><a href=\"https://console.cloud.tencent.com/api/explorer?Product=teo&Version=2022-09-01&Action=CreatePurgeTask\">ApiExplorer</a> 找到调用该API的文档和方式</p>\n<h3 id=\"参数说明\"><a href=\"#参数说明\" class=\"headerlink\" title=\"参数说明\"></a>参数说明</h3><p>需要传入的参数如下：</p>\n<ul>\n<li><code>ZoneId</code> 站点ID，可在 <a href=\"https://console.cloud.tencent.com/edgeone/zones\">EdgeOne控制台-站点列表</a> 找到<br><img src=\"https://st2-res.arsrna.cn/2348693/95a147f492278235da2423830b4ae678.png\" alt=\"请在此添加图片描述\"></li>\n<li><code>Type</code> 清除缓存的类型，请根据需要，查看<a href=\"https://cloud.tencent.com/document/product/1552/70759\">产品文档</a>来选择，笔者的CRA是整个域名的更新，所以使用 <code>purge_host</code></li>\n<li><code>Method</code> 节点缓存清除方法，使用刷新变更资源的方式 <code>invalidate</code></li>\n<li><code>Targets</code> 刷新的目标，根据 <code>Type</code> 传入的字段选择。这里使用的是 <code>purge_host</code>，所以传入刷新的hostname，例如 <code>www.arsrna.com</code>。当然我们这里不一定只给一个域名进行刷新，可以传入多个hostname，以数组的方式传入</li>\n</ul>\n<h2 id=\"SCF侧接入\"><a href=\"#SCF侧接入\" class=\"headerlink\" title=\"SCF侧接入\"></a>SCF侧接入</h2><h3 id=\"函数代码\"><a href=\"#函数代码\" class=\"headerlink\" title=\"函数代码\"></a>函数代码</h3><p>在APIExplorer代码生成处，可以获得SDK运行所需要的代码，这里以nodejs为例，其他语言方法一样。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/cbe83c30ddb620c27722f185aff22a74.png\" alt=\"请在此添加图片描述\"></p>\n<p>进入<a href=\"https://console.cloud.tencent.com/scf/list\">SCF控制台</a>，单击新建函数，选择 <code>从头开始</code>，使用事件函数。</p>\n<p>运行环境根据APIExplorer生成代码的语言选择</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/9fe81d1b3cb0b36500b0c41041f56a29.png\" alt=\"请在此添加图片描述\"></p>\n<p>地域尽量选择跟腾讯云TEO SDK相同的地域，在API Explorer的参数 <code>Region</code>可以查看</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/18273887b539165f26d96383919d1068.png\" alt=\"请在此添加图片描述\"></p>\n<p>剩下的参数暂时不需要设置，单击完成</p>\n<p>进入函数控制台，编辑函数代码</p>\n<p>根据各语言的要求，安装对应依赖，引入依赖，新版函数编辑器可以右键文件夹，点击在终端中打开，即可调出终端</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/f34fe1468c6d33a9e9a0b829cbf90437.png\" alt=\"请在此添加图片描述\"></p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/eed2745d339d4b43c6fac3b334a24e0a.png\" alt=\"请在此添加图片描述\"></p>\n<p>根据各语言要求，修改函数代码</p>\n<h3 id=\"代码demo\"><a href=\"#代码demo\" class=\"headerlink\" title=\"代码demo\"></a>代码demo</h3><p>以下为nodejs的demo，可按需修改</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> tencentcloud = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;tencentcloud-sdk-nodejs-teo&quot;</span>);<br><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">TeoClient</span> = tencentcloud.<span class=\"hljs-property\">teo</span>.<span class=\"hljs-property\">v20220901</span>.<span class=\"hljs-property\">Client</span>;<br><br><span class=\"hljs-built_in\">exports</span>.<span class=\"hljs-property\">main_handler</span> = <span class=\"hljs-keyword\">async</span> (event, context) =&gt; &#123;<br>    <span class=\"hljs-keyword\">const</span> &#123;secretId,secretKey&#125;=process.<span class=\"hljs-property\">env</span>; <br>    <span class=\"hljs-comment\">// 已使用环境变量的方式，不放在代码，建议使用最小权限存储，参见https://cloud.tencent.com/document/product/1278/85305</span><br>    <span class=\"hljs-keyword\">const</span> clientConfig = &#123;<br>        <span class=\"hljs-attr\">credential</span>: &#123;<br>          secretId,<br>          secretKey,<br>        &#125;,<br>        <span class=\"hljs-attr\">region</span>: <span class=\"hljs-string\">&quot;ap-guangzhou&quot;</span>,<br>        <span class=\"hljs-attr\">profile</span>: &#123;<br>          <span class=\"hljs-attr\">httpProfile</span>: &#123;<br>            <span class=\"hljs-attr\">endpoint</span>: <span class=\"hljs-string\">&quot;teo.tencentcloudapi.com&quot;</span>,<br>          &#125;,<br>        &#125;,<br>      &#125;;<br>      <span class=\"hljs-keyword\">const</span> client = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TeoClient</span>(clientConfig);<br>      <span class=\"hljs-keyword\">const</span> params = &#123;<br>          <span class=\"hljs-string\">&quot;ZoneId&quot;</span>: <span class=\"hljs-string\">&quot;zone-xxxxxxxxxx&quot;</span>, <span class=\"hljs-comment\">//ZoneId，可在控制台找到</span><br>          <span class=\"hljs-string\">&quot;Type&quot;</span>: <span class=\"hljs-string\">&quot;purge_host&quot;</span>,<br>          <span class=\"hljs-string\">&quot;Method&quot;</span>: <span class=\"hljs-string\">&quot;invalidate&quot;</span>,<br>          <span class=\"hljs-string\">&quot;Targets&quot;</span>: [<br>              <span class=\"hljs-string\">&quot;arsrna.cn&quot;</span>, <span class=\"hljs-comment\">//传入域名，可传入多个</span><br>              <span class=\"hljs-string\">&quot;www.arsrna.cn&quot;</span><br>          ]<br>      &#125;;<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve,reject</span>)=&gt;</span>&#123;<br>        client.<span class=\"hljs-title class_\">CreatePurgeTask</span>(params).<span class=\"hljs-title function_\">then</span>(<br>            <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> &#123;<br>              <span class=\"hljs-title function_\">resolve</span>(data);<br>            &#125;,<br>            <span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>              <span class=\"hljs-title function_\">reject</span>(<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(err));<br>            &#125;<br>          );<br>      &#125;)<br>&#125;;<br></code></pre></td></tr></table></figure>\n\n<p>在控制台上单击测试，查看函数运行结果</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/3fd25f9e782b34a193b2db1e8be1758b.png\" alt=\"请在此添加图片描述\"></p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs elixir\">&#123;<br>    <span class=\"hljs-string\">&quot;RequestId&quot;</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">&quot;3bcb9c24-c628-4506-b91f-bad40ae6daf4&quot;</span></span>,<br>    <span class=\"hljs-string\">&quot;FailedList&quot;</span><span class=\"hljs-symbol\">:[]</span>,<br>    <span class=\"hljs-string\">&quot;JobId&quot;</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">&quot;2p0bf4pucgks&quot;</span></span><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>如果 <code>FailedList</code>为空，证明运行成功，可以前往EO控制台查看效果</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/e5b7ffbae3815433c2dda9ad27c397a0.png\" alt=\"请在此添加图片描述\"></p>\n<h2 id=\"COS接入\"><a href=\"#COS接入\" class=\"headerlink\" title=\"COS接入\"></a>COS接入</h2><p>在刚刚函数的控制台处切换到触发器管理，新建一个COS触发器，选择对应存储桶（eo源站设置的存储桶）。事件类型选全部创建并立即启用。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/89f27ceb154f8641e34f6c6b1e5e7747.png\" alt=\"请在此添加图片描述\"></p>\n<p>提交后即可生效，此时往cos增删改文件都会触发刷新缓存的命令。</p>\n<p>scf部署网站CLI命令为 <code>scf deploy</code>，详细可以查阅serverless framework的说明</p>\n<h1 id=\"通用化\"><a href=\"#通用化\" class=\"headerlink\" title=\"通用化\"></a>通用化</h1><p>我们并不希望一个存储桶一个函数，不仅不方便管理，还会造成多余的资源占用</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/057bb39826fb7bdd3b7d63d8667afdbc.png\" alt=\"请在此添加图片描述\"></p>\n<p>此时可以根据更改的cos桶来进行判断刷新的网站，在函数里面加入映射的关系。</p>\n<p>如上图所示，以nodejs代码为例，可以写成</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getEOHosts</span>(<span class=\"hljs-params\">bucketName</span>)&#123;<br>    <span class=\"hljs-keyword\">const</span> mapping=&#123;<br>        <span class=\"hljs-string\">&#x27;test-a&#x27;</span>:[<span class=\"hljs-string\">&#x27;a.com&#x27;</span>,<span class=\"hljs-string\">&#x27;b.com&#x27;</span>,<span class=\"hljs-string\">&#x27;c.com&#x27;</span>],<br>        <span class=\"hljs-string\">&#x27;test-b&#x27;</span>:[<span class=\"hljs-string\">&#x27;d.com&#x27;</span>,<span class=\"hljs-string\">&#x27;e.com&#x27;</span>,<span class=\"hljs-string\">&#x27;f.com&#x27;</span>,<span class=\"hljs-string\">&#x27;g.com&#x27;</span>]<br>    &#125;<br>    <span class=\"hljs-keyword\">return</span> mapping[bucketName];<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>cos触发器会向函数发送一个json请求，可以取到对应bucket name</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/dcec72c24dc07a492b6730a9180051cc.png\" alt=\"请在此添加图片描述\"></p>\n<p>上述创建的事件函数里，bucket名称在路径 <code>event.Records[0].cos.cosBucket.name</code>下，我们上传一个文件，就可以看到触发了。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2348693/d80b753980f0f1d7dcfad97d3f454ed2.png\" alt=\"请在此添加图片描述\"></p>\n<p>再根据上面的映射，改造代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> tencentcloud = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;tencentcloud-sdk-nodejs-teo&quot;</span>);<br><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">TeoClient</span> = tencentcloud.<span class=\"hljs-property\">teo</span>.<span class=\"hljs-property\">v20220901</span>.<span class=\"hljs-property\">Client</span>;<br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getEOHosts</span>(<span class=\"hljs-params\">bucketName</span>)&#123;<br>  <span class=\"hljs-keyword\">const</span> mapping=&#123;<br>      <span class=\"hljs-string\">&#x27;test-a&#x27;</span>:[<span class=\"hljs-string\">&#x27;a.com&#x27;</span>,<span class=\"hljs-string\">&#x27;b.com&#x27;</span>,<span class=\"hljs-string\">&#x27;c.com&#x27;</span>],<br>      <span class=\"hljs-string\">&#x27;test-b&#x27;</span>:[<span class=\"hljs-string\">&#x27;d.com&#x27;</span>,<span class=\"hljs-string\">&#x27;e.com&#x27;</span>,<span class=\"hljs-string\">&#x27;f.com&#x27;</span>,<span class=\"hljs-string\">&#x27;g.com&#x27;</span>]<br>  &#125;<br>  <span class=\"hljs-keyword\">return</span> mapping[bucketName];<br>&#125;<br><br><span class=\"hljs-built_in\">exports</span>.<span class=\"hljs-property\">main_handler</span> = <span class=\"hljs-keyword\">async</span> (event, context) =&gt; &#123;<br>  <span class=\"hljs-keyword\">const</span> bucketName=event.<span class=\"hljs-property\">Records</span>[<span class=\"hljs-number\">0</span>].<span class=\"hljs-property\">cos</span>.<span class=\"hljs-property\">cosBucket</span>.<span class=\"hljs-property\">name</span>;<br>    <span class=\"hljs-keyword\">const</span> &#123;secretId,secretKey&#125;=process.<span class=\"hljs-property\">env</span>;<br>    <span class=\"hljs-keyword\">const</span> clientConfig = &#123;<br>        <span class=\"hljs-attr\">credential</span>: &#123;<br>          secretId,<br>          secretKey,<br>        &#125;,<br>        <span class=\"hljs-attr\">region</span>: <span class=\"hljs-string\">&quot;ap-guangzhou&quot;</span>,<br>        <span class=\"hljs-attr\">profile</span>: &#123;<br>          <span class=\"hljs-attr\">httpProfile</span>: &#123;<br>            <span class=\"hljs-attr\">endpoint</span>: <span class=\"hljs-string\">&quot;teo.tencentcloudapi.com&quot;</span>,<br>          &#125;,<br>        &#125;,<br>      &#125;;<br>  <br>      <span class=\"hljs-comment\">// 实例化要请求产品的client对象,clientProfile是可选的</span><br>      <span class=\"hljs-keyword\">const</span> client = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TeoClient</span>(clientConfig);<br>      <span class=\"hljs-keyword\">const</span> params = &#123;<br>          <span class=\"hljs-string\">&quot;ZoneId&quot;</span>: <span class=\"hljs-string\">&quot;zone-xxxxxxx&quot;</span>,<br>          <span class=\"hljs-string\">&quot;Type&quot;</span>: <span class=\"hljs-string\">&quot;purge_host&quot;</span>,<br>          <span class=\"hljs-string\">&quot;Method&quot;</span>: <span class=\"hljs-string\">&quot;invalidate&quot;</span>,<br>          <span class=\"hljs-string\">&quot;Targets&quot;</span>: <span class=\"hljs-title function_\">getEOHosts</span>(bucketName)<br>      &#125;;<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve,reject</span>)=&gt;</span>&#123;<br>        client.<span class=\"hljs-title class_\">CreatePurgeTask</span>(params).<span class=\"hljs-title function_\">then</span>(<br>            <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> &#123;<br>              <span class=\"hljs-title function_\">resolve</span>(data);<br>            &#125;,<br>            <span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> &#123;<br>              <span class=\"hljs-title function_\">reject</span>(<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(err));<br>            &#125;<br>          );<br>      &#125;)<br>&#125;;<br></code></pre></td></tr></table></figure>\n\n<p>在scf触发器管理里，创建多个cos触发器，即可实现一个函数，多cos，单eo自动更新</p>\n<p>当然，此时只能实现单eo自动更新，如果要实现多eo站点更新，可以在映射里面加入多个参数，这里不再赘述，各语言实现的方式不一样。</p>\n<p>Ar-Sr-Na原创，未经允许禁止转载</p>\n<p><strong>代码仅做参考，由此造成的一切问题与作者无关。</strong></p>\n"},{"title":"关于QQ群内“被踢出本群” XML卡片深入研究","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"www.arsrna.cn","authorAbout":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","authorDesc":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn","comments":1,"date":"2021-01-29T16:12:00.000Z","keywords":null,"description":null,"index_img":"https://res.arsrna.cn/blogs/xmlCard/main.JPG","_content":"节目编号：[08-1202/08-1203]A 关于QQ群内“被踢出本群” XML卡片深入研究\n\n*声明：请合理利用卡片信息，禁止用来违法犯罪，本文只讲技术，一切后果自负！*\n\n以下是破解时直播录像：\n\n<div id=\"player\"></div>\n<script type=\"text/javascript\" src=\"https://player.dogecloud.com/js/loader\"></script>\n<script type=\"text/javascript\">\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: '2db703b20822d6c7',\n    autoPlay: false\n});\n</script>\n\n[08-1202/08-1203]A 关于QQ群内“被踢出本群” XML卡片深入研究\n\n就在昨天，某些群突然看到“您已被移出本群”之类的消息，直接被震惊到了\n\n结果一进去，消息是“群友捕捉术？”\n\n_**声明：请合理利用卡片信息，禁止用来违法犯罪，本文只讲技术，一切后果自负！**_\n\n---\n\n# 原理及分析\n\n要破解就先知道原理下手，如果你在一些平台转发给QQ好友过一些东西，也会发现这类型的消息也是个卡片，不是链接什么的，点开后有可能是小程序，一个弹窗，一个页面等等，而这次事件也是同性质的卡片。\n\n## 本质\n\n卡片消息有很多种，打卡，作业，投票，小程序，分享，红包，语音等等等等繁多种类，若不确定就无法下手，所以就得用“外挂”的方式进行破解\n\n# 破解全过程：\n\n准备材料：Cheat Engine作弊器；Sublime富文本编辑器；QQ以及诈骗卡片\n\n为了不影响群友，我用自己的小号和自己开了个群\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/br34rmf606.png)\n然后对这个群进行侦听\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/lli4tbezrt.png)\n把这个诈骗卡片转发\n\n然后CE修改器里搜索卡片的关键词（由于电脑看不到卡片内容，只能使用手机辅助）\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/4qe4yi25zj.png)\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/976rvgm34.png)\n把所有值全部修改\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/aqgsp7yxwl.png)\n然后切回那个群的QQ窗口\n\n会发现有些值已经恢复\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/2wnwwcblzx.png)\n再把这个卡片继续转发，手机上查看内容是已经被改变了的，然后再在CE里再次搜索刚刚改变的值\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/zyba5zhqfh.png)\n同样全部修改，不断搜索最初的那个消息值，会每次改每次变，就不是，如果改了不变的，就是代码所在的内存区了\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/7aa9o636s5.png)\n**1150EABC，查看内存**\n\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/txl8u07p2a.png)\n搜索字符的内存值\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/igrhtotofc.png)\n慢慢翻，直到有?xml的标识出现（记得右边要utf8显示）\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/nzcd4fk14n.png)\n把值复制下来，16进制转字符\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/7or6s2q4tz.png)\n代码如下：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n<msg serviceID=\"1\" templateID=\"-1\" action=\"web\" brief=\"公安局已介入\" sourceMsgId=\"0\" url=\"\" flag=\"0\" adverSign=\"0\" multiMsgFlag=\"0\">\n  <item layout=\"2\" advertiser_id=\"0\" aid=\"0\">\n    <title>公安局已加入该群</title>\n    <summary>公安局已开始监控聊天</summary>\n  </item>\n  <source name=\"中国刑警大队已介入，请规范聊天\" icon=\"\" action=\"\" appid=\"0\"/>\n</msg>\n```\n\n是一个很标准的xml格式\n\n拆开分析：\n\n```xml\n<?xml version=\"1.0\"\nencoding=\"utf-8\"\nstandalone=\"yes\"?>\n<msg serviceID=\"1\" \ntemplateID=\"-1\"\naction=\"web\"\nbrief=\"公安局已介入\"\nsourceMsgId=\"0\"\nurl=\"\"\nflag=\"0\"\nadverSign=\"0\"\nmultiMsgFlag=\"0\">\n  <item layout=\"2\" \n  \tadvertiser_id=\"0\" \n  \taid=\"0\">\n    <title>公安局已加入该群</title>\n    <summary>公安局已开始监控聊天</summary>\n  </item>\n  <source \n  \tname=\"中国刑警大队已介入，请规范聊天\" \n  \ticon=\"\" \n  \taction=\"\" \n  \tappid=\"0\"/>\n</msg>\n```\n\n`<msg>`构成了开头，有点英语基础的看得懂里面的属性的\n\n| 值                                                                      | 释义                                           |\n| :---------------------------------------------------------------------- | :--------------------------------------------- |\n| serviceID=\"1\"                                                           | 应该是服务ID，告诉这是卡片                     |\n| templateID=\"-1\"                                                         | 模板                                           |\n| action=\"web\"                                                            | 动作，点击后会执行的内容，此处为web            |\n| brief=\"公安局已介入\"                                                    | 也就是在主页看到群内简要消息，类似[QQ红包]这种 |\n| sourceMsgId=\"0\"`<br>`flag=\"0\"   adverSign=\"0\"`<br>`multiMsgFlag=\"0\" | 未知                                           |\n| url=\"\"                                                                  | 点击后执行web的URL                             |\n\nLayout，是个布局，也就是卡片内的布局\n\n```xml\n<title>公安局已加入该群</title>\n<summary>公安局已开始监控聊天</summary>\n```\n\n这两个8说了，标题和内容，和html一样好读的\n\n```xml\n<source \n  \tname=\"中国刑警大队已介入，请规范聊天\" \n  \ticon=\"\" \n  \taction=\"\" \n  \tappid=\"0\"/>\n```\n\nsource，就是源，应该是显示图标之类的\n\nicon为图标，action为执行的动作，与前面的相同\n\n\n---\n\n# 那我要怎么发送这种消息呢？\n\n直接发xml显然是不行的\n\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/7wepog3evv.png)\n\n这时就需要修改内存了\n\n还记得刚刚是怎么找到那段对话的源码吗，就是不断修改，不断转发，转发过去的就是修改后的内容\n\n---\n\n由于电脑是看不到这种消息的，所以就发一个能看到的，例如分享\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/r7csyw3hmb.png)\n\n按上面那个方法修改\n\n只不过把值改为xml代码\n\n然后再回到qq转发那个卡片，就完成了\n\n（不过不保障100%成功，只提供技术而已，分析原理）\n\n\n---\n\n发送的原理也是更改内存，已经知道了卡片的本质，是一段xml，无可厚非，这些卡片本来是引导用户更方便地获取信息，但一些人缺利用这个功能诈骗，而且还在更新换代，甚至有了无法撤回的版本，跟踪ip的版本\n\n所以各位群友们，这类信息慎点，一定要确定安全，甚至和普通消息混淆的也有，显然不可能每次看消息，抢红包都要开CE，针对这种情况，MIUI12的模糊定位和隐私保护就起到很关键作用，而QQ在这方面也很完善，例如刚刚的方法，我试了10次都失败了，估计是发现bug了吧，发送后是看不到的，不论是手机还是电脑\n\n最后，恪守道德遵守法律是每位公民的义务\n\n---\n\n## 到此，教程结束\n\n### 本教程在bilibili，企鹅号，腾讯云+社区，www.arsrna.ltd个人博客发布，未经允许禁止转载！\n","source":"_posts/[08-1202-08-1203]A.md","raw":"---\ntitle: 关于QQ群内“被踢出本群” XML卡片深入研究\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: www.arsrna.cn\nauthorAbout: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\nauthorDesc: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；邕城漫展，使命必达，个人网站www.arsrna.cn\ncategories: 技术\ncomments: true\ndate: 2021-1-30 0:12\ntags: \nkeywords:\ndescription:\nindex_img: 'https://res.arsrna.cn/blogs/xmlCard/main.JPG'\n---\n节目编号：[08-1202/08-1203]A 关于QQ群内“被踢出本群” XML卡片深入研究\n\n*声明：请合理利用卡片信息，禁止用来违法犯罪，本文只讲技术，一切后果自负！*\n\n以下是破解时直播录像：\n\n<div id=\"player\"></div>\n<script type=\"text/javascript\" src=\"https://player.dogecloud.com/js/loader\"></script>\n<script type=\"text/javascript\">\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: '2db703b20822d6c7',\n    autoPlay: false\n});\n</script>\n\n[08-1202/08-1203]A 关于QQ群内“被踢出本群” XML卡片深入研究\n\n就在昨天，某些群突然看到“您已被移出本群”之类的消息，直接被震惊到了\n\n结果一进去，消息是“群友捕捉术？”\n\n_**声明：请合理利用卡片信息，禁止用来违法犯罪，本文只讲技术，一切后果自负！**_\n\n---\n\n# 原理及分析\n\n要破解就先知道原理下手，如果你在一些平台转发给QQ好友过一些东西，也会发现这类型的消息也是个卡片，不是链接什么的，点开后有可能是小程序，一个弹窗，一个页面等等，而这次事件也是同性质的卡片。\n\n## 本质\n\n卡片消息有很多种，打卡，作业，投票，小程序，分享，红包，语音等等等等繁多种类，若不确定就无法下手，所以就得用“外挂”的方式进行破解\n\n# 破解全过程：\n\n准备材料：Cheat Engine作弊器；Sublime富文本编辑器；QQ以及诈骗卡片\n\n为了不影响群友，我用自己的小号和自己开了个群\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/br34rmf606.png)\n然后对这个群进行侦听\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/lli4tbezrt.png)\n把这个诈骗卡片转发\n\n然后CE修改器里搜索卡片的关键词（由于电脑看不到卡片内容，只能使用手机辅助）\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/4qe4yi25zj.png)\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/976rvgm34.png)\n把所有值全部修改\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/aqgsp7yxwl.png)\n然后切回那个群的QQ窗口\n\n会发现有些值已经恢复\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/2wnwwcblzx.png)\n再把这个卡片继续转发，手机上查看内容是已经被改变了的，然后再在CE里再次搜索刚刚改变的值\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/zyba5zhqfh.png)\n同样全部修改，不断搜索最初的那个消息值，会每次改每次变，就不是，如果改了不变的，就是代码所在的内存区了\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/7aa9o636s5.png)\n**1150EABC，查看内存**\n\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/txl8u07p2a.png)\n搜索字符的内存值\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/igrhtotofc.png)\n慢慢翻，直到有?xml的标识出现（记得右边要utf8显示）\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/nzcd4fk14n.png)\n把值复制下来，16进制转字符\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/7or6s2q4tz.png)\n代码如下：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n<msg serviceID=\"1\" templateID=\"-1\" action=\"web\" brief=\"公安局已介入\" sourceMsgId=\"0\" url=\"\" flag=\"0\" adverSign=\"0\" multiMsgFlag=\"0\">\n  <item layout=\"2\" advertiser_id=\"0\" aid=\"0\">\n    <title>公安局已加入该群</title>\n    <summary>公安局已开始监控聊天</summary>\n  </item>\n  <source name=\"中国刑警大队已介入，请规范聊天\" icon=\"\" action=\"\" appid=\"0\"/>\n</msg>\n```\n\n是一个很标准的xml格式\n\n拆开分析：\n\n```xml\n<?xml version=\"1.0\"\nencoding=\"utf-8\"\nstandalone=\"yes\"?>\n<msg serviceID=\"1\" \ntemplateID=\"-1\"\naction=\"web\"\nbrief=\"公安局已介入\"\nsourceMsgId=\"0\"\nurl=\"\"\nflag=\"0\"\nadverSign=\"0\"\nmultiMsgFlag=\"0\">\n  <item layout=\"2\" \n  \tadvertiser_id=\"0\" \n  \taid=\"0\">\n    <title>公安局已加入该群</title>\n    <summary>公安局已开始监控聊天</summary>\n  </item>\n  <source \n  \tname=\"中国刑警大队已介入，请规范聊天\" \n  \ticon=\"\" \n  \taction=\"\" \n  \tappid=\"0\"/>\n</msg>\n```\n\n`<msg>`构成了开头，有点英语基础的看得懂里面的属性的\n\n| 值                                                                      | 释义                                           |\n| :---------------------------------------------------------------------- | :--------------------------------------------- |\n| serviceID=\"1\"                                                           | 应该是服务ID，告诉这是卡片                     |\n| templateID=\"-1\"                                                         | 模板                                           |\n| action=\"web\"                                                            | 动作，点击后会执行的内容，此处为web            |\n| brief=\"公安局已介入\"                                                    | 也就是在主页看到群内简要消息，类似[QQ红包]这种 |\n| sourceMsgId=\"0\"`<br>`flag=\"0\"   adverSign=\"0\"`<br>`multiMsgFlag=\"0\" | 未知                                           |\n| url=\"\"                                                                  | 点击后执行web的URL                             |\n\nLayout，是个布局，也就是卡片内的布局\n\n```xml\n<title>公安局已加入该群</title>\n<summary>公安局已开始监控聊天</summary>\n```\n\n这两个8说了，标题和内容，和html一样好读的\n\n```xml\n<source \n  \tname=\"中国刑警大队已介入，请规范聊天\" \n  \ticon=\"\" \n  \taction=\"\" \n  \tappid=\"0\"/>\n```\n\nsource，就是源，应该是显示图标之类的\n\nicon为图标，action为执行的动作，与前面的相同\n\n\n---\n\n# 那我要怎么发送这种消息呢？\n\n直接发xml显然是不行的\n\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/7wepog3evv.png)\n\n这时就需要修改内存了\n\n还记得刚刚是怎么找到那段对话的源码吗，就是不断修改，不断转发，转发过去的就是修改后的内容\n\n---\n\n由于电脑是看不到这种消息的，所以就发一个能看到的，例如分享\n\n![](https://res.arsrna.cn/blogs/xmlCard/pics/r7csyw3hmb.png)\n\n按上面那个方法修改\n\n只不过把值改为xml代码\n\n然后再回到qq转发那个卡片，就完成了\n\n（不过不保障100%成功，只提供技术而已，分析原理）\n\n\n---\n\n发送的原理也是更改内存，已经知道了卡片的本质，是一段xml，无可厚非，这些卡片本来是引导用户更方便地获取信息，但一些人缺利用这个功能诈骗，而且还在更新换代，甚至有了无法撤回的版本，跟踪ip的版本\n\n所以各位群友们，这类信息慎点，一定要确定安全，甚至和普通消息混淆的也有，显然不可能每次看消息，抢红包都要开CE，针对这种情况，MIUI12的模糊定位和隐私保护就起到很关键作用，而QQ在这方面也很完善，例如刚刚的方法，我试了10次都失败了，估计是发现bug了吧，发送后是看不到的，不论是手机还是电脑\n\n最后，恪守道德遵守法律是每位公民的义务\n\n---\n\n## 到此，教程结束\n\n### 本教程在bilibili，企鹅号，腾讯云+社区，www.arsrna.ltd个人博客发布，未经允许禁止转载！\n","slug":"[08-1202-08-1203]A","published":1,"updated":"2023-01-17T08:55:38.571Z","layout":"post","photos":[],"link":"","_id":"clod0d6xw003jc0ndgphqg8y4","content":"<p>节目编号：[08-1202&#x2F;08-1203]A 关于QQ群内“被踢出本群” XML卡片深入研究</p>\n<p><em>声明：请合理利用卡片信息，禁止用来违法犯罪，本文只讲技术，一切后果自负！</em></p>\n<p>以下是破解时直播录像：</p>\n<div id=\"player\"></div>\n<script type=\"text/javascript\" src=\"https://player.dogecloud.com/js/loader\"></script>\n<script type=\"text/javascript\">\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: '2db703b20822d6c7',\n    autoPlay: false\n});\n</script>\n\n<p>[08-1202&#x2F;08-1203]A 关于QQ群内“被踢出本群” XML卡片深入研究</p>\n<p>就在昨天，某些群突然看到“您已被移出本群”之类的消息，直接被震惊到了</p>\n<p>结果一进去，消息是“群友捕捉术？”</p>\n<p><em><strong>声明：请合理利用卡片信息，禁止用来违法犯罪，本文只讲技术，一切后果自负！</strong></em></p>\n<hr>\n<h1 id=\"原理及分析\"><a href=\"#原理及分析\" class=\"headerlink\" title=\"原理及分析\"></a>原理及分析</h1><p>要破解就先知道原理下手，如果你在一些平台转发给QQ好友过一些东西，也会发现这类型的消息也是个卡片，不是链接什么的，点开后有可能是小程序，一个弹窗，一个页面等等，而这次事件也是同性质的卡片。</p>\n<h2 id=\"本质\"><a href=\"#本质\" class=\"headerlink\" title=\"本质\"></a>本质</h2><p>卡片消息有很多种，打卡，作业，投票，小程序，分享，红包，语音等等等等繁多种类，若不确定就无法下手，所以就得用“外挂”的方式进行破解</p>\n<h1 id=\"破解全过程：\"><a href=\"#破解全过程：\" class=\"headerlink\" title=\"破解全过程：\"></a>破解全过程：</h1><p>准备材料：Cheat Engine作弊器；Sublime富文本编辑器；QQ以及诈骗卡片</p>\n<p>为了不影响群友，我用自己的小号和自己开了个群</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/br34rmf606.png\"><br>然后对这个群进行侦听</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/lli4tbezrt.png\"><br>把这个诈骗卡片转发</p>\n<p>然后CE修改器里搜索卡片的关键词（由于电脑看不到卡片内容，只能使用手机辅助）</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/4qe4yi25zj.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/976rvgm34.png\"><br>把所有值全部修改</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/aqgsp7yxwl.png\"><br>然后切回那个群的QQ窗口</p>\n<p>会发现有些值已经恢复</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/2wnwwcblzx.png\"><br>再把这个卡片继续转发，手机上查看内容是已经被改变了的，然后再在CE里再次搜索刚刚改变的值</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/zyba5zhqfh.png\"><br>同样全部修改，不断搜索最初的那个消息值，会每次改每次变，就不是，如果改了不变的，就是代码所在的内存区了</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/7aa9o636s5.png\"><br><strong>1150EABC，查看内存</strong></p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/txl8u07p2a.png\"><br>搜索字符的内存值</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/igrhtotofc.png\"><br>慢慢翻，直到有?xml的标识出现（记得右边要utf8显示）</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/nzcd4fk14n.png\"><br>把值复制下来，16进制转字符</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/7or6s2q4tz.png\"><br>代码如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;?xml version=<span class=\"hljs-string\">&quot;1.0&quot;</span> encoding=<span class=\"hljs-string\">&quot;utf-8&quot;</span> standalone=<span class=\"hljs-string\">&quot;yes&quot;</span>?&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">msg</span> <span class=\"hljs-attr\">serviceID</span>=<span class=\"hljs-string\">&quot;1&quot;</span> <span class=\"hljs-attr\">templateID</span>=<span class=\"hljs-string\">&quot;-1&quot;</span> <span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">&quot;web&quot;</span> <span class=\"hljs-attr\">brief</span>=<span class=\"hljs-string\">&quot;公安局已介入&quot;</span> <span class=\"hljs-attr\">sourceMsgId</span>=<span class=\"hljs-string\">&quot;0&quot;</span> <span class=\"hljs-attr\">url</span>=<span class=\"hljs-string\">&quot;&quot;</span> <span class=\"hljs-attr\">flag</span>=<span class=\"hljs-string\">&quot;0&quot;</span> <span class=\"hljs-attr\">adverSign</span>=<span class=\"hljs-string\">&quot;0&quot;</span> <span class=\"hljs-attr\">multiMsgFlag</span>=<span class=\"hljs-string\">&quot;0&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">item</span> <span class=\"hljs-attr\">layout</span>=<span class=\"hljs-string\">&quot;2&quot;</span> <span class=\"hljs-attr\">advertiser_id</span>=<span class=\"hljs-string\">&quot;0&quot;</span> <span class=\"hljs-attr\">aid</span>=<span class=\"hljs-string\">&quot;0&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>公安局已加入该群<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">summary</span>&gt;</span>公安局已开始监控聊天<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">summary</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">item</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">source</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;中国刑警大队已介入，请规范聊天&quot;</span> <span class=\"hljs-attr\">icon</span>=<span class=\"hljs-string\">&quot;&quot;</span> <span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">&quot;&quot;</span> <span class=\"hljs-attr\">appid</span>=<span class=\"hljs-string\">&quot;0&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">msg</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>是一个很标准的xml格式</p>\n<p>拆开分析：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;?xml version=<span class=\"hljs-string\">&quot;1.0&quot;</span></span><br><span class=\"hljs-meta\">encoding=<span class=\"hljs-string\">&quot;utf-8&quot;</span></span><br><span class=\"hljs-meta\">standalone=<span class=\"hljs-string\">&quot;yes&quot;</span>?&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">msg</span> <span class=\"hljs-attr\">serviceID</span>=<span class=\"hljs-string\">&quot;1&quot;</span> </span><br><span class=\"hljs-tag\"><span class=\"hljs-attr\">templateID</span>=<span class=\"hljs-string\">&quot;-1&quot;</span></span><br><span class=\"hljs-tag\"><span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">&quot;web&quot;</span></span><br><span class=\"hljs-tag\"><span class=\"hljs-attr\">brief</span>=<span class=\"hljs-string\">&quot;公安局已介入&quot;</span></span><br><span class=\"hljs-tag\"><span class=\"hljs-attr\">sourceMsgId</span>=<span class=\"hljs-string\">&quot;0&quot;</span></span><br><span class=\"hljs-tag\"><span class=\"hljs-attr\">url</span>=<span class=\"hljs-string\">&quot;&quot;</span></span><br><span class=\"hljs-tag\"><span class=\"hljs-attr\">flag</span>=<span class=\"hljs-string\">&quot;0&quot;</span></span><br><span class=\"hljs-tag\"><span class=\"hljs-attr\">adverSign</span>=<span class=\"hljs-string\">&quot;0&quot;</span></span><br><span class=\"hljs-tag\"><span class=\"hljs-attr\">multiMsgFlag</span>=<span class=\"hljs-string\">&quot;0&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">item</span> <span class=\"hljs-attr\">layout</span>=<span class=\"hljs-string\">&quot;2&quot;</span> </span><br><span class=\"hljs-tag\">  \t<span class=\"hljs-attr\">advertiser_id</span>=<span class=\"hljs-string\">&quot;0&quot;</span> </span><br><span class=\"hljs-tag\">  \t<span class=\"hljs-attr\">aid</span>=<span class=\"hljs-string\">&quot;0&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>公安局已加入该群<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">summary</span>&gt;</span>公安局已开始监控聊天<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">summary</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">item</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">source</span> </span><br><span class=\"hljs-tag\">  \t<span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;中国刑警大队已介入，请规范聊天&quot;</span> </span><br><span class=\"hljs-tag\">  \t<span class=\"hljs-attr\">icon</span>=<span class=\"hljs-string\">&quot;&quot;</span> </span><br><span class=\"hljs-tag\">  \t<span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">&quot;&quot;</span> </span><br><span class=\"hljs-tag\">  \t<span class=\"hljs-attr\">appid</span>=<span class=\"hljs-string\">&quot;0&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">msg</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p><code>&lt;msg&gt;</code>构成了开头，有点英语基础的看得懂里面的属性的</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">值</th>\n<th align=\"left\">释义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">serviceID&#x3D;”1”</td>\n<td align=\"left\">应该是服务ID，告诉这是卡片</td>\n</tr>\n<tr>\n<td align=\"left\">templateID&#x3D;”-1”</td>\n<td align=\"left\">模板</td>\n</tr>\n<tr>\n<td align=\"left\">action&#x3D;”web”</td>\n<td align=\"left\">动作，点击后会执行的内容，此处为web</td>\n</tr>\n<tr>\n<td align=\"left\">brief&#x3D;”公安局已介入”</td>\n<td align=\"left\">也就是在主页看到群内简要消息，类似[QQ红包]这种</td>\n</tr>\n<tr>\n<td align=\"left\">sourceMsgId&#x3D;”0”<code>&lt;br&gt;</code>flag&#x3D;”0”   adverSign&#x3D;”0”<code>&lt;br&gt;</code>multiMsgFlag&#x3D;”0”</td>\n<td align=\"left\">未知</td>\n</tr>\n<tr>\n<td align=\"left\">url&#x3D;””</td>\n<td align=\"left\">点击后执行web的URL</td>\n</tr>\n</tbody></table>\n<p>Layout，是个布局，也就是卡片内的布局</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>公安局已加入该群<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">summary</span>&gt;</span>公安局已开始监控聊天<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">summary</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>这两个8说了，标题和内容，和html一样好读的</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">source</span> </span><br><span class=\"hljs-tag\">  \t<span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;中国刑警大队已介入，请规范聊天&quot;</span> </span><br><span class=\"hljs-tag\">  \t<span class=\"hljs-attr\">icon</span>=<span class=\"hljs-string\">&quot;&quot;</span> </span><br><span class=\"hljs-tag\">  \t<span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">&quot;&quot;</span> </span><br><span class=\"hljs-tag\">  \t<span class=\"hljs-attr\">appid</span>=<span class=\"hljs-string\">&quot;0&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>source，就是源，应该是显示图标之类的</p>\n<p>icon为图标，action为执行的动作，与前面的相同</p>\n<hr>\n<h1 id=\"那我要怎么发送这种消息呢？\"><a href=\"#那我要怎么发送这种消息呢？\" class=\"headerlink\" title=\"那我要怎么发送这种消息呢？\"></a>那我要怎么发送这种消息呢？</h1><p>直接发xml显然是不行的</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/7wepog3evv.png\"></p>\n<p>这时就需要修改内存了</p>\n<p>还记得刚刚是怎么找到那段对话的源码吗，就是不断修改，不断转发，转发过去的就是修改后的内容</p>\n<hr>\n<p>由于电脑是看不到这种消息的，所以就发一个能看到的，例如分享</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/r7csyw3hmb.png\"></p>\n<p>按上面那个方法修改</p>\n<p>只不过把值改为xml代码</p>\n<p>然后再回到qq转发那个卡片，就完成了</p>\n<p>（不过不保障100%成功，只提供技术而已，分析原理）</p>\n<hr>\n<p>发送的原理也是更改内存，已经知道了卡片的本质，是一段xml，无可厚非，这些卡片本来是引导用户更方便地获取信息，但一些人缺利用这个功能诈骗，而且还在更新换代，甚至有了无法撤回的版本，跟踪ip的版本</p>\n<p>所以各位群友们，这类信息慎点，一定要确定安全，甚至和普通消息混淆的也有，显然不可能每次看消息，抢红包都要开CE，针对这种情况，MIUI12的模糊定位和隐私保护就起到很关键作用，而QQ在这方面也很完善，例如刚刚的方法，我试了10次都失败了，估计是发现bug了吧，发送后是看不到的，不论是手机还是电脑</p>\n<p>最后，恪守道德遵守法律是每位公民的义务</p>\n<hr>\n<h2 id=\"到此，教程结束\"><a href=\"#到此，教程结束\" class=\"headerlink\" title=\"到此，教程结束\"></a>到此，教程结束</h2><h3 id=\"本教程在bilibili，企鹅号，腾讯云-社区，www-arsrna-ltd个人博客发布，未经允许禁止转载！\"><a href=\"#本教程在bilibili，企鹅号，腾讯云-社区，www-arsrna-ltd个人博客发布，未经允许禁止转载！\" class=\"headerlink\" title=\"本教程在bilibili，企鹅号，腾讯云+社区，www.arsrna.ltd个人博客发布，未经允许禁止转载！\"></a>本教程在bilibili，企鹅号，腾讯云+社区，<a href=\"http://www.arsrna.ltd个人博客发布,未经允许禁止转载!/\">www.arsrna.ltd个人博客发布，未经允许禁止转载！</a></h3>","site":{"data":{}},"excerpt":"","more":"<p>节目编号：[08-1202&#x2F;08-1203]A 关于QQ群内“被踢出本群” XML卡片深入研究</p>\n<p><em>声明：请合理利用卡片信息，禁止用来违法犯罪，本文只讲技术，一切后果自负！</em></p>\n<p>以下是破解时直播录像：</p>\n<div id=\"player\"></div>\n<script type=\"text/javascript\" src=\"https://player.dogecloud.com/js/loader\"></script>\n<script type=\"text/javascript\">\nvar player = new DogePlayer({\n    container: document.getElementById('player'),\n    userId: 1277,\n    vcode: '2db703b20822d6c7',\n    autoPlay: false\n});\n</script>\n\n<p>[08-1202&#x2F;08-1203]A 关于QQ群内“被踢出本群” XML卡片深入研究</p>\n<p>就在昨天，某些群突然看到“您已被移出本群”之类的消息，直接被震惊到了</p>\n<p>结果一进去，消息是“群友捕捉术？”</p>\n<p><em><strong>声明：请合理利用卡片信息，禁止用来违法犯罪，本文只讲技术，一切后果自负！</strong></em></p>\n<hr>\n<h1 id=\"原理及分析\"><a href=\"#原理及分析\" class=\"headerlink\" title=\"原理及分析\"></a>原理及分析</h1><p>要破解就先知道原理下手，如果你在一些平台转发给QQ好友过一些东西，也会发现这类型的消息也是个卡片，不是链接什么的，点开后有可能是小程序，一个弹窗，一个页面等等，而这次事件也是同性质的卡片。</p>\n<h2 id=\"本质\"><a href=\"#本质\" class=\"headerlink\" title=\"本质\"></a>本质</h2><p>卡片消息有很多种，打卡，作业，投票，小程序，分享，红包，语音等等等等繁多种类，若不确定就无法下手，所以就得用“外挂”的方式进行破解</p>\n<h1 id=\"破解全过程：\"><a href=\"#破解全过程：\" class=\"headerlink\" title=\"破解全过程：\"></a>破解全过程：</h1><p>准备材料：Cheat Engine作弊器；Sublime富文本编辑器；QQ以及诈骗卡片</p>\n<p>为了不影响群友，我用自己的小号和自己开了个群</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/br34rmf606.png\"><br>然后对这个群进行侦听</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/lli4tbezrt.png\"><br>把这个诈骗卡片转发</p>\n<p>然后CE修改器里搜索卡片的关键词（由于电脑看不到卡片内容，只能使用手机辅助）</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/4qe4yi25zj.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/976rvgm34.png\"><br>把所有值全部修改</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/aqgsp7yxwl.png\"><br>然后切回那个群的QQ窗口</p>\n<p>会发现有些值已经恢复</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/2wnwwcblzx.png\"><br>再把这个卡片继续转发，手机上查看内容是已经被改变了的，然后再在CE里再次搜索刚刚改变的值</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/zyba5zhqfh.png\"><br>同样全部修改，不断搜索最初的那个消息值，会每次改每次变，就不是，如果改了不变的，就是代码所在的内存区了</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/7aa9o636s5.png\"><br><strong>1150EABC，查看内存</strong></p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/txl8u07p2a.png\"><br>搜索字符的内存值</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/igrhtotofc.png\"><br>慢慢翻，直到有?xml的标识出现（记得右边要utf8显示）</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/nzcd4fk14n.png\"><br>把值复制下来，16进制转字符</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/7or6s2q4tz.png\"><br>代码如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;?xml version=<span class=\"hljs-string\">&quot;1.0&quot;</span> encoding=<span class=\"hljs-string\">&quot;utf-8&quot;</span> standalone=<span class=\"hljs-string\">&quot;yes&quot;</span>?&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">msg</span> <span class=\"hljs-attr\">serviceID</span>=<span class=\"hljs-string\">&quot;1&quot;</span> <span class=\"hljs-attr\">templateID</span>=<span class=\"hljs-string\">&quot;-1&quot;</span> <span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">&quot;web&quot;</span> <span class=\"hljs-attr\">brief</span>=<span class=\"hljs-string\">&quot;公安局已介入&quot;</span> <span class=\"hljs-attr\">sourceMsgId</span>=<span class=\"hljs-string\">&quot;0&quot;</span> <span class=\"hljs-attr\">url</span>=<span class=\"hljs-string\">&quot;&quot;</span> <span class=\"hljs-attr\">flag</span>=<span class=\"hljs-string\">&quot;0&quot;</span> <span class=\"hljs-attr\">adverSign</span>=<span class=\"hljs-string\">&quot;0&quot;</span> <span class=\"hljs-attr\">multiMsgFlag</span>=<span class=\"hljs-string\">&quot;0&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">item</span> <span class=\"hljs-attr\">layout</span>=<span class=\"hljs-string\">&quot;2&quot;</span> <span class=\"hljs-attr\">advertiser_id</span>=<span class=\"hljs-string\">&quot;0&quot;</span> <span class=\"hljs-attr\">aid</span>=<span class=\"hljs-string\">&quot;0&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>公安局已加入该群<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">summary</span>&gt;</span>公安局已开始监控聊天<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">summary</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">item</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">source</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;中国刑警大队已介入，请规范聊天&quot;</span> <span class=\"hljs-attr\">icon</span>=<span class=\"hljs-string\">&quot;&quot;</span> <span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">&quot;&quot;</span> <span class=\"hljs-attr\">appid</span>=<span class=\"hljs-string\">&quot;0&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">msg</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>是一个很标准的xml格式</p>\n<p>拆开分析：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;?xml version=<span class=\"hljs-string\">&quot;1.0&quot;</span></span><br><span class=\"hljs-meta\">encoding=<span class=\"hljs-string\">&quot;utf-8&quot;</span></span><br><span class=\"hljs-meta\">standalone=<span class=\"hljs-string\">&quot;yes&quot;</span>?&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">msg</span> <span class=\"hljs-attr\">serviceID</span>=<span class=\"hljs-string\">&quot;1&quot;</span> </span><br><span class=\"hljs-tag\"><span class=\"hljs-attr\">templateID</span>=<span class=\"hljs-string\">&quot;-1&quot;</span></span><br><span class=\"hljs-tag\"><span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">&quot;web&quot;</span></span><br><span class=\"hljs-tag\"><span class=\"hljs-attr\">brief</span>=<span class=\"hljs-string\">&quot;公安局已介入&quot;</span></span><br><span class=\"hljs-tag\"><span class=\"hljs-attr\">sourceMsgId</span>=<span class=\"hljs-string\">&quot;0&quot;</span></span><br><span class=\"hljs-tag\"><span class=\"hljs-attr\">url</span>=<span class=\"hljs-string\">&quot;&quot;</span></span><br><span class=\"hljs-tag\"><span class=\"hljs-attr\">flag</span>=<span class=\"hljs-string\">&quot;0&quot;</span></span><br><span class=\"hljs-tag\"><span class=\"hljs-attr\">adverSign</span>=<span class=\"hljs-string\">&quot;0&quot;</span></span><br><span class=\"hljs-tag\"><span class=\"hljs-attr\">multiMsgFlag</span>=<span class=\"hljs-string\">&quot;0&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">item</span> <span class=\"hljs-attr\">layout</span>=<span class=\"hljs-string\">&quot;2&quot;</span> </span><br><span class=\"hljs-tag\">  \t<span class=\"hljs-attr\">advertiser_id</span>=<span class=\"hljs-string\">&quot;0&quot;</span> </span><br><span class=\"hljs-tag\">  \t<span class=\"hljs-attr\">aid</span>=<span class=\"hljs-string\">&quot;0&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>公安局已加入该群<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">summary</span>&gt;</span>公安局已开始监控聊天<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">summary</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">item</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">source</span> </span><br><span class=\"hljs-tag\">  \t<span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;中国刑警大队已介入，请规范聊天&quot;</span> </span><br><span class=\"hljs-tag\">  \t<span class=\"hljs-attr\">icon</span>=<span class=\"hljs-string\">&quot;&quot;</span> </span><br><span class=\"hljs-tag\">  \t<span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">&quot;&quot;</span> </span><br><span class=\"hljs-tag\">  \t<span class=\"hljs-attr\">appid</span>=<span class=\"hljs-string\">&quot;0&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">msg</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p><code>&lt;msg&gt;</code>构成了开头，有点英语基础的看得懂里面的属性的</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">值</th>\n<th align=\"left\">释义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">serviceID&#x3D;”1”</td>\n<td align=\"left\">应该是服务ID，告诉这是卡片</td>\n</tr>\n<tr>\n<td align=\"left\">templateID&#x3D;”-1”</td>\n<td align=\"left\">模板</td>\n</tr>\n<tr>\n<td align=\"left\">action&#x3D;”web”</td>\n<td align=\"left\">动作，点击后会执行的内容，此处为web</td>\n</tr>\n<tr>\n<td align=\"left\">brief&#x3D;”公安局已介入”</td>\n<td align=\"left\">也就是在主页看到群内简要消息，类似[QQ红包]这种</td>\n</tr>\n<tr>\n<td align=\"left\">sourceMsgId&#x3D;”0”<code>&lt;br&gt;</code>flag&#x3D;”0”   adverSign&#x3D;”0”<code>&lt;br&gt;</code>multiMsgFlag&#x3D;”0”</td>\n<td align=\"left\">未知</td>\n</tr>\n<tr>\n<td align=\"left\">url&#x3D;””</td>\n<td align=\"left\">点击后执行web的URL</td>\n</tr>\n</tbody></table>\n<p>Layout，是个布局，也就是卡片内的布局</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>公安局已加入该群<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">summary</span>&gt;</span>公安局已开始监控聊天<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">summary</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>这两个8说了，标题和内容，和html一样好读的</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">source</span> </span><br><span class=\"hljs-tag\">  \t<span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;中国刑警大队已介入，请规范聊天&quot;</span> </span><br><span class=\"hljs-tag\">  \t<span class=\"hljs-attr\">icon</span>=<span class=\"hljs-string\">&quot;&quot;</span> </span><br><span class=\"hljs-tag\">  \t<span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">&quot;&quot;</span> </span><br><span class=\"hljs-tag\">  \t<span class=\"hljs-attr\">appid</span>=<span class=\"hljs-string\">&quot;0&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>source，就是源，应该是显示图标之类的</p>\n<p>icon为图标，action为执行的动作，与前面的相同</p>\n<hr>\n<h1 id=\"那我要怎么发送这种消息呢？\"><a href=\"#那我要怎么发送这种消息呢？\" class=\"headerlink\" title=\"那我要怎么发送这种消息呢？\"></a>那我要怎么发送这种消息呢？</h1><p>直接发xml显然是不行的</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/7wepog3evv.png\"></p>\n<p>这时就需要修改内存了</p>\n<p>还记得刚刚是怎么找到那段对话的源码吗，就是不断修改，不断转发，转发过去的就是修改后的内容</p>\n<hr>\n<p>由于电脑是看不到这种消息的，所以就发一个能看到的，例如分享</p>\n<p><img src=\"https://res.arsrna.cn/blogs/xmlCard/pics/r7csyw3hmb.png\"></p>\n<p>按上面那个方法修改</p>\n<p>只不过把值改为xml代码</p>\n<p>然后再回到qq转发那个卡片，就完成了</p>\n<p>（不过不保障100%成功，只提供技术而已，分析原理）</p>\n<hr>\n<p>发送的原理也是更改内存，已经知道了卡片的本质，是一段xml，无可厚非，这些卡片本来是引导用户更方便地获取信息，但一些人缺利用这个功能诈骗，而且还在更新换代，甚至有了无法撤回的版本，跟踪ip的版本</p>\n<p>所以各位群友们，这类信息慎点，一定要确定安全，甚至和普通消息混淆的也有，显然不可能每次看消息，抢红包都要开CE，针对这种情况，MIUI12的模糊定位和隐私保护就起到很关键作用，而QQ在这方面也很完善，例如刚刚的方法，我试了10次都失败了，估计是发现bug了吧，发送后是看不到的，不论是手机还是电脑</p>\n<p>最后，恪守道德遵守法律是每位公民的义务</p>\n<hr>\n<h2 id=\"到此，教程结束\"><a href=\"#到此，教程结束\" class=\"headerlink\" title=\"到此，教程结束\"></a>到此，教程结束</h2><h3 id=\"本教程在bilibili，企鹅号，腾讯云-社区，www-arsrna-ltd个人博客发布，未经允许禁止转载！\"><a href=\"#本教程在bilibili，企鹅号，腾讯云-社区，www-arsrna-ltd个人博客发布，未经允许禁止转载！\" class=\"headerlink\" title=\"本教程在bilibili，企鹅号，腾讯云+社区，www.arsrna.ltd个人博客发布，未经允许禁止转载！\"></a>本教程在bilibili，企鹅号，腾讯云+社区，<a href=\"http://www.arsrna.ltd个人博客发布,未经允许禁止转载!/\">www.arsrna.ltd个人博客发布，未经允许禁止转载！</a></h3>"},{"title":"JavaServerless Learn-基础","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"www.arsrna.cn","authorAbout":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；绿城漫展，使命必达，个人网站www.arsrna.cn","authorDesc":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；绿城漫展，使命必达，个人网站www.arsrna.cn","comments":1,"date":"2021-02-02T05:19:00.000Z","keywords":null,"description":null,"index_img":"https://arsrnasite.cn-gd.ufileos.com/javalearn%2Fjavalhdpic.jpg","_content":"节目编号：[08-1202/08-1203]A 关于QQ群内“被踢出本群” XML卡片深入研究\n\n# Ar-Sr-Na Java Serverless Learn项目-基础\n\n节目编号：[08-1202/08-1203]B：Ar-Sr-Na Java Serverless Learn项目-基础\n\n## 教程介绍\n\n本教程面向Serverless开发，不针对本地开发，意味着需要有较好Java基础，英语基础，熟悉逻辑关系，了解Serverless架构。\n\n## 教程初衷\n\n在这个云计算盛行也是趋势的时代，本地函数带来的成本问题不占少数，尤其是当应用上线时，大量请求压榨服务器导致宕机，采购高性能服务器成本太高，所以Serverless出现了，效率更高，成本更低，扩展性，计算资源等层面具有众多优势，所以，它不香么？\n\n创业路上并不是一帆风顺，我们也希望能帮助大家实现梦想，努力总比站在原地更接近成功！\n\n# Serverless介绍\n\nServerless Computing，一种全新的函数架构，意味着无服务器，节省资源，也降低了成本。Serverless被称为FaaS（Function-as-a-Service），以平台即服务（PaaS）为基础，意味着需要一个平台来支撑函数服务。\n\n本站建议使用腾讯云Serverless云函数服务[https://console.cloud.tencent.com/scf/](https://console.cloud.tencent.com/scf/)\n\n# Java语言简介\n\njava是计算机编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程。\n\nJava功能强大，扩展性高，虽说在Java领域，专业的东西很多，未必一下子能理解完，\n\n## 应用\n\n无论是张浩扬的QQ程序，up主的数据可视化，都以java为后端程序，当然[bilibili数据可视化](https://github.com/ArSrNa/bilibiliData-TCV)这个是PHP的\n\n### 项目在不断完善中，希望大家多多支持：QQ群：1097347557\n\n# 准备\n\n## 云端准备\n\n腾讯云账户\n\n腾讯云秘钥ID与Key（必须放行组件的权限）\n\n## 本地机的准备\n\nNPM：[npm | get npm (npmjs.com) ](https://www.npmjs.com/get-npm)（这里就不放出教程了）\n\nServerless CLI：npm install -g serverless\n\n教程：[下载安装 (serverless.com)](https://www.serverless.com/cn/framework/docs/quickstart/installation)\n\n# 开始第一个无服务器程序\n\n## 云端配置函数\n\n打开腾讯云的[云函数控制台](https://console.cloud.tencent.com/scf/)\n\n![](https://res.arsrna.cn/gg4ureyez9.png)\n点击函数服务\n\n![](https://res.arsrna.cn/93gzdy3koa.png)\n新建一个函数\n\n![](https://res.arsrna.cn/wi8vcnc8es.png)\n输入名称，语言选择Java，点击下一步\n\n![](https://res.arsrna.cn/f3xxq8ogro.png)\n![](https://res.arsrna.cn/agmh0ztnjg.png)\n要注意此处的执行方法，它定义了调用云函数时需要从哪个文件中的哪个函数开始执行。\n\n如上图是example.Hello::mainHandler\n\n所以函数就得这么设置，从mainHandler开始执行：\n\n```java\npublic String mainHandler(KeyValueClass kv)\n    {\n       return String.format(\"Hello World\");\n    }\n```\n\n创建完成后，需要上传函数\n\n![](https://res.arsrna.cn/yyy8ijr3a8.png)\n需要把源代码改为index.java，然后打包为zip上传，就完成了\n\n## 本地配置函数\n\n如果想要本地调试再部署到云端更方便些，可以使用Serverless.yml和.env文件\n\n它类似这样：\n\n```yaml\ncomponent: website\nname: website\norg: test # (可选) 用于记录组织信息，默认值为您的腾讯云账户 APPID\napp: JavaLearn # (可选) 该 website 应用名称\nstage: dev # (可选) 用于区分环境信息，默认值是 dev\n```\n\n他声明了用到的组件，需要的云产品，以及环境，各种方便辨认的信息\n\n| 名称      | 必要性 | 释义                            |\n| :-------- | :----- | :------------------------------ |\n| component | √     | 引用组件名称                    |\n| name      | √     | 组件实例名称                    |\n| org       | 可选   | 组织信息（默认是你腾讯云APPID） |\n| app       | 可选   | 改xxx组件的应用名称             |\n| stage     | 可选   | 开发环境，用于区分              |\n\n例如我要创建一个网站组件，需要一个产品来存储我的网站资源，毕竟这是Serverless，不可能引用Server服务器组件，所以能存储网站并且部署网站的只有云开发和COS，云开发的能力过于广泛，集成了各种生态资源，所以建议使用COS对象存储的静态网站托管\n\n此时只需要在yml中加上：\n\n```yaml\ninputs:\n  bucket: my-bucket\n  region: ap-guangzhou\n\n```\n\n其中：\n\n| 名称   | 释义         |\n| :----- | :----------- |\n| bucket | 存储桶的名称 |\n| region | 存储桶地域   |\n\n最终输出地址就为bucket-appID.cos-website.region.myqcloud.com（部署后生效）\n\n在该目录下打开命令行，输入serverless deploy，登录后即可部署完成\n\n如果还需要部署其它的配置，例如https等，可以参照以下实例\n\n```yaml\ninputs:\n  src:\n    src: ./\n    index: index.html\n    # dist: ./dist\n    # hook: npm run build\n    # websitePath: ./\n  region: ap-hongkong\n  bucketName: javalearn\n  protocol: http\n```\n\n定义上传的子目录：src\n定义主页：index\n访问协议：protocol\n\n如果不想每次登录，可以新建.env文件，输入你的腾讯云秘钥\n\n```yaml\nTENCENT_SECRET_ID=xxxxxxxxxx\nTENCENT_SECRET_KEY=xxxxxxx\n```\n\n**注：腾讯云对的秘钥有关账户和资产安全，不要轻易透露，Deploy的时候会自动忽略.env文件不上传，但是github不一样！切记请不要透露个人的ID和KEY**\n\n## 部署函数\n\n在有Serverless.yml的目录下打开命令行\n\n键入**serverless deploy**或**sls deploy**（注，Powershell中不能使用sls）\n\n访问输出的地址，就部署完毕了\n\n# ServerlessのApplication\n\n## OCR文字识别\n\n## 全栈Web部署\n\nAr-Sr-Na的个人网站主要语言为Html，其次是PHP，JavaScript\n\n# 更新日志\n\n## 文档更新\n\n2020-5-3 项目开始\n\n2020-5-4 Ar-Sr-Na加入计划\n\n2020-6-10 java.arsrna.cn建成\n\n2020-6-18 文章发布\n\n2021-1-1 ServerlessSSL生效\n\n2021-2-1 文章更新\n\n2021-2-2 内容优化，结构更新，新增章节：准备；开始第一个无服务器程序\n","source":"_posts/[08-1202-08-1203]B.md","raw":"---\ntitle: JavaServerless Learn-基础\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: www.arsrna.cn\nauthorAbout: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；绿城漫展，使命必达，个人网站www.arsrna.cn\nauthorDesc: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；绿城漫展，使命必达，个人网站www.arsrna.cn\ncategories: 技术\ncomments: true\ndate: 2021-2-2 13:19\ntags: Java,学习,Serverless,技术\nkeywords:\ndescription:\nindex_img: 'https://arsrnasite.cn-gd.ufileos.com/javalearn%2Fjavalhdpic.jpg'\n---\n节目编号：[08-1202/08-1203]A 关于QQ群内“被踢出本群” XML卡片深入研究\n\n# Ar-Sr-Na Java Serverless Learn项目-基础\n\n节目编号：[08-1202/08-1203]B：Ar-Sr-Na Java Serverless Learn项目-基础\n\n## 教程介绍\n\n本教程面向Serverless开发，不针对本地开发，意味着需要有较好Java基础，英语基础，熟悉逻辑关系，了解Serverless架构。\n\n## 教程初衷\n\n在这个云计算盛行也是趋势的时代，本地函数带来的成本问题不占少数，尤其是当应用上线时，大量请求压榨服务器导致宕机，采购高性能服务器成本太高，所以Serverless出现了，效率更高，成本更低，扩展性，计算资源等层面具有众多优势，所以，它不香么？\n\n创业路上并不是一帆风顺，我们也希望能帮助大家实现梦想，努力总比站在原地更接近成功！\n\n# Serverless介绍\n\nServerless Computing，一种全新的函数架构，意味着无服务器，节省资源，也降低了成本。Serverless被称为FaaS（Function-as-a-Service），以平台即服务（PaaS）为基础，意味着需要一个平台来支撑函数服务。\n\n本站建议使用腾讯云Serverless云函数服务[https://console.cloud.tencent.com/scf/](https://console.cloud.tencent.com/scf/)\n\n# Java语言简介\n\njava是计算机编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程。\n\nJava功能强大，扩展性高，虽说在Java领域，专业的东西很多，未必一下子能理解完，\n\n## 应用\n\n无论是张浩扬的QQ程序，up主的数据可视化，都以java为后端程序，当然[bilibili数据可视化](https://github.com/ArSrNa/bilibiliData-TCV)这个是PHP的\n\n### 项目在不断完善中，希望大家多多支持：QQ群：1097347557\n\n# 准备\n\n## 云端准备\n\n腾讯云账户\n\n腾讯云秘钥ID与Key（必须放行组件的权限）\n\n## 本地机的准备\n\nNPM：[npm | get npm (npmjs.com) ](https://www.npmjs.com/get-npm)（这里就不放出教程了）\n\nServerless CLI：npm install -g serverless\n\n教程：[下载安装 (serverless.com)](https://www.serverless.com/cn/framework/docs/quickstart/installation)\n\n# 开始第一个无服务器程序\n\n## 云端配置函数\n\n打开腾讯云的[云函数控制台](https://console.cloud.tencent.com/scf/)\n\n![](https://res.arsrna.cn/gg4ureyez9.png)\n点击函数服务\n\n![](https://res.arsrna.cn/93gzdy3koa.png)\n新建一个函数\n\n![](https://res.arsrna.cn/wi8vcnc8es.png)\n输入名称，语言选择Java，点击下一步\n\n![](https://res.arsrna.cn/f3xxq8ogro.png)\n![](https://res.arsrna.cn/agmh0ztnjg.png)\n要注意此处的执行方法，它定义了调用云函数时需要从哪个文件中的哪个函数开始执行。\n\n如上图是example.Hello::mainHandler\n\n所以函数就得这么设置，从mainHandler开始执行：\n\n```java\npublic String mainHandler(KeyValueClass kv)\n    {\n       return String.format(\"Hello World\");\n    }\n```\n\n创建完成后，需要上传函数\n\n![](https://res.arsrna.cn/yyy8ijr3a8.png)\n需要把源代码改为index.java，然后打包为zip上传，就完成了\n\n## 本地配置函数\n\n如果想要本地调试再部署到云端更方便些，可以使用Serverless.yml和.env文件\n\n它类似这样：\n\n```yaml\ncomponent: website\nname: website\norg: test # (可选) 用于记录组织信息，默认值为您的腾讯云账户 APPID\napp: JavaLearn # (可选) 该 website 应用名称\nstage: dev # (可选) 用于区分环境信息，默认值是 dev\n```\n\n他声明了用到的组件，需要的云产品，以及环境，各种方便辨认的信息\n\n| 名称      | 必要性 | 释义                            |\n| :-------- | :----- | :------------------------------ |\n| component | √     | 引用组件名称                    |\n| name      | √     | 组件实例名称                    |\n| org       | 可选   | 组织信息（默认是你腾讯云APPID） |\n| app       | 可选   | 改xxx组件的应用名称             |\n| stage     | 可选   | 开发环境，用于区分              |\n\n例如我要创建一个网站组件，需要一个产品来存储我的网站资源，毕竟这是Serverless，不可能引用Server服务器组件，所以能存储网站并且部署网站的只有云开发和COS，云开发的能力过于广泛，集成了各种生态资源，所以建议使用COS对象存储的静态网站托管\n\n此时只需要在yml中加上：\n\n```yaml\ninputs:\n  bucket: my-bucket\n  region: ap-guangzhou\n\n```\n\n其中：\n\n| 名称   | 释义         |\n| :----- | :----------- |\n| bucket | 存储桶的名称 |\n| region | 存储桶地域   |\n\n最终输出地址就为bucket-appID.cos-website.region.myqcloud.com（部署后生效）\n\n在该目录下打开命令行，输入serverless deploy，登录后即可部署完成\n\n如果还需要部署其它的配置，例如https等，可以参照以下实例\n\n```yaml\ninputs:\n  src:\n    src: ./\n    index: index.html\n    # dist: ./dist\n    # hook: npm run build\n    # websitePath: ./\n  region: ap-hongkong\n  bucketName: javalearn\n  protocol: http\n```\n\n定义上传的子目录：src\n定义主页：index\n访问协议：protocol\n\n如果不想每次登录，可以新建.env文件，输入你的腾讯云秘钥\n\n```yaml\nTENCENT_SECRET_ID=xxxxxxxxxx\nTENCENT_SECRET_KEY=xxxxxxx\n```\n\n**注：腾讯云对的秘钥有关账户和资产安全，不要轻易透露，Deploy的时候会自动忽略.env文件不上传，但是github不一样！切记请不要透露个人的ID和KEY**\n\n## 部署函数\n\n在有Serverless.yml的目录下打开命令行\n\n键入**serverless deploy**或**sls deploy**（注，Powershell中不能使用sls）\n\n访问输出的地址，就部署完毕了\n\n# ServerlessのApplication\n\n## OCR文字识别\n\n## 全栈Web部署\n\nAr-Sr-Na的个人网站主要语言为Html，其次是PHP，JavaScript\n\n# 更新日志\n\n## 文档更新\n\n2020-5-3 项目开始\n\n2020-5-4 Ar-Sr-Na加入计划\n\n2020-6-10 java.arsrna.cn建成\n\n2020-6-18 文章发布\n\n2021-1-1 ServerlessSSL生效\n\n2021-2-1 文章更新\n\n2021-2-2 内容优化，结构更新，新增章节：准备；开始第一个无服务器程序\n","slug":"[08-1202-08-1203]B","published":1,"updated":"2023-01-17T08:55:38.572Z","layout":"post","photos":[],"link":"","_id":"clod0d6xx003mc0nd05jrbnxo","content":"<p>节目编号：[08-1202&#x2F;08-1203]A 关于QQ群内“被踢出本群” XML卡片深入研究</p>\n<h1 id=\"Ar-Sr-Na-Java-Serverless-Learn项目-基础\"><a href=\"#Ar-Sr-Na-Java-Serverless-Learn项目-基础\" class=\"headerlink\" title=\"Ar-Sr-Na Java Serverless Learn项目-基础\"></a>Ar-Sr-Na Java Serverless Learn项目-基础</h1><p>节目编号：[08-1202&#x2F;08-1203]B：Ar-Sr-Na Java Serverless Learn项目-基础</p>\n<h2 id=\"教程介绍\"><a href=\"#教程介绍\" class=\"headerlink\" title=\"教程介绍\"></a>教程介绍</h2><p>本教程面向Serverless开发，不针对本地开发，意味着需要有较好Java基础，英语基础，熟悉逻辑关系，了解Serverless架构。</p>\n<h2 id=\"教程初衷\"><a href=\"#教程初衷\" class=\"headerlink\" title=\"教程初衷\"></a>教程初衷</h2><p>在这个云计算盛行也是趋势的时代，本地函数带来的成本问题不占少数，尤其是当应用上线时，大量请求压榨服务器导致宕机，采购高性能服务器成本太高，所以Serverless出现了，效率更高，成本更低，扩展性，计算资源等层面具有众多优势，所以，它不香么？</p>\n<p>创业路上并不是一帆风顺，我们也希望能帮助大家实现梦想，努力总比站在原地更接近成功！</p>\n<h1 id=\"Serverless介绍\"><a href=\"#Serverless介绍\" class=\"headerlink\" title=\"Serverless介绍\"></a>Serverless介绍</h1><p>Serverless Computing，一种全新的函数架构，意味着无服务器，节省资源，也降低了成本。Serverless被称为FaaS（Function-as-a-Service），以平台即服务（PaaS）为基础，意味着需要一个平台来支撑函数服务。</p>\n<p>本站建议使用腾讯云Serverless云函数服务<a href=\"https://console.cloud.tencent.com/scf/\">https://console.cloud.tencent.com/scf/</a></p>\n<h1 id=\"Java语言简介\"><a href=\"#Java语言简介\" class=\"headerlink\" title=\"Java语言简介\"></a>Java语言简介</h1><p>java是计算机编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程。</p>\n<p>Java功能强大，扩展性高，虽说在Java领域，专业的东西很多，未必一下子能理解完，</p>\n<h2 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h2><p>无论是张浩扬的QQ程序，up主的数据可视化，都以java为后端程序，当然<a href=\"https://github.com/ArSrNa/bilibiliData-TCV\">bilibili数据可视化</a>这个是PHP的</p>\n<h3 id=\"项目在不断完善中，希望大家多多支持：QQ群：1097347557\"><a href=\"#项目在不断完善中，希望大家多多支持：QQ群：1097347557\" class=\"headerlink\" title=\"项目在不断完善中，希望大家多多支持：QQ群：1097347557\"></a>项目在不断完善中，希望大家多多支持：QQ群：1097347557</h3><h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><h2 id=\"云端准备\"><a href=\"#云端准备\" class=\"headerlink\" title=\"云端准备\"></a>云端准备</h2><p>腾讯云账户</p>\n<p>腾讯云秘钥ID与Key（必须放行组件的权限）</p>\n<h2 id=\"本地机的准备\"><a href=\"#本地机的准备\" class=\"headerlink\" title=\"本地机的准备\"></a>本地机的准备</h2><p>NPM：<a href=\"https://www.npmjs.com/get-npm\">npm | get npm (npmjs.com) </a>（这里就不放出教程了）</p>\n<p>Serverless CLI：npm install -g serverless</p>\n<p>教程：<a href=\"https://www.serverless.com/cn/framework/docs/quickstart/installation\">下载安装 (serverless.com)</a></p>\n<h1 id=\"开始第一个无服务器程序\"><a href=\"#开始第一个无服务器程序\" class=\"headerlink\" title=\"开始第一个无服务器程序\"></a>开始第一个无服务器程序</h1><h2 id=\"云端配置函数\"><a href=\"#云端配置函数\" class=\"headerlink\" title=\"云端配置函数\"></a>云端配置函数</h2><p>打开腾讯云的<a href=\"https://console.cloud.tencent.com/scf/\">云函数控制台</a></p>\n<p><img src=\"https://res.arsrna.cn/gg4ureyez9.png\"><br>点击函数服务</p>\n<p><img src=\"https://res.arsrna.cn/93gzdy3koa.png\"><br>新建一个函数</p>\n<p><img src=\"https://res.arsrna.cn/wi8vcnc8es.png\"><br>输入名称，语言选择Java，点击下一步</p>\n<p><img src=\"https://res.arsrna.cn/f3xxq8ogro.png\"><br><img src=\"https://res.arsrna.cn/agmh0ztnjg.png\"><br>要注意此处的执行方法，它定义了调用云函数时需要从哪个文件中的哪个函数开始执行。</p>\n<p>如上图是example.Hello::mainHandler</p>\n<p>所以函数就得这么设置，从mainHandler开始执行：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">mainHandler</span><span class=\"hljs-params\">(KeyValueClass kv)</span><br>    &#123;<br>       <span class=\"hljs-keyword\">return</span> String.format(<span class=\"hljs-string\">&quot;Hello World&quot;</span>);<br>    &#125;<br></code></pre></td></tr></table></figure>\n\n<p>创建完成后，需要上传函数</p>\n<p><img src=\"https://res.arsrna.cn/yyy8ijr3a8.png\"><br>需要把源代码改为index.java，然后打包为zip上传，就完成了</p>\n<h2 id=\"本地配置函数\"><a href=\"#本地配置函数\" class=\"headerlink\" title=\"本地配置函数\"></a>本地配置函数</h2><p>如果想要本地调试再部署到云端更方便些，可以使用Serverless.yml和.env文件</p>\n<p>它类似这样：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">website</span><br><span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">website</span><br><span class=\"hljs-attr\">org:</span> <span class=\"hljs-string\">test</span> <span class=\"hljs-comment\"># (可选) 用于记录组织信息，默认值为您的腾讯云账户 APPID</span><br><span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">JavaLearn</span> <span class=\"hljs-comment\"># (可选) 该 website 应用名称</span><br><span class=\"hljs-attr\">stage:</span> <span class=\"hljs-string\">dev</span> <span class=\"hljs-comment\"># (可选) 用于区分环境信息，默认值是 dev</span><br></code></pre></td></tr></table></figure>\n\n<p>他声明了用到的组件，需要的云产品，以及环境，各种方便辨认的信息</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">名称</th>\n<th align=\"left\">必要性</th>\n<th align=\"left\">释义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">component</td>\n<td align=\"left\">√</td>\n<td align=\"left\">引用组件名称</td>\n</tr>\n<tr>\n<td align=\"left\">name</td>\n<td align=\"left\">√</td>\n<td align=\"left\">组件实例名称</td>\n</tr>\n<tr>\n<td align=\"left\">org</td>\n<td align=\"left\">可选</td>\n<td align=\"left\">组织信息（默认是你腾讯云APPID）</td>\n</tr>\n<tr>\n<td align=\"left\">app</td>\n<td align=\"left\">可选</td>\n<td align=\"left\">改xxx组件的应用名称</td>\n</tr>\n<tr>\n<td align=\"left\">stage</td>\n<td align=\"left\">可选</td>\n<td align=\"left\">开发环境，用于区分</td>\n</tr>\n</tbody></table>\n<p>例如我要创建一个网站组件，需要一个产品来存储我的网站资源，毕竟这是Serverless，不可能引用Server服务器组件，所以能存储网站并且部署网站的只有云开发和COS，云开发的能力过于广泛，集成了各种生态资源，所以建议使用COS对象存储的静态网站托管</p>\n<p>此时只需要在yml中加上：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">inputs:</span><br>  <span class=\"hljs-attr\">bucket:</span> <span class=\"hljs-string\">my-bucket</span><br>  <span class=\"hljs-attr\">region:</span> <span class=\"hljs-string\">ap-guangzhou</span><br><br></code></pre></td></tr></table></figure>\n\n<p>其中：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">名称</th>\n<th align=\"left\">释义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">bucket</td>\n<td align=\"left\">存储桶的名称</td>\n</tr>\n<tr>\n<td align=\"left\">region</td>\n<td align=\"left\">存储桶地域</td>\n</tr>\n</tbody></table>\n<p>最终输出地址就为bucket-appID.cos-website.region.myqcloud.com（部署后生效）</p>\n<p>在该目录下打开命令行，输入serverless deploy，登录后即可部署完成</p>\n<p>如果还需要部署其它的配置，例如https等，可以参照以下实例</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">inputs:</span><br>  <span class=\"hljs-attr\">src:</span><br>    <span class=\"hljs-attr\">src:</span> <span class=\"hljs-string\">./</span><br>    <span class=\"hljs-attr\">index:</span> <span class=\"hljs-string\">index.html</span><br>    <span class=\"hljs-comment\"># dist: ./dist</span><br>    <span class=\"hljs-comment\"># hook: npm run build</span><br>    <span class=\"hljs-comment\"># websitePath: ./</span><br>  <span class=\"hljs-attr\">region:</span> <span class=\"hljs-string\">ap-hongkong</span><br>  <span class=\"hljs-attr\">bucketName:</span> <span class=\"hljs-string\">javalearn</span><br>  <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">http</span><br></code></pre></td></tr></table></figure>\n\n<p>定义上传的子目录：src<br>定义主页：index<br>访问协议：protocol</p>\n<p>如果不想每次登录，可以新建.env文件，输入你的腾讯云秘钥</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-string\">TENCENT_SECRET_ID=xxxxxxxxxx</span><br><span class=\"hljs-string\">TENCENT_SECRET_KEY=xxxxxxx</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>注：腾讯云对的秘钥有关账户和资产安全，不要轻易透露，Deploy的时候会自动忽略.env文件不上传，但是github不一样！切记请不要透露个人的ID和KEY</strong></p>\n<h2 id=\"部署函数\"><a href=\"#部署函数\" class=\"headerlink\" title=\"部署函数\"></a>部署函数</h2><p>在有Serverless.yml的目录下打开命令行</p>\n<p>键入<strong>serverless deploy</strong>或<strong>sls deploy</strong>（注，Powershell中不能使用sls）</p>\n<p>访问输出的地址，就部署完毕了</p>\n<h1 id=\"ServerlessのApplication\"><a href=\"#ServerlessのApplication\" class=\"headerlink\" title=\"ServerlessのApplication\"></a>ServerlessのApplication</h1><h2 id=\"OCR文字识别\"><a href=\"#OCR文字识别\" class=\"headerlink\" title=\"OCR文字识别\"></a>OCR文字识别</h2><h2 id=\"全栈Web部署\"><a href=\"#全栈Web部署\" class=\"headerlink\" title=\"全栈Web部署\"></a>全栈Web部署</h2><p>Ar-Sr-Na的个人网站主要语言为Html，其次是PHP，JavaScript</p>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><h2 id=\"文档更新\"><a href=\"#文档更新\" class=\"headerlink\" title=\"文档更新\"></a>文档更新</h2><p>2020-5-3 项目开始</p>\n<p>2020-5-4 Ar-Sr-Na加入计划</p>\n<p>2020-6-10 java.arsrna.cn建成</p>\n<p>2020-6-18 文章发布</p>\n<p>2021-1-1 ServerlessSSL生效</p>\n<p>2021-2-1 文章更新</p>\n<p>2021-2-2 内容优化，结构更新，新增章节：准备；开始第一个无服务器程序</p>\n","site":{"data":{}},"excerpt":"","more":"<p>节目编号：[08-1202&#x2F;08-1203]A 关于QQ群内“被踢出本群” XML卡片深入研究</p>\n<h1 id=\"Ar-Sr-Na-Java-Serverless-Learn项目-基础\"><a href=\"#Ar-Sr-Na-Java-Serverless-Learn项目-基础\" class=\"headerlink\" title=\"Ar-Sr-Na Java Serverless Learn项目-基础\"></a>Ar-Sr-Na Java Serverless Learn项目-基础</h1><p>节目编号：[08-1202&#x2F;08-1203]B：Ar-Sr-Na Java Serverless Learn项目-基础</p>\n<h2 id=\"教程介绍\"><a href=\"#教程介绍\" class=\"headerlink\" title=\"教程介绍\"></a>教程介绍</h2><p>本教程面向Serverless开发，不针对本地开发，意味着需要有较好Java基础，英语基础，熟悉逻辑关系，了解Serverless架构。</p>\n<h2 id=\"教程初衷\"><a href=\"#教程初衷\" class=\"headerlink\" title=\"教程初衷\"></a>教程初衷</h2><p>在这个云计算盛行也是趋势的时代，本地函数带来的成本问题不占少数，尤其是当应用上线时，大量请求压榨服务器导致宕机，采购高性能服务器成本太高，所以Serverless出现了，效率更高，成本更低，扩展性，计算资源等层面具有众多优势，所以，它不香么？</p>\n<p>创业路上并不是一帆风顺，我们也希望能帮助大家实现梦想，努力总比站在原地更接近成功！</p>\n<h1 id=\"Serverless介绍\"><a href=\"#Serverless介绍\" class=\"headerlink\" title=\"Serverless介绍\"></a>Serverless介绍</h1><p>Serverless Computing，一种全新的函数架构，意味着无服务器，节省资源，也降低了成本。Serverless被称为FaaS（Function-as-a-Service），以平台即服务（PaaS）为基础，意味着需要一个平台来支撑函数服务。</p>\n<p>本站建议使用腾讯云Serverless云函数服务<a href=\"https://console.cloud.tencent.com/scf/\">https://console.cloud.tencent.com/scf/</a></p>\n<h1 id=\"Java语言简介\"><a href=\"#Java语言简介\" class=\"headerlink\" title=\"Java语言简介\"></a>Java语言简介</h1><p>java是计算机编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程。</p>\n<p>Java功能强大，扩展性高，虽说在Java领域，专业的东西很多，未必一下子能理解完，</p>\n<h2 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h2><p>无论是张浩扬的QQ程序，up主的数据可视化，都以java为后端程序，当然<a href=\"https://github.com/ArSrNa/bilibiliData-TCV\">bilibili数据可视化</a>这个是PHP的</p>\n<h3 id=\"项目在不断完善中，希望大家多多支持：QQ群：1097347557\"><a href=\"#项目在不断完善中，希望大家多多支持：QQ群：1097347557\" class=\"headerlink\" title=\"项目在不断完善中，希望大家多多支持：QQ群：1097347557\"></a>项目在不断完善中，希望大家多多支持：QQ群：1097347557</h3><h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><h2 id=\"云端准备\"><a href=\"#云端准备\" class=\"headerlink\" title=\"云端准备\"></a>云端准备</h2><p>腾讯云账户</p>\n<p>腾讯云秘钥ID与Key（必须放行组件的权限）</p>\n<h2 id=\"本地机的准备\"><a href=\"#本地机的准备\" class=\"headerlink\" title=\"本地机的准备\"></a>本地机的准备</h2><p>NPM：<a href=\"https://www.npmjs.com/get-npm\">npm | get npm (npmjs.com) </a>（这里就不放出教程了）</p>\n<p>Serverless CLI：npm install -g serverless</p>\n<p>教程：<a href=\"https://www.serverless.com/cn/framework/docs/quickstart/installation\">下载安装 (serverless.com)</a></p>\n<h1 id=\"开始第一个无服务器程序\"><a href=\"#开始第一个无服务器程序\" class=\"headerlink\" title=\"开始第一个无服务器程序\"></a>开始第一个无服务器程序</h1><h2 id=\"云端配置函数\"><a href=\"#云端配置函数\" class=\"headerlink\" title=\"云端配置函数\"></a>云端配置函数</h2><p>打开腾讯云的<a href=\"https://console.cloud.tencent.com/scf/\">云函数控制台</a></p>\n<p><img src=\"https://res.arsrna.cn/gg4ureyez9.png\"><br>点击函数服务</p>\n<p><img src=\"https://res.arsrna.cn/93gzdy3koa.png\"><br>新建一个函数</p>\n<p><img src=\"https://res.arsrna.cn/wi8vcnc8es.png\"><br>输入名称，语言选择Java，点击下一步</p>\n<p><img src=\"https://res.arsrna.cn/f3xxq8ogro.png\"><br><img src=\"https://res.arsrna.cn/agmh0ztnjg.png\"><br>要注意此处的执行方法，它定义了调用云函数时需要从哪个文件中的哪个函数开始执行。</p>\n<p>如上图是example.Hello::mainHandler</p>\n<p>所以函数就得这么设置，从mainHandler开始执行：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">mainHandler</span><span class=\"hljs-params\">(KeyValueClass kv)</span><br>    &#123;<br>       <span class=\"hljs-keyword\">return</span> String.format(<span class=\"hljs-string\">&quot;Hello World&quot;</span>);<br>    &#125;<br></code></pre></td></tr></table></figure>\n\n<p>创建完成后，需要上传函数</p>\n<p><img src=\"https://res.arsrna.cn/yyy8ijr3a8.png\"><br>需要把源代码改为index.java，然后打包为zip上传，就完成了</p>\n<h2 id=\"本地配置函数\"><a href=\"#本地配置函数\" class=\"headerlink\" title=\"本地配置函数\"></a>本地配置函数</h2><p>如果想要本地调试再部署到云端更方便些，可以使用Serverless.yml和.env文件</p>\n<p>它类似这样：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">website</span><br><span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">website</span><br><span class=\"hljs-attr\">org:</span> <span class=\"hljs-string\">test</span> <span class=\"hljs-comment\"># (可选) 用于记录组织信息，默认值为您的腾讯云账户 APPID</span><br><span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">JavaLearn</span> <span class=\"hljs-comment\"># (可选) 该 website 应用名称</span><br><span class=\"hljs-attr\">stage:</span> <span class=\"hljs-string\">dev</span> <span class=\"hljs-comment\"># (可选) 用于区分环境信息，默认值是 dev</span><br></code></pre></td></tr></table></figure>\n\n<p>他声明了用到的组件，需要的云产品，以及环境，各种方便辨认的信息</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">名称</th>\n<th align=\"left\">必要性</th>\n<th align=\"left\">释义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">component</td>\n<td align=\"left\">√</td>\n<td align=\"left\">引用组件名称</td>\n</tr>\n<tr>\n<td align=\"left\">name</td>\n<td align=\"left\">√</td>\n<td align=\"left\">组件实例名称</td>\n</tr>\n<tr>\n<td align=\"left\">org</td>\n<td align=\"left\">可选</td>\n<td align=\"left\">组织信息（默认是你腾讯云APPID）</td>\n</tr>\n<tr>\n<td align=\"left\">app</td>\n<td align=\"left\">可选</td>\n<td align=\"left\">改xxx组件的应用名称</td>\n</tr>\n<tr>\n<td align=\"left\">stage</td>\n<td align=\"left\">可选</td>\n<td align=\"left\">开发环境，用于区分</td>\n</tr>\n</tbody></table>\n<p>例如我要创建一个网站组件，需要一个产品来存储我的网站资源，毕竟这是Serverless，不可能引用Server服务器组件，所以能存储网站并且部署网站的只有云开发和COS，云开发的能力过于广泛，集成了各种生态资源，所以建议使用COS对象存储的静态网站托管</p>\n<p>此时只需要在yml中加上：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">inputs:</span><br>  <span class=\"hljs-attr\">bucket:</span> <span class=\"hljs-string\">my-bucket</span><br>  <span class=\"hljs-attr\">region:</span> <span class=\"hljs-string\">ap-guangzhou</span><br><br></code></pre></td></tr></table></figure>\n\n<p>其中：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">名称</th>\n<th align=\"left\">释义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">bucket</td>\n<td align=\"left\">存储桶的名称</td>\n</tr>\n<tr>\n<td align=\"left\">region</td>\n<td align=\"left\">存储桶地域</td>\n</tr>\n</tbody></table>\n<p>最终输出地址就为bucket-appID.cos-website.region.myqcloud.com（部署后生效）</p>\n<p>在该目录下打开命令行，输入serverless deploy，登录后即可部署完成</p>\n<p>如果还需要部署其它的配置，例如https等，可以参照以下实例</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">inputs:</span><br>  <span class=\"hljs-attr\">src:</span><br>    <span class=\"hljs-attr\">src:</span> <span class=\"hljs-string\">./</span><br>    <span class=\"hljs-attr\">index:</span> <span class=\"hljs-string\">index.html</span><br>    <span class=\"hljs-comment\"># dist: ./dist</span><br>    <span class=\"hljs-comment\"># hook: npm run build</span><br>    <span class=\"hljs-comment\"># websitePath: ./</span><br>  <span class=\"hljs-attr\">region:</span> <span class=\"hljs-string\">ap-hongkong</span><br>  <span class=\"hljs-attr\">bucketName:</span> <span class=\"hljs-string\">javalearn</span><br>  <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">http</span><br></code></pre></td></tr></table></figure>\n\n<p>定义上传的子目录：src<br>定义主页：index<br>访问协议：protocol</p>\n<p>如果不想每次登录，可以新建.env文件，输入你的腾讯云秘钥</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-string\">TENCENT_SECRET_ID=xxxxxxxxxx</span><br><span class=\"hljs-string\">TENCENT_SECRET_KEY=xxxxxxx</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>注：腾讯云对的秘钥有关账户和资产安全，不要轻易透露，Deploy的时候会自动忽略.env文件不上传，但是github不一样！切记请不要透露个人的ID和KEY</strong></p>\n<h2 id=\"部署函数\"><a href=\"#部署函数\" class=\"headerlink\" title=\"部署函数\"></a>部署函数</h2><p>在有Serverless.yml的目录下打开命令行</p>\n<p>键入<strong>serverless deploy</strong>或<strong>sls deploy</strong>（注，Powershell中不能使用sls）</p>\n<p>访问输出的地址，就部署完毕了</p>\n<h1 id=\"ServerlessのApplication\"><a href=\"#ServerlessのApplication\" class=\"headerlink\" title=\"ServerlessのApplication\"></a>ServerlessのApplication</h1><h2 id=\"OCR文字识别\"><a href=\"#OCR文字识别\" class=\"headerlink\" title=\"OCR文字识别\"></a>OCR文字识别</h2><h2 id=\"全栈Web部署\"><a href=\"#全栈Web部署\" class=\"headerlink\" title=\"全栈Web部署\"></a>全栈Web部署</h2><p>Ar-Sr-Na的个人网站主要语言为Html，其次是PHP，JavaScript</p>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><h2 id=\"文档更新\"><a href=\"#文档更新\" class=\"headerlink\" title=\"文档更新\"></a>文档更新</h2><p>2020-5-3 项目开始</p>\n<p>2020-5-4 Ar-Sr-Na加入计划</p>\n<p>2020-6-10 java.arsrna.cn建成</p>\n<p>2020-6-18 文章发布</p>\n<p>2021-1-1 ServerlessSSL生效</p>\n<p>2021-2-1 文章更新</p>\n<p>2021-2-2 内容优化，结构更新，新增章节：准备；开始第一个无服务器程序</p>\n"},{"title":"MMD转Blender、C4D教程- Blender插件篇","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"www.arsrna.cn","authorAbout":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；绿城漫展，使命必达，个人网站www.arsrna.cn","authorDesc":"微博Ar-Sr-Na；只做正经视频；粉丝群571912431；绿城漫展，使命必达，个人网站www.arsrna.cn","comments":1,"date":"2021-01-29T11:41:00.000Z","keywords":null,"description":null,"index_img":"https://res.arsrna.cn/arsrna.cn/images/Web_MutiChanelCCPR1_5243.jpg","_content":"Ar-Sr-Na教程 3D/MMD项目文章系列：\n\n**Vol1 [08-1203/08-0103/08-0300]A-Cats插件篇、MMD Bridge篇**\n\nVol2 [08-1203/08-0103/08-0300]C-C4D插件、MMD Bridge篇\n\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/w5jh2rgmqv.png)\n\n# **测试环境**\n\nBlender：2.81A，2.82\n\n炫云客户端：6.0.20.11.21608\n\nCats：0.18.0\n\nMikuMikuDance：Bridge\n\nMikuMikuMoving：2014\n\n# 渲染环境\n\n炫云10集群机器\n\nAr-Sr-Na&腾讯云 内存型M5服务器（Cascade Lake 8255C -32C 256G）\n\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/o64f4vi62m.png)\n\n---\n\n# 准备\n\n必须：Blender，Cats插件\n\nCats插件下载地址：https://github.com/michaeldegroot/cats-blender-plugin/archive/master.zip\n\nBlender下载地址：https://www.blender.org/download/\n\n不必：MikuMikuMoving，MikuMikuDance\n\n更多下载链接见文末\n\n---\n\n# 方案一：纯Blender操作\n\n适合在Blender建模型，做动画的用户\n\n优点：占用资源少，耗时短、文件产生量少，方便修改材质、无需太多软件\n\n缺点：Blender祖传撤销卡顿，但是在2.83已经改进（而我还是2.82啊啊啊啊，渲染农场还是不够顶）、部分模型的骨骼和动作无法完全配对、物理设置会很复杂，还可能出现模型与物理无法配对的情况\n\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/jsxe7i58qh.png)\n\n下载好插件，在Blender打开，如图操作\n\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/69bl30bwa5.png)\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/gi7gymgdts.png)\n\n然后导入\n\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/eput10sdw2.png)\n\n# 导入模型\n\n如果部分材质变红\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/brs0322jgf.png)\n在侧边展开，杂项栏里的MMD Display中Toon和Sphere的选项关闭\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/6r72z25d7w.png)\n然后检查下材质有没有其他问题\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/i4gcgtiive.png)\n（blender的奇妙结构）\n\n# 人物动作\n\n选上模型，然后文件-导入-Miku Miku Dance Motion，选择动作的VMD\n\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/4f389s7oqj.png)\n播放检查骨骼有没有对上，如果出现常见问题，**在文章后面有解决办法**\n\n**物理和其它在文章后面介绍**\n\n# 摄像机\n\n在3D视图的窗口点击添加-相机\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/i4gcgtiive.png)\n然后单击这个相机\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/uglns5rjmn.png)\n文件-导入-Miku Miku Dance Motion，选择相机动作的VMD文件\n\n**关于摄像机效果和常见问题见文章后面**\n\n---\n\n# 方案二：MMD Bridge\n\n优点：万能的方案，C4D也能使用，集成动画，物理等方方面面\n\n缺点：占资源，烧配置，修改困难，复杂，耗时间\n\n如果出现骨骼对不上或者动画鬼畜等在Blender插件中无法解决的问题\n\n就必须使用其它方案了\n\n需要资源：MikuMikuDance Bridge版，Blender\n\n**MMD Bridge解压到必须是纯英文的路径！！！**\n\n（所有资源可在文末的链接下载）\n\n打开MMD（我也不知道跑哪了）\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/dv64auawte.png)\n把模型动作摄像机导入，不要导入场景（如果没反应就用普通版本的MMD做好保存）\n\n然后在MMD Bridge这里设置好参数\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/ko9q9gb048.png)\n举个例子：\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/5tcoe6k0pc.png)\n然后在分辨率设置把分辨率改低，因为要导出，太大了占空间，这里的分辨率不影响后面的任何操作，只影响性能\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/t2yx4a7p81.png)\n\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/1tej227hjc.png)\n最后到处视频，选个路径\n\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/uudc5ik1dc.png)\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/gu3whz008u.png)\n跟刚才的参数一样\n\n点OK后会卡几秒，然后弹几个窗确定就行\n\n完毕之后在MMD Bridge的目录下会生成out文件夹\n\n里面有.abc和材质文件\n\n我们只要.abc\n\n把整个out文件夹移动到一个地方（任意）\n\n打开Blender把.abc导入\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/td86h4j5g5.png)\n\n同样的检查材质，如果出现问题就用out目录的xxxx Texturexxx文件夹里面的脚本\n\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/prp5lngj0z.png)\n\n然后就完成了\n\n\n---\n\n\n# 常见问题及效果\n\n# 镜头景深\n\n选择摄像机\n\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/b5natu6hzz.png)\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/q2fuhit8uc.png)\n\n其他不用设置，不多介绍\n\n# **2.材质发光**\n\n选上对应材质\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/9bwzfnoccr.png)\n某个窗口切换为材着色器编辑器\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/ff23ct2ose.png)\n添加-着色器-自发光\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/1q0qwm9mf5.png)\n设置好参数，把输出的体积连到自发光上\n\n\n![emmmmmm...爆了](https://res.arsrna.cn/blogs/MMDtoBlender/pic/ic7hk8rl22.png)了\n\nemmmmm...爆了...正常操作\n\n自行探索嗷\n\n\n---\n\n\n# 常见问题\n\n**物理效果**\n\n**方案1：Blender自带**\n\n选上模型，然后\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/m78yyel79a.png)\n当然，部分毛发不会计算进去，很硬\n\nhttps://docs.blender.org/manual/zh-hans/2.91/physics/baking.html\n\n---\n\n**方案2：MMM**\n\n模型，动作导入，\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/q9crq5eo9q.png)\n导出动作\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/a9pwtrnt0p.png)\n\n把ALL前面的所有√勾上\n\n选择个路径导出\n\n再到Blender导入\n\n---\n\n**终极方案：换方案**\n\n**直接用.abc吧，没救了**\n\n---\n\n# 相关下载\n\nBlenderWindows：[https://res.arsrna.cn/blogs/MMDtoBlender/file/Blender%202.82-Windows.zip](https://res.arsrna.cn/blogs/MMDtoBlender/file/Blender%202.82-Windows.zip)\n\nMMDBridge：[https://res.arsrna.cn/blogs/MMDtoBlender/file/MikuMikuDanceBridge.zip](https://res.arsrna.cn/blogs/MMDtoBlender/file/MikuMikuDanceBridge.zip)\n\nMMM：[https://res.arsrna.cn/blogs/MMDtoBlender/file/MikuMikuMoving.zip](https://res.arsrna.cn/blogs/MMDtoBlender/file/MikuMikuMoving.zip)\n\nCats插件：[https://res.arsrna.cn/blogs/MMDtoBlender/file/cats-blender-plugin-master.zip](https://res.arsrna.cn/blogs/MMDtoBlender/file/cats-blender-plugin-master.zip)\n\n---\n\n# **到此，教程结束**\n\n本教程在bilibili，企鹅号，腾讯云+社区，www.arsrna.ltd个人博客发布，未经允许禁止转载！\n","source":"_posts/[08-120308-010308-0300]A.md","raw":"---\ntitle: MMD转Blender、C4D教程- Blender插件篇\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: www.arsrna.cn\nauthorAbout: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；绿城漫展，使命必达，个人网站www.arsrna.cn\nauthorDesc: 微博Ar-Sr-Na；只做正经视频；粉丝群571912431；绿城漫展，使命必达，个人网站www.arsrna.cn\ncategories: 技术\ncomments: true\ndate: 2021-1-29 19:41\ntags: MMD,3D,教程,物理,C4D,Blender\nkeywords:\ndescription:\nindex_img: 'https://res.arsrna.cn/arsrna.cn/images/Web_MutiChanelCCPR1_5243.jpg'\n---\nAr-Sr-Na教程 3D/MMD项目文章系列：\n\n**Vol1 [08-1203/08-0103/08-0300]A-Cats插件篇、MMD Bridge篇**\n\nVol2 [08-1203/08-0103/08-0300]C-C4D插件、MMD Bridge篇\n\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/w5jh2rgmqv.png)\n\n# **测试环境**\n\nBlender：2.81A，2.82\n\n炫云客户端：6.0.20.11.21608\n\nCats：0.18.0\n\nMikuMikuDance：Bridge\n\nMikuMikuMoving：2014\n\n# 渲染环境\n\n炫云10集群机器\n\nAr-Sr-Na&腾讯云 内存型M5服务器（Cascade Lake 8255C -32C 256G）\n\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/o64f4vi62m.png)\n\n---\n\n# 准备\n\n必须：Blender，Cats插件\n\nCats插件下载地址：https://github.com/michaeldegroot/cats-blender-plugin/archive/master.zip\n\nBlender下载地址：https://www.blender.org/download/\n\n不必：MikuMikuMoving，MikuMikuDance\n\n更多下载链接见文末\n\n---\n\n# 方案一：纯Blender操作\n\n适合在Blender建模型，做动画的用户\n\n优点：占用资源少，耗时短、文件产生量少，方便修改材质、无需太多软件\n\n缺点：Blender祖传撤销卡顿，但是在2.83已经改进（而我还是2.82啊啊啊啊，渲染农场还是不够顶）、部分模型的骨骼和动作无法完全配对、物理设置会很复杂，还可能出现模型与物理无法配对的情况\n\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/jsxe7i58qh.png)\n\n下载好插件，在Blender打开，如图操作\n\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/69bl30bwa5.png)\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/gi7gymgdts.png)\n\n然后导入\n\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/eput10sdw2.png)\n\n# 导入模型\n\n如果部分材质变红\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/brs0322jgf.png)\n在侧边展开，杂项栏里的MMD Display中Toon和Sphere的选项关闭\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/6r72z25d7w.png)\n然后检查下材质有没有其他问题\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/i4gcgtiive.png)\n（blender的奇妙结构）\n\n# 人物动作\n\n选上模型，然后文件-导入-Miku Miku Dance Motion，选择动作的VMD\n\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/4f389s7oqj.png)\n播放检查骨骼有没有对上，如果出现常见问题，**在文章后面有解决办法**\n\n**物理和其它在文章后面介绍**\n\n# 摄像机\n\n在3D视图的窗口点击添加-相机\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/i4gcgtiive.png)\n然后单击这个相机\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/uglns5rjmn.png)\n文件-导入-Miku Miku Dance Motion，选择相机动作的VMD文件\n\n**关于摄像机效果和常见问题见文章后面**\n\n---\n\n# 方案二：MMD Bridge\n\n优点：万能的方案，C4D也能使用，集成动画，物理等方方面面\n\n缺点：占资源，烧配置，修改困难，复杂，耗时间\n\n如果出现骨骼对不上或者动画鬼畜等在Blender插件中无法解决的问题\n\n就必须使用其它方案了\n\n需要资源：MikuMikuDance Bridge版，Blender\n\n**MMD Bridge解压到必须是纯英文的路径！！！**\n\n（所有资源可在文末的链接下载）\n\n打开MMD（我也不知道跑哪了）\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/dv64auawte.png)\n把模型动作摄像机导入，不要导入场景（如果没反应就用普通版本的MMD做好保存）\n\n然后在MMD Bridge这里设置好参数\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/ko9q9gb048.png)\n举个例子：\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/5tcoe6k0pc.png)\n然后在分辨率设置把分辨率改低，因为要导出，太大了占空间，这里的分辨率不影响后面的任何操作，只影响性能\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/t2yx4a7p81.png)\n\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/1tej227hjc.png)\n最后到处视频，选个路径\n\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/uudc5ik1dc.png)\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/gu3whz008u.png)\n跟刚才的参数一样\n\n点OK后会卡几秒，然后弹几个窗确定就行\n\n完毕之后在MMD Bridge的目录下会生成out文件夹\n\n里面有.abc和材质文件\n\n我们只要.abc\n\n把整个out文件夹移动到一个地方（任意）\n\n打开Blender把.abc导入\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/td86h4j5g5.png)\n\n同样的检查材质，如果出现问题就用out目录的xxxx Texturexxx文件夹里面的脚本\n\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/prp5lngj0z.png)\n\n然后就完成了\n\n\n---\n\n\n# 常见问题及效果\n\n# 镜头景深\n\n选择摄像机\n\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/b5natu6hzz.png)\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/q2fuhit8uc.png)\n\n其他不用设置，不多介绍\n\n# **2.材质发光**\n\n选上对应材质\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/9bwzfnoccr.png)\n某个窗口切换为材着色器编辑器\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/ff23ct2ose.png)\n添加-着色器-自发光\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/1q0qwm9mf5.png)\n设置好参数，把输出的体积连到自发光上\n\n\n![emmmmmm...爆了](https://res.arsrna.cn/blogs/MMDtoBlender/pic/ic7hk8rl22.png)了\n\nemmmmm...爆了...正常操作\n\n自行探索嗷\n\n\n---\n\n\n# 常见问题\n\n**物理效果**\n\n**方案1：Blender自带**\n\n选上模型，然后\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/m78yyel79a.png)\n当然，部分毛发不会计算进去，很硬\n\nhttps://docs.blender.org/manual/zh-hans/2.91/physics/baking.html\n\n---\n\n**方案2：MMM**\n\n模型，动作导入，\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/q9crq5eo9q.png)\n导出动作\n\n![](https://res.arsrna.cn/blogs/MMDtoBlender/pic/a9pwtrnt0p.png)\n\n把ALL前面的所有√勾上\n\n选择个路径导出\n\n再到Blender导入\n\n---\n\n**终极方案：换方案**\n\n**直接用.abc吧，没救了**\n\n---\n\n# 相关下载\n\nBlenderWindows：[https://res.arsrna.cn/blogs/MMDtoBlender/file/Blender%202.82-Windows.zip](https://res.arsrna.cn/blogs/MMDtoBlender/file/Blender%202.82-Windows.zip)\n\nMMDBridge：[https://res.arsrna.cn/blogs/MMDtoBlender/file/MikuMikuDanceBridge.zip](https://res.arsrna.cn/blogs/MMDtoBlender/file/MikuMikuDanceBridge.zip)\n\nMMM：[https://res.arsrna.cn/blogs/MMDtoBlender/file/MikuMikuMoving.zip](https://res.arsrna.cn/blogs/MMDtoBlender/file/MikuMikuMoving.zip)\n\nCats插件：[https://res.arsrna.cn/blogs/MMDtoBlender/file/cats-blender-plugin-master.zip](https://res.arsrna.cn/blogs/MMDtoBlender/file/cats-blender-plugin-master.zip)\n\n---\n\n# **到此，教程结束**\n\n本教程在bilibili，企鹅号，腾讯云+社区，www.arsrna.ltd个人博客发布，未经允许禁止转载！\n","slug":"[08-120308-010308-0300]A","published":1,"updated":"2023-01-17T08:55:38.573Z","layout":"post","photos":[],"link":"","_id":"clod0d6xx003oc0nd21j1cfe8","content":"<p>Ar-Sr-Na教程 3D&#x2F;MMD项目文章系列：</p>\n<p><strong>Vol1 [08-1203&#x2F;08-0103&#x2F;08-0300]A-Cats插件篇、MMD Bridge篇</strong></p>\n<p>Vol2 [08-1203&#x2F;08-0103&#x2F;08-0300]C-C4D插件、MMD Bridge篇</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/w5jh2rgmqv.png\"></p>\n<h1 id=\"测试环境\"><a href=\"#测试环境\" class=\"headerlink\" title=\"测试环境\"></a><strong>测试环境</strong></h1><p>Blender：2.81A，2.82</p>\n<p>炫云客户端：6.0.20.11.21608</p>\n<p>Cats：0.18.0</p>\n<p>MikuMikuDance：Bridge</p>\n<p>MikuMikuMoving：2014</p>\n<h1 id=\"渲染环境\"><a href=\"#渲染环境\" class=\"headerlink\" title=\"渲染环境\"></a>渲染环境</h1><p>炫云10集群机器</p>\n<p>Ar-Sr-Na&amp;腾讯云 内存型M5服务器（Cascade Lake 8255C -32C 256G）</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/o64f4vi62m.png\"></p>\n<hr>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>必须：Blender，Cats插件</p>\n<p>Cats插件下载地址：<a href=\"https://github.com/michaeldegroot/cats-blender-plugin/archive/master.zip\">https://github.com/michaeldegroot/cats-blender-plugin/archive/master.zip</a></p>\n<p>Blender下载地址：<a href=\"https://www.blender.org/download/\">https://www.blender.org/download/</a></p>\n<p>不必：MikuMikuMoving，MikuMikuDance</p>\n<p>更多下载链接见文末</p>\n<hr>\n<h1 id=\"方案一：纯Blender操作\"><a href=\"#方案一：纯Blender操作\" class=\"headerlink\" title=\"方案一：纯Blender操作\"></a>方案一：纯Blender操作</h1><p>适合在Blender建模型，做动画的用户</p>\n<p>优点：占用资源少，耗时短、文件产生量少，方便修改材质、无需太多软件</p>\n<p>缺点：Blender祖传撤销卡顿，但是在2.83已经改进（而我还是2.82啊啊啊啊，渲染农场还是不够顶）、部分模型的骨骼和动作无法完全配对、物理设置会很复杂，还可能出现模型与物理无法配对的情况</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/jsxe7i58qh.png\"></p>\n<p>下载好插件，在Blender打开，如图操作</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/69bl30bwa5.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/gi7gymgdts.png\"></p>\n<p>然后导入</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/eput10sdw2.png\"></p>\n<h1 id=\"导入模型\"><a href=\"#导入模型\" class=\"headerlink\" title=\"导入模型\"></a>导入模型</h1><p>如果部分材质变红</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/brs0322jgf.png\"><br>在侧边展开，杂项栏里的MMD Display中Toon和Sphere的选项关闭</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/6r72z25d7w.png\"><br>然后检查下材质有没有其他问题</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/i4gcgtiive.png\"><br>（blender的奇妙结构）</p>\n<h1 id=\"人物动作\"><a href=\"#人物动作\" class=\"headerlink\" title=\"人物动作\"></a>人物动作</h1><p>选上模型，然后文件-导入-Miku Miku Dance Motion，选择动作的VMD</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/4f389s7oqj.png\"><br>播放检查骨骼有没有对上，如果出现常见问题，<strong>在文章后面有解决办法</strong></p>\n<p><strong>物理和其它在文章后面介绍</strong></p>\n<h1 id=\"摄像机\"><a href=\"#摄像机\" class=\"headerlink\" title=\"摄像机\"></a>摄像机</h1><p>在3D视图的窗口点击添加-相机</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/i4gcgtiive.png\"><br>然后单击这个相机</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/uglns5rjmn.png\"><br>文件-导入-Miku Miku Dance Motion，选择相机动作的VMD文件</p>\n<p><strong>关于摄像机效果和常见问题见文章后面</strong></p>\n<hr>\n<h1 id=\"方案二：MMD-Bridge\"><a href=\"#方案二：MMD-Bridge\" class=\"headerlink\" title=\"方案二：MMD Bridge\"></a>方案二：MMD Bridge</h1><p>优点：万能的方案，C4D也能使用，集成动画，物理等方方面面</p>\n<p>缺点：占资源，烧配置，修改困难，复杂，耗时间</p>\n<p>如果出现骨骼对不上或者动画鬼畜等在Blender插件中无法解决的问题</p>\n<p>就必须使用其它方案了</p>\n<p>需要资源：MikuMikuDance Bridge版，Blender</p>\n<p><strong>MMD Bridge解压到必须是纯英文的路径！！！</strong></p>\n<p>（所有资源可在文末的链接下载）</p>\n<p>打开MMD（我也不知道跑哪了）</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/dv64auawte.png\"><br>把模型动作摄像机导入，不要导入场景（如果没反应就用普通版本的MMD做好保存）</p>\n<p>然后在MMD Bridge这里设置好参数</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/ko9q9gb048.png\"><br>举个例子：</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/5tcoe6k0pc.png\"><br>然后在分辨率设置把分辨率改低，因为要导出，太大了占空间，这里的分辨率不影响后面的任何操作，只影响性能</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/t2yx4a7p81.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/1tej227hjc.png\"><br>最后到处视频，选个路径</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/uudc5ik1dc.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/gu3whz008u.png\"><br>跟刚才的参数一样</p>\n<p>点OK后会卡几秒，然后弹几个窗确定就行</p>\n<p>完毕之后在MMD Bridge的目录下会生成out文件夹</p>\n<p>里面有.abc和材质文件</p>\n<p>我们只要.abc</p>\n<p>把整个out文件夹移动到一个地方（任意）</p>\n<p>打开Blender把.abc导入</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/td86h4j5g5.png\"></p>\n<p>同样的检查材质，如果出现问题就用out目录的xxxx Texturexxx文件夹里面的脚本</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/prp5lngj0z.png\"></p>\n<p>然后就完成了</p>\n<hr>\n<h1 id=\"常见问题及效果\"><a href=\"#常见问题及效果\" class=\"headerlink\" title=\"常见问题及效果\"></a>常见问题及效果</h1><h1 id=\"镜头景深\"><a href=\"#镜头景深\" class=\"headerlink\" title=\"镜头景深\"></a>镜头景深</h1><p>选择摄像机</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/b5natu6hzz.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/q2fuhit8uc.png\"></p>\n<p>其他不用设置，不多介绍</p>\n<h1 id=\"2-材质发光\"><a href=\"#2-材质发光\" class=\"headerlink\" title=\"2.材质发光\"></a><strong>2.材质发光</strong></h1><p>选上对应材质</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/9bwzfnoccr.png\"><br>某个窗口切换为材着色器编辑器</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/ff23ct2ose.png\"><br>添加-着色器-自发光</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/1q0qwm9mf5.png\"><br>设置好参数，把输出的体积连到自发光上</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/ic7hk8rl22.png\" alt=\"emmmmmm...爆了\">了</p>\n<p>emmmmm…爆了…正常操作</p>\n<p>自行探索嗷</p>\n<hr>\n<h1 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h1><p><strong>物理效果</strong></p>\n<p><strong>方案1：Blender自带</strong></p>\n<p>选上模型，然后</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/m78yyel79a.png\"><br>当然，部分毛发不会计算进去，很硬</p>\n<p><a href=\"https://docs.blender.org/manual/zh-hans/2.91/physics/baking.html\">https://docs.blender.org/manual/zh-hans/2.91/physics/baking.html</a></p>\n<hr>\n<p><strong>方案2：MMM</strong></p>\n<p>模型，动作导入，</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/q9crq5eo9q.png\"><br>导出动作</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/a9pwtrnt0p.png\"></p>\n<p>把ALL前面的所有√勾上</p>\n<p>选择个路径导出</p>\n<p>再到Blender导入</p>\n<hr>\n<p><strong>终极方案：换方案</strong></p>\n<p><strong>直接用.abc吧，没救了</strong></p>\n<hr>\n<h1 id=\"相关下载\"><a href=\"#相关下载\" class=\"headerlink\" title=\"相关下载\"></a>相关下载</h1><p>BlenderWindows：<a href=\"https://res.arsrna.cn/blogs/MMDtoBlender/file/Blender%202.82-Windows.zip\">https://res.arsrna.cn/blogs/MMDtoBlender/file/Blender%202.82-Windows.zip</a></p>\n<p>MMDBridge：<a href=\"https://res.arsrna.cn/blogs/MMDtoBlender/file/MikuMikuDanceBridge.zip\">https://res.arsrna.cn/blogs/MMDtoBlender/file/MikuMikuDanceBridge.zip</a></p>\n<p>MMM：<a href=\"https://res.arsrna.cn/blogs/MMDtoBlender/file/MikuMikuMoving.zip\">https://res.arsrna.cn/blogs/MMDtoBlender/file/MikuMikuMoving.zip</a></p>\n<p>Cats插件：<a href=\"https://res.arsrna.cn/blogs/MMDtoBlender/file/cats-blender-plugin-master.zip\">https://res.arsrna.cn/blogs/MMDtoBlender/file/cats-blender-plugin-master.zip</a></p>\n<hr>\n<h1 id=\"到此，教程结束\"><a href=\"#到此，教程结束\" class=\"headerlink\" title=\"到此，教程结束\"></a><strong>到此，教程结束</strong></h1><p>本教程在bilibili，企鹅号，腾讯云+社区，<a href=\"http://www.arsrna.ltd个人博客发布,未经允许禁止转载!/\">www.arsrna.ltd个人博客发布，未经允许禁止转载！</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Ar-Sr-Na教程 3D&#x2F;MMD项目文章系列：</p>\n<p><strong>Vol1 [08-1203&#x2F;08-0103&#x2F;08-0300]A-Cats插件篇、MMD Bridge篇</strong></p>\n<p>Vol2 [08-1203&#x2F;08-0103&#x2F;08-0300]C-C4D插件、MMD Bridge篇</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/w5jh2rgmqv.png\"></p>\n<h1 id=\"测试环境\"><a href=\"#测试环境\" class=\"headerlink\" title=\"测试环境\"></a><strong>测试环境</strong></h1><p>Blender：2.81A，2.82</p>\n<p>炫云客户端：6.0.20.11.21608</p>\n<p>Cats：0.18.0</p>\n<p>MikuMikuDance：Bridge</p>\n<p>MikuMikuMoving：2014</p>\n<h1 id=\"渲染环境\"><a href=\"#渲染环境\" class=\"headerlink\" title=\"渲染环境\"></a>渲染环境</h1><p>炫云10集群机器</p>\n<p>Ar-Sr-Na&amp;腾讯云 内存型M5服务器（Cascade Lake 8255C -32C 256G）</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/o64f4vi62m.png\"></p>\n<hr>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>必须：Blender，Cats插件</p>\n<p>Cats插件下载地址：<a href=\"https://github.com/michaeldegroot/cats-blender-plugin/archive/master.zip\">https://github.com/michaeldegroot/cats-blender-plugin/archive/master.zip</a></p>\n<p>Blender下载地址：<a href=\"https://www.blender.org/download/\">https://www.blender.org/download/</a></p>\n<p>不必：MikuMikuMoving，MikuMikuDance</p>\n<p>更多下载链接见文末</p>\n<hr>\n<h1 id=\"方案一：纯Blender操作\"><a href=\"#方案一：纯Blender操作\" class=\"headerlink\" title=\"方案一：纯Blender操作\"></a>方案一：纯Blender操作</h1><p>适合在Blender建模型，做动画的用户</p>\n<p>优点：占用资源少，耗时短、文件产生量少，方便修改材质、无需太多软件</p>\n<p>缺点：Blender祖传撤销卡顿，但是在2.83已经改进（而我还是2.82啊啊啊啊，渲染农场还是不够顶）、部分模型的骨骼和动作无法完全配对、物理设置会很复杂，还可能出现模型与物理无法配对的情况</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/jsxe7i58qh.png\"></p>\n<p>下载好插件，在Blender打开，如图操作</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/69bl30bwa5.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/gi7gymgdts.png\"></p>\n<p>然后导入</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/eput10sdw2.png\"></p>\n<h1 id=\"导入模型\"><a href=\"#导入模型\" class=\"headerlink\" title=\"导入模型\"></a>导入模型</h1><p>如果部分材质变红</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/brs0322jgf.png\"><br>在侧边展开，杂项栏里的MMD Display中Toon和Sphere的选项关闭</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/6r72z25d7w.png\"><br>然后检查下材质有没有其他问题</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/i4gcgtiive.png\"><br>（blender的奇妙结构）</p>\n<h1 id=\"人物动作\"><a href=\"#人物动作\" class=\"headerlink\" title=\"人物动作\"></a>人物动作</h1><p>选上模型，然后文件-导入-Miku Miku Dance Motion，选择动作的VMD</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/4f389s7oqj.png\"><br>播放检查骨骼有没有对上，如果出现常见问题，<strong>在文章后面有解决办法</strong></p>\n<p><strong>物理和其它在文章后面介绍</strong></p>\n<h1 id=\"摄像机\"><a href=\"#摄像机\" class=\"headerlink\" title=\"摄像机\"></a>摄像机</h1><p>在3D视图的窗口点击添加-相机</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/i4gcgtiive.png\"><br>然后单击这个相机</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/uglns5rjmn.png\"><br>文件-导入-Miku Miku Dance Motion，选择相机动作的VMD文件</p>\n<p><strong>关于摄像机效果和常见问题见文章后面</strong></p>\n<hr>\n<h1 id=\"方案二：MMD-Bridge\"><a href=\"#方案二：MMD-Bridge\" class=\"headerlink\" title=\"方案二：MMD Bridge\"></a>方案二：MMD Bridge</h1><p>优点：万能的方案，C4D也能使用，集成动画，物理等方方面面</p>\n<p>缺点：占资源，烧配置，修改困难，复杂，耗时间</p>\n<p>如果出现骨骼对不上或者动画鬼畜等在Blender插件中无法解决的问题</p>\n<p>就必须使用其它方案了</p>\n<p>需要资源：MikuMikuDance Bridge版，Blender</p>\n<p><strong>MMD Bridge解压到必须是纯英文的路径！！！</strong></p>\n<p>（所有资源可在文末的链接下载）</p>\n<p>打开MMD（我也不知道跑哪了）</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/dv64auawte.png\"><br>把模型动作摄像机导入，不要导入场景（如果没反应就用普通版本的MMD做好保存）</p>\n<p>然后在MMD Bridge这里设置好参数</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/ko9q9gb048.png\"><br>举个例子：</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/5tcoe6k0pc.png\"><br>然后在分辨率设置把分辨率改低，因为要导出，太大了占空间，这里的分辨率不影响后面的任何操作，只影响性能</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/t2yx4a7p81.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/1tej227hjc.png\"><br>最后到处视频，选个路径</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/uudc5ik1dc.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/gu3whz008u.png\"><br>跟刚才的参数一样</p>\n<p>点OK后会卡几秒，然后弹几个窗确定就行</p>\n<p>完毕之后在MMD Bridge的目录下会生成out文件夹</p>\n<p>里面有.abc和材质文件</p>\n<p>我们只要.abc</p>\n<p>把整个out文件夹移动到一个地方（任意）</p>\n<p>打开Blender把.abc导入</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/td86h4j5g5.png\"></p>\n<p>同样的检查材质，如果出现问题就用out目录的xxxx Texturexxx文件夹里面的脚本</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/prp5lngj0z.png\"></p>\n<p>然后就完成了</p>\n<hr>\n<h1 id=\"常见问题及效果\"><a href=\"#常见问题及效果\" class=\"headerlink\" title=\"常见问题及效果\"></a>常见问题及效果</h1><h1 id=\"镜头景深\"><a href=\"#镜头景深\" class=\"headerlink\" title=\"镜头景深\"></a>镜头景深</h1><p>选择摄像机</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/b5natu6hzz.png\"></p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/q2fuhit8uc.png\"></p>\n<p>其他不用设置，不多介绍</p>\n<h1 id=\"2-材质发光\"><a href=\"#2-材质发光\" class=\"headerlink\" title=\"2.材质发光\"></a><strong>2.材质发光</strong></h1><p>选上对应材质</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/9bwzfnoccr.png\"><br>某个窗口切换为材着色器编辑器</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/ff23ct2ose.png\"><br>添加-着色器-自发光</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/1q0qwm9mf5.png\"><br>设置好参数，把输出的体积连到自发光上</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/ic7hk8rl22.png\" alt=\"emmmmmm...爆了\">了</p>\n<p>emmmmm…爆了…正常操作</p>\n<p>自行探索嗷</p>\n<hr>\n<h1 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h1><p><strong>物理效果</strong></p>\n<p><strong>方案1：Blender自带</strong></p>\n<p>选上模型，然后</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/m78yyel79a.png\"><br>当然，部分毛发不会计算进去，很硬</p>\n<p><a href=\"https://docs.blender.org/manual/zh-hans/2.91/physics/baking.html\">https://docs.blender.org/manual/zh-hans/2.91/physics/baking.html</a></p>\n<hr>\n<p><strong>方案2：MMM</strong></p>\n<p>模型，动作导入，</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/q9crq5eo9q.png\"><br>导出动作</p>\n<p><img src=\"https://res.arsrna.cn/blogs/MMDtoBlender/pic/a9pwtrnt0p.png\"></p>\n<p>把ALL前面的所有√勾上</p>\n<p>选择个路径导出</p>\n<p>再到Blender导入</p>\n<hr>\n<p><strong>终极方案：换方案</strong></p>\n<p><strong>直接用.abc吧，没救了</strong></p>\n<hr>\n<h1 id=\"相关下载\"><a href=\"#相关下载\" class=\"headerlink\" title=\"相关下载\"></a>相关下载</h1><p>BlenderWindows：<a href=\"https://res.arsrna.cn/blogs/MMDtoBlender/file/Blender%202.82-Windows.zip\">https://res.arsrna.cn/blogs/MMDtoBlender/file/Blender%202.82-Windows.zip</a></p>\n<p>MMDBridge：<a href=\"https://res.arsrna.cn/blogs/MMDtoBlender/file/MikuMikuDanceBridge.zip\">https://res.arsrna.cn/blogs/MMDtoBlender/file/MikuMikuDanceBridge.zip</a></p>\n<p>MMM：<a href=\"https://res.arsrna.cn/blogs/MMDtoBlender/file/MikuMikuMoving.zip\">https://res.arsrna.cn/blogs/MMDtoBlender/file/MikuMikuMoving.zip</a></p>\n<p>Cats插件：<a href=\"https://res.arsrna.cn/blogs/MMDtoBlender/file/cats-blender-plugin-master.zip\">https://res.arsrna.cn/blogs/MMDtoBlender/file/cats-blender-plugin-master.zip</a></p>\n<hr>\n<h1 id=\"到此，教程结束\"><a href=\"#到此，教程结束\" class=\"headerlink\" title=\"到此，教程结束\"></a><strong>到此，教程结束</strong></h1><p>本教程在bilibili，企鹅号，腾讯云+社区，<a href=\"http://www.arsrna.ltd个人博客发布,未经允许禁止转载!/\">www.arsrna.ltd个人博客发布，未经允许禁止转载！</a></p>\n"},{"title":"前端中的Live2D与技术","id":"672","date":"2020-07-14T14:25:13.000Z","_content":"\n![](https://ask8088-private-1251520898.cn-south.myqcloud.com/developer-images/article/3335308/ydd2m5u7w9.png?q-sign-algorithm=sha1&q-ak=AKID2uZ1FGBdx1pNgjE3KK4YliPpzyjLZvug&q-sign-time=1594734118;1594741318&q-key-time=1594734118;1594741318&q-header-list=&q-url-param-list=&q-signature=b08902271e6c387c3d572e3838cec9574fd4aca8)\n\n​\n\n​\n\nLive2D，即为2D绘图渲染技术，游戏中例如崩坏3，碧蓝航线中与老婆交互就利用了live2d，通过前端的渲染，拼接，移动即可做出类似3d的效果，但是始终还是有缺陷，例如无法实现3d的转身，跳跃。\n\nL2D的制作成本远低于3D，3D需要的建模，渲染，L2D可以方便完成，只需要对人物切片，然后前端重组，移动动画即可达到效果\n\nWeb中的L2D结构\n==========\n\n案例：[www.arsrna.com](https://www.arsrna.com)\n\n这是Live2D的材质结构\n\n![](https://ask8088-private-1251520898.cn-south.myqcloud.com/developer-images/article/3335308/a1ig8opz1a.png?q-sign-algorithm=sha1&q-ak=AKID2uZ1FGBdx1pNgjE3KK4YliPpzyjLZvug&q-sign-time=1594733712;1594740912&q-key-time=1594733712;1594740912&q-header-list=&q-url-param-list=&q-signature=bd699ab1161ed5528bdff9db9c65dca14a40fa65)\n\n![根目录](https://ask.qcloudimg.com/http-save/3335308/ka8xvx13jm.png)\n\n​\n\n![EXP文件夹](https://ask.qcloudimg.com/http-save/3335308/m9qm7mj9bt.png)\n\nExp，即为表情的动作，都是json文件，任意打开一个：F\\_FUN\\_SMILE.exp.json\n\n通过格式化json文件，看得出这是控制每一个贴图材质的控件\n\n![](https://ask.qcloudimg.com/http-save/3335308/s8p9hozana.png)\n\nType\n\n类型\n\nFade in/out\n\n动作淡入淡出\n\nParams：{\n\n​\n\nid\n\n动作对象控件，例如眼睛，嘴，笑容等\n\nval\n\n动作幅度\n\ncalc\n\n未知\n\n​\n\n* * *\n\nMOC文件夹：\n\n​\n\n![](https://ask8088-private-1251520898.cn-south.myqcloud.com/developer-images/article/3335308/k97pgmlfms.png?q-sign-algorithm=sha1&q-ak=AKID2uZ1FGBdx1pNgjE3KK4YliPpzyjLZvug&q-sign-time=1594733867;1594741067&q-key-time=1594733867;1594741067&q-header-list=&q-url-param-list=&q-signature=7927b01a258e61dc72f966b493df2e9691799f9e)\n\n这是一个存储模型和材质的文件，moc即为模型\n\n上面的文件夹即为材质\n\n![](https://ask.qcloudimg.com/http-save/3335308/2erriwckee.png)\n\n材质中包括了人物的所有外饰信息\n\nmtn文件夹\n\n![](https://ask.qcloudimg.com/http-save/3335308/671wyfam2a.png)\n\n![](https://ask.qcloudimg.com/http-save/3335308/042s7i2dc2.png)\n\n这个是控制组件淡入淡出，角度，比如人体的x,y,z轴的旋转，以及防止动作突发诡异现象，使用淡入淡出\n\n* * *\n\nassets根目录的两个json文件：\n\n![](https://ask.qcloudimg.com/http-save/3335308/osw6oxxwtc.png)\n\nmodel.json即定义了模型，Physics.json即定义了物理效果model.json即定义了模型，Physics.json即定义了物理效果\n\n![](https://ask.qcloudimg.com/http-save/3335308/kplefce3do.png)\n\n![](https://ask.qcloudimg.com/http-save/3335308/ec650x5rq3.png)\n\n这里相当于总控制器，控制了什么情况下对应什么动作的json，而动作的json定义了材质切片的运动，Physics物理效果就能更加真实地显示动画，比如头发摇摆\n\nWeb中的呈现：\n========\n\n核心：live2d.js\n\n![](https://ask.qcloudimg.com/http-save/3335308/5b59o5zy2w.png)\n\n可惜是加密的\n\n![](https://ask.qcloudimg.com/http-save/3335308/utryz2a17r.png)\n\n我们无法进一步研究，但根据官方的文档来看，是运用webGL技术进行渲染的\n\n首先要定义\n\n    <canvas id=\"live2d\" width=\"280\" height=\"250\"></canvas>\n\n然后引入js \n\n    <script src=\"./js/live2d.js\"></script>\n\n最后加载js：\n\n    loadlive2d(\"live2d\", \"./model.json\");\n\n* * *\n\n注意：json等模型是具有版权的，要不自己制作，要不就请求授权，尤其是应用于商业用途要及其注意\n\n到此，介绍结束，更多可能需要大家一同探索\n====================\n\n我是Ar-Sr-Na，个人网站www.arsrna.cn\n\n​","source":"_posts/前端中的live2d与技术.md","raw":"---\ntitle: 前端中的Live2D与技术\ntags:\n  - 未分类\nid: '672'\ndate: 2020-07-14 22:25:13\n---\n\n![](https://ask8088-private-1251520898.cn-south.myqcloud.com/developer-images/article/3335308/ydd2m5u7w9.png?q-sign-algorithm=sha1&q-ak=AKID2uZ1FGBdx1pNgjE3KK4YliPpzyjLZvug&q-sign-time=1594734118;1594741318&q-key-time=1594734118;1594741318&q-header-list=&q-url-param-list=&q-signature=b08902271e6c387c3d572e3838cec9574fd4aca8)\n\n​\n\n​\n\nLive2D，即为2D绘图渲染技术，游戏中例如崩坏3，碧蓝航线中与老婆交互就利用了live2d，通过前端的渲染，拼接，移动即可做出类似3d的效果，但是始终还是有缺陷，例如无法实现3d的转身，跳跃。\n\nL2D的制作成本远低于3D，3D需要的建模，渲染，L2D可以方便完成，只需要对人物切片，然后前端重组，移动动画即可达到效果\n\nWeb中的L2D结构\n==========\n\n案例：[www.arsrna.com](https://www.arsrna.com)\n\n这是Live2D的材质结构\n\n![](https://ask8088-private-1251520898.cn-south.myqcloud.com/developer-images/article/3335308/a1ig8opz1a.png?q-sign-algorithm=sha1&q-ak=AKID2uZ1FGBdx1pNgjE3KK4YliPpzyjLZvug&q-sign-time=1594733712;1594740912&q-key-time=1594733712;1594740912&q-header-list=&q-url-param-list=&q-signature=bd699ab1161ed5528bdff9db9c65dca14a40fa65)\n\n![根目录](https://ask.qcloudimg.com/http-save/3335308/ka8xvx13jm.png)\n\n​\n\n![EXP文件夹](https://ask.qcloudimg.com/http-save/3335308/m9qm7mj9bt.png)\n\nExp，即为表情的动作，都是json文件，任意打开一个：F\\_FUN\\_SMILE.exp.json\n\n通过格式化json文件，看得出这是控制每一个贴图材质的控件\n\n![](https://ask.qcloudimg.com/http-save/3335308/s8p9hozana.png)\n\nType\n\n类型\n\nFade in/out\n\n动作淡入淡出\n\nParams：{\n\n​\n\nid\n\n动作对象控件，例如眼睛，嘴，笑容等\n\nval\n\n动作幅度\n\ncalc\n\n未知\n\n​\n\n* * *\n\nMOC文件夹：\n\n​\n\n![](https://ask8088-private-1251520898.cn-south.myqcloud.com/developer-images/article/3335308/k97pgmlfms.png?q-sign-algorithm=sha1&q-ak=AKID2uZ1FGBdx1pNgjE3KK4YliPpzyjLZvug&q-sign-time=1594733867;1594741067&q-key-time=1594733867;1594741067&q-header-list=&q-url-param-list=&q-signature=7927b01a258e61dc72f966b493df2e9691799f9e)\n\n这是一个存储模型和材质的文件，moc即为模型\n\n上面的文件夹即为材质\n\n![](https://ask.qcloudimg.com/http-save/3335308/2erriwckee.png)\n\n材质中包括了人物的所有外饰信息\n\nmtn文件夹\n\n![](https://ask.qcloudimg.com/http-save/3335308/671wyfam2a.png)\n\n![](https://ask.qcloudimg.com/http-save/3335308/042s7i2dc2.png)\n\n这个是控制组件淡入淡出，角度，比如人体的x,y,z轴的旋转，以及防止动作突发诡异现象，使用淡入淡出\n\n* * *\n\nassets根目录的两个json文件：\n\n![](https://ask.qcloudimg.com/http-save/3335308/osw6oxxwtc.png)\n\nmodel.json即定义了模型，Physics.json即定义了物理效果model.json即定义了模型，Physics.json即定义了物理效果\n\n![](https://ask.qcloudimg.com/http-save/3335308/kplefce3do.png)\n\n![](https://ask.qcloudimg.com/http-save/3335308/ec650x5rq3.png)\n\n这里相当于总控制器，控制了什么情况下对应什么动作的json，而动作的json定义了材质切片的运动，Physics物理效果就能更加真实地显示动画，比如头发摇摆\n\nWeb中的呈现：\n========\n\n核心：live2d.js\n\n![](https://ask.qcloudimg.com/http-save/3335308/5b59o5zy2w.png)\n\n可惜是加密的\n\n![](https://ask.qcloudimg.com/http-save/3335308/utryz2a17r.png)\n\n我们无法进一步研究，但根据官方的文档来看，是运用webGL技术进行渲染的\n\n首先要定义\n\n    <canvas id=\"live2d\" width=\"280\" height=\"250\"></canvas>\n\n然后引入js \n\n    <script src=\"./js/live2d.js\"></script>\n\n最后加载js：\n\n    loadlive2d(\"live2d\", \"./model.json\");\n\n* * *\n\n注意：json等模型是具有版权的，要不自己制作，要不就请求授权，尤其是应用于商业用途要及其注意\n\n到此，介绍结束，更多可能需要大家一同探索\n====================\n\n我是Ar-Sr-Na，个人网站www.arsrna.cn\n\n​","slug":"前端中的live2d与技术","published":1,"updated":"2022-07-20T05:04:16.765Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6xy003rc0nd6a1c43ed","content":"<p><img src=\"https://ask8088-private-1251520898.cn-south.myqcloud.com/developer-images/article/3335308/ydd2m5u7w9.png?q-sign-algorithm=sha1&q-ak=AKID2uZ1FGBdx1pNgjE3KK4YliPpzyjLZvug&q-sign-time=1594734118;1594741318&q-key-time=1594734118;1594741318&q-header-list=&q-url-param-list=&q-signature=b08902271e6c387c3d572e3838cec9574fd4aca8\"></p>\n<p>​</p>\n<p>​</p>\n<p>Live2D，即为2D绘图渲染技术，游戏中例如崩坏3，碧蓝航线中与老婆交互就利用了live2d，通过前端的渲染，拼接，移动即可做出类似3d的效果，但是始终还是有缺陷，例如无法实现3d的转身，跳跃。</p>\n<p>L2D的制作成本远低于3D，3D需要的建模，渲染，L2D可以方便完成，只需要对人物切片，然后前端重组，移动动画即可达到效果</p>\n<h1 id=\"Web中的L2D结构\"><a href=\"#Web中的L2D结构\" class=\"headerlink\" title=\"Web中的L2D结构\"></a>Web中的L2D结构</h1><p>案例：<a href=\"https://www.arsrna.com/\">www.arsrna.com</a></p>\n<p>这是Live2D的材质结构</p>\n<p><img src=\"https://ask8088-private-1251520898.cn-south.myqcloud.com/developer-images/article/3335308/a1ig8opz1a.png?q-sign-algorithm=sha1&q-ak=AKID2uZ1FGBdx1pNgjE3KK4YliPpzyjLZvug&q-sign-time=1594733712;1594740912&q-key-time=1594733712;1594740912&q-header-list=&q-url-param-list=&q-signature=bd699ab1161ed5528bdff9db9c65dca14a40fa65\"></p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/ka8xvx13jm.png\" alt=\"根目录\"></p>\n<p>​</p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/m9qm7mj9bt.png\" alt=\"EXP文件夹\"></p>\n<p>Exp，即为表情的动作，都是json文件，任意打开一个：F_FUN_SMILE.exp.json</p>\n<p>通过格式化json文件，看得出这是控制每一个贴图材质的控件</p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/s8p9hozana.png\"></p>\n<p>Type</p>\n<p>类型</p>\n<p>Fade in&#x2F;out</p>\n<p>动作淡入淡出</p>\n<p>Params：{</p>\n<p>​</p>\n<p>id</p>\n<p>动作对象控件，例如眼睛，嘴，笑容等</p>\n<p>val</p>\n<p>动作幅度</p>\n<p>calc</p>\n<p>未知</p>\n<p>​</p>\n<hr>\n<p>MOC文件夹：</p>\n<p>​</p>\n<p><img src=\"https://ask8088-private-1251520898.cn-south.myqcloud.com/developer-images/article/3335308/k97pgmlfms.png?q-sign-algorithm=sha1&q-ak=AKID2uZ1FGBdx1pNgjE3KK4YliPpzyjLZvug&q-sign-time=1594733867;1594741067&q-key-time=1594733867;1594741067&q-header-list=&q-url-param-list=&q-signature=7927b01a258e61dc72f966b493df2e9691799f9e\"></p>\n<p>这是一个存储模型和材质的文件，moc即为模型</p>\n<p>上面的文件夹即为材质</p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/2erriwckee.png\"></p>\n<p>材质中包括了人物的所有外饰信息</p>\n<p>mtn文件夹</p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/671wyfam2a.png\"></p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/042s7i2dc2.png\"></p>\n<p>这个是控制组件淡入淡出，角度，比如人体的x,y,z轴的旋转，以及防止动作突发诡异现象，使用淡入淡出</p>\n<hr>\n<p>assets根目录的两个json文件：</p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/osw6oxxwtc.png\"></p>\n<p>model.json即定义了模型，Physics.json即定义了物理效果model.json即定义了模型，Physics.json即定义了物理效果</p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/kplefce3do.png\"></p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/ec650x5rq3.png\"></p>\n<p>这里相当于总控制器，控制了什么情况下对应什么动作的json，而动作的json定义了材质切片的运动，Physics物理效果就能更加真实地显示动画，比如头发摇摆</p>\n<h1 id=\"Web中的呈现：\"><a href=\"#Web中的呈现：\" class=\"headerlink\" title=\"Web中的呈现：\"></a>Web中的呈现：</h1><p>核心：live2d.js</p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/5b59o5zy2w.png\"></p>\n<p>可惜是加密的</p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/utryz2a17r.png\"></p>\n<p>我们无法进一步研究，但根据官方的文档来看，是运用webGL技术进行渲染的</p>\n<p>首先要定义</p>\n<pre><code class=\"hljs\">&lt;canvas id=&quot;live2d&quot; width=&quot;280&quot; height=&quot;250&quot;&gt;&lt;/canvas&gt;\n</code></pre>\n<p>然后引入js </p>\n<pre><code class=\"hljs\">&lt;script src=&quot;./js/live2d.js&quot;&gt;&lt;/script&gt;\n</code></pre>\n<p>最后加载js：</p>\n<pre><code class=\"hljs\">loadlive2d(&quot;live2d&quot;, &quot;./model.json&quot;);\n</code></pre>\n<hr>\n<p>注意：json等模型是具有版权的，要不自己制作，要不就请求授权，尤其是应用于商业用途要及其注意</p>\n<h1 id=\"到此，介绍结束，更多可能需要大家一同探索\"><a href=\"#到此，介绍结束，更多可能需要大家一同探索\" class=\"headerlink\" title=\"到此，介绍结束，更多可能需要大家一同探索\"></a>到此，介绍结束，更多可能需要大家一同探索</h1><p>我是Ar-Sr-Na，个人网站<a href=\"http://www.arsrna.cn/\">www.arsrna.cn</a></p>\n<p>​</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://ask8088-private-1251520898.cn-south.myqcloud.com/developer-images/article/3335308/ydd2m5u7w9.png?q-sign-algorithm=sha1&q-ak=AKID2uZ1FGBdx1pNgjE3KK4YliPpzyjLZvug&q-sign-time=1594734118;1594741318&q-key-time=1594734118;1594741318&q-header-list=&q-url-param-list=&q-signature=b08902271e6c387c3d572e3838cec9574fd4aca8\"></p>\n<p>​</p>\n<p>​</p>\n<p>Live2D，即为2D绘图渲染技术，游戏中例如崩坏3，碧蓝航线中与老婆交互就利用了live2d，通过前端的渲染，拼接，移动即可做出类似3d的效果，但是始终还是有缺陷，例如无法实现3d的转身，跳跃。</p>\n<p>L2D的制作成本远低于3D，3D需要的建模，渲染，L2D可以方便完成，只需要对人物切片，然后前端重组，移动动画即可达到效果</p>\n<h1 id=\"Web中的L2D结构\"><a href=\"#Web中的L2D结构\" class=\"headerlink\" title=\"Web中的L2D结构\"></a>Web中的L2D结构</h1><p>案例：<a href=\"https://www.arsrna.com/\">www.arsrna.com</a></p>\n<p>这是Live2D的材质结构</p>\n<p><img src=\"https://ask8088-private-1251520898.cn-south.myqcloud.com/developer-images/article/3335308/a1ig8opz1a.png?q-sign-algorithm=sha1&q-ak=AKID2uZ1FGBdx1pNgjE3KK4YliPpzyjLZvug&q-sign-time=1594733712;1594740912&q-key-time=1594733712;1594740912&q-header-list=&q-url-param-list=&q-signature=bd699ab1161ed5528bdff9db9c65dca14a40fa65\"></p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/ka8xvx13jm.png\" alt=\"根目录\"></p>\n<p>​</p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/m9qm7mj9bt.png\" alt=\"EXP文件夹\"></p>\n<p>Exp，即为表情的动作，都是json文件，任意打开一个：F_FUN_SMILE.exp.json</p>\n<p>通过格式化json文件，看得出这是控制每一个贴图材质的控件</p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/s8p9hozana.png\"></p>\n<p>Type</p>\n<p>类型</p>\n<p>Fade in&#x2F;out</p>\n<p>动作淡入淡出</p>\n<p>Params：{</p>\n<p>​</p>\n<p>id</p>\n<p>动作对象控件，例如眼睛，嘴，笑容等</p>\n<p>val</p>\n<p>动作幅度</p>\n<p>calc</p>\n<p>未知</p>\n<p>​</p>\n<hr>\n<p>MOC文件夹：</p>\n<p>​</p>\n<p><img src=\"https://ask8088-private-1251520898.cn-south.myqcloud.com/developer-images/article/3335308/k97pgmlfms.png?q-sign-algorithm=sha1&q-ak=AKID2uZ1FGBdx1pNgjE3KK4YliPpzyjLZvug&q-sign-time=1594733867;1594741067&q-key-time=1594733867;1594741067&q-header-list=&q-url-param-list=&q-signature=7927b01a258e61dc72f966b493df2e9691799f9e\"></p>\n<p>这是一个存储模型和材质的文件，moc即为模型</p>\n<p>上面的文件夹即为材质</p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/2erriwckee.png\"></p>\n<p>材质中包括了人物的所有外饰信息</p>\n<p>mtn文件夹</p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/671wyfam2a.png\"></p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/042s7i2dc2.png\"></p>\n<p>这个是控制组件淡入淡出，角度，比如人体的x,y,z轴的旋转，以及防止动作突发诡异现象，使用淡入淡出</p>\n<hr>\n<p>assets根目录的两个json文件：</p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/osw6oxxwtc.png\"></p>\n<p>model.json即定义了模型，Physics.json即定义了物理效果model.json即定义了模型，Physics.json即定义了物理效果</p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/kplefce3do.png\"></p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/ec650x5rq3.png\"></p>\n<p>这里相当于总控制器，控制了什么情况下对应什么动作的json，而动作的json定义了材质切片的运动，Physics物理效果就能更加真实地显示动画，比如头发摇摆</p>\n<h1 id=\"Web中的呈现：\"><a href=\"#Web中的呈现：\" class=\"headerlink\" title=\"Web中的呈现：\"></a>Web中的呈现：</h1><p>核心：live2d.js</p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/5b59o5zy2w.png\"></p>\n<p>可惜是加密的</p>\n<p><img src=\"https://ask.qcloudimg.com/http-save/3335308/utryz2a17r.png\"></p>\n<p>我们无法进一步研究，但根据官方的文档来看，是运用webGL技术进行渲染的</p>\n<p>首先要定义</p>\n<pre><code>&lt;canvas id=&quot;live2d&quot; width=&quot;280&quot; height=&quot;250&quot;&gt;&lt;/canvas&gt;\n</code></pre>\n<p>然后引入js </p>\n<pre><code>&lt;script src=&quot;./js/live2d.js&quot;&gt;&lt;/script&gt;\n</code></pre>\n<p>最后加载js：</p>\n<pre><code>loadlive2d(&quot;live2d&quot;, &quot;./model.json&quot;);\n</code></pre>\n<hr>\n<p>注意：json等模型是具有版权的，要不自己制作，要不就请求授权，尤其是应用于商业用途要及其注意</p>\n<h1 id=\"到此，介绍结束，更多可能需要大家一同探索\"><a href=\"#到此，介绍结束，更多可能需要大家一同探索\" class=\"headerlink\" title=\"到此，介绍结束，更多可能需要大家一同探索\"></a>到此，介绍结束，更多可能需要大家一同探索</h1><p>我是Ar-Sr-Na，个人网站<a href=\"http://www.arsrna.cn/\">www.arsrna.cn</a></p>\n<p>​</p>\n"},{"title":"关于ARRI的那位美女Isabella","id":"359","date":"2019-05-24T05:09:19.000Z","_content":"\n原创： RayTao [后期暗房小黄灯](void(0);)_前天_\n\n最近陆续在给公司的DI、VFX、Online不同部门间的协作，做工作流程的优化。恰巧这半年来也有不少朋友，隔三岔五地咨询关于各种摄影机素材的IO，特效工作时的色彩管理等问题。干脆就以ARRI为例，讲一下有个标准的、可参考的图像，是如何有助于一个项目的影像质量管理的。\n\n在过去胶片年代，若要确定胶片处理过程是否规范、精确，Kodak提供了所谓的Laboratory Aim Density（简称LAD）文件，列出数据供校对。到后来数字中间片出现，Cineon Log的发明，自然也有一份Digital LAD的DPX文件用来做这种事了。\n\nhttps://pan.baidu.com/s/1rEOWoCjoRD0ziWPweWhz6Q\n\narri和柯达的两套文件以及一份arri的说明pdf，提取码：z21k\n\n最有趣的细节，在PDF的最后一页：右下角注明的Reference（参考来源），提到了Glen Kennel于1994年3月，在SMPTE的文章_Digital Film Scanning and Recording: The Technology and Practice_ 。\n\n若看过Keanu Reeves在2012年那时做的那部，讲述影像技术发展的纪录片《Side by Side》，或许会想起来，Glen Kennel？他不是ARRI的CTO么？？？\n\n![](https://s2.ax1x.com/2019/05/24/ViArzq.jpg)\n\n_嗯，就是这位大叔。现在是ARRI的President了_\n\n其实他去ARRI进行ALEXA数字摄影机的开发前，在Kodak就已是技术大拿。做过胶片扫描技术的研究，开发了Cineon Log规格，甚至在德州仪器研发了现在影院标配的DLP投影。其著作《Color and Mastering for Digital Cinema》基本是论文级别的教科书了。\n\n歪个楼：最近Keanu Reeves主演的新片《John Wick: Chapter 3》，口碑之好真出乎意料。据去完香港观影的朋友说，是如老式港产动作片那样的爽。当然了前两集本来就很爽……\n\n所以由于这样的经历，他去ARRI开发ALEXA的过程中，也做了类似的事情。他们做了一张同样性质的LogC图像，放在配套的软件工具ARRI Color Tool里。用户可通过它作为一个标准影像，来更好地在ARRI Color Tool软件里设计自己想要的自定义影像风格（Looks）。并将这些自定义的Looks生成为aml格式文件在ALEXA摄影机中加载。就像在别的软硬件加载LUT去预览画面一样。\n\n![](https://s2.ax1x.com/2019/05/24/ViVcaF.jpg)\n\nKodak Digital LAD Test Image\n\n![](https://s2.ax1x.com/2019/05/24/ViV5Kx.jpg)\n\n_ARRI Isabella Image_\n\n_看着拍法就挺类似的对吧~_\n\n随着去年ARRI官网的改版，其Camera Workflow页面被重新整理过。现在它有着非常通俗完整的，从前期到后期的各类说明，犹如百科全书。为更好地帮助用户设计工作流程，新版网站提供了这ARRI Isabella Image的文件下载。\n\n下载地址在上面，压缩包有四个图像文件\n\n1.  Isabella.112782.ari **原始的 ARRIRAW 文件。另外三个文件均由它转换处理得到**\n2.  LogC\\_ref\\_Isabella.0.dpx**基于 ARRI LogC / ARRI WideGamut 的 dpx 文件**\n3.  ACES\\_ref\\_Isabella.0.exr**基于 ACES Linear / AP0 的 EXR 文件**\n4.  Rec709\\_ref\\_Isabella.0.tiff将上述ARRIRAW文件，挂载 **ARRI\\_LogC2Video\\_Classic709** 的LUT（即旧版官网的 LUT Generator 提供的 **K1S1** LUT)，得到的Rec709监看环境下的参考画面，供用户验证对上述三个格式文件的操作。\n\n![](https://s2.ax1x.com/2019/05/24/ViVKCd.jpg)\n\n_Rec709\\_ref\\_Isabella.0.tiff_\n\n_或者说挂载ARRI\\_LogC2Video\\_Classic709 LUT的结果_\n\n上述几个文件经本人在Baselight与DaVinci Resolve操作验证，只要操作方式正确，毫无疑问能得到符合各类参考标准的画面。作为一个标准参考画面，它可以帮助你做什么呢\n\n*   无论使用ACES，或使用技术LUT做色彩管理，或软件自身色彩管理功能，都能作为一个标准图像，去验证整个色彩工作流程的正确性。\n*   帮助用户去分析，不同软件的色彩管理功能的机制（比如本人就是通过它，摸清Baselight色彩管理的各选项，与DaVinci Resolve之间的异同点）。\n*   作为标准参考图像，帮助用户去设计、分析画面风格，优化自定义LUT的设计。\n\n关于第三点，为何它能起到这种作用呢？其实仔细分析这图像里各种元素就能发现\n\n*   这是一个拍摄的光比较大，高动态的影像。画面中有明确的高光、阴影（特别是人物的额头一侧），以及有纯黑的背景。\n*   画面中既有灰卡，也有纯白的卡纸，连带背景的黑布，人物额头的阴影，有明确且充足的黑白灰关系可供分析。\n*   画面中有色卡，可以看到具体颜色在不同处理手法（或者使用不同LUT）后的变化规律。\n*   比过去Kodak那张Digital LAD更进一步的是，这回他们对画面的“服道化”元素，也做了更有心思的设计。浅蓝色的衣服，人物的肤色（skintone），背后的绿色植物，三者颜色直接涉及到了色轮上的六个方向。即：红（RED）、绿（Green）、蓝（Blue）、青（Cyan）、品红（Magenta）、黄（Yellow）。配合色卡、灰卡，可以非常直观地观察分析做出来的LUT或者调色参数，其对画面反差的改变细节，对常见材质、色彩的染色效果。\n\n理论上来说，这个ARRI Isabella Image文件，由于是个高动态的影像，不仅可用于SDR（Rec709、DCI-P3）监看环境下的工作流程验证与影像风格设计。即便是HDR的监看条件，正确设置监看环境后，这图像依然能发挥上述作用。通过这样方式设计出来的Looks，基本能保证较高的泛用性，起到对拍摄过程中的摄影曝光、灯光、美术等环节的指导性作用。简直是做DIT或调色试片时的必备良药。\n\n总结：\n\n从ARRI提供的这个“工具”，其实我们可以现学现卖地，自行针对其他摄影机，拍摄制作出类似的标准影像参考。得到一个可用于工作流程验证与影像风格设计的工具。当然了，各摄影机厂商们（特别是国产厂商），什么时候都学习模仿一下，官方提供一个这样的标准工具，不用用户盲人摸象，就最好不过啦~~\n\n* * *\n\n最后再吆喝一句：\n\nARRI官网的Camera Workflow页面，有人举手想翻译嘛？因为内容实在太多太通俗科普了。翻译完后保证你能扔掉大部分入门技术书刊了。\n\n* * *\n\n长按二维码关注公众号\n\n查看更多干货\n\n![](https://s2.ax1x.com/2019/05/24/ViVSN4.jpg)\n\n如果觉得有用\n\n欢迎分享到你的朋友圈\n\n或者\n\n**喜欢一下作者**:张来吃","source":"_posts/关于arri的那位美女isabella.md","raw":"---\ntitle: 关于ARRI的那位美女Isabella\ntags:\n  - 未分类\nid: '359'\ndate: 2019-05-24 13:09:19\n---\n\n原创： RayTao [后期暗房小黄灯](void(0);)_前天_\n\n最近陆续在给公司的DI、VFX、Online不同部门间的协作，做工作流程的优化。恰巧这半年来也有不少朋友，隔三岔五地咨询关于各种摄影机素材的IO，特效工作时的色彩管理等问题。干脆就以ARRI为例，讲一下有个标准的、可参考的图像，是如何有助于一个项目的影像质量管理的。\n\n在过去胶片年代，若要确定胶片处理过程是否规范、精确，Kodak提供了所谓的Laboratory Aim Density（简称LAD）文件，列出数据供校对。到后来数字中间片出现，Cineon Log的发明，自然也有一份Digital LAD的DPX文件用来做这种事了。\n\nhttps://pan.baidu.com/s/1rEOWoCjoRD0ziWPweWhz6Q\n\narri和柯达的两套文件以及一份arri的说明pdf，提取码：z21k\n\n最有趣的细节，在PDF的最后一页：右下角注明的Reference（参考来源），提到了Glen Kennel于1994年3月，在SMPTE的文章_Digital Film Scanning and Recording: The Technology and Practice_ 。\n\n若看过Keanu Reeves在2012年那时做的那部，讲述影像技术发展的纪录片《Side by Side》，或许会想起来，Glen Kennel？他不是ARRI的CTO么？？？\n\n![](https://s2.ax1x.com/2019/05/24/ViArzq.jpg)\n\n_嗯，就是这位大叔。现在是ARRI的President了_\n\n其实他去ARRI进行ALEXA数字摄影机的开发前，在Kodak就已是技术大拿。做过胶片扫描技术的研究，开发了Cineon Log规格，甚至在德州仪器研发了现在影院标配的DLP投影。其著作《Color and Mastering for Digital Cinema》基本是论文级别的教科书了。\n\n歪个楼：最近Keanu Reeves主演的新片《John Wick: Chapter 3》，口碑之好真出乎意料。据去完香港观影的朋友说，是如老式港产动作片那样的爽。当然了前两集本来就很爽……\n\n所以由于这样的经历，他去ARRI开发ALEXA的过程中，也做了类似的事情。他们做了一张同样性质的LogC图像，放在配套的软件工具ARRI Color Tool里。用户可通过它作为一个标准影像，来更好地在ARRI Color Tool软件里设计自己想要的自定义影像风格（Looks）。并将这些自定义的Looks生成为aml格式文件在ALEXA摄影机中加载。就像在别的软硬件加载LUT去预览画面一样。\n\n![](https://s2.ax1x.com/2019/05/24/ViVcaF.jpg)\n\nKodak Digital LAD Test Image\n\n![](https://s2.ax1x.com/2019/05/24/ViV5Kx.jpg)\n\n_ARRI Isabella Image_\n\n_看着拍法就挺类似的对吧~_\n\n随着去年ARRI官网的改版，其Camera Workflow页面被重新整理过。现在它有着非常通俗完整的，从前期到后期的各类说明，犹如百科全书。为更好地帮助用户设计工作流程，新版网站提供了这ARRI Isabella Image的文件下载。\n\n下载地址在上面，压缩包有四个图像文件\n\n1.  Isabella.112782.ari **原始的 ARRIRAW 文件。另外三个文件均由它转换处理得到**\n2.  LogC\\_ref\\_Isabella.0.dpx**基于 ARRI LogC / ARRI WideGamut 的 dpx 文件**\n3.  ACES\\_ref\\_Isabella.0.exr**基于 ACES Linear / AP0 的 EXR 文件**\n4.  Rec709\\_ref\\_Isabella.0.tiff将上述ARRIRAW文件，挂载 **ARRI\\_LogC2Video\\_Classic709** 的LUT（即旧版官网的 LUT Generator 提供的 **K1S1** LUT)，得到的Rec709监看环境下的参考画面，供用户验证对上述三个格式文件的操作。\n\n![](https://s2.ax1x.com/2019/05/24/ViVKCd.jpg)\n\n_Rec709\\_ref\\_Isabella.0.tiff_\n\n_或者说挂载ARRI\\_LogC2Video\\_Classic709 LUT的结果_\n\n上述几个文件经本人在Baselight与DaVinci Resolve操作验证，只要操作方式正确，毫无疑问能得到符合各类参考标准的画面。作为一个标准参考画面，它可以帮助你做什么呢\n\n*   无论使用ACES，或使用技术LUT做色彩管理，或软件自身色彩管理功能，都能作为一个标准图像，去验证整个色彩工作流程的正确性。\n*   帮助用户去分析，不同软件的色彩管理功能的机制（比如本人就是通过它，摸清Baselight色彩管理的各选项，与DaVinci Resolve之间的异同点）。\n*   作为标准参考图像，帮助用户去设计、分析画面风格，优化自定义LUT的设计。\n\n关于第三点，为何它能起到这种作用呢？其实仔细分析这图像里各种元素就能发现\n\n*   这是一个拍摄的光比较大，高动态的影像。画面中有明确的高光、阴影（特别是人物的额头一侧），以及有纯黑的背景。\n*   画面中既有灰卡，也有纯白的卡纸，连带背景的黑布，人物额头的阴影，有明确且充足的黑白灰关系可供分析。\n*   画面中有色卡，可以看到具体颜色在不同处理手法（或者使用不同LUT）后的变化规律。\n*   比过去Kodak那张Digital LAD更进一步的是，这回他们对画面的“服道化”元素，也做了更有心思的设计。浅蓝色的衣服，人物的肤色（skintone），背后的绿色植物，三者颜色直接涉及到了色轮上的六个方向。即：红（RED）、绿（Green）、蓝（Blue）、青（Cyan）、品红（Magenta）、黄（Yellow）。配合色卡、灰卡，可以非常直观地观察分析做出来的LUT或者调色参数，其对画面反差的改变细节，对常见材质、色彩的染色效果。\n\n理论上来说，这个ARRI Isabella Image文件，由于是个高动态的影像，不仅可用于SDR（Rec709、DCI-P3）监看环境下的工作流程验证与影像风格设计。即便是HDR的监看条件，正确设置监看环境后，这图像依然能发挥上述作用。通过这样方式设计出来的Looks，基本能保证较高的泛用性，起到对拍摄过程中的摄影曝光、灯光、美术等环节的指导性作用。简直是做DIT或调色试片时的必备良药。\n\n总结：\n\n从ARRI提供的这个“工具”，其实我们可以现学现卖地，自行针对其他摄影机，拍摄制作出类似的标准影像参考。得到一个可用于工作流程验证与影像风格设计的工具。当然了，各摄影机厂商们（特别是国产厂商），什么时候都学习模仿一下，官方提供一个这样的标准工具，不用用户盲人摸象，就最好不过啦~~\n\n* * *\n\n最后再吆喝一句：\n\nARRI官网的Camera Workflow页面，有人举手想翻译嘛？因为内容实在太多太通俗科普了。翻译完后保证你能扔掉大部分入门技术书刊了。\n\n* * *\n\n长按二维码关注公众号\n\n查看更多干货\n\n![](https://s2.ax1x.com/2019/05/24/ViVSN4.jpg)\n\n如果觉得有用\n\n欢迎分享到你的朋友圈\n\n或者\n\n**喜欢一下作者**:张来吃","slug":"关于arri的那位美女isabella","published":1,"updated":"2022-07-20T05:04:16.764Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6xz003uc0nd7lvhge20","content":"<p>原创： RayTao <a href=\"void(0);\">后期暗房小黄灯</a><em>前天</em></p>\n<p>最近陆续在给公司的DI、VFX、Online不同部门间的协作，做工作流程的优化。恰巧这半年来也有不少朋友，隔三岔五地咨询关于各种摄影机素材的IO，特效工作时的色彩管理等问题。干脆就以ARRI为例，讲一下有个标准的、可参考的图像，是如何有助于一个项目的影像质量管理的。</p>\n<p>在过去胶片年代，若要确定胶片处理过程是否规范、精确，Kodak提供了所谓的Laboratory Aim Density（简称LAD）文件，列出数据供校对。到后来数字中间片出现，Cineon Log的发明，自然也有一份Digital LAD的DPX文件用来做这种事了。</p>\n<p><a href=\"https://pan.baidu.com/s/1rEOWoCjoRD0ziWPweWhz6Q\">https://pan.baidu.com/s/1rEOWoCjoRD0ziWPweWhz6Q</a></p>\n<p>arri和柯达的两套文件以及一份arri的说明pdf，提取码：z21k</p>\n<p>最有趣的细节，在PDF的最后一页：右下角注明的Reference（参考来源），提到了Glen Kennel于1994年3月，在SMPTE的文章_Digital Film Scanning and Recording: The Technology and Practice_ 。</p>\n<p>若看过Keanu Reeves在2012年那时做的那部，讲述影像技术发展的纪录片《Side by Side》，或许会想起来，Glen Kennel？他不是ARRI的CTO么？？？</p>\n<p><img src=\"https://s2.ax1x.com/2019/05/24/ViArzq.jpg\"></p>\n<p><em>嗯，就是这位大叔。现在是ARRI的President了</em></p>\n<p>其实他去ARRI进行ALEXA数字摄影机的开发前，在Kodak就已是技术大拿。做过胶片扫描技术的研究，开发了Cineon Log规格，甚至在德州仪器研发了现在影院标配的DLP投影。其著作《Color and Mastering for Digital Cinema》基本是论文级别的教科书了。</p>\n<p>歪个楼：最近Keanu Reeves主演的新片《John Wick: Chapter 3》，口碑之好真出乎意料。据去完香港观影的朋友说，是如老式港产动作片那样的爽。当然了前两集本来就很爽……</p>\n<p>所以由于这样的经历，他去ARRI开发ALEXA的过程中，也做了类似的事情。他们做了一张同样性质的LogC图像，放在配套的软件工具ARRI Color Tool里。用户可通过它作为一个标准影像，来更好地在ARRI Color Tool软件里设计自己想要的自定义影像风格（Looks）。并将这些自定义的Looks生成为aml格式文件在ALEXA摄影机中加载。就像在别的软硬件加载LUT去预览画面一样。</p>\n<p><img src=\"https://s2.ax1x.com/2019/05/24/ViVcaF.jpg\"></p>\n<p>Kodak Digital LAD Test Image</p>\n<p><img src=\"https://s2.ax1x.com/2019/05/24/ViV5Kx.jpg\"></p>\n<p><em>ARRI Isabella Image</em></p>\n<p><em>看着拍法就挺类似的对吧~</em></p>\n<p>随着去年ARRI官网的改版，其Camera Workflow页面被重新整理过。现在它有着非常通俗完整的，从前期到后期的各类说明，犹如百科全书。为更好地帮助用户设计工作流程，新版网站提供了这ARRI Isabella Image的文件下载。</p>\n<p>下载地址在上面，压缩包有四个图像文件</p>\n<ol>\n<li>Isabella.112782.ari <strong>原始的 ARRIRAW 文件。另外三个文件均由它转换处理得到</strong></li>\n<li>LogC_ref_Isabella.0.dpx<strong>基于 ARRI LogC &#x2F; ARRI WideGamut 的 dpx 文件</strong></li>\n<li>ACES_ref_Isabella.0.exr<strong>基于 ACES Linear &#x2F; AP0 的 EXR 文件</strong></li>\n<li>Rec709_ref_Isabella.0.tiff将上述ARRIRAW文件，挂载 <strong>ARRI_LogC2Video_Classic709</strong> 的LUT（即旧版官网的 LUT Generator 提供的 <strong>K1S1</strong> LUT)，得到的Rec709监看环境下的参考画面，供用户验证对上述三个格式文件的操作。</li>\n</ol>\n<p><img src=\"https://s2.ax1x.com/2019/05/24/ViVKCd.jpg\"></p>\n<p><em>Rec709_ref_Isabella.0.tiff</em></p>\n<p><em>或者说挂载ARRI_LogC2Video_Classic709 LUT的结果</em></p>\n<p>上述几个文件经本人在Baselight与DaVinci Resolve操作验证，只要操作方式正确，毫无疑问能得到符合各类参考标准的画面。作为一个标准参考画面，它可以帮助你做什么呢</p>\n<ul>\n<li>无论使用ACES，或使用技术LUT做色彩管理，或软件自身色彩管理功能，都能作为一个标准图像，去验证整个色彩工作流程的正确性。</li>\n<li>帮助用户去分析，不同软件的色彩管理功能的机制（比如本人就是通过它，摸清Baselight色彩管理的各选项，与DaVinci Resolve之间的异同点）。</li>\n<li>作为标准参考图像，帮助用户去设计、分析画面风格，优化自定义LUT的设计。</li>\n</ul>\n<p>关于第三点，为何它能起到这种作用呢？其实仔细分析这图像里各种元素就能发现</p>\n<ul>\n<li>这是一个拍摄的光比较大，高动态的影像。画面中有明确的高光、阴影（特别是人物的额头一侧），以及有纯黑的背景。</li>\n<li>画面中既有灰卡，也有纯白的卡纸，连带背景的黑布，人物额头的阴影，有明确且充足的黑白灰关系可供分析。</li>\n<li>画面中有色卡，可以看到具体颜色在不同处理手法（或者使用不同LUT）后的变化规律。</li>\n<li>比过去Kodak那张Digital LAD更进一步的是，这回他们对画面的“服道化”元素，也做了更有心思的设计。浅蓝色的衣服，人物的肤色（skintone），背后的绿色植物，三者颜色直接涉及到了色轮上的六个方向。即：红（RED）、绿（Green）、蓝（Blue）、青（Cyan）、品红（Magenta）、黄（Yellow）。配合色卡、灰卡，可以非常直观地观察分析做出来的LUT或者调色参数，其对画面反差的改变细节，对常见材质、色彩的染色效果。</li>\n</ul>\n<p>理论上来说，这个ARRI Isabella Image文件，由于是个高动态的影像，不仅可用于SDR（Rec709、DCI-P3）监看环境下的工作流程验证与影像风格设计。即便是HDR的监看条件，正确设置监看环境后，这图像依然能发挥上述作用。通过这样方式设计出来的Looks，基本能保证较高的泛用性，起到对拍摄过程中的摄影曝光、灯光、美术等环节的指导性作用。简直是做DIT或调色试片时的必备良药。</p>\n<p>总结：</p>\n<p>从ARRI提供的这个“工具”，其实我们可以现学现卖地，自行针对其他摄影机，拍摄制作出类似的标准影像参考。得到一个可用于工作流程验证与影像风格设计的工具。当然了，各摄影机厂商们（特别是国产厂商），什么时候都学习模仿一下，官方提供一个这样的标准工具，不用用户盲人摸象，就最好不过啦~~</p>\n<hr>\n<p>最后再吆喝一句：</p>\n<p>ARRI官网的Camera Workflow页面，有人举手想翻译嘛？因为内容实在太多太通俗科普了。翻译完后保证你能扔掉大部分入门技术书刊了。</p>\n<hr>\n<p>长按二维码关注公众号</p>\n<p>查看更多干货</p>\n<p><img src=\"https://s2.ax1x.com/2019/05/24/ViVSN4.jpg\"></p>\n<p>如果觉得有用</p>\n<p>欢迎分享到你的朋友圈</p>\n<p>或者</p>\n<p><strong>喜欢一下作者</strong>:张来吃</p>\n","site":{"data":{}},"excerpt":"","more":"<p>原创： RayTao <a href=\"void(0);\">后期暗房小黄灯</a><em>前天</em></p>\n<p>最近陆续在给公司的DI、VFX、Online不同部门间的协作，做工作流程的优化。恰巧这半年来也有不少朋友，隔三岔五地咨询关于各种摄影机素材的IO，特效工作时的色彩管理等问题。干脆就以ARRI为例，讲一下有个标准的、可参考的图像，是如何有助于一个项目的影像质量管理的。</p>\n<p>在过去胶片年代，若要确定胶片处理过程是否规范、精确，Kodak提供了所谓的Laboratory Aim Density（简称LAD）文件，列出数据供校对。到后来数字中间片出现，Cineon Log的发明，自然也有一份Digital LAD的DPX文件用来做这种事了。</p>\n<p><a href=\"https://pan.baidu.com/s/1rEOWoCjoRD0ziWPweWhz6Q\">https://pan.baidu.com/s/1rEOWoCjoRD0ziWPweWhz6Q</a></p>\n<p>arri和柯达的两套文件以及一份arri的说明pdf，提取码：z21k</p>\n<p>最有趣的细节，在PDF的最后一页：右下角注明的Reference（参考来源），提到了Glen Kennel于1994年3月，在SMPTE的文章_Digital Film Scanning and Recording: The Technology and Practice_ 。</p>\n<p>若看过Keanu Reeves在2012年那时做的那部，讲述影像技术发展的纪录片《Side by Side》，或许会想起来，Glen Kennel？他不是ARRI的CTO么？？？</p>\n<p><img src=\"https://s2.ax1x.com/2019/05/24/ViArzq.jpg\"></p>\n<p><em>嗯，就是这位大叔。现在是ARRI的President了</em></p>\n<p>其实他去ARRI进行ALEXA数字摄影机的开发前，在Kodak就已是技术大拿。做过胶片扫描技术的研究，开发了Cineon Log规格，甚至在德州仪器研发了现在影院标配的DLP投影。其著作《Color and Mastering for Digital Cinema》基本是论文级别的教科书了。</p>\n<p>歪个楼：最近Keanu Reeves主演的新片《John Wick: Chapter 3》，口碑之好真出乎意料。据去完香港观影的朋友说，是如老式港产动作片那样的爽。当然了前两集本来就很爽……</p>\n<p>所以由于这样的经历，他去ARRI开发ALEXA的过程中，也做了类似的事情。他们做了一张同样性质的LogC图像，放在配套的软件工具ARRI Color Tool里。用户可通过它作为一个标准影像，来更好地在ARRI Color Tool软件里设计自己想要的自定义影像风格（Looks）。并将这些自定义的Looks生成为aml格式文件在ALEXA摄影机中加载。就像在别的软硬件加载LUT去预览画面一样。</p>\n<p><img src=\"https://s2.ax1x.com/2019/05/24/ViVcaF.jpg\"></p>\n<p>Kodak Digital LAD Test Image</p>\n<p><img src=\"https://s2.ax1x.com/2019/05/24/ViV5Kx.jpg\"></p>\n<p><em>ARRI Isabella Image</em></p>\n<p><em>看着拍法就挺类似的对吧~</em></p>\n<p>随着去年ARRI官网的改版，其Camera Workflow页面被重新整理过。现在它有着非常通俗完整的，从前期到后期的各类说明，犹如百科全书。为更好地帮助用户设计工作流程，新版网站提供了这ARRI Isabella Image的文件下载。</p>\n<p>下载地址在上面，压缩包有四个图像文件</p>\n<ol>\n<li>Isabella.112782.ari <strong>原始的 ARRIRAW 文件。另外三个文件均由它转换处理得到</strong></li>\n<li>LogC_ref_Isabella.0.dpx<strong>基于 ARRI LogC &#x2F; ARRI WideGamut 的 dpx 文件</strong></li>\n<li>ACES_ref_Isabella.0.exr<strong>基于 ACES Linear &#x2F; AP0 的 EXR 文件</strong></li>\n<li>Rec709_ref_Isabella.0.tiff将上述ARRIRAW文件，挂载 <strong>ARRI_LogC2Video_Classic709</strong> 的LUT（即旧版官网的 LUT Generator 提供的 <strong>K1S1</strong> LUT)，得到的Rec709监看环境下的参考画面，供用户验证对上述三个格式文件的操作。</li>\n</ol>\n<p><img src=\"https://s2.ax1x.com/2019/05/24/ViVKCd.jpg\"></p>\n<p><em>Rec709_ref_Isabella.0.tiff</em></p>\n<p><em>或者说挂载ARRI_LogC2Video_Classic709 LUT的结果</em></p>\n<p>上述几个文件经本人在Baselight与DaVinci Resolve操作验证，只要操作方式正确，毫无疑问能得到符合各类参考标准的画面。作为一个标准参考画面，它可以帮助你做什么呢</p>\n<ul>\n<li>无论使用ACES，或使用技术LUT做色彩管理，或软件自身色彩管理功能，都能作为一个标准图像，去验证整个色彩工作流程的正确性。</li>\n<li>帮助用户去分析，不同软件的色彩管理功能的机制（比如本人就是通过它，摸清Baselight色彩管理的各选项，与DaVinci Resolve之间的异同点）。</li>\n<li>作为标准参考图像，帮助用户去设计、分析画面风格，优化自定义LUT的设计。</li>\n</ul>\n<p>关于第三点，为何它能起到这种作用呢？其实仔细分析这图像里各种元素就能发现</p>\n<ul>\n<li>这是一个拍摄的光比较大，高动态的影像。画面中有明确的高光、阴影（特别是人物的额头一侧），以及有纯黑的背景。</li>\n<li>画面中既有灰卡，也有纯白的卡纸，连带背景的黑布，人物额头的阴影，有明确且充足的黑白灰关系可供分析。</li>\n<li>画面中有色卡，可以看到具体颜色在不同处理手法（或者使用不同LUT）后的变化规律。</li>\n<li>比过去Kodak那张Digital LAD更进一步的是，这回他们对画面的“服道化”元素，也做了更有心思的设计。浅蓝色的衣服，人物的肤色（skintone），背后的绿色植物，三者颜色直接涉及到了色轮上的六个方向。即：红（RED）、绿（Green）、蓝（Blue）、青（Cyan）、品红（Magenta）、黄（Yellow）。配合色卡、灰卡，可以非常直观地观察分析做出来的LUT或者调色参数，其对画面反差的改变细节，对常见材质、色彩的染色效果。</li>\n</ul>\n<p>理论上来说，这个ARRI Isabella Image文件，由于是个高动态的影像，不仅可用于SDR（Rec709、DCI-P3）监看环境下的工作流程验证与影像风格设计。即便是HDR的监看条件，正确设置监看环境后，这图像依然能发挥上述作用。通过这样方式设计出来的Looks，基本能保证较高的泛用性，起到对拍摄过程中的摄影曝光、灯光、美术等环节的指导性作用。简直是做DIT或调色试片时的必备良药。</p>\n<p>总结：</p>\n<p>从ARRI提供的这个“工具”，其实我们可以现学现卖地，自行针对其他摄影机，拍摄制作出类似的标准影像参考。得到一个可用于工作流程验证与影像风格设计的工具。当然了，各摄影机厂商们（特别是国产厂商），什么时候都学习模仿一下，官方提供一个这样的标准工具，不用用户盲人摸象，就最好不过啦~~</p>\n<hr>\n<p>最后再吆喝一句：</p>\n<p>ARRI官网的Camera Workflow页面，有人举手想翻译嘛？因为内容实在太多太通俗科普了。翻译完后保证你能扔掉大部分入门技术书刊了。</p>\n<hr>\n<p>长按二维码关注公众号</p>\n<p>查看更多干货</p>\n<p><img src=\"https://s2.ax1x.com/2019/05/24/ViVSN4.jpg\"></p>\n<p>如果觉得有用</p>\n<p>欢迎分享到你的朋友圈</p>\n<p>或者</p>\n<p><strong>喜欢一下作者</strong>:张来吃</p>\n"},{"title":"摄影师必读——为什么焦距如此重要？","id":"371","date":"2019-05-27T04:36:40.000Z","_content":"\n这种摄影方法名为板车变焦。  \n摄影机一路从远摄端变焦的广角端。  \n同时，摄影机跟着向前移动，  \n保持被摄物体带在画框内的位置和大小基本不变  \n这里呈现的是1975年斯皮尔伯格拍摄的电影《大白鲨》  \n这是电影的主人公  \n发现大白鲨正在袭击海中游泳少年的那一刻  \n视场从窄到宽的变换。将主人公及其妻子从背景中分离出来。  \n有一种游离的凝视效应，  \n主人公的表情由于迷茫而夸张  \n让我们也真真切切感受到了恐惧  \n导演用镜头语言，更确切的说是一种变焦语言  \n来作为主要的手法来表现。 主人公的恐惧和悔恨  \n因为这时候他才意识到，他应该更靠近海岸一点  \n这段影像为我们展示了电影中，在表现。  \n心理活动时非常重要的一个因素，那就是焦距。  \n选择合适的近焦距的镜头在今天尤为重要，  \n他比30年更重要，30年之前。  \n让我们让我今天来告诉你这是为什么，  \n作为一个摄影师，应该怎样去利用这一点。  \n科学技术的发展，让摄影摄像设备越来越广泛的被使用，  \n但其实。科技发展对电视以及银幕等影像呈现设备的。  \n影响也是巨大的。  \n家用电视采用了更大的、和电影相同的分辨率。  \n使得电视剧集的质量得到了很大提升。  \n以至于现代制作精良的电视剧集，  \n和电影画面之间的区别已经不太明显了。  \n这意味着这这种画面语言，已经能天天被大众所接触。  \n这种情况就导致我们整个社会，对这种电影化的画面语言  \n会产生一种直观的、程式化的体验。  \n电影摄影师和其他摄影师在很多方面是不同的。  \n但在其他的某些方面，他们仍然是一致的。  \n其中一个就是。不同焦距拍摄出来的画面  \n会让观众产生。何种不同的情绪。  \n在这部2017的电影，《请以你的名字呼唤我》。  \n导演仅用了一只库克的35毫米，S4定焦镜头。  \n在采访中，导演说，之所以只用这一个看起来有点平庸的  \n定焦镜头，是为了给观众呈现一个近乎肉眼观看体验的画面  \n这样做的好处就是  \n它消除了我们与角色之间的屏障  \n导演不再是通过镜头去叙述。  \n而是让观众感觉到自己置身于角色所处的环境中。  \n我们在选择镜头的时候，就是在决定，  \n这镜头所拍出来的画面包含有多少情绪信息。  \n广角镜头会，拉伸，加深画面的层次感。  \n但是。让他近距离拍摄的时候，会让观察者  \n产生一种与被拍摄的奇妙的联系。  \n被拍摄者仿佛与周围环境和事物分开来了，  \n所以被拍摄事物的运动，比如在画面中的倾倒，等等，  \n都被极大地夸张，  \n我们成为被摄事物所处环境的一部分，  \n我们离被摄事故越来越近。  \n直至我们与他们靠得太近，而在观察者与被拍摄事物之间  \n形成一种紧张关系，仿佛我们侵入了他们地世界。  \n著名摄影师罗杰斯狄更斯和科恩兄弟创作了  \n非常有特征性的画面拍摄技法  \n他经常用24毫米广角镜头。来拍摄单个角色的表演镜头。  \n他每次觉得画面里呈现一个演员的这种偏好，  \n给了这些画面，一种肖像画般的质感。  \n广角镜头不仅在前推的时候能给我们一种，  \n更加紧凑的喜剧或者戏剧效果，  \n后退的时候，也能更好的跟我们交代，剧情的上下文关系。  \n又给我们呈现一副主人公所在环境的、全局性的肖像画。  \n也就向我们交代了更多赞去拍摄所不能传达的信息。  \n标准镜头一般指焦距从35到50毫米之间，  \n并且用在标准35毫米传感器上的镜头，  \n因为这样的搭配给我们呈现的画面与肉眼看到的画面，  \n有极高的相似度。  \n电子取景器的可见范围要比人眼大的多，  \n所以标准镜头要做的就是。像人眼视网膜的中央视窝那样  \n形成一块锐利最清晰的图像范围。  \n我们将这个区域视为，取景的合适范围。  \n所以我们就可以用标准镜头来减少其他镜头拍摄的画面  \n所产生的不真实感。  \n用一种更接近我们人眼的观察事物的方式向观众呈现。  \n这样我们拍摄出来的事物会给他们一种  \n真实感和现实感。  \n那样我们就有更大的空间来运用构图技巧来突出主体  \n让观众产生更直观的印象。而不受焦距语言的影响。  \n值得注意的是我们的手机镜头，拍摄事物的时候，  \n成像结构并不与标准镜头一致。  \n而我们现在很明显已经适应了这种呈现形式。  \n现代人习惯于随手拍摄。  \n这种做法让其实是让被摄物体脱离了周围环境。  \n而不是考虑到被摄事物与周围事物的有机组合。  \n其实，我们在用标准镜头的来给全局构图的时候，  \n任何有机组合都会使被摄物体更加出彩  \n同时，告诉观众被摄物体存在某种不同于周围事物的重要性  \n让观众知道拍摄这个主题的意义所在。  \n远摄镜头呈现事物的方式与广角镜头非常不同  \n远摄镜头反映空间的方式与广角镜头非常不同，  \n在这种事情下，观众会感觉空间被压缩了，  \n所有事物在一个平面上。  \n他会给观众一种嗯，画面，更加。平安的感觉。  \n不同于广角镜头所擅长的人文环境，  \n远摄镜头的成像特点经常用来拍摄我们不能靠近的场景，  \n例如野生动物，名人，大事件，运动员等等。  \n还有就是没什么实质内容的过渡场景。  \n肖像经常用远摄镜头拍摄，因为  \n因为这种没有情感特征的距离感，会增加被摄主体的优越感。  \n说白了，我们用远摄镜头的时候。我们就不再在场景内。  \n我们不和被摄事物是一体的，而是一个远远的旁观者。  \n因为这种感觉已经被广泛接受了。  \n所以，当我们把这种拍摄方式应用到其他场景时。  \n比如给街上的陌生人拍一副肖像，会给人一种庄严肃穆的感觉。  \n这明显是广角镜头所不能赋予的，  \n这时被摄主体和我们不在同一个世界中，  \n而只是一个擦肩而过的陌生人，就像所有人一样。  \n用远摄镜头将被摄主体由我们分开，  \n会让我们感觉被摄主体是重要的，是高高在上的。  \n选择合适的焦距，不仅仅是为了用合适的方法呈现形象  \n或者把想要呈现的事物都包含在画框里  \n画面内各要素之间的互动也受焦距影响，  \n这样焦距也就进一步影响了  \n观众对这种互动所产生的情绪。  \n选择镜头焦距的时候，  \n要考虑到你想让观众思考什么，  \n你为什么拍这些东西。  \n你想用这些东西表达什么。  \n所以，选择合适的焦距呈现场景，  \n来与你的观众进行精神上的交流吧，  \n因为不同的焦距呈现的画面，她们所传达的意义将  \n完全不同。","source":"_posts/摄影师必读-为什么焦距如此重要？.md","raw":"---\ntitle: 摄影师必读——为什么焦距如此重要？\ntags:\n  - 未分类\nid: '371'\ndate: 2019-05-27 12:36:40\n---\n\n这种摄影方法名为板车变焦。  \n摄影机一路从远摄端变焦的广角端。  \n同时，摄影机跟着向前移动，  \n保持被摄物体带在画框内的位置和大小基本不变  \n这里呈现的是1975年斯皮尔伯格拍摄的电影《大白鲨》  \n这是电影的主人公  \n发现大白鲨正在袭击海中游泳少年的那一刻  \n视场从窄到宽的变换。将主人公及其妻子从背景中分离出来。  \n有一种游离的凝视效应，  \n主人公的表情由于迷茫而夸张  \n让我们也真真切切感受到了恐惧  \n导演用镜头语言，更确切的说是一种变焦语言  \n来作为主要的手法来表现。 主人公的恐惧和悔恨  \n因为这时候他才意识到，他应该更靠近海岸一点  \n这段影像为我们展示了电影中，在表现。  \n心理活动时非常重要的一个因素，那就是焦距。  \n选择合适的近焦距的镜头在今天尤为重要，  \n他比30年更重要，30年之前。  \n让我们让我今天来告诉你这是为什么，  \n作为一个摄影师，应该怎样去利用这一点。  \n科学技术的发展，让摄影摄像设备越来越广泛的被使用，  \n但其实。科技发展对电视以及银幕等影像呈现设备的。  \n影响也是巨大的。  \n家用电视采用了更大的、和电影相同的分辨率。  \n使得电视剧集的质量得到了很大提升。  \n以至于现代制作精良的电视剧集，  \n和电影画面之间的区别已经不太明显了。  \n这意味着这这种画面语言，已经能天天被大众所接触。  \n这种情况就导致我们整个社会，对这种电影化的画面语言  \n会产生一种直观的、程式化的体验。  \n电影摄影师和其他摄影师在很多方面是不同的。  \n但在其他的某些方面，他们仍然是一致的。  \n其中一个就是。不同焦距拍摄出来的画面  \n会让观众产生。何种不同的情绪。  \n在这部2017的电影，《请以你的名字呼唤我》。  \n导演仅用了一只库克的35毫米，S4定焦镜头。  \n在采访中，导演说，之所以只用这一个看起来有点平庸的  \n定焦镜头，是为了给观众呈现一个近乎肉眼观看体验的画面  \n这样做的好处就是  \n它消除了我们与角色之间的屏障  \n导演不再是通过镜头去叙述。  \n而是让观众感觉到自己置身于角色所处的环境中。  \n我们在选择镜头的时候，就是在决定，  \n这镜头所拍出来的画面包含有多少情绪信息。  \n广角镜头会，拉伸，加深画面的层次感。  \n但是。让他近距离拍摄的时候，会让观察者  \n产生一种与被拍摄的奇妙的联系。  \n被拍摄者仿佛与周围环境和事物分开来了，  \n所以被拍摄事物的运动，比如在画面中的倾倒，等等，  \n都被极大地夸张，  \n我们成为被摄事物所处环境的一部分，  \n我们离被摄事故越来越近。  \n直至我们与他们靠得太近，而在观察者与被拍摄事物之间  \n形成一种紧张关系，仿佛我们侵入了他们地世界。  \n著名摄影师罗杰斯狄更斯和科恩兄弟创作了  \n非常有特征性的画面拍摄技法  \n他经常用24毫米广角镜头。来拍摄单个角色的表演镜头。  \n他每次觉得画面里呈现一个演员的这种偏好，  \n给了这些画面，一种肖像画般的质感。  \n广角镜头不仅在前推的时候能给我们一种，  \n更加紧凑的喜剧或者戏剧效果，  \n后退的时候，也能更好的跟我们交代，剧情的上下文关系。  \n又给我们呈现一副主人公所在环境的、全局性的肖像画。  \n也就向我们交代了更多赞去拍摄所不能传达的信息。  \n标准镜头一般指焦距从35到50毫米之间，  \n并且用在标准35毫米传感器上的镜头，  \n因为这样的搭配给我们呈现的画面与肉眼看到的画面，  \n有极高的相似度。  \n电子取景器的可见范围要比人眼大的多，  \n所以标准镜头要做的就是。像人眼视网膜的中央视窝那样  \n形成一块锐利最清晰的图像范围。  \n我们将这个区域视为，取景的合适范围。  \n所以我们就可以用标准镜头来减少其他镜头拍摄的画面  \n所产生的不真实感。  \n用一种更接近我们人眼的观察事物的方式向观众呈现。  \n这样我们拍摄出来的事物会给他们一种  \n真实感和现实感。  \n那样我们就有更大的空间来运用构图技巧来突出主体  \n让观众产生更直观的印象。而不受焦距语言的影响。  \n值得注意的是我们的手机镜头，拍摄事物的时候，  \n成像结构并不与标准镜头一致。  \n而我们现在很明显已经适应了这种呈现形式。  \n现代人习惯于随手拍摄。  \n这种做法让其实是让被摄物体脱离了周围环境。  \n而不是考虑到被摄事物与周围事物的有机组合。  \n其实，我们在用标准镜头的来给全局构图的时候，  \n任何有机组合都会使被摄物体更加出彩  \n同时，告诉观众被摄物体存在某种不同于周围事物的重要性  \n让观众知道拍摄这个主题的意义所在。  \n远摄镜头呈现事物的方式与广角镜头非常不同  \n远摄镜头反映空间的方式与广角镜头非常不同，  \n在这种事情下，观众会感觉空间被压缩了，  \n所有事物在一个平面上。  \n他会给观众一种嗯，画面，更加。平安的感觉。  \n不同于广角镜头所擅长的人文环境，  \n远摄镜头的成像特点经常用来拍摄我们不能靠近的场景，  \n例如野生动物，名人，大事件，运动员等等。  \n还有就是没什么实质内容的过渡场景。  \n肖像经常用远摄镜头拍摄，因为  \n因为这种没有情感特征的距离感，会增加被摄主体的优越感。  \n说白了，我们用远摄镜头的时候。我们就不再在场景内。  \n我们不和被摄事物是一体的，而是一个远远的旁观者。  \n因为这种感觉已经被广泛接受了。  \n所以，当我们把这种拍摄方式应用到其他场景时。  \n比如给街上的陌生人拍一副肖像，会给人一种庄严肃穆的感觉。  \n这明显是广角镜头所不能赋予的，  \n这时被摄主体和我们不在同一个世界中，  \n而只是一个擦肩而过的陌生人，就像所有人一样。  \n用远摄镜头将被摄主体由我们分开，  \n会让我们感觉被摄主体是重要的，是高高在上的。  \n选择合适的焦距，不仅仅是为了用合适的方法呈现形象  \n或者把想要呈现的事物都包含在画框里  \n画面内各要素之间的互动也受焦距影响，  \n这样焦距也就进一步影响了  \n观众对这种互动所产生的情绪。  \n选择镜头焦距的时候，  \n要考虑到你想让观众思考什么，  \n你为什么拍这些东西。  \n你想用这些东西表达什么。  \n所以，选择合适的焦距呈现场景，  \n来与你的观众进行精神上的交流吧，  \n因为不同的焦距呈现的画面，她们所传达的意义将  \n完全不同。","slug":"摄影师必读-为什么焦距如此重要？","published":1,"updated":"2022-07-20T05:04:16.765Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6y0003xc0ndapmj9pbe","content":"<p>这种摄影方法名为板车变焦。<br>摄影机一路从远摄端变焦的广角端。<br>同时，摄影机跟着向前移动，<br>保持被摄物体带在画框内的位置和大小基本不变<br>这里呈现的是1975年斯皮尔伯格拍摄的电影《大白鲨》<br>这是电影的主人公<br>发现大白鲨正在袭击海中游泳少年的那一刻<br>视场从窄到宽的变换。将主人公及其妻子从背景中分离出来。<br>有一种游离的凝视效应，<br>主人公的表情由于迷茫而夸张<br>让我们也真真切切感受到了恐惧<br>导演用镜头语言，更确切的说是一种变焦语言<br>来作为主要的手法来表现。 主人公的恐惧和悔恨<br>因为这时候他才意识到，他应该更靠近海岸一点<br>这段影像为我们展示了电影中，在表现。<br>心理活动时非常重要的一个因素，那就是焦距。<br>选择合适的近焦距的镜头在今天尤为重要，<br>他比30年更重要，30年之前。<br>让我们让我今天来告诉你这是为什么，<br>作为一个摄影师，应该怎样去利用这一点。<br>科学技术的发展，让摄影摄像设备越来越广泛的被使用，<br>但其实。科技发展对电视以及银幕等影像呈现设备的。<br>影响也是巨大的。<br>家用电视采用了更大的、和电影相同的分辨率。<br>使得电视剧集的质量得到了很大提升。<br>以至于现代制作精良的电视剧集，<br>和电影画面之间的区别已经不太明显了。<br>这意味着这这种画面语言，已经能天天被大众所接触。<br>这种情况就导致我们整个社会，对这种电影化的画面语言<br>会产生一种直观的、程式化的体验。<br>电影摄影师和其他摄影师在很多方面是不同的。<br>但在其他的某些方面，他们仍然是一致的。<br>其中一个就是。不同焦距拍摄出来的画面<br>会让观众产生。何种不同的情绪。<br>在这部2017的电影，《请以你的名字呼唤我》。<br>导演仅用了一只库克的35毫米，S4定焦镜头。<br>在采访中，导演说，之所以只用这一个看起来有点平庸的<br>定焦镜头，是为了给观众呈现一个近乎肉眼观看体验的画面<br>这样做的好处就是<br>它消除了我们与角色之间的屏障<br>导演不再是通过镜头去叙述。<br>而是让观众感觉到自己置身于角色所处的环境中。<br>我们在选择镜头的时候，就是在决定，<br>这镜头所拍出来的画面包含有多少情绪信息。<br>广角镜头会，拉伸，加深画面的层次感。<br>但是。让他近距离拍摄的时候，会让观察者<br>产生一种与被拍摄的奇妙的联系。<br>被拍摄者仿佛与周围环境和事物分开来了，<br>所以被拍摄事物的运动，比如在画面中的倾倒，等等，<br>都被极大地夸张，<br>我们成为被摄事物所处环境的一部分，<br>我们离被摄事故越来越近。<br>直至我们与他们靠得太近，而在观察者与被拍摄事物之间<br>形成一种紧张关系，仿佛我们侵入了他们地世界。<br>著名摄影师罗杰斯狄更斯和科恩兄弟创作了<br>非常有特征性的画面拍摄技法<br>他经常用24毫米广角镜头。来拍摄单个角色的表演镜头。<br>他每次觉得画面里呈现一个演员的这种偏好，<br>给了这些画面，一种肖像画般的质感。<br>广角镜头不仅在前推的时候能给我们一种，<br>更加紧凑的喜剧或者戏剧效果，<br>后退的时候，也能更好的跟我们交代，剧情的上下文关系。<br>又给我们呈现一副主人公所在环境的、全局性的肖像画。<br>也就向我们交代了更多赞去拍摄所不能传达的信息。<br>标准镜头一般指焦距从35到50毫米之间，<br>并且用在标准35毫米传感器上的镜头，<br>因为这样的搭配给我们呈现的画面与肉眼看到的画面，<br>有极高的相似度。<br>电子取景器的可见范围要比人眼大的多，<br>所以标准镜头要做的就是。像人眼视网膜的中央视窝那样<br>形成一块锐利最清晰的图像范围。<br>我们将这个区域视为，取景的合适范围。<br>所以我们就可以用标准镜头来减少其他镜头拍摄的画面<br>所产生的不真实感。<br>用一种更接近我们人眼的观察事物的方式向观众呈现。<br>这样我们拍摄出来的事物会给他们一种<br>真实感和现实感。<br>那样我们就有更大的空间来运用构图技巧来突出主体<br>让观众产生更直观的印象。而不受焦距语言的影响。<br>值得注意的是我们的手机镜头，拍摄事物的时候，<br>成像结构并不与标准镜头一致。<br>而我们现在很明显已经适应了这种呈现形式。<br>现代人习惯于随手拍摄。<br>这种做法让其实是让被摄物体脱离了周围环境。<br>而不是考虑到被摄事物与周围事物的有机组合。<br>其实，我们在用标准镜头的来给全局构图的时候，<br>任何有机组合都会使被摄物体更加出彩<br>同时，告诉观众被摄物体存在某种不同于周围事物的重要性<br>让观众知道拍摄这个主题的意义所在。<br>远摄镜头呈现事物的方式与广角镜头非常不同<br>远摄镜头反映空间的方式与广角镜头非常不同，<br>在这种事情下，观众会感觉空间被压缩了，<br>所有事物在一个平面上。<br>他会给观众一种嗯，画面，更加。平安的感觉。<br>不同于广角镜头所擅长的人文环境，<br>远摄镜头的成像特点经常用来拍摄我们不能靠近的场景，<br>例如野生动物，名人，大事件，运动员等等。<br>还有就是没什么实质内容的过渡场景。<br>肖像经常用远摄镜头拍摄，因为<br>因为这种没有情感特征的距离感，会增加被摄主体的优越感。<br>说白了，我们用远摄镜头的时候。我们就不再在场景内。<br>我们不和被摄事物是一体的，而是一个远远的旁观者。<br>因为这种感觉已经被广泛接受了。<br>所以，当我们把这种拍摄方式应用到其他场景时。<br>比如给街上的陌生人拍一副肖像，会给人一种庄严肃穆的感觉。<br>这明显是广角镜头所不能赋予的，<br>这时被摄主体和我们不在同一个世界中，<br>而只是一个擦肩而过的陌生人，就像所有人一样。<br>用远摄镜头将被摄主体由我们分开，<br>会让我们感觉被摄主体是重要的，是高高在上的。<br>选择合适的焦距，不仅仅是为了用合适的方法呈现形象<br>或者把想要呈现的事物都包含在画框里<br>画面内各要素之间的互动也受焦距影响，<br>这样焦距也就进一步影响了<br>观众对这种互动所产生的情绪。<br>选择镜头焦距的时候，<br>要考虑到你想让观众思考什么，<br>你为什么拍这些东西。<br>你想用这些东西表达什么。<br>所以，选择合适的焦距呈现场景，<br>来与你的观众进行精神上的交流吧，<br>因为不同的焦距呈现的画面，她们所传达的意义将<br>完全不同。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>这种摄影方法名为板车变焦。<br>摄影机一路从远摄端变焦的广角端。<br>同时，摄影机跟着向前移动，<br>保持被摄物体带在画框内的位置和大小基本不变<br>这里呈现的是1975年斯皮尔伯格拍摄的电影《大白鲨》<br>这是电影的主人公<br>发现大白鲨正在袭击海中游泳少年的那一刻<br>视场从窄到宽的变换。将主人公及其妻子从背景中分离出来。<br>有一种游离的凝视效应，<br>主人公的表情由于迷茫而夸张<br>让我们也真真切切感受到了恐惧<br>导演用镜头语言，更确切的说是一种变焦语言<br>来作为主要的手法来表现。 主人公的恐惧和悔恨<br>因为这时候他才意识到，他应该更靠近海岸一点<br>这段影像为我们展示了电影中，在表现。<br>心理活动时非常重要的一个因素，那就是焦距。<br>选择合适的近焦距的镜头在今天尤为重要，<br>他比30年更重要，30年之前。<br>让我们让我今天来告诉你这是为什么，<br>作为一个摄影师，应该怎样去利用这一点。<br>科学技术的发展，让摄影摄像设备越来越广泛的被使用，<br>但其实。科技发展对电视以及银幕等影像呈现设备的。<br>影响也是巨大的。<br>家用电视采用了更大的、和电影相同的分辨率。<br>使得电视剧集的质量得到了很大提升。<br>以至于现代制作精良的电视剧集，<br>和电影画面之间的区别已经不太明显了。<br>这意味着这这种画面语言，已经能天天被大众所接触。<br>这种情况就导致我们整个社会，对这种电影化的画面语言<br>会产生一种直观的、程式化的体验。<br>电影摄影师和其他摄影师在很多方面是不同的。<br>但在其他的某些方面，他们仍然是一致的。<br>其中一个就是。不同焦距拍摄出来的画面<br>会让观众产生。何种不同的情绪。<br>在这部2017的电影，《请以你的名字呼唤我》。<br>导演仅用了一只库克的35毫米，S4定焦镜头。<br>在采访中，导演说，之所以只用这一个看起来有点平庸的<br>定焦镜头，是为了给观众呈现一个近乎肉眼观看体验的画面<br>这样做的好处就是<br>它消除了我们与角色之间的屏障<br>导演不再是通过镜头去叙述。<br>而是让观众感觉到自己置身于角色所处的环境中。<br>我们在选择镜头的时候，就是在决定，<br>这镜头所拍出来的画面包含有多少情绪信息。<br>广角镜头会，拉伸，加深画面的层次感。<br>但是。让他近距离拍摄的时候，会让观察者<br>产生一种与被拍摄的奇妙的联系。<br>被拍摄者仿佛与周围环境和事物分开来了，<br>所以被拍摄事物的运动，比如在画面中的倾倒，等等，<br>都被极大地夸张，<br>我们成为被摄事物所处环境的一部分，<br>我们离被摄事故越来越近。<br>直至我们与他们靠得太近，而在观察者与被拍摄事物之间<br>形成一种紧张关系，仿佛我们侵入了他们地世界。<br>著名摄影师罗杰斯狄更斯和科恩兄弟创作了<br>非常有特征性的画面拍摄技法<br>他经常用24毫米广角镜头。来拍摄单个角色的表演镜头。<br>他每次觉得画面里呈现一个演员的这种偏好，<br>给了这些画面，一种肖像画般的质感。<br>广角镜头不仅在前推的时候能给我们一种，<br>更加紧凑的喜剧或者戏剧效果，<br>后退的时候，也能更好的跟我们交代，剧情的上下文关系。<br>又给我们呈现一副主人公所在环境的、全局性的肖像画。<br>也就向我们交代了更多赞去拍摄所不能传达的信息。<br>标准镜头一般指焦距从35到50毫米之间，<br>并且用在标准35毫米传感器上的镜头，<br>因为这样的搭配给我们呈现的画面与肉眼看到的画面，<br>有极高的相似度。<br>电子取景器的可见范围要比人眼大的多，<br>所以标准镜头要做的就是。像人眼视网膜的中央视窝那样<br>形成一块锐利最清晰的图像范围。<br>我们将这个区域视为，取景的合适范围。<br>所以我们就可以用标准镜头来减少其他镜头拍摄的画面<br>所产生的不真实感。<br>用一种更接近我们人眼的观察事物的方式向观众呈现。<br>这样我们拍摄出来的事物会给他们一种<br>真实感和现实感。<br>那样我们就有更大的空间来运用构图技巧来突出主体<br>让观众产生更直观的印象。而不受焦距语言的影响。<br>值得注意的是我们的手机镜头，拍摄事物的时候，<br>成像结构并不与标准镜头一致。<br>而我们现在很明显已经适应了这种呈现形式。<br>现代人习惯于随手拍摄。<br>这种做法让其实是让被摄物体脱离了周围环境。<br>而不是考虑到被摄事物与周围事物的有机组合。<br>其实，我们在用标准镜头的来给全局构图的时候，<br>任何有机组合都会使被摄物体更加出彩<br>同时，告诉观众被摄物体存在某种不同于周围事物的重要性<br>让观众知道拍摄这个主题的意义所在。<br>远摄镜头呈现事物的方式与广角镜头非常不同<br>远摄镜头反映空间的方式与广角镜头非常不同，<br>在这种事情下，观众会感觉空间被压缩了，<br>所有事物在一个平面上。<br>他会给观众一种嗯，画面，更加。平安的感觉。<br>不同于广角镜头所擅长的人文环境，<br>远摄镜头的成像特点经常用来拍摄我们不能靠近的场景，<br>例如野生动物，名人，大事件，运动员等等。<br>还有就是没什么实质内容的过渡场景。<br>肖像经常用远摄镜头拍摄，因为<br>因为这种没有情感特征的距离感，会增加被摄主体的优越感。<br>说白了，我们用远摄镜头的时候。我们就不再在场景内。<br>我们不和被摄事物是一体的，而是一个远远的旁观者。<br>因为这种感觉已经被广泛接受了。<br>所以，当我们把这种拍摄方式应用到其他场景时。<br>比如给街上的陌生人拍一副肖像，会给人一种庄严肃穆的感觉。<br>这明显是广角镜头所不能赋予的，<br>这时被摄主体和我们不在同一个世界中，<br>而只是一个擦肩而过的陌生人，就像所有人一样。<br>用远摄镜头将被摄主体由我们分开，<br>会让我们感觉被摄主体是重要的，是高高在上的。<br>选择合适的焦距，不仅仅是为了用合适的方法呈现形象<br>或者把想要呈现的事物都包含在画框里<br>画面内各要素之间的互动也受焦距影响，<br>这样焦距也就进一步影响了<br>观众对这种互动所产生的情绪。<br>选择镜头焦距的时候，<br>要考虑到你想让观众思考什么，<br>你为什么拍这些东西。<br>你想用这些东西表达什么。<br>所以，选择合适的焦距呈现场景，<br>来与你的观众进行精神上的交流吧，<br>因为不同的焦距呈现的画面，她们所传达的意义将<br>完全不同。</p>\n"},{"title":"航天精神","author":"Ar-Sr-Na","avatar":"https://res.arsrna.cn/icon2.jpg","authorLink":"www.arsrna.cn","authorAbout":"业余无线电，航天爱好者，个人网站www.arsrna.cn","authorDesc":"业余无线电，航天爱好者，个人网站www.arsrna.cn","comments":1,"date":"2020-08-11T05:43:14.000Z","keywords":"航空,航天,载人航天,CASC,科技","description":null,"index_img":"https://res.arsrna.cn/images/spirit.jpg","_content":"中国航天起源于1956年。经过几十年几代航天人的不断努力和奋斗，中国航天取得了十足的发展，走出了一条具有鲜明中国特色的发展道路。中国航天人牢记党和人民的重托，满怀为国争光的雄心壮志，自强不息，顽强拼搏，团结协作，开拓创新，取得了一个又一个辉煌成果，铸就了中国航天人特别能吃苦、特别能战斗、特别能攻关、特别能奉献的载人航天精神。\n\n1956年10月8日，航天科技集团公司的前身-国防部第五研究院正式成立。根据聂荣臻副总理的提议，经毛泽东主席、周恩来总理批准，确定国防部五院的建院方针是“自力更生为主，力争外援和利用资本主义国家已有的科学成果”。“自力更生”精神孕育了我国最初的航天精神。1986年底，当时的航天工业部党组对航天精神进行了提炼和归纳，提出了“自力更生、大力协同、尊重科学、严谨务实、献身事业、勇于攀登”的航天传统精神。以后根据聂荣臻副总理倡导的\"自力更生、艰苦奋斗、大力协同、无私奉献\"的精神，结合航天科技工业的具体特点，对航天传统精神作了新的概括和提炼，表述为“自力更生、艰苦奋斗、大力协同、无私奉献、严谨务实、勇于攀登”。\n\n1999年9月18日，在建国50周年前夕，中共中央、国务院、中央军委在北京隆重召开了表彰为研制“两弹一星”做出突出贡献的科技专家大会。江泽民同志在会上提出并精辟阐述了在“两弹一星”研制过程中形成的“两弹一星”精神，这就是“热爱祖国、无私奉献、自力更生、艰苦奋斗、大力协同，勇于登攀”。\n\n2003年11月7日，在中共中央、国务院、中央军委召开的庆祝我国首次载人航天飞行圆满成功大会上，胡锦涛总书记指出， 伟大的事业孕育伟大的精神。在长期的奋斗中，我国航天工作者不仅创造了非凡的业绩，而且铸就了特别能吃苦、特别能战斗、特别能攻关、特别能奉献的载人航天精神。\n\n2005年11月26日，党中央、国务院、中央军委在人民大会堂隆重举行庆祝神舟六号载人航天飞行圆满成功大会。胡锦涛总书记把载人航天精神进一步概括为：热爱祖国、为国争光的坚定信念，勇于登攀、敢于超越的进取意识，科学求实、严肃认真的工作作风，同舟共济、团结协作的大局观念和淡泊名利、默默奉献的崇高品质。\n","source":"_posts/航天精神.md","raw":"---\ntitle: 航天精神\nauthor: Ar-Sr-Na\navatar: 'https://res.arsrna.cn/icon2.jpg'\nauthorLink: www.arsrna.cn\nauthorAbout: 业余无线电，航天爱好者，个人网站www.arsrna.cn\nauthorDesc: 业余无线电，航天爱好者，个人网站www.arsrna.cn\ncategories: 技术\ncomments: true\ndate: 2020-08-11 13:43:14\ntags:\nkeywords: 航空,航天,载人航天,CASC,科技\ndescription:\nindex_img: 'https://res.arsrna.cn/images/spirit.jpg'\n---\n中国航天起源于1956年。经过几十年几代航天人的不断努力和奋斗，中国航天取得了十足的发展，走出了一条具有鲜明中国特色的发展道路。中国航天人牢记党和人民的重托，满怀为国争光的雄心壮志，自强不息，顽强拼搏，团结协作，开拓创新，取得了一个又一个辉煌成果，铸就了中国航天人特别能吃苦、特别能战斗、特别能攻关、特别能奉献的载人航天精神。\n\n1956年10月8日，航天科技集团公司的前身-国防部第五研究院正式成立。根据聂荣臻副总理的提议，经毛泽东主席、周恩来总理批准，确定国防部五院的建院方针是“自力更生为主，力争外援和利用资本主义国家已有的科学成果”。“自力更生”精神孕育了我国最初的航天精神。1986年底，当时的航天工业部党组对航天精神进行了提炼和归纳，提出了“自力更生、大力协同、尊重科学、严谨务实、献身事业、勇于攀登”的航天传统精神。以后根据聂荣臻副总理倡导的\"自力更生、艰苦奋斗、大力协同、无私奉献\"的精神，结合航天科技工业的具体特点，对航天传统精神作了新的概括和提炼，表述为“自力更生、艰苦奋斗、大力协同、无私奉献、严谨务实、勇于攀登”。\n\n1999年9月18日，在建国50周年前夕，中共中央、国务院、中央军委在北京隆重召开了表彰为研制“两弹一星”做出突出贡献的科技专家大会。江泽民同志在会上提出并精辟阐述了在“两弹一星”研制过程中形成的“两弹一星”精神，这就是“热爱祖国、无私奉献、自力更生、艰苦奋斗、大力协同，勇于登攀”。\n\n2003年11月7日，在中共中央、国务院、中央军委召开的庆祝我国首次载人航天飞行圆满成功大会上，胡锦涛总书记指出， 伟大的事业孕育伟大的精神。在长期的奋斗中，我国航天工作者不仅创造了非凡的业绩，而且铸就了特别能吃苦、特别能战斗、特别能攻关、特别能奉献的载人航天精神。\n\n2005年11月26日，党中央、国务院、中央军委在人民大会堂隆重举行庆祝神舟六号载人航天飞行圆满成功大会。胡锦涛总书记把载人航天精神进一步概括为：热爱祖国、为国争光的坚定信念，勇于登攀、敢于超越的进取意识，科学求实、严肃认真的工作作风，同舟共济、团结协作的大局观念和淡泊名利、默默奉献的崇高品质。\n","slug":"航天精神","published":1,"updated":"2023-01-17T08:55:38.576Z","layout":"post","photos":[],"link":"","_id":"clod0d6y00041c0nd7ukp3fpi","content":"<p>中国航天起源于1956年。经过几十年几代航天人的不断努力和奋斗，中国航天取得了十足的发展，走出了一条具有鲜明中国特色的发展道路。中国航天人牢记党和人民的重托，满怀为国争光的雄心壮志，自强不息，顽强拼搏，团结协作，开拓创新，取得了一个又一个辉煌成果，铸就了中国航天人特别能吃苦、特别能战斗、特别能攻关、特别能奉献的载人航天精神。</p>\n<p>1956年10月8日，航天科技集团公司的前身-国防部第五研究院正式成立。根据聂荣臻副总理的提议，经毛泽东主席、周恩来总理批准，确定国防部五院的建院方针是“自力更生为主，力争外援和利用资本主义国家已有的科学成果”。“自力更生”精神孕育了我国最初的航天精神。1986年底，当时的航天工业部党组对航天精神进行了提炼和归纳，提出了“自力更生、大力协同、尊重科学、严谨务实、献身事业、勇于攀登”的航天传统精神。以后根据聂荣臻副总理倡导的”自力更生、艰苦奋斗、大力协同、无私奉献”的精神，结合航天科技工业的具体特点，对航天传统精神作了新的概括和提炼，表述为“自力更生、艰苦奋斗、大力协同、无私奉献、严谨务实、勇于攀登”。</p>\n<p>1999年9月18日，在建国50周年前夕，中共中央、国务院、中央军委在北京隆重召开了表彰为研制“两弹一星”做出突出贡献的科技专家大会。江泽民同志在会上提出并精辟阐述了在“两弹一星”研制过程中形成的“两弹一星”精神，这就是“热爱祖国、无私奉献、自力更生、艰苦奋斗、大力协同，勇于登攀”。</p>\n<p>2003年11月7日，在中共中央、国务院、中央军委召开的庆祝我国首次载人航天飞行圆满成功大会上，胡锦涛总书记指出， 伟大的事业孕育伟大的精神。在长期的奋斗中，我国航天工作者不仅创造了非凡的业绩，而且铸就了特别能吃苦、特别能战斗、特别能攻关、特别能奉献的载人航天精神。</p>\n<p>2005年11月26日，党中央、国务院、中央军委在人民大会堂隆重举行庆祝神舟六号载人航天飞行圆满成功大会。胡锦涛总书记把载人航天精神进一步概括为：热爱祖国、为国争光的坚定信念，勇于登攀、敢于超越的进取意识，科学求实、严肃认真的工作作风，同舟共济、团结协作的大局观念和淡泊名利、默默奉献的崇高品质。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>中国航天起源于1956年。经过几十年几代航天人的不断努力和奋斗，中国航天取得了十足的发展，走出了一条具有鲜明中国特色的发展道路。中国航天人牢记党和人民的重托，满怀为国争光的雄心壮志，自强不息，顽强拼搏，团结协作，开拓创新，取得了一个又一个辉煌成果，铸就了中国航天人特别能吃苦、特别能战斗、特别能攻关、特别能奉献的载人航天精神。</p>\n<p>1956年10月8日，航天科技集团公司的前身-国防部第五研究院正式成立。根据聂荣臻副总理的提议，经毛泽东主席、周恩来总理批准，确定国防部五院的建院方针是“自力更生为主，力争外援和利用资本主义国家已有的科学成果”。“自力更生”精神孕育了我国最初的航天精神。1986年底，当时的航天工业部党组对航天精神进行了提炼和归纳，提出了“自力更生、大力协同、尊重科学、严谨务实、献身事业、勇于攀登”的航天传统精神。以后根据聂荣臻副总理倡导的”自力更生、艰苦奋斗、大力协同、无私奉献”的精神，结合航天科技工业的具体特点，对航天传统精神作了新的概括和提炼，表述为“自力更生、艰苦奋斗、大力协同、无私奉献、严谨务实、勇于攀登”。</p>\n<p>1999年9月18日，在建国50周年前夕，中共中央、国务院、中央军委在北京隆重召开了表彰为研制“两弹一星”做出突出贡献的科技专家大会。江泽民同志在会上提出并精辟阐述了在“两弹一星”研制过程中形成的“两弹一星”精神，这就是“热爱祖国、无私奉献、自力更生、艰苦奋斗、大力协同，勇于登攀”。</p>\n<p>2003年11月7日，在中共中央、国务院、中央军委召开的庆祝我国首次载人航天飞行圆满成功大会上，胡锦涛总书记指出， 伟大的事业孕育伟大的精神。在长期的奋斗中，我国航天工作者不仅创造了非凡的业绩，而且铸就了特别能吃苦、特别能战斗、特别能攻关、特别能奉献的载人航天精神。</p>\n<p>2005年11月26日，党中央、国务院、中央军委在人民大会堂隆重举行庆祝神舟六号载人航天飞行圆满成功大会。胡锦涛总书记把载人航天精神进一步概括为：热爱祖国、为国争光的坚定信念，勇于登攀、敢于超越的进取意识，科学求实、严肃认真的工作作风，同舟共济、团结协作的大局观念和淡泊名利、默默奉献的崇高品质。</p>\n"},{"title":"斯坦尼康M1-volt系统简介steadicam微电影摄影师专业技术论坛","id":"357","date":"2019-05-24T05:08:46.000Z","_content":"\n[https://www.bilibili.com/video/av53299397/](https://www.bilibili.com/video/av53299397/)\n\n译自油管\n\n你们好，ar-sr-na的观众们，最新消息，特大新闻  \n我是gb，斯坦尼康的发明者。  \n自1974年发明以来，对，这是原型，那儿是机械臂和马甲，  \n这是快装板。马上在好莱坞新落成的学院影厅  \n有一个活动，我们要去那儿展示这个原型  \n但是，自从它发明以来，重心必须在万向架之下，为了方便  \n控制，他必须头轻脚重，但你知道那没什么，就那样设计吧  \n我们已经用它拍了很多好电影，它很好用  \n但是，那样的坏处是如果你不熟悉怎样操作它，  \n他会有钟摆效应  \n现在好了，史上首次，我们能让你保持平衡，让万向架  \n始终直立，没有脚重头轻的感觉，没有钟摆效应。  \n时至今日，组装不当、人为的和模拟的脚重头轻都为了一个目的  \n就是使它都能自己保持直立静止，这能迅速提升你的操作水平。  \n我的同事cf等人会给你演示这个特性，这就是我们新推出  \n的M1-闪电，在我看来迄今为止最好的斯坦尼康系统。  \n大家好，我就是cf,我带大家看看M1闪电，这就是M1闪电，  \n放在斯坦尼康万向架周围，看，不看他的话，这是一个常规  \n斯坦尼康系统，常用的组装模式，机器在上面，监视器  \n在前面，电池在后面，大家都很熟悉了，作为一位斯坦尼康  \n摄影师，我们一手抓住万向架中间的垂直支架来控制三轴  \n运动，包括左右，上下和我们最不喜欢用的——横移  \n所有移镜中我们最不想把注意力放在横移上，但它恰恰是最  \n浪费注意力的。而M1闪电要做的正是控制横移而保持垂直  \n静止，现在我打开它，这个系统马上有了一种模拟出来的  \n脚重头轻的效果，所以它归位以后它不再有钟摆效应，  \n上下运镜也是如此，可见它恢复垂直以后不再摇摆。  \n现在我再演示一遍M1闪电开启和没有M1闪电的  \n常规斯坦尼康之间的区别，常规斯坦尼康会一直这样  \n前后或者左右摇摆  \n除非你再腾出手来去扶正它  \n现在开启M1闪电，它会替你扶正它让它停止摇摆  \n这样就让你可以集中精力在操作其他有用的镜头运动上  \n例如镜头的衔接性、画面的叙述性，想想脚下的运动路线  \n等等，而不是总是担心画面是不是水平。  \n斯坦尼康能做多种运镜，例如这样向前行进，或者换方向  \n移动，加快速度的时候经常要像这样换个姿势，甚至跑起来  \n，再向相反方向的时候再换一下姿势，镜头左右摇摆丧失  \n水平就是最常发生在这些时候，在拍摄重要镜头的时候这是  \n致命的。这就是说，我们需要斯坦尼康系统保持反应灵敏，  \n但是水平摆动显然是我们不想要的。  \nM1闪电的技术其实与正在用于给我们拍摄的手持稳定器  \n（如大疆如影）很相似，你能从镜子里面看到，  \n手持稳定器就是其缩小版，对其放大，用更大更强劲的  \n电机作用于万向架周围，对这个地方进行加固的好处是  \n这不会增加万向架上面的总重量，也不增加下面的，  \n所以你仍能像以前那样组装你的斯坦尼康系统，  \n只增加一公斤的总重，你就能拥有这个额外的稳定功能  \n而如果你不在万向架这儿作文章，你要么加长这根杆，  \n要么增加下部重量  \n综上所述，作为一个斯坦尼康摄影师，这样的改进我很  \n喜欢，所以，别忘了订阅，拜拜！\n\n更多精彩请访问 www.arsrna.top\n\n![](https://s2.ax1x.com/2019/05/24/ViACa4.png)\n\n欢迎关注作者微博@四度文娱","source":"_posts/斯坦尼康m1-volt系统简介steadicam微电影摄影师专业技术论坛.md","raw":"---\ntitle: 斯坦尼康M1-volt系统简介steadicam微电影摄影师专业技术论坛\ntags:\n  - 未分类\nid: '357'\ndate: 2019-05-24 13:08:46\n---\n\n[https://www.bilibili.com/video/av53299397/](https://www.bilibili.com/video/av53299397/)\n\n译自油管\n\n你们好，ar-sr-na的观众们，最新消息，特大新闻  \n我是gb，斯坦尼康的发明者。  \n自1974年发明以来，对，这是原型，那儿是机械臂和马甲，  \n这是快装板。马上在好莱坞新落成的学院影厅  \n有一个活动，我们要去那儿展示这个原型  \n但是，自从它发明以来，重心必须在万向架之下，为了方便  \n控制，他必须头轻脚重，但你知道那没什么，就那样设计吧  \n我们已经用它拍了很多好电影，它很好用  \n但是，那样的坏处是如果你不熟悉怎样操作它，  \n他会有钟摆效应  \n现在好了，史上首次，我们能让你保持平衡，让万向架  \n始终直立，没有脚重头轻的感觉，没有钟摆效应。  \n时至今日，组装不当、人为的和模拟的脚重头轻都为了一个目的  \n就是使它都能自己保持直立静止，这能迅速提升你的操作水平。  \n我的同事cf等人会给你演示这个特性，这就是我们新推出  \n的M1-闪电，在我看来迄今为止最好的斯坦尼康系统。  \n大家好，我就是cf,我带大家看看M1闪电，这就是M1闪电，  \n放在斯坦尼康万向架周围，看，不看他的话，这是一个常规  \n斯坦尼康系统，常用的组装模式，机器在上面，监视器  \n在前面，电池在后面，大家都很熟悉了，作为一位斯坦尼康  \n摄影师，我们一手抓住万向架中间的垂直支架来控制三轴  \n运动，包括左右，上下和我们最不喜欢用的——横移  \n所有移镜中我们最不想把注意力放在横移上，但它恰恰是最  \n浪费注意力的。而M1闪电要做的正是控制横移而保持垂直  \n静止，现在我打开它，这个系统马上有了一种模拟出来的  \n脚重头轻的效果，所以它归位以后它不再有钟摆效应，  \n上下运镜也是如此，可见它恢复垂直以后不再摇摆。  \n现在我再演示一遍M1闪电开启和没有M1闪电的  \n常规斯坦尼康之间的区别，常规斯坦尼康会一直这样  \n前后或者左右摇摆  \n除非你再腾出手来去扶正它  \n现在开启M1闪电，它会替你扶正它让它停止摇摆  \n这样就让你可以集中精力在操作其他有用的镜头运动上  \n例如镜头的衔接性、画面的叙述性，想想脚下的运动路线  \n等等，而不是总是担心画面是不是水平。  \n斯坦尼康能做多种运镜，例如这样向前行进，或者换方向  \n移动，加快速度的时候经常要像这样换个姿势，甚至跑起来  \n，再向相反方向的时候再换一下姿势，镜头左右摇摆丧失  \n水平就是最常发生在这些时候，在拍摄重要镜头的时候这是  \n致命的。这就是说，我们需要斯坦尼康系统保持反应灵敏，  \n但是水平摆动显然是我们不想要的。  \nM1闪电的技术其实与正在用于给我们拍摄的手持稳定器  \n（如大疆如影）很相似，你能从镜子里面看到，  \n手持稳定器就是其缩小版，对其放大，用更大更强劲的  \n电机作用于万向架周围，对这个地方进行加固的好处是  \n这不会增加万向架上面的总重量，也不增加下面的，  \n所以你仍能像以前那样组装你的斯坦尼康系统，  \n只增加一公斤的总重，你就能拥有这个额外的稳定功能  \n而如果你不在万向架这儿作文章，你要么加长这根杆，  \n要么增加下部重量  \n综上所述，作为一个斯坦尼康摄影师，这样的改进我很  \n喜欢，所以，别忘了订阅，拜拜！\n\n更多精彩请访问 www.arsrna.top\n\n![](https://s2.ax1x.com/2019/05/24/ViACa4.png)\n\n欢迎关注作者微博@四度文娱","slug":"斯坦尼康m1-volt系统简介steadicam微电影摄影师专业技术论坛","published":1,"updated":"2022-07-20T05:04:16.766Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clod0d6y10043c0nd8bnkcuof","content":"<p><a href=\"https://www.bilibili.com/video/av53299397/\">https://www.bilibili.com/video/av53299397/</a></p>\n<p>译自油管</p>\n<p>你们好，ar-sr-na的观众们，最新消息，特大新闻<br>我是gb，斯坦尼康的发明者。<br>自1974年发明以来，对，这是原型，那儿是机械臂和马甲，<br>这是快装板。马上在好莱坞新落成的学院影厅<br>有一个活动，我们要去那儿展示这个原型<br>但是，自从它发明以来，重心必须在万向架之下，为了方便<br>控制，他必须头轻脚重，但你知道那没什么，就那样设计吧<br>我们已经用它拍了很多好电影，它很好用<br>但是，那样的坏处是如果你不熟悉怎样操作它，<br>他会有钟摆效应<br>现在好了，史上首次，我们能让你保持平衡，让万向架<br>始终直立，没有脚重头轻的感觉，没有钟摆效应。<br>时至今日，组装不当、人为的和模拟的脚重头轻都为了一个目的<br>就是使它都能自己保持直立静止，这能迅速提升你的操作水平。<br>我的同事cf等人会给你演示这个特性，这就是我们新推出<br>的M1-闪电，在我看来迄今为止最好的斯坦尼康系统。<br>大家好，我就是cf,我带大家看看M1闪电，这就是M1闪电，<br>放在斯坦尼康万向架周围，看，不看他的话，这是一个常规<br>斯坦尼康系统，常用的组装模式，机器在上面，监视器<br>在前面，电池在后面，大家都很熟悉了，作为一位斯坦尼康<br>摄影师，我们一手抓住万向架中间的垂直支架来控制三轴<br>运动，包括左右，上下和我们最不喜欢用的——横移<br>所有移镜中我们最不想把注意力放在横移上，但它恰恰是最<br>浪费注意力的。而M1闪电要做的正是控制横移而保持垂直<br>静止，现在我打开它，这个系统马上有了一种模拟出来的<br>脚重头轻的效果，所以它归位以后它不再有钟摆效应，<br>上下运镜也是如此，可见它恢复垂直以后不再摇摆。<br>现在我再演示一遍M1闪电开启和没有M1闪电的<br>常规斯坦尼康之间的区别，常规斯坦尼康会一直这样<br>前后或者左右摇摆<br>除非你再腾出手来去扶正它<br>现在开启M1闪电，它会替你扶正它让它停止摇摆<br>这样就让你可以集中精力在操作其他有用的镜头运动上<br>例如镜头的衔接性、画面的叙述性，想想脚下的运动路线<br>等等，而不是总是担心画面是不是水平。<br>斯坦尼康能做多种运镜，例如这样向前行进，或者换方向<br>移动，加快速度的时候经常要像这样换个姿势，甚至跑起来<br>，再向相反方向的时候再换一下姿势，镜头左右摇摆丧失<br>水平就是最常发生在这些时候，在拍摄重要镜头的时候这是<br>致命的。这就是说，我们需要斯坦尼康系统保持反应灵敏，<br>但是水平摆动显然是我们不想要的。<br>M1闪电的技术其实与正在用于给我们拍摄的手持稳定器<br>（如大疆如影）很相似，你能从镜子里面看到，<br>手持稳定器就是其缩小版，对其放大，用更大更强劲的<br>电机作用于万向架周围，对这个地方进行加固的好处是<br>这不会增加万向架上面的总重量，也不增加下面的，<br>所以你仍能像以前那样组装你的斯坦尼康系统，<br>只增加一公斤的总重，你就能拥有这个额外的稳定功能<br>而如果你不在万向架这儿作文章，你要么加长这根杆，<br>要么增加下部重量<br>综上所述，作为一个斯坦尼康摄影师，这样的改进我很<br>喜欢，所以，别忘了订阅，拜拜！</p>\n<p>更多精彩请访问 <a href=\"http://www.arsrna.top/\">www.arsrna.top</a></p>\n<p><img src=\"https://s2.ax1x.com/2019/05/24/ViACa4.png\"></p>\n<p>欢迎关注作者微博@四度文娱</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://www.bilibili.com/video/av53299397/\">https://www.bilibili.com/video/av53299397/</a></p>\n<p>译自油管</p>\n<p>你们好，ar-sr-na的观众们，最新消息，特大新闻<br>我是gb，斯坦尼康的发明者。<br>自1974年发明以来，对，这是原型，那儿是机械臂和马甲，<br>这是快装板。马上在好莱坞新落成的学院影厅<br>有一个活动，我们要去那儿展示这个原型<br>但是，自从它发明以来，重心必须在万向架之下，为了方便<br>控制，他必须头轻脚重，但你知道那没什么，就那样设计吧<br>我们已经用它拍了很多好电影，它很好用<br>但是，那样的坏处是如果你不熟悉怎样操作它，<br>他会有钟摆效应<br>现在好了，史上首次，我们能让你保持平衡，让万向架<br>始终直立，没有脚重头轻的感觉，没有钟摆效应。<br>时至今日，组装不当、人为的和模拟的脚重头轻都为了一个目的<br>就是使它都能自己保持直立静止，这能迅速提升你的操作水平。<br>我的同事cf等人会给你演示这个特性，这就是我们新推出<br>的M1-闪电，在我看来迄今为止最好的斯坦尼康系统。<br>大家好，我就是cf,我带大家看看M1闪电，这就是M1闪电，<br>放在斯坦尼康万向架周围，看，不看他的话，这是一个常规<br>斯坦尼康系统，常用的组装模式，机器在上面，监视器<br>在前面，电池在后面，大家都很熟悉了，作为一位斯坦尼康<br>摄影师，我们一手抓住万向架中间的垂直支架来控制三轴<br>运动，包括左右，上下和我们最不喜欢用的——横移<br>所有移镜中我们最不想把注意力放在横移上，但它恰恰是最<br>浪费注意力的。而M1闪电要做的正是控制横移而保持垂直<br>静止，现在我打开它，这个系统马上有了一种模拟出来的<br>脚重头轻的效果，所以它归位以后它不再有钟摆效应，<br>上下运镜也是如此，可见它恢复垂直以后不再摇摆。<br>现在我再演示一遍M1闪电开启和没有M1闪电的<br>常规斯坦尼康之间的区别，常规斯坦尼康会一直这样<br>前后或者左右摇摆<br>除非你再腾出手来去扶正它<br>现在开启M1闪电，它会替你扶正它让它停止摇摆<br>这样就让你可以集中精力在操作其他有用的镜头运动上<br>例如镜头的衔接性、画面的叙述性，想想脚下的运动路线<br>等等，而不是总是担心画面是不是水平。<br>斯坦尼康能做多种运镜，例如这样向前行进，或者换方向<br>移动，加快速度的时候经常要像这样换个姿势，甚至跑起来<br>，再向相反方向的时候再换一下姿势，镜头左右摇摆丧失<br>水平就是最常发生在这些时候，在拍摄重要镜头的时候这是<br>致命的。这就是说，我们需要斯坦尼康系统保持反应灵敏，<br>但是水平摆动显然是我们不想要的。<br>M1闪电的技术其实与正在用于给我们拍摄的手持稳定器<br>（如大疆如影）很相似，你能从镜子里面看到，<br>手持稳定器就是其缩小版，对其放大，用更大更强劲的<br>电机作用于万向架周围，对这个地方进行加固的好处是<br>这不会增加万向架上面的总重量，也不增加下面的，<br>所以你仍能像以前那样组装你的斯坦尼康系统，<br>只增加一公斤的总重，你就能拥有这个额外的稳定功能<br>而如果你不在万向架这儿作文章，你要么加长这根杆，<br>要么增加下部重量<br>综上所述，作为一个斯坦尼康摄影师，这样的改进我很<br>喜欢，所以，别忘了订阅，拜拜！</p>\n<p>更多精彩请访问 <a href=\"http://www.arsrna.top/\">www.arsrna.top</a></p>\n<p><img src=\"https://s2.ax1x.com/2019/05/24/ViACa4.png\"></p>\n<p>欢迎关注作者微博@四度文娱</p>\n"},{"title":"【秒杀】前端网络-HTTP","author":"Ar-Sr-Na","authorLink":"https://www.arsrna.cn","authorAbout":"突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn","authorDesc":"突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn","comments":0,"date":"2024-01-29T16:00:00.000Z","keywords":"前端,网络,技术,xhr,ajax,js","description":"你所浏览的网站基于网络，当前看到的网页也是基于网络，在前端中，网络几乎无处不在，哪怕代码里面没有和网络打交道，在使用、发布等过程中一定会用上网络。所以不管看不看得到，网络一定是前端里面重要的部分","index_img":"https://st2-res.arsrna.cn/2384500/ff2f3f7248f8545f4df49b909a02b89a.png","_content":"你所浏览的网站基于网络，当前看到的网页也是基于网络，在前端中，网络几乎无处不在，哪怕代码里面没有和网络打交道，在使用、发布等过程中一定会用上网络。所以不管看不看得到，网络一定是前端里面重要的部分\n\n​\n\n# 概述\n\n## 网络\n\n网络，那涉及的知识可就太多了：五层网络模型，七层IO，TCP/IP，HTTP，缓存，SSL/TLS，HTTP2，Websocket，CSRF，XSS.....都属于网络的内容。本章主要对前端的HTTP进行讲解。\n\n## 前端网络\n\n对于新手前端或者大部分的码农来说，前端网络要用到的内容并不多，不过掌握网络的知识仍然是非常重要的，谁也不能保证以后遇到问题一定用不上某些知识。\n\n在常见的前端程序里面，用到最多的技术是HTTP，例如你所浏览的网页，正是浏览器对某个地方发起了HTTP请求所得到的，至于这是个什么请求，可以打开一个网页，试着按下`F12`，打开网络面板\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2384500/ff2f3f7248f8545f4df49b909a02b89a.png)\n\n在这里，所有网络请求一览无余，我们来一点一点地看本章的内容-HTTP。\n\n# HTTP\n\nHTTP，全称为Hypertext Transfer Protocol，超文本传输协议。听起来有点莫名其妙的对不对？这里的超文本可以认为就是“除了文本之外，还有更多种可能”的一种传输协议，比如图片，视频等等等等内容，不只是文本一种。它是一种`客户端主动发起`的请求，例如浏览器等客户端，意味着服务器是不能主动和我们连接的。\n\n为了简化流程，我们假设现在只有`客户端-服务器`两端，省去代理、路由等内容。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2384500/91a5841f459a2566ea582eef81e763af.png)\n\n假设客户端就是浏览器，服务器就是网站`www.arsrna.com`的服务器（假设，其实这个网站是serverless的）\n\n我要获取到网站的内容，需要首先向服务器`发起一个请求`，然后服务器再将这个请求“回复”到客户端。仔细斟酌一下这句话，发起的请求是什么请求？\n\n回到F12的网络面板，仔细看这个面板\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2384500/bdc380cce11d5badf7783d72f36e85ee.png)\n\n上面说的`发起的请求是什么请求`就有答案了，是`GET`请求，请求的服务器地址是`https://www.arsrna.com`，服务器给我们了`200`的响应。\n\n至于这里的标头和响应是什么意思，就要看HTTP的结构是什么样的了\n\n## HTTP请求结构\n\n上述浏览器访问网站的过程，在HTTP中是这样的：\n\n```http\nGET / HTTP/1.1\nHost: www.arsrna.com\nAccept-Language: zh\n...更多的请求头\n```\n\n引用MDN的一张图，HTTP的结构如下：\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2384500/e91a80b526c82dcf5fae9b2696b3b9b9.png)\n\n- `Method` 请求的方法，这部分是客户端与服务器进行协商的，常见的类型有GET，POST，PUT，DELETE。要注意这些方法不一定就只是这些方法，只是客户端和服务器认同的方法。你可以认为这些方法只是个名字，比如我喊班长来收作业，不一定只能喊班长，也可以直接喊他的名字，他也能正常回应我的要求。\n- `Path` 请求的路径，例如`https://www.arsrna.com/app/render/`，那Path就是`/app/render/`\n- `Version` 协议版本，当前常用的还是HTTP1.1版本\n- `Headers` 请求标头。包含有关要获取的资源或客户端或请求资源的客户端的更多信息，可参考：[https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers)\n- `Body` 请求体。上图还有一部分没有提及，就是请求体，在GET协议中是不支持这部分信息的。Body信息要在Headers后面空一行\n\n**注意注意注意！！！你发送的所有请求不是由单方面决定的，不是服务器也不是客户端，而是两方共同决定的，服务器说是POST，客户端就必须是POST，而约定他们的，要看开发是怎么规定的，所以请求之前一定要看好请求的文档，不能按自己的想法来请求！！！**\n\n### 工具\n\n如果你不知道如何测试http请求是否有效，可以用Visual Studio Code里面的`REST Client`插件，只需要新建.http后缀的文件，输入文本，点击上方的`Send Request`即可测试\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2384500/161542758e06a91874de55b92f3f114b.png)\n\n### 举例\n\nwww.arsrna.com有一个接口来获取动态信息，我给你了一篇文档，内容如下：\n\n- 请求方法：GET\n- URL：[https://api-gz.arsrna.cn/release/mainsite](https://api-gz.arsrna.cn/release/mainsite)\n\n请试着写出HTTP\n\n```http\nGET /release/mainsite HTTP/1.1\nHost: api-gz.arsrna.cn\n```\n\n测试一下，非常地200非常OK\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2384500/819b0667fc09413dfa197cadb4765e30.png)\n\n## HTTP响应结构\n\n上文中我们已经对[https://api-gz.arsrna.cn/release/mainsite](https://api-gz.arsrna.cn/release/mainsite)发送了一个HTTP的GET请求，并且成功拿到了服务器返回来的数据。响应的结构跟请求的结构类似\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2384500/f5d9af088d3e1eede5b108c2d0d15d1c.png)\n\n同样地，响应部分跟请求部分类似，不过要注意的是，为了看起来方便，我把相应体格式化了，一般为了节省服务器流量，响应体一般都是压缩成一行且去空格的，当然不是说一定是一行，多行的响应体也是可以的。\n\n# 前端发送HTTP\n\n终于了解了HTTP了，来到代码的地方，前端发送HTTP可以通过AJAX的方法，要注意，AJAX不是某种库，而是一种技术。\n\n## AJAX\n\nAJAX全称是异步js和xml，虽然叫做XML，但是用的时候还真不一定是XML。\n\n在浏览器原生js中，实现AJAX可以使用`fetch API`或者`XHR对象`，要注意，一切网络请求都是异步的请求，意味着网络请求不会阻塞浏览器的渲染，可以放心请求。你可以理解为它在后台默默帮你完成请求。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2384500/8dc5d49be3f4635c178d5feba01a8372.png)\n\n注意，以下内容均在以浏览器为客户端，因为下述API在不同环境内核不一样，在nodejs中是以http.js为内核的，而浏览器则是原生api。\n\n### fetch\n\n这里推荐使用fetch，在语法上更符合前端的质感，而且是浏览器原生的API。\n\n一个示例：\n\n```js\nfetch('https://api-gz.arsrna.cn/release/mainsite')\n    .then(msg => msg.json())\n    .then(msg => console.log(msg));\n```\n\n这段的作用就是 GET [https://api-gz.arsrna.cn/release/mainsite](https://api-gz.arsrna.cn/release/mainsite)然后打印到控制台\n\n当然你不能直接在控制台使用这段代码，因为该地址有CORS保护，还有页面的`Content Security Policy`保护，这些在以后会说到。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2384500/e76d21f83d8cd9d1c66c7c03593d3f5e.png)\n\n这个就是请求成功后的结果，和上文HTTP请求的响应是一模一样的，只不过前端进行了格式化处理。\n\n其实fetch还有很多参数，详见：[https://developer.mozilla.org/zh-CN/docs/Web/API/fetch](https://developer.mozilla.org/zh-CN/docs/Web/API/fetch)\n\n不过我们平时用的只有一部分，大部分都已经默认好了。\n\n这是一个POST请求示例：\n\n```js\nfetch('http://myserver.com/path/to/post',{\n    method:'post',\n    headers:{'Content-Type':'application/json'}\n    body:JSON.stringify({\n        wives:['爱莉希雅','菲谢尔'],\n        mostLike:'爱莉希雅'\n    })\n})\n    .then(msg => msg.json())\n    .then(msg => console.log(msg));\n```\n\n如果使用HTTP语法，是这样的：\n\n```http\nPOST /path/to/post HTTP/1.1\nHost: myserver.com\nContent-Type: application/json\n\n{\"wives\":[\"爱莉希雅\",\"菲谢尔\"],\"mostLike\":\"爱莉希雅\"}\n```\n\n要注意，fetch里面的body我做了一个`JSON.stringify`的处理，目的是让js将对象转为字符串，否则服务器收到的是js的`[Object object]`，这块涉及到js构造体的知识，这里不展开。以及Header部分，其实服务器收到的Header是**不分大小写的**，一定要注意，不然以后写后端代码的时候会跳坑！！！\n\n### XHR\n\n> 有时，尤其是在旧的代码中，你会看到另一个名为 XMLHttpRequest（经常会被简写为“XHR”）的 API，它也用于发送 HTTP 请求。其早于 Fetch API，而且是第一个广泛用于实现 AJAX 的 API。如果可以，我们建议你使用 Fetch：它是一个更简单的 API，而且比 XMLHttpRequest 的特性更多。\n\n这句话来自MDN，原生的XHR对象。\n\n当然XHR的过时不意味着淘汰，fetch能取代XHR的绝大部分，而有一点是无法替代的，那就是获取请求进度，例如上传文件的时候，fetch就不能得知上传了多少，或者下载了多少，而XHR可以。\n\n如果使用XHR，建议从第三方库入手，这样了解起来更简单，这里使用大名鼎鼎的`axios`，至于如何安装，请参考官方文档：[https://www.axios-http.cn/docs/intro](https://www.axios-http.cn/docs/intro)\n\n为了更直观展示，下面的例子均用axios方法，而不是axios.对应方法来进行请求。\n\n以上述fetch的实例，发送一个GET请求：\n\n```js\naxios({\n    url:'https://api-gz.arsrna.cn/release/mainsite'\n})\n    .then(msg => console.log(msg.data));\n```\n\n以上述fetch的示例，发送一个POST请求：\n\n```js\naxios({\n    url:'http://myserver.com/path/to/post',\n    type:'post',\n    headers:{'Content-Type':'application/json'},\n    data:JSON.stringify({\n        wives:['爱莉希雅','菲谢尔'],\n        mostLike:'爱莉希雅'\n    })\n}).then(msg=>{\n    console.log(msg.data);\n})\n```\n\n用法跟fetch大差不差，如果fetch实现不了的部分是刚需，还是建议大家使用fetch，毕竟原生，可以少一次引用。\n\n# 总结\n\n到这里，关于在前端进行网络请求的内容就已经算是**入门**了，往后仍有更长的路要走，本章仅仅对HTTP进行讲解，以后还会遇到像上传文件，下载文件，跑通接口，跨域，认证，jwt token，session，登录注册，SSE（服务器主动发送事件），Websocket（服务器客户端双向通信）等等一系列更复杂的实战挑战，一切的前提，是学会HTTP。\n\n没有网络，无法连接你我，你对我的文章发送了请求，我会用心写一篇文章并将文章返回给你\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2384500/851093f2139e84cef20ff6e0b8630188.gif)","source":"_posts/2384500.md","raw":"---\ntitle: 【秒杀】前端网络-HTTP\nauthor: Ar-Sr-Na\nauthorLink: https://www.arsrna.cn\nauthorAbout: 突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn\nauthorDesc: 突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn\ncomments: false\ndate: 2024-1-30\ncategories: 技术\ntags:  前端,网络,技术,xhr,ajax,js\nkeywords:  前端,网络,技术,xhr,ajax,js\ndescription: 你所浏览的网站基于网络，当前看到的网页也是基于网络，在前端中，网络几乎无处不在，哪怕代码里面没有和网络打交道，在使用、发布等过程中一定会用上网络。所以不管看不看得到，网络一定是前端里面重要的部分\nindex_img: https://st2-res.arsrna.cn/2384500/ff2f3f7248f8545f4df49b909a02b89a.png\n---\n你所浏览的网站基于网络，当前看到的网页也是基于网络，在前端中，网络几乎无处不在，哪怕代码里面没有和网络打交道，在使用、发布等过程中一定会用上网络。所以不管看不看得到，网络一定是前端里面重要的部分\n\n​\n\n# 概述\n\n## 网络\n\n网络，那涉及的知识可就太多了：五层网络模型，七层IO，TCP/IP，HTTP，缓存，SSL/TLS，HTTP2，Websocket，CSRF，XSS.....都属于网络的内容。本章主要对前端的HTTP进行讲解。\n\n## 前端网络\n\n对于新手前端或者大部分的码农来说，前端网络要用到的内容并不多，不过掌握网络的知识仍然是非常重要的，谁也不能保证以后遇到问题一定用不上某些知识。\n\n在常见的前端程序里面，用到最多的技术是HTTP，例如你所浏览的网页，正是浏览器对某个地方发起了HTTP请求所得到的，至于这是个什么请求，可以打开一个网页，试着按下`F12`，打开网络面板\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2384500/ff2f3f7248f8545f4df49b909a02b89a.png)\n\n在这里，所有网络请求一览无余，我们来一点一点地看本章的内容-HTTP。\n\n# HTTP\n\nHTTP，全称为Hypertext Transfer Protocol，超文本传输协议。听起来有点莫名其妙的对不对？这里的超文本可以认为就是“除了文本之外，还有更多种可能”的一种传输协议，比如图片，视频等等等等内容，不只是文本一种。它是一种`客户端主动发起`的请求，例如浏览器等客户端，意味着服务器是不能主动和我们连接的。\n\n为了简化流程，我们假设现在只有`客户端-服务器`两端，省去代理、路由等内容。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2384500/91a5841f459a2566ea582eef81e763af.png)\n\n假设客户端就是浏览器，服务器就是网站`www.arsrna.com`的服务器（假设，其实这个网站是serverless的）\n\n我要获取到网站的内容，需要首先向服务器`发起一个请求`，然后服务器再将这个请求“回复”到客户端。仔细斟酌一下这句话，发起的请求是什么请求？\n\n回到F12的网络面板，仔细看这个面板\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2384500/bdc380cce11d5badf7783d72f36e85ee.png)\n\n上面说的`发起的请求是什么请求`就有答案了，是`GET`请求，请求的服务器地址是`https://www.arsrna.com`，服务器给我们了`200`的响应。\n\n至于这里的标头和响应是什么意思，就要看HTTP的结构是什么样的了\n\n## HTTP请求结构\n\n上述浏览器访问网站的过程，在HTTP中是这样的：\n\n```http\nGET / HTTP/1.1\nHost: www.arsrna.com\nAccept-Language: zh\n...更多的请求头\n```\n\n引用MDN的一张图，HTTP的结构如下：\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2384500/e91a80b526c82dcf5fae9b2696b3b9b9.png)\n\n- `Method` 请求的方法，这部分是客户端与服务器进行协商的，常见的类型有GET，POST，PUT，DELETE。要注意这些方法不一定就只是这些方法，只是客户端和服务器认同的方法。你可以认为这些方法只是个名字，比如我喊班长来收作业，不一定只能喊班长，也可以直接喊他的名字，他也能正常回应我的要求。\n- `Path` 请求的路径，例如`https://www.arsrna.com/app/render/`，那Path就是`/app/render/`\n- `Version` 协议版本，当前常用的还是HTTP1.1版本\n- `Headers` 请求标头。包含有关要获取的资源或客户端或请求资源的客户端的更多信息，可参考：[https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers)\n- `Body` 请求体。上图还有一部分没有提及，就是请求体，在GET协议中是不支持这部分信息的。Body信息要在Headers后面空一行\n\n**注意注意注意！！！你发送的所有请求不是由单方面决定的，不是服务器也不是客户端，而是两方共同决定的，服务器说是POST，客户端就必须是POST，而约定他们的，要看开发是怎么规定的，所以请求之前一定要看好请求的文档，不能按自己的想法来请求！！！**\n\n### 工具\n\n如果你不知道如何测试http请求是否有效，可以用Visual Studio Code里面的`REST Client`插件，只需要新建.http后缀的文件，输入文本，点击上方的`Send Request`即可测试\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2384500/161542758e06a91874de55b92f3f114b.png)\n\n### 举例\n\nwww.arsrna.com有一个接口来获取动态信息，我给你了一篇文档，内容如下：\n\n- 请求方法：GET\n- URL：[https://api-gz.arsrna.cn/release/mainsite](https://api-gz.arsrna.cn/release/mainsite)\n\n请试着写出HTTP\n\n```http\nGET /release/mainsite HTTP/1.1\nHost: api-gz.arsrna.cn\n```\n\n测试一下，非常地200非常OK\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2384500/819b0667fc09413dfa197cadb4765e30.png)\n\n## HTTP响应结构\n\n上文中我们已经对[https://api-gz.arsrna.cn/release/mainsite](https://api-gz.arsrna.cn/release/mainsite)发送了一个HTTP的GET请求，并且成功拿到了服务器返回来的数据。响应的结构跟请求的结构类似\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2384500/f5d9af088d3e1eede5b108c2d0d15d1c.png)\n\n同样地，响应部分跟请求部分类似，不过要注意的是，为了看起来方便，我把相应体格式化了，一般为了节省服务器流量，响应体一般都是压缩成一行且去空格的，当然不是说一定是一行，多行的响应体也是可以的。\n\n# 前端发送HTTP\n\n终于了解了HTTP了，来到代码的地方，前端发送HTTP可以通过AJAX的方法，要注意，AJAX不是某种库，而是一种技术。\n\n## AJAX\n\nAJAX全称是异步js和xml，虽然叫做XML，但是用的时候还真不一定是XML。\n\n在浏览器原生js中，实现AJAX可以使用`fetch API`或者`XHR对象`，要注意，一切网络请求都是异步的请求，意味着网络请求不会阻塞浏览器的渲染，可以放心请求。你可以理解为它在后台默默帮你完成请求。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2384500/8dc5d49be3f4635c178d5feba01a8372.png)\n\n注意，以下内容均在以浏览器为客户端，因为下述API在不同环境内核不一样，在nodejs中是以http.js为内核的，而浏览器则是原生api。\n\n### fetch\n\n这里推荐使用fetch，在语法上更符合前端的质感，而且是浏览器原生的API。\n\n一个示例：\n\n```js\nfetch('https://api-gz.arsrna.cn/release/mainsite')\n    .then(msg => msg.json())\n    .then(msg => console.log(msg));\n```\n\n这段的作用就是 GET [https://api-gz.arsrna.cn/release/mainsite](https://api-gz.arsrna.cn/release/mainsite)然后打印到控制台\n\n当然你不能直接在控制台使用这段代码，因为该地址有CORS保护，还有页面的`Content Security Policy`保护，这些在以后会说到。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2384500/e76d21f83d8cd9d1c66c7c03593d3f5e.png)\n\n这个就是请求成功后的结果，和上文HTTP请求的响应是一模一样的，只不过前端进行了格式化处理。\n\n其实fetch还有很多参数，详见：[https://developer.mozilla.org/zh-CN/docs/Web/API/fetch](https://developer.mozilla.org/zh-CN/docs/Web/API/fetch)\n\n不过我们平时用的只有一部分，大部分都已经默认好了。\n\n这是一个POST请求示例：\n\n```js\nfetch('http://myserver.com/path/to/post',{\n    method:'post',\n    headers:{'Content-Type':'application/json'}\n    body:JSON.stringify({\n        wives:['爱莉希雅','菲谢尔'],\n        mostLike:'爱莉希雅'\n    })\n})\n    .then(msg => msg.json())\n    .then(msg => console.log(msg));\n```\n\n如果使用HTTP语法，是这样的：\n\n```http\nPOST /path/to/post HTTP/1.1\nHost: myserver.com\nContent-Type: application/json\n\n{\"wives\":[\"爱莉希雅\",\"菲谢尔\"],\"mostLike\":\"爱莉希雅\"}\n```\n\n要注意，fetch里面的body我做了一个`JSON.stringify`的处理，目的是让js将对象转为字符串，否则服务器收到的是js的`[Object object]`，这块涉及到js构造体的知识，这里不展开。以及Header部分，其实服务器收到的Header是**不分大小写的**，一定要注意，不然以后写后端代码的时候会跳坑！！！\n\n### XHR\n\n> 有时，尤其是在旧的代码中，你会看到另一个名为 XMLHttpRequest（经常会被简写为“XHR”）的 API，它也用于发送 HTTP 请求。其早于 Fetch API，而且是第一个广泛用于实现 AJAX 的 API。如果可以，我们建议你使用 Fetch：它是一个更简单的 API，而且比 XMLHttpRequest 的特性更多。\n\n这句话来自MDN，原生的XHR对象。\n\n当然XHR的过时不意味着淘汰，fetch能取代XHR的绝大部分，而有一点是无法替代的，那就是获取请求进度，例如上传文件的时候，fetch就不能得知上传了多少，或者下载了多少，而XHR可以。\n\n如果使用XHR，建议从第三方库入手，这样了解起来更简单，这里使用大名鼎鼎的`axios`，至于如何安装，请参考官方文档：[https://www.axios-http.cn/docs/intro](https://www.axios-http.cn/docs/intro)\n\n为了更直观展示，下面的例子均用axios方法，而不是axios.对应方法来进行请求。\n\n以上述fetch的实例，发送一个GET请求：\n\n```js\naxios({\n    url:'https://api-gz.arsrna.cn/release/mainsite'\n})\n    .then(msg => console.log(msg.data));\n```\n\n以上述fetch的示例，发送一个POST请求：\n\n```js\naxios({\n    url:'http://myserver.com/path/to/post',\n    type:'post',\n    headers:{'Content-Type':'application/json'},\n    data:JSON.stringify({\n        wives:['爱莉希雅','菲谢尔'],\n        mostLike:'爱莉希雅'\n    })\n}).then(msg=>{\n    console.log(msg.data);\n})\n```\n\n用法跟fetch大差不差，如果fetch实现不了的部分是刚需，还是建议大家使用fetch，毕竟原生，可以少一次引用。\n\n# 总结\n\n到这里，关于在前端进行网络请求的内容就已经算是**入门**了，往后仍有更长的路要走，本章仅仅对HTTP进行讲解，以后还会遇到像上传文件，下载文件，跑通接口，跨域，认证，jwt token，session，登录注册，SSE（服务器主动发送事件），Websocket（服务器客户端双向通信）等等一系列更复杂的实战挑战，一切的前提，是学会HTTP。\n\n没有网络，无法连接你我，你对我的文章发送了请求，我会用心写一篇文章并将文章返回给你\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2384500/851093f2139e84cef20ff6e0b8630188.gif)","slug":"2384500","published":1,"updated":"2024-01-30T06:53:14.926Z","layout":"post","photos":[],"link":"","_id":"clsr3p3mf0000x4ndgojg1tqd","content":"<p>你所浏览的网站基于网络，当前看到的网页也是基于网络，在前端中，网络几乎无处不在，哪怕代码里面没有和网络打交道，在使用、发布等过程中一定会用上网络。所以不管看不看得到，网络一定是前端里面重要的部分</p>\n<p>​</p>\n<h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><h2 id=\"网络\"><a href=\"#网络\" class=\"headerlink\" title=\"网络\"></a>网络</h2><p>网络，那涉及的知识可就太多了：五层网络模型，七层IO，TCP&#x2F;IP，HTTP，缓存，SSL&#x2F;TLS，HTTP2，Websocket，CSRF，XSS…..都属于网络的内容。本章主要对前端的HTTP进行讲解。</p>\n<h2 id=\"前端网络\"><a href=\"#前端网络\" class=\"headerlink\" title=\"前端网络\"></a>前端网络</h2><p>对于新手前端或者大部分的码农来说，前端网络要用到的内容并不多，不过掌握网络的知识仍然是非常重要的，谁也不能保证以后遇到问题一定用不上某些知识。</p>\n<p>在常见的前端程序里面，用到最多的技术是HTTP，例如你所浏览的网页，正是浏览器对某个地方发起了HTTP请求所得到的，至于这是个什么请求，可以打开一个网页，试着按下<code>F12</code>，打开网络面板</p>\n<p><img src=\"https://st2-res.arsrna.cn/2384500/ff2f3f7248f8545f4df49b909a02b89a.png\" alt=\"请在此添加图片描述\"></p>\n<p>在这里，所有网络请求一览无余，我们来一点一点地看本章的内容-HTTP。</p>\n<h1 id=\"HTTP\"><a href=\"#HTTP\" class=\"headerlink\" title=\"HTTP\"></a>HTTP</h1><p>HTTP，全称为Hypertext Transfer Protocol，超文本传输协议。听起来有点莫名其妙的对不对？这里的超文本可以认为就是“除了文本之外，还有更多种可能”的一种传输协议，比如图片，视频等等等等内容，不只是文本一种。它是一种<code>客户端主动发起</code>的请求，例如浏览器等客户端，意味着服务器是不能主动和我们连接的。</p>\n<p>为了简化流程，我们假设现在只有<code>客户端-服务器</code>两端，省去代理、路由等内容。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2384500/91a5841f459a2566ea582eef81e763af.png\" alt=\"请在此添加图片描述\"></p>\n<p>假设客户端就是浏览器，服务器就是网站<code>www.arsrna.com</code>的服务器（假设，其实这个网站是serverless的）</p>\n<p>我要获取到网站的内容，需要首先向服务器<code>发起一个请求</code>，然后服务器再将这个请求“回复”到客户端。仔细斟酌一下这句话，发起的请求是什么请求？</p>\n<p>回到F12的网络面板，仔细看这个面板</p>\n<p><img src=\"https://st2-res.arsrna.cn/2384500/bdc380cce11d5badf7783d72f36e85ee.png\" alt=\"请在此添加图片描述\"></p>\n<p>上面说的<code>发起的请求是什么请求</code>就有答案了，是<code>GET</code>请求，请求的服务器地址是<code>https://www.arsrna.com</code>，服务器给我们了<code>200</code>的响应。</p>\n<p>至于这里的标头和响应是什么意思，就要看HTTP的结构是什么样的了</p>\n<h2 id=\"HTTP请求结构\"><a href=\"#HTTP请求结构\" class=\"headerlink\" title=\"HTTP请求结构\"></a>HTTP请求结构</h2><p>上述浏览器访问网站的过程，在HTTP中是这样的：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs http\"><span class=\"hljs-keyword\">GET</span> <span class=\"hljs-string\">/</span> <span class=\"hljs-meta\">HTTP/1.1</span><br><span class=\"hljs-attribute\">Host</span><span class=\"hljs-punctuation\">: </span>www.arsrna.com<br><span class=\"hljs-attribute\">Accept-Language</span><span class=\"hljs-punctuation\">: </span>zh<br>...更多的请求头<br></code></pre></td></tr></table></figure>\n\n<p>引用MDN的一张图，HTTP的结构如下：</p>\n<p><img src=\"https://st2-res.arsrna.cn/2384500/e91a80b526c82dcf5fae9b2696b3b9b9.png\" alt=\"请在此添加图片描述\"></p>\n<ul>\n<li><code>Method</code> 请求的方法，这部分是客户端与服务器进行协商的，常见的类型有GET，POST，PUT，DELETE。要注意这些方法不一定就只是这些方法，只是客户端和服务器认同的方法。你可以认为这些方法只是个名字，比如我喊班长来收作业，不一定只能喊班长，也可以直接喊他的名字，他也能正常回应我的要求。</li>\n<li><code>Path</code> 请求的路径，例如<code>https://www.arsrna.com/app/render/</code>，那Path就是<code>/app/render/</code></li>\n<li><code>Version</code> 协议版本，当前常用的还是HTTP1.1版本</li>\n<li><code>Headers</code> 请求标头。包含有关要获取的资源或客户端或请求资源的客户端的更多信息，可参考：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers\">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers</a></li>\n<li><code>Body</code> 请求体。上图还有一部分没有提及，就是请求体，在GET协议中是不支持这部分信息的。Body信息要在Headers后面空一行</li>\n</ul>\n<p><strong>注意注意注意！！！你发送的所有请求不是由单方面决定的，不是服务器也不是客户端，而是两方共同决定的，服务器说是POST，客户端就必须是POST，而约定他们的，要看开发是怎么规定的，所以请求之前一定要看好请求的文档，不能按自己的想法来请求！！！</strong></p>\n<h3 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h3><p>如果你不知道如何测试http请求是否有效，可以用Visual Studio Code里面的<code>REST Client</code>插件，只需要新建.http后缀的文件，输入文本，点击上方的<code>Send Request</code>即可测试</p>\n<p><img src=\"https://st2-res.arsrna.cn/2384500/161542758e06a91874de55b92f3f114b.png\" alt=\"请在此添加图片描述\"></p>\n<h3 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h3><p><a href=\"http://www.arsrna.com有一个接口来获取动态信息，我给你了一篇文档，内容如下：\">www.arsrna.com有一个接口来获取动态信息，我给你了一篇文档，内容如下：</a></p>\n<ul>\n<li>请求方法：GET</li>\n<li>URL：<a href=\"https://api-gz.arsrna.cn/release/mainsite\">https://api-gz.arsrna.cn/release/mainsite</a></li>\n</ul>\n<p>请试着写出HTTP</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs http\"><span class=\"hljs-keyword\">GET</span> <span class=\"hljs-string\">/release/mainsite</span> <span class=\"hljs-meta\">HTTP/1.1</span><br><span class=\"hljs-attribute\">Host</span><span class=\"hljs-punctuation\">: </span>api-gz.arsrna.cn<br></code></pre></td></tr></table></figure>\n\n<p>测试一下，非常地200非常OK</p>\n<p><img src=\"https://st2-res.arsrna.cn/2384500/819b0667fc09413dfa197cadb4765e30.png\" alt=\"请在此添加图片描述\"></p>\n<h2 id=\"HTTP响应结构\"><a href=\"#HTTP响应结构\" class=\"headerlink\" title=\"HTTP响应结构\"></a>HTTP响应结构</h2><p>上文中我们已经对<a href=\"https://api-gz.arsrna.cn/release/mainsite\">https://api-gz.arsrna.cn/release/mainsite</a>发送了一个HTTP的GET请求，并且成功拿到了服务器返回来的数据。响应的结构跟请求的结构类似</p>\n<p><img src=\"https://st2-res.arsrna.cn/2384500/f5d9af088d3e1eede5b108c2d0d15d1c.png\" alt=\"请在此添加图片描述\"></p>\n<p>同样地，响应部分跟请求部分类似，不过要注意的是，为了看起来方便，我把相应体格式化了，一般为了节省服务器流量，响应体一般都是压缩成一行且去空格的，当然不是说一定是一行，多行的响应体也是可以的。</p>\n<h1 id=\"前端发送HTTP\"><a href=\"#前端发送HTTP\" class=\"headerlink\" title=\"前端发送HTTP\"></a>前端发送HTTP</h1><p>终于了解了HTTP了，来到代码的地方，前端发送HTTP可以通过AJAX的方法，要注意，AJAX不是某种库，而是一种技术。</p>\n<h2 id=\"AJAX\"><a href=\"#AJAX\" class=\"headerlink\" title=\"AJAX\"></a>AJAX</h2><p>AJAX全称是异步js和xml，虽然叫做XML，但是用的时候还真不一定是XML。</p>\n<p>在浏览器原生js中，实现AJAX可以使用<code>fetch API</code>或者<code>XHR对象</code>，要注意，一切网络请求都是异步的请求，意味着网络请求不会阻塞浏览器的渲染，可以放心请求。你可以理解为它在后台默默帮你完成请求。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2384500/8dc5d49be3f4635c178d5feba01a8372.png\" alt=\"请在此添加图片描述\"></p>\n<p>注意，以下内容均在以浏览器为客户端，因为下述API在不同环境内核不一样，在nodejs中是以http.js为内核的，而浏览器则是原生api。</p>\n<h3 id=\"fetch\"><a href=\"#fetch\" class=\"headerlink\" title=\"fetch\"></a>fetch</h3><p>这里推荐使用fetch，在语法上更符合前端的质感，而且是浏览器原生的API。</p>\n<p>一个示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-title function_\">fetch</span>(<span class=\"hljs-string\">&#x27;https://api-gz.arsrna.cn/release/mainsite&#x27;</span>)<br>    .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">msg</span> =&gt;</span> msg.<span class=\"hljs-title function_\">json</span>())<br>    .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">msg</span> =&gt;</span> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(msg));<br></code></pre></td></tr></table></figure>\n\n<p>这段的作用就是 GET <a href=\"https://api-gz.arsrna.cn/release/mainsite\">https://api-gz.arsrna.cn/release/mainsite</a>然后打印到控制台</p>\n<p>当然你不能直接在控制台使用这段代码，因为该地址有CORS保护，还有页面的<code>Content Security Policy</code>保护，这些在以后会说到。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2384500/e76d21f83d8cd9d1c66c7c03593d3f5e.png\" alt=\"请在此添加图片描述\"></p>\n<p>这个就是请求成功后的结果，和上文HTTP请求的响应是一模一样的，只不过前端进行了格式化处理。</p>\n<p>其实fetch还有很多参数，详见：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/fetch\">https://developer.mozilla.org/zh-CN/docs/Web/API/fetch</a></p>\n<p>不过我们平时用的只有一部分，大部分都已经默认好了。</p>\n<p>这是一个POST请求示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-title function_\">fetch</span>(<span class=\"hljs-string\">&#x27;http://myserver.com/path/to/post&#x27;</span>,&#123;<br>    <span class=\"hljs-attr\">method</span>:<span class=\"hljs-string\">&#x27;post&#x27;</span>,<br>    <span class=\"hljs-attr\">headers</span>:&#123;<span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>:<span class=\"hljs-string\">&#x27;application/json&#x27;</span>&#125;<br>    <span class=\"hljs-attr\">body</span>:<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(&#123;<br>        <span class=\"hljs-attr\">wives</span>:[<span class=\"hljs-string\">&#x27;爱莉希雅&#x27;</span>,<span class=\"hljs-string\">&#x27;菲谢尔&#x27;</span>],<br>        <span class=\"hljs-attr\">mostLike</span>:<span class=\"hljs-string\">&#x27;爱莉希雅&#x27;</span><br>    &#125;)<br>&#125;)<br>    .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">msg</span> =&gt;</span> msg.<span class=\"hljs-title function_\">json</span>())<br>    .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">msg</span> =&gt;</span> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(msg));<br></code></pre></td></tr></table></figure>\n\n<p>如果使用HTTP语法，是这样的：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs http\"><span class=\"hljs-keyword\">POST</span> <span class=\"hljs-string\">/path/to/post</span> <span class=\"hljs-meta\">HTTP/1.1</span><br><span class=\"hljs-attribute\">Host</span><span class=\"hljs-punctuation\">: </span>myserver.com<br><span class=\"hljs-attribute\">Content-Type</span><span class=\"hljs-punctuation\">: </span>application/json<br><br><span class=\"language-prolog\">&#123;<span class=\"hljs-string\">&quot;wives&quot;</span>:[<span class=\"hljs-string\">&quot;爱莉希雅&quot;</span>,<span class=\"hljs-string\">&quot;菲谢尔&quot;</span>],<span class=\"hljs-string\">&quot;mostLike&quot;</span>:<span class=\"hljs-string\">&quot;爱莉希雅&quot;</span>&#125;</span><br></code></pre></td></tr></table></figure>\n\n<p>要注意，fetch里面的body我做了一个<code>JSON.stringify</code>的处理，目的是让js将对象转为字符串，否则服务器收到的是js的<code>[Object object]</code>，这块涉及到js构造体的知识，这里不展开。以及Header部分，其实服务器收到的Header是<strong>不分大小写的</strong>，一定要注意，不然以后写后端代码的时候会跳坑！！！</p>\n<h3 id=\"XHR\"><a href=\"#XHR\" class=\"headerlink\" title=\"XHR\"></a>XHR</h3><blockquote>\n<p>有时，尤其是在旧的代码中，你会看到另一个名为 XMLHttpRequest（经常会被简写为“XHR”）的 API，它也用于发送 HTTP 请求。其早于 Fetch API，而且是第一个广泛用于实现 AJAX 的 API。如果可以，我们建议你使用 Fetch：它是一个更简单的 API，而且比 XMLHttpRequest 的特性更多。</p>\n</blockquote>\n<p>这句话来自MDN，原生的XHR对象。</p>\n<p>当然XHR的过时不意味着淘汰，fetch能取代XHR的绝大部分，而有一点是无法替代的，那就是获取请求进度，例如上传文件的时候，fetch就不能得知上传了多少，或者下载了多少，而XHR可以。</p>\n<p>如果使用XHR，建议从第三方库入手，这样了解起来更简单，这里使用大名鼎鼎的<code>axios</code>，至于如何安装，请参考官方文档：<a href=\"https://www.axios-http.cn/docs/intro\">https://www.axios-http.cn/docs/intro</a></p>\n<p>为了更直观展示，下面的例子均用axios方法，而不是axios.对应方法来进行请求。</p>\n<p>以上述fetch的实例，发送一个GET请求：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-title function_\">axios</span>(&#123;<br>    <span class=\"hljs-attr\">url</span>:<span class=\"hljs-string\">&#x27;https://api-gz.arsrna.cn/release/mainsite&#x27;</span><br>&#125;)<br>    .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">msg</span> =&gt;</span> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(msg.<span class=\"hljs-property\">data</span>));<br></code></pre></td></tr></table></figure>\n\n<p>以上述fetch的示例，发送一个POST请求：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-title function_\">axios</span>(&#123;<br>    <span class=\"hljs-attr\">url</span>:<span class=\"hljs-string\">&#x27;http://myserver.com/path/to/post&#x27;</span>,<br>    <span class=\"hljs-attr\">type</span>:<span class=\"hljs-string\">&#x27;post&#x27;</span>,<br>    <span class=\"hljs-attr\">headers</span>:&#123;<span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>:<span class=\"hljs-string\">&#x27;application/json&#x27;</span>&#125;,<br>    <span class=\"hljs-attr\">data</span>:<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(&#123;<br>        <span class=\"hljs-attr\">wives</span>:[<span class=\"hljs-string\">&#x27;爱莉希雅&#x27;</span>,<span class=\"hljs-string\">&#x27;菲谢尔&#x27;</span>],<br>        <span class=\"hljs-attr\">mostLike</span>:<span class=\"hljs-string\">&#x27;爱莉希雅&#x27;</span><br>    &#125;)<br>&#125;).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">msg</span>=&gt;</span>&#123;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(msg.<span class=\"hljs-property\">data</span>);<br>&#125;)<br></code></pre></td></tr></table></figure>\n\n<p>用法跟fetch大差不差，如果fetch实现不了的部分是刚需，还是建议大家使用fetch，毕竟原生，可以少一次引用。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>到这里，关于在前端进行网络请求的内容就已经算是<strong>入门</strong>了，往后仍有更长的路要走，本章仅仅对HTTP进行讲解，以后还会遇到像上传文件，下载文件，跑通接口，跨域，认证，jwt token，session，登录注册，SSE（服务器主动发送事件），Websocket（服务器客户端双向通信）等等一系列更复杂的实战挑战，一切的前提，是学会HTTP。</p>\n<p>没有网络，无法连接你我，你对我的文章发送了请求，我会用心写一篇文章并将文章返回给你</p>\n<p><img src=\"https://st2-res.arsrna.cn/2384500/851093f2139e84cef20ff6e0b8630188.gif\" alt=\"请在此添加图片描述\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>你所浏览的网站基于网络，当前看到的网页也是基于网络，在前端中，网络几乎无处不在，哪怕代码里面没有和网络打交道，在使用、发布等过程中一定会用上网络。所以不管看不看得到，网络一定是前端里面重要的部分</p>\n<p>​</p>\n<h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><h2 id=\"网络\"><a href=\"#网络\" class=\"headerlink\" title=\"网络\"></a>网络</h2><p>网络，那涉及的知识可就太多了：五层网络模型，七层IO，TCP&#x2F;IP，HTTP，缓存，SSL&#x2F;TLS，HTTP2，Websocket，CSRF，XSS…..都属于网络的内容。本章主要对前端的HTTP进行讲解。</p>\n<h2 id=\"前端网络\"><a href=\"#前端网络\" class=\"headerlink\" title=\"前端网络\"></a>前端网络</h2><p>对于新手前端或者大部分的码农来说，前端网络要用到的内容并不多，不过掌握网络的知识仍然是非常重要的，谁也不能保证以后遇到问题一定用不上某些知识。</p>\n<p>在常见的前端程序里面，用到最多的技术是HTTP，例如你所浏览的网页，正是浏览器对某个地方发起了HTTP请求所得到的，至于这是个什么请求，可以打开一个网页，试着按下<code>F12</code>，打开网络面板</p>\n<p><img src=\"https://st2-res.arsrna.cn/2384500/ff2f3f7248f8545f4df49b909a02b89a.png\" alt=\"请在此添加图片描述\"></p>\n<p>在这里，所有网络请求一览无余，我们来一点一点地看本章的内容-HTTP。</p>\n<h1 id=\"HTTP\"><a href=\"#HTTP\" class=\"headerlink\" title=\"HTTP\"></a>HTTP</h1><p>HTTP，全称为Hypertext Transfer Protocol，超文本传输协议。听起来有点莫名其妙的对不对？这里的超文本可以认为就是“除了文本之外，还有更多种可能”的一种传输协议，比如图片，视频等等等等内容，不只是文本一种。它是一种<code>客户端主动发起</code>的请求，例如浏览器等客户端，意味着服务器是不能主动和我们连接的。</p>\n<p>为了简化流程，我们假设现在只有<code>客户端-服务器</code>两端，省去代理、路由等内容。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2384500/91a5841f459a2566ea582eef81e763af.png\" alt=\"请在此添加图片描述\"></p>\n<p>假设客户端就是浏览器，服务器就是网站<code>www.arsrna.com</code>的服务器（假设，其实这个网站是serverless的）</p>\n<p>我要获取到网站的内容，需要首先向服务器<code>发起一个请求</code>，然后服务器再将这个请求“回复”到客户端。仔细斟酌一下这句话，发起的请求是什么请求？</p>\n<p>回到F12的网络面板，仔细看这个面板</p>\n<p><img src=\"https://st2-res.arsrna.cn/2384500/bdc380cce11d5badf7783d72f36e85ee.png\" alt=\"请在此添加图片描述\"></p>\n<p>上面说的<code>发起的请求是什么请求</code>就有答案了，是<code>GET</code>请求，请求的服务器地址是<code>https://www.arsrna.com</code>，服务器给我们了<code>200</code>的响应。</p>\n<p>至于这里的标头和响应是什么意思，就要看HTTP的结构是什么样的了</p>\n<h2 id=\"HTTP请求结构\"><a href=\"#HTTP请求结构\" class=\"headerlink\" title=\"HTTP请求结构\"></a>HTTP请求结构</h2><p>上述浏览器访问网站的过程，在HTTP中是这样的：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs http\"><span class=\"hljs-keyword\">GET</span> <span class=\"hljs-string\">/</span> <span class=\"hljs-meta\">HTTP/1.1</span><br><span class=\"hljs-attribute\">Host</span><span class=\"hljs-punctuation\">: </span>www.arsrna.com<br><span class=\"hljs-attribute\">Accept-Language</span><span class=\"hljs-punctuation\">: </span>zh<br>...更多的请求头<br></code></pre></td></tr></table></figure>\n\n<p>引用MDN的一张图，HTTP的结构如下：</p>\n<p><img src=\"https://st2-res.arsrna.cn/2384500/e91a80b526c82dcf5fae9b2696b3b9b9.png\" alt=\"请在此添加图片描述\"></p>\n<ul>\n<li><code>Method</code> 请求的方法，这部分是客户端与服务器进行协商的，常见的类型有GET，POST，PUT，DELETE。要注意这些方法不一定就只是这些方法，只是客户端和服务器认同的方法。你可以认为这些方法只是个名字，比如我喊班长来收作业，不一定只能喊班长，也可以直接喊他的名字，他也能正常回应我的要求。</li>\n<li><code>Path</code> 请求的路径，例如<code>https://www.arsrna.com/app/render/</code>，那Path就是<code>/app/render/</code></li>\n<li><code>Version</code> 协议版本，当前常用的还是HTTP1.1版本</li>\n<li><code>Headers</code> 请求标头。包含有关要获取的资源或客户端或请求资源的客户端的更多信息，可参考：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers\">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers</a></li>\n<li><code>Body</code> 请求体。上图还有一部分没有提及，就是请求体，在GET协议中是不支持这部分信息的。Body信息要在Headers后面空一行</li>\n</ul>\n<p><strong>注意注意注意！！！你发送的所有请求不是由单方面决定的，不是服务器也不是客户端，而是两方共同决定的，服务器说是POST，客户端就必须是POST，而约定他们的，要看开发是怎么规定的，所以请求之前一定要看好请求的文档，不能按自己的想法来请求！！！</strong></p>\n<h3 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h3><p>如果你不知道如何测试http请求是否有效，可以用Visual Studio Code里面的<code>REST Client</code>插件，只需要新建.http后缀的文件，输入文本，点击上方的<code>Send Request</code>即可测试</p>\n<p><img src=\"https://st2-res.arsrna.cn/2384500/161542758e06a91874de55b92f3f114b.png\" alt=\"请在此添加图片描述\"></p>\n<h3 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h3><p><a href=\"http://www.arsrna.com有一个接口来获取动态信息，我给你了一篇文档，内容如下：\">www.arsrna.com有一个接口来获取动态信息，我给你了一篇文档，内容如下：</a></p>\n<ul>\n<li>请求方法：GET</li>\n<li>URL：<a href=\"https://api-gz.arsrna.cn/release/mainsite\">https://api-gz.arsrna.cn/release/mainsite</a></li>\n</ul>\n<p>请试着写出HTTP</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs http\"><span class=\"hljs-keyword\">GET</span> <span class=\"hljs-string\">/release/mainsite</span> <span class=\"hljs-meta\">HTTP/1.1</span><br><span class=\"hljs-attribute\">Host</span><span class=\"hljs-punctuation\">: </span>api-gz.arsrna.cn<br></code></pre></td></tr></table></figure>\n\n<p>测试一下，非常地200非常OK</p>\n<p><img src=\"https://st2-res.arsrna.cn/2384500/819b0667fc09413dfa197cadb4765e30.png\" alt=\"请在此添加图片描述\"></p>\n<h2 id=\"HTTP响应结构\"><a href=\"#HTTP响应结构\" class=\"headerlink\" title=\"HTTP响应结构\"></a>HTTP响应结构</h2><p>上文中我们已经对<a href=\"https://api-gz.arsrna.cn/release/mainsite\">https://api-gz.arsrna.cn/release/mainsite</a>发送了一个HTTP的GET请求，并且成功拿到了服务器返回来的数据。响应的结构跟请求的结构类似</p>\n<p><img src=\"https://st2-res.arsrna.cn/2384500/f5d9af088d3e1eede5b108c2d0d15d1c.png\" alt=\"请在此添加图片描述\"></p>\n<p>同样地，响应部分跟请求部分类似，不过要注意的是，为了看起来方便，我把相应体格式化了，一般为了节省服务器流量，响应体一般都是压缩成一行且去空格的，当然不是说一定是一行，多行的响应体也是可以的。</p>\n<h1 id=\"前端发送HTTP\"><a href=\"#前端发送HTTP\" class=\"headerlink\" title=\"前端发送HTTP\"></a>前端发送HTTP</h1><p>终于了解了HTTP了，来到代码的地方，前端发送HTTP可以通过AJAX的方法，要注意，AJAX不是某种库，而是一种技术。</p>\n<h2 id=\"AJAX\"><a href=\"#AJAX\" class=\"headerlink\" title=\"AJAX\"></a>AJAX</h2><p>AJAX全称是异步js和xml，虽然叫做XML，但是用的时候还真不一定是XML。</p>\n<p>在浏览器原生js中，实现AJAX可以使用<code>fetch API</code>或者<code>XHR对象</code>，要注意，一切网络请求都是异步的请求，意味着网络请求不会阻塞浏览器的渲染，可以放心请求。你可以理解为它在后台默默帮你完成请求。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2384500/8dc5d49be3f4635c178d5feba01a8372.png\" alt=\"请在此添加图片描述\"></p>\n<p>注意，以下内容均在以浏览器为客户端，因为下述API在不同环境内核不一样，在nodejs中是以http.js为内核的，而浏览器则是原生api。</p>\n<h3 id=\"fetch\"><a href=\"#fetch\" class=\"headerlink\" title=\"fetch\"></a>fetch</h3><p>这里推荐使用fetch，在语法上更符合前端的质感，而且是浏览器原生的API。</p>\n<p>一个示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-title function_\">fetch</span>(<span class=\"hljs-string\">&#x27;https://api-gz.arsrna.cn/release/mainsite&#x27;</span>)<br>    .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">msg</span> =&gt;</span> msg.<span class=\"hljs-title function_\">json</span>())<br>    .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">msg</span> =&gt;</span> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(msg));<br></code></pre></td></tr></table></figure>\n\n<p>这段的作用就是 GET <a href=\"https://api-gz.arsrna.cn/release/mainsite\">https://api-gz.arsrna.cn/release/mainsite</a>然后打印到控制台</p>\n<p>当然你不能直接在控制台使用这段代码，因为该地址有CORS保护，还有页面的<code>Content Security Policy</code>保护，这些在以后会说到。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2384500/e76d21f83d8cd9d1c66c7c03593d3f5e.png\" alt=\"请在此添加图片描述\"></p>\n<p>这个就是请求成功后的结果，和上文HTTP请求的响应是一模一样的，只不过前端进行了格式化处理。</p>\n<p>其实fetch还有很多参数，详见：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/fetch\">https://developer.mozilla.org/zh-CN/docs/Web/API/fetch</a></p>\n<p>不过我们平时用的只有一部分，大部分都已经默认好了。</p>\n<p>这是一个POST请求示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-title function_\">fetch</span>(<span class=\"hljs-string\">&#x27;http://myserver.com/path/to/post&#x27;</span>,&#123;<br>    <span class=\"hljs-attr\">method</span>:<span class=\"hljs-string\">&#x27;post&#x27;</span>,<br>    <span class=\"hljs-attr\">headers</span>:&#123;<span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>:<span class=\"hljs-string\">&#x27;application/json&#x27;</span>&#125;<br>    <span class=\"hljs-attr\">body</span>:<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(&#123;<br>        <span class=\"hljs-attr\">wives</span>:[<span class=\"hljs-string\">&#x27;爱莉希雅&#x27;</span>,<span class=\"hljs-string\">&#x27;菲谢尔&#x27;</span>],<br>        <span class=\"hljs-attr\">mostLike</span>:<span class=\"hljs-string\">&#x27;爱莉希雅&#x27;</span><br>    &#125;)<br>&#125;)<br>    .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">msg</span> =&gt;</span> msg.<span class=\"hljs-title function_\">json</span>())<br>    .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">msg</span> =&gt;</span> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(msg));<br></code></pre></td></tr></table></figure>\n\n<p>如果使用HTTP语法，是这样的：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs http\"><span class=\"hljs-keyword\">POST</span> <span class=\"hljs-string\">/path/to/post</span> <span class=\"hljs-meta\">HTTP/1.1</span><br><span class=\"hljs-attribute\">Host</span><span class=\"hljs-punctuation\">: </span>myserver.com<br><span class=\"hljs-attribute\">Content-Type</span><span class=\"hljs-punctuation\">: </span>application/json<br><br><span class=\"language-prolog\">&#123;<span class=\"hljs-string\">&quot;wives&quot;</span>:[<span class=\"hljs-string\">&quot;爱莉希雅&quot;</span>,<span class=\"hljs-string\">&quot;菲谢尔&quot;</span>],<span class=\"hljs-string\">&quot;mostLike&quot;</span>:<span class=\"hljs-string\">&quot;爱莉希雅&quot;</span>&#125;</span><br></code></pre></td></tr></table></figure>\n\n<p>要注意，fetch里面的body我做了一个<code>JSON.stringify</code>的处理，目的是让js将对象转为字符串，否则服务器收到的是js的<code>[Object object]</code>，这块涉及到js构造体的知识，这里不展开。以及Header部分，其实服务器收到的Header是<strong>不分大小写的</strong>，一定要注意，不然以后写后端代码的时候会跳坑！！！</p>\n<h3 id=\"XHR\"><a href=\"#XHR\" class=\"headerlink\" title=\"XHR\"></a>XHR</h3><blockquote>\n<p>有时，尤其是在旧的代码中，你会看到另一个名为 XMLHttpRequest（经常会被简写为“XHR”）的 API，它也用于发送 HTTP 请求。其早于 Fetch API，而且是第一个广泛用于实现 AJAX 的 API。如果可以，我们建议你使用 Fetch：它是一个更简单的 API，而且比 XMLHttpRequest 的特性更多。</p>\n</blockquote>\n<p>这句话来自MDN，原生的XHR对象。</p>\n<p>当然XHR的过时不意味着淘汰，fetch能取代XHR的绝大部分，而有一点是无法替代的，那就是获取请求进度，例如上传文件的时候，fetch就不能得知上传了多少，或者下载了多少，而XHR可以。</p>\n<p>如果使用XHR，建议从第三方库入手，这样了解起来更简单，这里使用大名鼎鼎的<code>axios</code>，至于如何安装，请参考官方文档：<a href=\"https://www.axios-http.cn/docs/intro\">https://www.axios-http.cn/docs/intro</a></p>\n<p>为了更直观展示，下面的例子均用axios方法，而不是axios.对应方法来进行请求。</p>\n<p>以上述fetch的实例，发送一个GET请求：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-title function_\">axios</span>(&#123;<br>    <span class=\"hljs-attr\">url</span>:<span class=\"hljs-string\">&#x27;https://api-gz.arsrna.cn/release/mainsite&#x27;</span><br>&#125;)<br>    .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">msg</span> =&gt;</span> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(msg.<span class=\"hljs-property\">data</span>));<br></code></pre></td></tr></table></figure>\n\n<p>以上述fetch的示例，发送一个POST请求：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-title function_\">axios</span>(&#123;<br>    <span class=\"hljs-attr\">url</span>:<span class=\"hljs-string\">&#x27;http://myserver.com/path/to/post&#x27;</span>,<br>    <span class=\"hljs-attr\">type</span>:<span class=\"hljs-string\">&#x27;post&#x27;</span>,<br>    <span class=\"hljs-attr\">headers</span>:&#123;<span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>:<span class=\"hljs-string\">&#x27;application/json&#x27;</span>&#125;,<br>    <span class=\"hljs-attr\">data</span>:<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(&#123;<br>        <span class=\"hljs-attr\">wives</span>:[<span class=\"hljs-string\">&#x27;爱莉希雅&#x27;</span>,<span class=\"hljs-string\">&#x27;菲谢尔&#x27;</span>],<br>        <span class=\"hljs-attr\">mostLike</span>:<span class=\"hljs-string\">&#x27;爱莉希雅&#x27;</span><br>    &#125;)<br>&#125;).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">msg</span>=&gt;</span>&#123;<br>    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(msg.<span class=\"hljs-property\">data</span>);<br>&#125;)<br></code></pre></td></tr></table></figure>\n\n<p>用法跟fetch大差不差，如果fetch实现不了的部分是刚需，还是建议大家使用fetch，毕竟原生，可以少一次引用。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>到这里，关于在前端进行网络请求的内容就已经算是<strong>入门</strong>了，往后仍有更长的路要走，本章仅仅对HTTP进行讲解，以后还会遇到像上传文件，下载文件，跑通接口，跨域，认证，jwt token，session，登录注册，SSE（服务器主动发送事件），Websocket（服务器客户端双向通信）等等一系列更复杂的实战挑战，一切的前提，是学会HTTP。</p>\n<p>没有网络，无法连接你我，你对我的文章发送了请求，我会用心写一篇文章并将文章返回给你</p>\n<p><img src=\"https://st2-res.arsrna.cn/2384500/851093f2139e84cef20ff6e0b8630188.gif\" alt=\"请在此添加图片描述\"></p>\n"},{"title":"【秒杀】JWT-满足你水管服务器的状态信息携带方式","author":"Ar-Sr-Na","authorLink":"https://www.arsrna.cn","authorAbout":"突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn","authorDesc":"突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn","comments":0,"date":"2024-03-30T16:00:00.000Z","keywords":"前端,网络,技术,全栈,jwt,后端,js","description":"JWT，即为JSON Web Token，拆开来看，JSON是JavaScript的一种对象数据存储方式，Token则是令牌，组合在一起就是在Web应用上，使用令牌的JSON数据。","index_img":"https://st2-res.arsrna.cn/2384500/ff2f3f7248f8545f4df49b909a02b89a.png","_content":"\n# 引言\n\nJWT，即为JSON Web Token，拆开来看，JSON是JavaScript的一种对象数据存储方式，Token则是令牌，组合在一起就是在Web应用上，使用令牌的JSON数据，乍一看还是有点抽象，\n\n举个例子吧，你的产品需要一个卡密来激活，激活之后才可以请请求服务器，但是HTTP请求没办法告诉服务器我是谁，我曾经请求了没，所以每次请求都是全新的，服务器在回答之后相当于“失忆”了，我如何让服务器知道我是谁来确定用户？如果单纯使用前端安全性不高，比如用cookie告诉服务器我是Kevin，服务器觉得是就是，但是我可以改成自己是Elysia，服务器还真以为是Elysia，这样子玩显然行不通，因为用户可以随便更改cookie的信息。\n\n因为篇幅限制，这里就不放太多的业务代码了，再然后提醒一下，本篇内容综合，需要先掌握系统的js知识才能继续往下看，包括不限于：SessionStorage，localstorage，cookie，crypto，JSON对象操作，nodejs\n\n## 卡密激活场景\n\n接下来就以网站最常见的一种卡密激活的请求的方式举例，某个服务器需要你激活，每次请求都需要携带这个卡密信息才能返回结果。\n\n目前常用的几种方式是`Session`和`JWT`\n\n### Session\n\n`Session`相当于一个缓存，当A用户请求服务器之后，服务器会暂时存储A的信息，并返回一个`Session token`，等到下次A携带这个`Session token`给服务器的时候，服务器就知道是A用户了，比如存储这个用户卡密到期日期，还有用户基本信息等等，这样服务器处理数据就依靠存储的信息。但是Session也有缺点，因为是存放在服务器端的，每次查找调用都会有点麻烦，而且在多服务器负载均衡的场景下，A用户请求A服务器没问题，但是B服务器有可能因为同步延迟没有同步A服务器的Session数据，导致B服务器不认识A用户了，这样一来服务器压力会变大；并且要实现多平台互通的时候，意味着Session也需要互通，这就需要不同服务器要同时使用一个数据库，加大了数据库的压力。\n\n### JWT-\n\n`JWT`更为直接，把压力交给用户，直接把信息存在用户浏览器上，服务器只管解码，但是前面也提到了，直接存用户浏览器上非常不安全，很容易就篡改了，所以JWT在普通JSON数据的基础上，加入了`Token`这么一个玩意，保证了数据不被篡改。当用户确定开卡的时候，服务器签发一个JWT，上面标记了过期时间，用户ID和基本信息，当用户A请求的时候，就需要携带这个jwt请求服务器，服务器解码验证确定没问题，拿到基本信息处理就完毕，不再像Session那样还需要去找A用户那块Session存储，自然就方便快速很多。\n\n# JWT长什么样\n\n## 数据结构\n\nJWT，长这样\n\n```fundamental\neyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJ3aWZlIjoiRWx5c2lhIiwiaXNzIjoiQXItU3ItTmEiLCJzdWIiOiLku4DkuYjmmK9KV1QiLCJuYmYiOjE3MTE4MTQ0MDAsImlhdCI6MTcxMTgxNDQwMH0.dF5bnDx0y_OKMQrKkWYUpDjgW6oD0C1WR_fD4Q16ENJ1Hm7ahxbGcCdMLNJQxOrRMgr7xV0SaL3aoaiEhE_3Ug\n```\n\n这一眼看上去乱七八糟的，不过，数据里面有两个点，数据的部分就是由`.`来分开的，分别叫做`Header 头部`，`Payload 数据载荷`，`Signature 签名`\n\n上面这段数据的三部分如下：\n\n```fundamental\nHeader\neyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9\n\nPayload\neyJ3aWZlIjoiRWx5c2lhIiwiaXNzIjoiQXItU3ItTmEiLCJzdWIiOiLku4DkuYjmmK9KV1QiLCJuYmYiOjE3MTE4MTQ0MDAsImlhdCI6MTcxMTgxNDQwMH0\n\nSignature\ndF5bnDx0y_OKMQrKkWYUpDjgW6oD0C1WR_fD4Q16ENJ1Hm7ahxbGcCdMLNJQxOrRMgr7xV0SaL3aoaiEhE_3Ug\n```\n\n`Header`和`Payload`都是由原始数据Base64编码后得到的，但是由于Payload有可能出现base编码后的`=`符号，而为了兼容浏览器URL地址栏的位置防止被编码，可以描述为：=被省略、+替换成-，/替换成\\_，所以在编解码的时候需要用到Base64URL的算法。\n\n把它们分别解码就得到了如下数据：\n\n```fundamental\nHeader\n{\"alg\":\"HS512\",\"typ\":\"JWT\"}\n\nPayload\n{\"wife\":\"Elysia\",\"iss\":\"Ar-Sr-Na\",\"sub\":\"什么是JWT\",\"nbf\":1711814400,\"iat\":1711814400}\n```\n\n这下就明白了为什么JWT的`J`是JSON了吧\n\n### Header\n\n在标准的JWT中，Header包括Token的类型和算法名称。\n\nToken好理解，本文都是JWT，自然就是JWT\n\n而算法则是决定服务器那端如何解码的，例如这里使用HS512，则意味着签名是HS512得到的。\n\n### Payload\n\n标准JWT中，Payload包含声明（要求）。声明是关于实体（通常是用户）和其他数据的声明。声明有三种类型: registered, public 和 private1。\n\n- Registered claims : 这里有一组预定义的声明，它们不是强制的，但是推荐。比如：iss (issuer), exp (expiration time), sub (subject), aud (audience)等。\n- Public claims : 可以随意定义。\n- Private claims : 用于在同意使用它们的各方之间共享信息，并且不是注册的或公开的声明。 \n\n标准文档比较难读懂，说白话，这里的Payload就是自定义信息，只不过携带一点标准信息罢了，比如上面这个\n\n```json\n{\n  \"wife\": \"Elysia\",\n  \"iss\": \"Ar-Sr-Na\",\n  \"sub\": \"什么是JWT\",\n  \"nbf\": 1711814400,\n  \"iat\": 1711814400\n}\n```\n\n| 字段 | 内容 | 用途 |\n|:----|:----|:----|\n| iss | Issuer 签发人 | 可以用来存用户id |\n| sub | Subject 主题 | 让服务器知道jwt用途 |\n| aud | Audience 观众? | 文档没看懂 |\n| nbf | Not Before 生效时间，unix秒级时间戳 | 早于nbf的时间不给过 |\n| iat | Issued At 签发时间，unix秒级时间戳 | 让服务器知道这条jwt是正常的 |\n| exp | Expiration Time 有效时间，unix秒级时间戳 | 告诉服务器这段jwt何时过期 |\n| jti | JWT ID 字面意思 | 让服务器判断这是哪个jwt |\n| 其它 | 用于存储其他自定义信息的字段 | 自定义的信息，用途无穷大 |\n\n\n也就是说，jwt的这个部分可以是任意信息，剩余的那些只是约定俗成的而已，上面举例的那条也没有包含完整的字段。而用途也不是我列出来的这些，这里只是一个举例，不一定按照字段用途来进行使用。\n\n## Signature\n\n这部分是服务器确定jwt没被篡改的关键，根据`Header`的算法字段，签名生成的方式如下\n\n`加密算法(base64(header).base64(payload), 秘钥)`\n\n秘钥可以是普通字符串，加解密使用对称加密；也可以是密钥对的私钥，加密时使用私钥，解密时使用公钥，加解密是非对称加密。\n\n如果用户自行修改了Payload部分，服务器在使用前面的Header和Payload做一次签名的时候，发现新的签名和原始jwt签名不一样，则判定为假密钥\n\n要注意，Payload和Header里面的一切数据都是明文，只不过使用了base64进行编码了，而base64不是加密的方式，任何人，任何计算机都可以轻松地还原base64字符串，所以请不要将敏感信息直接存储在jwt之中\n\n所以jwt的数据结构就是这样的：base64(header).base64(payload).signature，使用`.`将三个部分连接起来就构成了jwt。\n\n# JWT使用\n\n在这里，后端暂且使用nodejs来示范。\n\n在nodejs中有一个库`jsonwebtoken`可以让你快速生成和验证jwt\n\n在项目中安装该库 `npm i jsonwebtoken`\n\n## 签发\n\nJWT签发按照上文说的规范来进行，由base编码的Header，Payload与Signature签名算法用一个英文`.`符号拼接在一起得到。\n\n在nodejs使用库来写是这样\n\n```js\nconst jwt = require('jsonwebtoken');\nlet Payload = {\n    name: \"Fischl\",\n    iss: \"Ar-Sr-Na\",\n};\nconst secret = 'Elysia';\nlet token = jwt.sign(Payload, secret, {\n    algorithm: \"HS512\",\n    // 有效期表达式请参考 https://github.com/vercel/ms 的用法\n    expiresIn: '1d'\n})\nconsole.log(token);\n```\n\n成功后输出jwt：`eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiRmlzY2hsIiwiaXNzIjoiQXItU3ItTmEiLCJpYXQiOjE3MTE4Nzg3NDcsImV4cCI6MTcxMTk2NTE0N30._EWieqB-bRrWCKJFEANiItzCQODoc2IucjLwnpPmrd63clABXQhgz8w3hF-xDAGruIyq_INILw90r8Y19mGBxA`\n\n不用过多解释了，很简单\n\n使用方法是这样：\n\n```js\njwt.sign(Payload, 秘钥, 参数)\n```\n\n而参数这里可以指定算法，有效期等，当然这部分仍然可以自定义，这里只展示最简单的方法，可以参照官方文档：[https://www.npmjs.com/package/jsonwebtoken](https://www.npmjs.com/package/jsonwebtoken)\n\n## 验证\n\n由于HMAC无法反向解密，所以只能靠再使用签发时的流程来验证\n\n- 从传入的jwt中拿到Header，Payload\n- 解码Header得到算法\n- 使用Header中的算法，按照签发时的流程生成签名\n- 与传入的jwt中的签名进行对比，如果完全一致则通过\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2403534/20240331-d128631f.png)\n\n```js\nconst jwt = require('jsonwebtoken');\nconst secret = 'Elysia';\nlet res = jwt.verify('eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiRmlzY2hsIiwiaXNzIjoiQXItU3ItTmEiLCJpYXQiOjE3MTE4Nzg3NDcsImV4cCI6MTcxMTk2NTE0N30._EWieqB-bRrWCKJFEANiItzCQODoc2IucjLwnpPmrd63clABXQhgz8w3hF-xDAGruIyq_INILw90r8Y19mGBxA', secret)\nconsole.log(res);\n```\n\n如果签名对得上，所有验证都通过之后输出Payload\n\n如果jwt已经超过有效期，签名无效，格式不正确，都会抛出的错误，只需要进行try catch捕获，或者使用回调函数捕获即可。\n\n# 应用-卡密和登录的实现\n\n## 后端\n\n我们依然以开头说的“卡密”为例子，讲一下这个jwt要怎么用，怎么签和怎么验。\n\n比如我有一个服务器接口，只有当用户的卡密在有效期内，且用户是管理员，没有被封禁时才能正常调用。\n\n分析一下需求：\n\n- 卡密的有效期就是jwt的`exp`字段\n- 为了标识用户，用户需要一个UUID，这个放在`name`字段\n- 用户身份`id`\n- 是否封禁`block`\n\n假设有这么两个用户：\n\n```js\nlet user1 = {\n    name: \"Elysia\",\n    id: 'admin',\n    block: false\n};\nlet user2 = {\n    name: \"Fischl\",\n    id: 'normal',\n    block: false\n};\n```\n\n那么使用jsonwebtoken这个库签发的时候使用方法是这样\n\n```js\nlet token = jwt.sign(user1, 'Elysia', {\n    algorithm: \"HS512\",\n    expiresIn: '15d',\n})\n```\n\n这样就可以获得用户的jwt，剩下的就交给前端来处理了\n\n在验证的时候，使用`jwt.verify`方法，验证基本信息（在有效期内，签名正确，格式正确）正确后进入自定义的认证，判断`!block && id === 'normal'`，两者均通过之后，则正常返回数据，也可以从payload中获得name，再执行其他的操作，例如从数据库获取用户的余额等。\n\n## 前端\n\njwt更多的是用在前端调用的，后端返回给前端后，需要一个地方来进行保存\n\n而所谓的“登录态”“已激活”等状态，就是判断是否存储有相应的jwt\n\n这里有几种方式，`localStorage`，`cookie`，`sessionStorage`，我比较推荐使用localStorage，虽然cookie更适合存储这些存在有效期的数据，但是jwt本身就有有效期的字段`exp`，只要每次请求先从前端判断exp是否有效，如果无效直接移除即可，而cookie的存储调用相对来说不是那么的方便，存储的大小也比localStorage小，还有保存上可能因为路径改变而丢失。\n\n在请求的时候，例如使用`fetch`，可以在请求头header部分携带这个jwt，也可以在body，不过由于GET在服务器是没法获取body的，所以就放在了header。而header的规范一般是这样：`Authorization: Bearer {jwt}`，至于怎么放，这个就得和后端协商协商了。\n\n# 实际应用\n\n在我们公司的AI站上，登录的流程就采用了JWT，不过涉及到隐私的问题，不能够跟你讲太多，在前端部分，跟上面说的是一样的，只不过header没有这么规范，当然，你也可以自己打开F12，登录后看看请求，拿自己的token使用公钥进行解析，这里推荐一个工具用来解析jwt：[https://jwt.io](https://jwt.io)，不过要注意，请不要泄露你的access\\_token，因为这条token是你用户的最高权力，一切后果自负。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2403534/20240331-261e0e4d.png)\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2403534/20240331-305d255d.png)\n\n由于涉及到一些隐私上的算法，我没法告诉你公钥是什么，而且应用有多对公私钥，会随机地使用其中一对进行加解密，但是背后的核心jwt是永恒不变的。\n\n当你请求登录的时候，经过一系列登录流程后就获得了你的`access_token`，`id_token`，它就是jwt，一个是专门用于给服务器请求的jwt，一个是个人基本信息展现在前端的jwt，我们的服务器会验证`access_token`上面的一切数据，确定用户是能够访问接口的，随后才会正式访问，与上一节的《【秒杀】前端网络-CORS》浏览器预检操作功能类似，都是检查用户是否有权访问服务器的前提条件。\n\n# 总结\n\njwt就像你的个人档案，用人单位就是服务器，用人单位如何确定你档案里的信息是否有效，是否有篡改的可疑，就看封条是否被拆封。你的档案内容上面有姓名，身份证，国籍等等，这里就是jwt的Payload；而档案上面的档案号，就是Header，告诉阅档人员用什么样的方式去读取你的档案；封条则是JWT保护数据的核心，是否有篡改的嫌疑，就看封条是否完整，而jwt就是靠签名来判断是否篡改的。\n\n虽然现实不太可能让你保管你的档案，不过我也找不到更合适的例子了。\n\nSession就是让你的档案存在档案中心，你提供身份证号（Session Token），用人单位就从档案中心找你的档案，因为全国人的档案都在这里，找起来比较费时，而且这么多份存起来也麻烦。\n\njwt则是让档案保管在每个人手中，为了防止个人篡改，加入了签名，来验证档案的数据是否更改，这样用人单位从个人手中拿到档案的时候只需要检查封条完整就行了，大大减少了检索的压力，而且数据在用户手上，一切后果都是用户承担，也减轻了一部分的压力。\n\n# 参考文献\n\n[[1] RFC 7519, JSON Web Token (JWT)](https://www.rfc-editor.org/rfc/rfc7519)\n\n---\n\nPowered by Ar-Sr-Na","source":"_posts/2403534.md","raw":"---\ntitle: 【秒杀】JWT-满足你水管服务器的状态信息携带方式\nauthor: Ar-Sr-Na\nauthorLink: https://www.arsrna.cn\nauthorAbout: 突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn\nauthorDesc: 突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn\ncomments: false\ndate: 2024-3-31\ncategories: 技术\ntags:  前端,网络,技术,全栈,jwt,后端,js\nkeywords:  前端,网络,技术,全栈,jwt,后端,js\ndescription: JWT，即为JSON Web Token，拆开来看，JSON是JavaScript的一种对象数据存储方式，Token则是令牌，组合在一起就是在Web应用上，使用令牌的JSON数据。\nindex_img: https://st2-res.arsrna.cn/2384500/ff2f3f7248f8545f4df49b909a02b89a.png\n---\n\n# 引言\n\nJWT，即为JSON Web Token，拆开来看，JSON是JavaScript的一种对象数据存储方式，Token则是令牌，组合在一起就是在Web应用上，使用令牌的JSON数据，乍一看还是有点抽象，\n\n举个例子吧，你的产品需要一个卡密来激活，激活之后才可以请请求服务器，但是HTTP请求没办法告诉服务器我是谁，我曾经请求了没，所以每次请求都是全新的，服务器在回答之后相当于“失忆”了，我如何让服务器知道我是谁来确定用户？如果单纯使用前端安全性不高，比如用cookie告诉服务器我是Kevin，服务器觉得是就是，但是我可以改成自己是Elysia，服务器还真以为是Elysia，这样子玩显然行不通，因为用户可以随便更改cookie的信息。\n\n因为篇幅限制，这里就不放太多的业务代码了，再然后提醒一下，本篇内容综合，需要先掌握系统的js知识才能继续往下看，包括不限于：SessionStorage，localstorage，cookie，crypto，JSON对象操作，nodejs\n\n## 卡密激活场景\n\n接下来就以网站最常见的一种卡密激活的请求的方式举例，某个服务器需要你激活，每次请求都需要携带这个卡密信息才能返回结果。\n\n目前常用的几种方式是`Session`和`JWT`\n\n### Session\n\n`Session`相当于一个缓存，当A用户请求服务器之后，服务器会暂时存储A的信息，并返回一个`Session token`，等到下次A携带这个`Session token`给服务器的时候，服务器就知道是A用户了，比如存储这个用户卡密到期日期，还有用户基本信息等等，这样服务器处理数据就依靠存储的信息。但是Session也有缺点，因为是存放在服务器端的，每次查找调用都会有点麻烦，而且在多服务器负载均衡的场景下，A用户请求A服务器没问题，但是B服务器有可能因为同步延迟没有同步A服务器的Session数据，导致B服务器不认识A用户了，这样一来服务器压力会变大；并且要实现多平台互通的时候，意味着Session也需要互通，这就需要不同服务器要同时使用一个数据库，加大了数据库的压力。\n\n### JWT-\n\n`JWT`更为直接，把压力交给用户，直接把信息存在用户浏览器上，服务器只管解码，但是前面也提到了，直接存用户浏览器上非常不安全，很容易就篡改了，所以JWT在普通JSON数据的基础上，加入了`Token`这么一个玩意，保证了数据不被篡改。当用户确定开卡的时候，服务器签发一个JWT，上面标记了过期时间，用户ID和基本信息，当用户A请求的时候，就需要携带这个jwt请求服务器，服务器解码验证确定没问题，拿到基本信息处理就完毕，不再像Session那样还需要去找A用户那块Session存储，自然就方便快速很多。\n\n# JWT长什么样\n\n## 数据结构\n\nJWT，长这样\n\n```fundamental\neyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJ3aWZlIjoiRWx5c2lhIiwiaXNzIjoiQXItU3ItTmEiLCJzdWIiOiLku4DkuYjmmK9KV1QiLCJuYmYiOjE3MTE4MTQ0MDAsImlhdCI6MTcxMTgxNDQwMH0.dF5bnDx0y_OKMQrKkWYUpDjgW6oD0C1WR_fD4Q16ENJ1Hm7ahxbGcCdMLNJQxOrRMgr7xV0SaL3aoaiEhE_3Ug\n```\n\n这一眼看上去乱七八糟的，不过，数据里面有两个点，数据的部分就是由`.`来分开的，分别叫做`Header 头部`，`Payload 数据载荷`，`Signature 签名`\n\n上面这段数据的三部分如下：\n\n```fundamental\nHeader\neyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9\n\nPayload\neyJ3aWZlIjoiRWx5c2lhIiwiaXNzIjoiQXItU3ItTmEiLCJzdWIiOiLku4DkuYjmmK9KV1QiLCJuYmYiOjE3MTE4MTQ0MDAsImlhdCI6MTcxMTgxNDQwMH0\n\nSignature\ndF5bnDx0y_OKMQrKkWYUpDjgW6oD0C1WR_fD4Q16ENJ1Hm7ahxbGcCdMLNJQxOrRMgr7xV0SaL3aoaiEhE_3Ug\n```\n\n`Header`和`Payload`都是由原始数据Base64编码后得到的，但是由于Payload有可能出现base编码后的`=`符号，而为了兼容浏览器URL地址栏的位置防止被编码，可以描述为：=被省略、+替换成-，/替换成\\_，所以在编解码的时候需要用到Base64URL的算法。\n\n把它们分别解码就得到了如下数据：\n\n```fundamental\nHeader\n{\"alg\":\"HS512\",\"typ\":\"JWT\"}\n\nPayload\n{\"wife\":\"Elysia\",\"iss\":\"Ar-Sr-Na\",\"sub\":\"什么是JWT\",\"nbf\":1711814400,\"iat\":1711814400}\n```\n\n这下就明白了为什么JWT的`J`是JSON了吧\n\n### Header\n\n在标准的JWT中，Header包括Token的类型和算法名称。\n\nToken好理解，本文都是JWT，自然就是JWT\n\n而算法则是决定服务器那端如何解码的，例如这里使用HS512，则意味着签名是HS512得到的。\n\n### Payload\n\n标准JWT中，Payload包含声明（要求）。声明是关于实体（通常是用户）和其他数据的声明。声明有三种类型: registered, public 和 private1。\n\n- Registered claims : 这里有一组预定义的声明，它们不是强制的，但是推荐。比如：iss (issuer), exp (expiration time), sub (subject), aud (audience)等。\n- Public claims : 可以随意定义。\n- Private claims : 用于在同意使用它们的各方之间共享信息，并且不是注册的或公开的声明。 \n\n标准文档比较难读懂，说白话，这里的Payload就是自定义信息，只不过携带一点标准信息罢了，比如上面这个\n\n```json\n{\n  \"wife\": \"Elysia\",\n  \"iss\": \"Ar-Sr-Na\",\n  \"sub\": \"什么是JWT\",\n  \"nbf\": 1711814400,\n  \"iat\": 1711814400\n}\n```\n\n| 字段 | 内容 | 用途 |\n|:----|:----|:----|\n| iss | Issuer 签发人 | 可以用来存用户id |\n| sub | Subject 主题 | 让服务器知道jwt用途 |\n| aud | Audience 观众? | 文档没看懂 |\n| nbf | Not Before 生效时间，unix秒级时间戳 | 早于nbf的时间不给过 |\n| iat | Issued At 签发时间，unix秒级时间戳 | 让服务器知道这条jwt是正常的 |\n| exp | Expiration Time 有效时间，unix秒级时间戳 | 告诉服务器这段jwt何时过期 |\n| jti | JWT ID 字面意思 | 让服务器判断这是哪个jwt |\n| 其它 | 用于存储其他自定义信息的字段 | 自定义的信息，用途无穷大 |\n\n\n也就是说，jwt的这个部分可以是任意信息，剩余的那些只是约定俗成的而已，上面举例的那条也没有包含完整的字段。而用途也不是我列出来的这些，这里只是一个举例，不一定按照字段用途来进行使用。\n\n## Signature\n\n这部分是服务器确定jwt没被篡改的关键，根据`Header`的算法字段，签名生成的方式如下\n\n`加密算法(base64(header).base64(payload), 秘钥)`\n\n秘钥可以是普通字符串，加解密使用对称加密；也可以是密钥对的私钥，加密时使用私钥，解密时使用公钥，加解密是非对称加密。\n\n如果用户自行修改了Payload部分，服务器在使用前面的Header和Payload做一次签名的时候，发现新的签名和原始jwt签名不一样，则判定为假密钥\n\n要注意，Payload和Header里面的一切数据都是明文，只不过使用了base64进行编码了，而base64不是加密的方式，任何人，任何计算机都可以轻松地还原base64字符串，所以请不要将敏感信息直接存储在jwt之中\n\n所以jwt的数据结构就是这样的：base64(header).base64(payload).signature，使用`.`将三个部分连接起来就构成了jwt。\n\n# JWT使用\n\n在这里，后端暂且使用nodejs来示范。\n\n在nodejs中有一个库`jsonwebtoken`可以让你快速生成和验证jwt\n\n在项目中安装该库 `npm i jsonwebtoken`\n\n## 签发\n\nJWT签发按照上文说的规范来进行，由base编码的Header，Payload与Signature签名算法用一个英文`.`符号拼接在一起得到。\n\n在nodejs使用库来写是这样\n\n```js\nconst jwt = require('jsonwebtoken');\nlet Payload = {\n    name: \"Fischl\",\n    iss: \"Ar-Sr-Na\",\n};\nconst secret = 'Elysia';\nlet token = jwt.sign(Payload, secret, {\n    algorithm: \"HS512\",\n    // 有效期表达式请参考 https://github.com/vercel/ms 的用法\n    expiresIn: '1d'\n})\nconsole.log(token);\n```\n\n成功后输出jwt：`eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiRmlzY2hsIiwiaXNzIjoiQXItU3ItTmEiLCJpYXQiOjE3MTE4Nzg3NDcsImV4cCI6MTcxMTk2NTE0N30._EWieqB-bRrWCKJFEANiItzCQODoc2IucjLwnpPmrd63clABXQhgz8w3hF-xDAGruIyq_INILw90r8Y19mGBxA`\n\n不用过多解释了，很简单\n\n使用方法是这样：\n\n```js\njwt.sign(Payload, 秘钥, 参数)\n```\n\n而参数这里可以指定算法，有效期等，当然这部分仍然可以自定义，这里只展示最简单的方法，可以参照官方文档：[https://www.npmjs.com/package/jsonwebtoken](https://www.npmjs.com/package/jsonwebtoken)\n\n## 验证\n\n由于HMAC无法反向解密，所以只能靠再使用签发时的流程来验证\n\n- 从传入的jwt中拿到Header，Payload\n- 解码Header得到算法\n- 使用Header中的算法，按照签发时的流程生成签名\n- 与传入的jwt中的签名进行对比，如果完全一致则通过\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2403534/20240331-d128631f.png)\n\n```js\nconst jwt = require('jsonwebtoken');\nconst secret = 'Elysia';\nlet res = jwt.verify('eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiRmlzY2hsIiwiaXNzIjoiQXItU3ItTmEiLCJpYXQiOjE3MTE4Nzg3NDcsImV4cCI6MTcxMTk2NTE0N30._EWieqB-bRrWCKJFEANiItzCQODoc2IucjLwnpPmrd63clABXQhgz8w3hF-xDAGruIyq_INILw90r8Y19mGBxA', secret)\nconsole.log(res);\n```\n\n如果签名对得上，所有验证都通过之后输出Payload\n\n如果jwt已经超过有效期，签名无效，格式不正确，都会抛出的错误，只需要进行try catch捕获，或者使用回调函数捕获即可。\n\n# 应用-卡密和登录的实现\n\n## 后端\n\n我们依然以开头说的“卡密”为例子，讲一下这个jwt要怎么用，怎么签和怎么验。\n\n比如我有一个服务器接口，只有当用户的卡密在有效期内，且用户是管理员，没有被封禁时才能正常调用。\n\n分析一下需求：\n\n- 卡密的有效期就是jwt的`exp`字段\n- 为了标识用户，用户需要一个UUID，这个放在`name`字段\n- 用户身份`id`\n- 是否封禁`block`\n\n假设有这么两个用户：\n\n```js\nlet user1 = {\n    name: \"Elysia\",\n    id: 'admin',\n    block: false\n};\nlet user2 = {\n    name: \"Fischl\",\n    id: 'normal',\n    block: false\n};\n```\n\n那么使用jsonwebtoken这个库签发的时候使用方法是这样\n\n```js\nlet token = jwt.sign(user1, 'Elysia', {\n    algorithm: \"HS512\",\n    expiresIn: '15d',\n})\n```\n\n这样就可以获得用户的jwt，剩下的就交给前端来处理了\n\n在验证的时候，使用`jwt.verify`方法，验证基本信息（在有效期内，签名正确，格式正确）正确后进入自定义的认证，判断`!block && id === 'normal'`，两者均通过之后，则正常返回数据，也可以从payload中获得name，再执行其他的操作，例如从数据库获取用户的余额等。\n\n## 前端\n\njwt更多的是用在前端调用的，后端返回给前端后，需要一个地方来进行保存\n\n而所谓的“登录态”“已激活”等状态，就是判断是否存储有相应的jwt\n\n这里有几种方式，`localStorage`，`cookie`，`sessionStorage`，我比较推荐使用localStorage，虽然cookie更适合存储这些存在有效期的数据，但是jwt本身就有有效期的字段`exp`，只要每次请求先从前端判断exp是否有效，如果无效直接移除即可，而cookie的存储调用相对来说不是那么的方便，存储的大小也比localStorage小，还有保存上可能因为路径改变而丢失。\n\n在请求的时候，例如使用`fetch`，可以在请求头header部分携带这个jwt，也可以在body，不过由于GET在服务器是没法获取body的，所以就放在了header。而header的规范一般是这样：`Authorization: Bearer {jwt}`，至于怎么放，这个就得和后端协商协商了。\n\n# 实际应用\n\n在我们公司的AI站上，登录的流程就采用了JWT，不过涉及到隐私的问题，不能够跟你讲太多，在前端部分，跟上面说的是一样的，只不过header没有这么规范，当然，你也可以自己打开F12，登录后看看请求，拿自己的token使用公钥进行解析，这里推荐一个工具用来解析jwt：[https://jwt.io](https://jwt.io)，不过要注意，请不要泄露你的access\\_token，因为这条token是你用户的最高权力，一切后果自负。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2403534/20240331-261e0e4d.png)\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2403534/20240331-305d255d.png)\n\n由于涉及到一些隐私上的算法，我没法告诉你公钥是什么，而且应用有多对公私钥，会随机地使用其中一对进行加解密，但是背后的核心jwt是永恒不变的。\n\n当你请求登录的时候，经过一系列登录流程后就获得了你的`access_token`，`id_token`，它就是jwt，一个是专门用于给服务器请求的jwt，一个是个人基本信息展现在前端的jwt，我们的服务器会验证`access_token`上面的一切数据，确定用户是能够访问接口的，随后才会正式访问，与上一节的《【秒杀】前端网络-CORS》浏览器预检操作功能类似，都是检查用户是否有权访问服务器的前提条件。\n\n# 总结\n\njwt就像你的个人档案，用人单位就是服务器，用人单位如何确定你档案里的信息是否有效，是否有篡改的可疑，就看封条是否被拆封。你的档案内容上面有姓名，身份证，国籍等等，这里就是jwt的Payload；而档案上面的档案号，就是Header，告诉阅档人员用什么样的方式去读取你的档案；封条则是JWT保护数据的核心，是否有篡改的嫌疑，就看封条是否完整，而jwt就是靠签名来判断是否篡改的。\n\n虽然现实不太可能让你保管你的档案，不过我也找不到更合适的例子了。\n\nSession就是让你的档案存在档案中心，你提供身份证号（Session Token），用人单位就从档案中心找你的档案，因为全国人的档案都在这里，找起来比较费时，而且这么多份存起来也麻烦。\n\njwt则是让档案保管在每个人手中，为了防止个人篡改，加入了签名，来验证档案的数据是否更改，这样用人单位从个人手中拿到档案的时候只需要检查封条完整就行了，大大减少了检索的压力，而且数据在用户手上，一切后果都是用户承担，也减轻了一部分的压力。\n\n# 参考文献\n\n[[1] RFC 7519, JSON Web Token (JWT)](https://www.rfc-editor.org/rfc/rfc7519)\n\n---\n\nPowered by Ar-Sr-Na","slug":"2403534","published":1,"updated":"2024-03-31T15:32:03.843Z","layout":"post","photos":[],"link":"","_id":"clufok5an0000zknd0j9phzzo","content":"<h1 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h1><p>JWT，即为JSON Web Token，拆开来看，JSON是JavaScript的一种对象数据存储方式，Token则是令牌，组合在一起就是在Web应用上，使用令牌的JSON数据，乍一看还是有点抽象，</p>\n<p>举个例子吧，你的产品需要一个卡密来激活，激活之后才可以请请求服务器，但是HTTP请求没办法告诉服务器我是谁，我曾经请求了没，所以每次请求都是全新的，服务器在回答之后相当于“失忆”了，我如何让服务器知道我是谁来确定用户？如果单纯使用前端安全性不高，比如用cookie告诉服务器我是Kevin，服务器觉得是就是，但是我可以改成自己是Elysia，服务器还真以为是Elysia，这样子玩显然行不通，因为用户可以随便更改cookie的信息。</p>\n<p>因为篇幅限制，这里就不放太多的业务代码了，再然后提醒一下，本篇内容综合，需要先掌握系统的js知识才能继续往下看，包括不限于：SessionStorage，localstorage，cookie，crypto，JSON对象操作，nodejs</p>\n<h2 id=\"卡密激活场景\"><a href=\"#卡密激活场景\" class=\"headerlink\" title=\"卡密激活场景\"></a>卡密激活场景</h2><p>接下来就以网站最常见的一种卡密激活的请求的方式举例，某个服务器需要你激活，每次请求都需要携带这个卡密信息才能返回结果。</p>\n<p>目前常用的几种方式是<code>Session</code>和<code>JWT</code></p>\n<h3 id=\"Session\"><a href=\"#Session\" class=\"headerlink\" title=\"Session\"></a>Session</h3><p><code>Session</code>相当于一个缓存，当A用户请求服务器之后，服务器会暂时存储A的信息，并返回一个<code>Session token</code>，等到下次A携带这个<code>Session token</code>给服务器的时候，服务器就知道是A用户了，比如存储这个用户卡密到期日期，还有用户基本信息等等，这样服务器处理数据就依靠存储的信息。但是Session也有缺点，因为是存放在服务器端的，每次查找调用都会有点麻烦，而且在多服务器负载均衡的场景下，A用户请求A服务器没问题，但是B服务器有可能因为同步延迟没有同步A服务器的Session数据，导致B服务器不认识A用户了，这样一来服务器压力会变大；并且要实现多平台互通的时候，意味着Session也需要互通，这就需要不同服务器要同时使用一个数据库，加大了数据库的压力。</p>\n<h3 id=\"JWT\"><a href=\"#JWT\" class=\"headerlink\" title=\"JWT-\"></a>JWT-</h3><p><code>JWT</code>更为直接，把压力交给用户，直接把信息存在用户浏览器上，服务器只管解码，但是前面也提到了，直接存用户浏览器上非常不安全，很容易就篡改了，所以JWT在普通JSON数据的基础上，加入了<code>Token</code>这么一个玩意，保证了数据不被篡改。当用户确定开卡的时候，服务器签发一个JWT，上面标记了过期时间，用户ID和基本信息，当用户A请求的时候，就需要携带这个jwt请求服务器，服务器解码验证确定没问题，拿到基本信息处理就完毕，不再像Session那样还需要去找A用户那块Session存储，自然就方便快速很多。</p>\n<h1 id=\"JWT长什么样\"><a href=\"#JWT长什么样\" class=\"headerlink\" title=\"JWT长什么样\"></a>JWT长什么样</h1><h2 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h2><p>JWT，长这样</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs fundamental\">eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJ3aWZlIjoiRWx5c2lhIiwiaXNzIjoiQXItU3ItTmEiLCJzdWIiOiLku4DkuYjmmK9KV1QiLCJuYmYiOjE3MTE4MTQ0MDAsImlhdCI6MTcxMTgxNDQwMH0.dF5bnDx0y_OKMQrKkWYUpDjgW6oD0C1WR_fD4Q16ENJ1Hm7ahxbGcCdMLNJQxOrRMgr7xV0SaL3aoaiEhE_3Ug<br></code></pre></td></tr></table></figure>\n\n<p>这一眼看上去乱七八糟的，不过，数据里面有两个点，数据的部分就是由<code>.</code>来分开的，分别叫做<code>Header 头部</code>，<code>Payload 数据载荷</code>，<code>Signature 签名</code></p>\n<p>上面这段数据的三部分如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs fundamental\">Header<br>eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9<br><br>Payload<br>eyJ3aWZlIjoiRWx5c2lhIiwiaXNzIjoiQXItU3ItTmEiLCJzdWIiOiLku4DkuYjmmK9KV1QiLCJuYmYiOjE3MTE4MTQ0MDAsImlhdCI6MTcxMTgxNDQwMH0<br><br>Signature<br>dF5bnDx0y_OKMQrKkWYUpDjgW6oD0C1WR_fD4Q16ENJ1Hm7ahxbGcCdMLNJQxOrRMgr7xV0SaL3aoaiEhE_3Ug<br></code></pre></td></tr></table></figure>\n\n<p><code>Header</code>和<code>Payload</code>都是由原始数据Base64编码后得到的，但是由于Payload有可能出现base编码后的<code>=</code>符号，而为了兼容浏览器URL地址栏的位置防止被编码，可以描述为：&#x3D;被省略、+替换成-，&#x2F;替换成_，所以在编解码的时候需要用到Base64URL的算法。</p>\n<p>把它们分别解码就得到了如下数据：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs fundamental\">Header<br>&#123;&quot;alg&quot;:&quot;HS512&quot;,&quot;typ&quot;:&quot;JWT&quot;&#125;<br><br>Payload<br>&#123;&quot;wife&quot;:&quot;Elysia&quot;,&quot;iss&quot;:&quot;Ar-Sr-Na&quot;,&quot;sub&quot;:&quot;什么是JWT&quot;,&quot;nbf&quot;:1711814400,&quot;iat&quot;:1711814400&#125;<br></code></pre></td></tr></table></figure>\n\n<p>这下就明白了为什么JWT的<code>J</code>是JSON了吧</p>\n<h3 id=\"Header\"><a href=\"#Header\" class=\"headerlink\" title=\"Header\"></a>Header</h3><p>在标准的JWT中，Header包括Token的类型和算法名称。</p>\n<p>Token好理解，本文都是JWT，自然就是JWT</p>\n<p>而算法则是决定服务器那端如何解码的，例如这里使用HS512，则意味着签名是HS512得到的。</p>\n<h3 id=\"Payload\"><a href=\"#Payload\" class=\"headerlink\" title=\"Payload\"></a>Payload</h3><p>标准JWT中，Payload包含声明（要求）。声明是关于实体（通常是用户）和其他数据的声明。声明有三种类型: registered, public 和 private1。</p>\n<ul>\n<li>Registered claims : 这里有一组预定义的声明，它们不是强制的，但是推荐。比如：iss (issuer), exp (expiration time), sub (subject), aud (audience)等。</li>\n<li>Public claims : 可以随意定义。</li>\n<li>Private claims : 用于在同意使用它们的各方之间共享信息，并且不是注册的或公开的声明。</li>\n</ul>\n<p>标准文档比较难读懂，说白话，这里的Payload就是自定义信息，只不过携带一点标准信息罢了，比如上面这个</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;wife&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Elysia&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;iss&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Ar-Sr-Na&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;sub&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;什么是JWT&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;nbf&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1711814400</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;iat&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1711814400</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">字段</th>\n<th align=\"left\">内容</th>\n<th align=\"left\">用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">iss</td>\n<td align=\"left\">Issuer 签发人</td>\n<td align=\"left\">可以用来存用户id</td>\n</tr>\n<tr>\n<td align=\"left\">sub</td>\n<td align=\"left\">Subject 主题</td>\n<td align=\"left\">让服务器知道jwt用途</td>\n</tr>\n<tr>\n<td align=\"left\">aud</td>\n<td align=\"left\">Audience 观众?</td>\n<td align=\"left\">文档没看懂</td>\n</tr>\n<tr>\n<td align=\"left\">nbf</td>\n<td align=\"left\">Not Before 生效时间，unix秒级时间戳</td>\n<td align=\"left\">早于nbf的时间不给过</td>\n</tr>\n<tr>\n<td align=\"left\">iat</td>\n<td align=\"left\">Issued At 签发时间，unix秒级时间戳</td>\n<td align=\"left\">让服务器知道这条jwt是正常的</td>\n</tr>\n<tr>\n<td align=\"left\">exp</td>\n<td align=\"left\">Expiration Time 有效时间，unix秒级时间戳</td>\n<td align=\"left\">告诉服务器这段jwt何时过期</td>\n</tr>\n<tr>\n<td align=\"left\">jti</td>\n<td align=\"left\">JWT ID 字面意思</td>\n<td align=\"left\">让服务器判断这是哪个jwt</td>\n</tr>\n<tr>\n<td align=\"left\">其它</td>\n<td align=\"left\">用于存储其他自定义信息的字段</td>\n<td align=\"left\">自定义的信息，用途无穷大</td>\n</tr>\n</tbody></table>\n<p>也就是说，jwt的这个部分可以是任意信息，剩余的那些只是约定俗成的而已，上面举例的那条也没有包含完整的字段。而用途也不是我列出来的这些，这里只是一个举例，不一定按照字段用途来进行使用。</p>\n<h2 id=\"Signature\"><a href=\"#Signature\" class=\"headerlink\" title=\"Signature\"></a>Signature</h2><p>这部分是服务器确定jwt没被篡改的关键，根据<code>Header</code>的算法字段，签名生成的方式如下</p>\n<p><code>加密算法(base64(header).base64(payload), 秘钥)</code></p>\n<p>秘钥可以是普通字符串，加解密使用对称加密；也可以是密钥对的私钥，加密时使用私钥，解密时使用公钥，加解密是非对称加密。</p>\n<p>如果用户自行修改了Payload部分，服务器在使用前面的Header和Payload做一次签名的时候，发现新的签名和原始jwt签名不一样，则判定为假密钥</p>\n<p>要注意，Payload和Header里面的一切数据都是明文，只不过使用了base64进行编码了，而base64不是加密的方式，任何人，任何计算机都可以轻松地还原base64字符串，所以请不要将敏感信息直接存储在jwt之中</p>\n<p>所以jwt的数据结构就是这样的：base64(header).base64(payload).signature，使用<code>.</code>将三个部分连接起来就构成了jwt。</p>\n<h1 id=\"JWT使用\"><a href=\"#JWT使用\" class=\"headerlink\" title=\"JWT使用\"></a>JWT使用</h1><p>在这里，后端暂且使用nodejs来示范。</p>\n<p>在nodejs中有一个库<code>jsonwebtoken</code>可以让你快速生成和验证jwt</p>\n<p>在项目中安装该库 <code>npm i jsonwebtoken</code></p>\n<h2 id=\"签发\"><a href=\"#签发\" class=\"headerlink\" title=\"签发\"></a>签发</h2><p>JWT签发按照上文说的规范来进行，由base编码的Header，Payload与Signature签名算法用一个英文<code>.</code>符号拼接在一起得到。</p>\n<p>在nodejs使用库来写是这样</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> jwt = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;jsonwebtoken&#x27;</span>);<br><span class=\"hljs-keyword\">let</span> <span class=\"hljs-title class_\">Payload</span> = &#123;<br>    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;Fischl&quot;</span>,<br>    <span class=\"hljs-attr\">iss</span>: <span class=\"hljs-string\">&quot;Ar-Sr-Na&quot;</span>,<br>&#125;;<br><span class=\"hljs-keyword\">const</span> secret = <span class=\"hljs-string\">&#x27;Elysia&#x27;</span>;<br><span class=\"hljs-keyword\">let</span> token = jwt.<span class=\"hljs-title function_\">sign</span>(<span class=\"hljs-title class_\">Payload</span>, secret, &#123;<br>    <span class=\"hljs-attr\">algorithm</span>: <span class=\"hljs-string\">&quot;HS512&quot;</span>,<br>    <span class=\"hljs-comment\">// 有效期表达式请参考 https://github.com/vercel/ms 的用法</span><br>    <span class=\"hljs-attr\">expiresIn</span>: <span class=\"hljs-string\">&#x27;1d&#x27;</span><br>&#125;)<br><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(token);<br></code></pre></td></tr></table></figure>\n\n<p>成功后输出jwt：<code>eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiRmlzY2hsIiwiaXNzIjoiQXItU3ItTmEiLCJpYXQiOjE3MTE4Nzg3NDcsImV4cCI6MTcxMTk2NTE0N30._EWieqB-bRrWCKJFEANiItzCQODoc2IucjLwnpPmrd63clABXQhgz8w3hF-xDAGruIyq_INILw90r8Y19mGBxA</code></p>\n<p>不用过多解释了，很简单</p>\n<p>使用方法是这样：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">jwt.<span class=\"hljs-title function_\">sign</span>(<span class=\"hljs-title class_\">Payload</span>, 秘钥, 参数)<br></code></pre></td></tr></table></figure>\n\n<p>而参数这里可以指定算法，有效期等，当然这部分仍然可以自定义，这里只展示最简单的方法，可以参照官方文档：<a href=\"https://www.npmjs.com/package/jsonwebtoken\">https://www.npmjs.com/package/jsonwebtoken</a></p>\n<h2 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h2><p>由于HMAC无法反向解密，所以只能靠再使用签发时的流程来验证</p>\n<ul>\n<li>从传入的jwt中拿到Header，Payload</li>\n<li>解码Header得到算法</li>\n<li>使用Header中的算法，按照签发时的流程生成签名</li>\n<li>与传入的jwt中的签名进行对比，如果完全一致则通过</li>\n</ul>\n<p><img src=\"https://st2-res.arsrna.cn/2403534/20240331-d128631f.png\" alt=\"请在此添加图片描述\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> jwt = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;jsonwebtoken&#x27;</span>);<br><span class=\"hljs-keyword\">const</span> secret = <span class=\"hljs-string\">&#x27;Elysia&#x27;</span>;<br><span class=\"hljs-keyword\">let</span> res = jwt.<span class=\"hljs-title function_\">verify</span>(<span class=\"hljs-string\">&#x27;eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiRmlzY2hsIiwiaXNzIjoiQXItU3ItTmEiLCJpYXQiOjE3MTE4Nzg3NDcsImV4cCI6MTcxMTk2NTE0N30._EWieqB-bRrWCKJFEANiItzCQODoc2IucjLwnpPmrd63clABXQhgz8w3hF-xDAGruIyq_INILw90r8Y19mGBxA&#x27;</span>, secret)<br><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(res);<br></code></pre></td></tr></table></figure>\n\n<p>如果签名对得上，所有验证都通过之后输出Payload</p>\n<p>如果jwt已经超过有效期，签名无效，格式不正确，都会抛出的错误，只需要进行try catch捕获，或者使用回调函数捕获即可。</p>\n<h1 id=\"应用-卡密和登录的实现\"><a href=\"#应用-卡密和登录的实现\" class=\"headerlink\" title=\"应用-卡密和登录的实现\"></a>应用-卡密和登录的实现</h1><h2 id=\"后端\"><a href=\"#后端\" class=\"headerlink\" title=\"后端\"></a>后端</h2><p>我们依然以开头说的“卡密”为例子，讲一下这个jwt要怎么用，怎么签和怎么验。</p>\n<p>比如我有一个服务器接口，只有当用户的卡密在有效期内，且用户是管理员，没有被封禁时才能正常调用。</p>\n<p>分析一下需求：</p>\n<ul>\n<li>卡密的有效期就是jwt的<code>exp</code>字段</li>\n<li>为了标识用户，用户需要一个UUID，这个放在<code>name</code>字段</li>\n<li>用户身份<code>id</code></li>\n<li>是否封禁<code>block</code></li>\n</ul>\n<p>假设有这么两个用户：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">let</span> user1 = &#123;<br>    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;Elysia&quot;</span>,<br>    <span class=\"hljs-attr\">id</span>: <span class=\"hljs-string\">&#x27;admin&#x27;</span>,<br>    <span class=\"hljs-attr\">block</span>: <span class=\"hljs-literal\">false</span><br>&#125;;<br><span class=\"hljs-keyword\">let</span> user2 = &#123;<br>    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;Fischl&quot;</span>,<br>    <span class=\"hljs-attr\">id</span>: <span class=\"hljs-string\">&#x27;normal&#x27;</span>,<br>    <span class=\"hljs-attr\">block</span>: <span class=\"hljs-literal\">false</span><br>&#125;;<br></code></pre></td></tr></table></figure>\n\n<p>那么使用jsonwebtoken这个库签发的时候使用方法是这样</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">let</span> token = jwt.<span class=\"hljs-title function_\">sign</span>(user1, <span class=\"hljs-string\">&#x27;Elysia&#x27;</span>, &#123;<br>    <span class=\"hljs-attr\">algorithm</span>: <span class=\"hljs-string\">&quot;HS512&quot;</span>,<br>    <span class=\"hljs-attr\">expiresIn</span>: <span class=\"hljs-string\">&#x27;15d&#x27;</span>,<br>&#125;)<br></code></pre></td></tr></table></figure>\n\n<p>这样就可以获得用户的jwt，剩下的就交给前端来处理了</p>\n<p>在验证的时候，使用<code>jwt.verify</code>方法，验证基本信息（在有效期内，签名正确，格式正确）正确后进入自定义的认证，判断<code>!block &amp;&amp; id === &#39;normal&#39;</code>，两者均通过之后，则正常返回数据，也可以从payload中获得name，再执行其他的操作，例如从数据库获取用户的余额等。</p>\n<h2 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h2><p>jwt更多的是用在前端调用的，后端返回给前端后，需要一个地方来进行保存</p>\n<p>而所谓的“登录态”“已激活”等状态，就是判断是否存储有相应的jwt</p>\n<p>这里有几种方式，<code>localStorage</code>，<code>cookie</code>，<code>sessionStorage</code>，我比较推荐使用localStorage，虽然cookie更适合存储这些存在有效期的数据，但是jwt本身就有有效期的字段<code>exp</code>，只要每次请求先从前端判断exp是否有效，如果无效直接移除即可，而cookie的存储调用相对来说不是那么的方便，存储的大小也比localStorage小，还有保存上可能因为路径改变而丢失。</p>\n<p>在请求的时候，例如使用<code>fetch</code>，可以在请求头header部分携带这个jwt，也可以在body，不过由于GET在服务器是没法获取body的，所以就放在了header。而header的规范一般是这样：<code>Authorization: Bearer &#123;jwt&#125;</code>，至于怎么放，这个就得和后端协商协商了。</p>\n<h1 id=\"实际应用\"><a href=\"#实际应用\" class=\"headerlink\" title=\"实际应用\"></a>实际应用</h1><p>在我们公司的AI站上，登录的流程就采用了JWT，不过涉及到隐私的问题，不能够跟你讲太多，在前端部分，跟上面说的是一样的，只不过header没有这么规范，当然，你也可以自己打开F12，登录后看看请求，拿自己的token使用公钥进行解析，这里推荐一个工具用来解析jwt：<a href=\"https://jwt.io/\">https://jwt.io</a>，不过要注意，请不要泄露你的access_token，因为这条token是你用户的最高权力，一切后果自负。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2403534/20240331-261e0e4d.png\" alt=\"请在此添加图片描述\"></p>\n<p><img src=\"https://st2-res.arsrna.cn/2403534/20240331-305d255d.png\" alt=\"请在此添加图片描述\"></p>\n<p>由于涉及到一些隐私上的算法，我没法告诉你公钥是什么，而且应用有多对公私钥，会随机地使用其中一对进行加解密，但是背后的核心jwt是永恒不变的。</p>\n<p>当你请求登录的时候，经过一系列登录流程后就获得了你的<code>access_token</code>，<code>id_token</code>，它就是jwt，一个是专门用于给服务器请求的jwt，一个是个人基本信息展现在前端的jwt，我们的服务器会验证<code>access_token</code>上面的一切数据，确定用户是能够访问接口的，随后才会正式访问，与上一节的《【秒杀】前端网络-CORS》浏览器预检操作功能类似，都是检查用户是否有权访问服务器的前提条件。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>jwt就像你的个人档案，用人单位就是服务器，用人单位如何确定你档案里的信息是否有效，是否有篡改的可疑，就看封条是否被拆封。你的档案内容上面有姓名，身份证，国籍等等，这里就是jwt的Payload；而档案上面的档案号，就是Header，告诉阅档人员用什么样的方式去读取你的档案；封条则是JWT保护数据的核心，是否有篡改的嫌疑，就看封条是否完整，而jwt就是靠签名来判断是否篡改的。</p>\n<p>虽然现实不太可能让你保管你的档案，不过我也找不到更合适的例子了。</p>\n<p>Session就是让你的档案存在档案中心，你提供身份证号（Session Token），用人单位就从档案中心找你的档案，因为全国人的档案都在这里，找起来比较费时，而且这么多份存起来也麻烦。</p>\n<p>jwt则是让档案保管在每个人手中，为了防止个人篡改，加入了签名，来验证档案的数据是否更改，这样用人单位从个人手中拿到档案的时候只需要检查封条完整就行了，大大减少了检索的压力，而且数据在用户手上，一切后果都是用户承担，也减轻了一部分的压力。</p>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><p><a href=\"https://www.rfc-editor.org/rfc/rfc7519\">[1] RFC 7519, JSON Web Token (JWT)</a></p>\n<hr>\n<p>Powered by Ar-Sr-Na</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h1><p>JWT，即为JSON Web Token，拆开来看，JSON是JavaScript的一种对象数据存储方式，Token则是令牌，组合在一起就是在Web应用上，使用令牌的JSON数据，乍一看还是有点抽象，</p>\n<p>举个例子吧，你的产品需要一个卡密来激活，激活之后才可以请请求服务器，但是HTTP请求没办法告诉服务器我是谁，我曾经请求了没，所以每次请求都是全新的，服务器在回答之后相当于“失忆”了，我如何让服务器知道我是谁来确定用户？如果单纯使用前端安全性不高，比如用cookie告诉服务器我是Kevin，服务器觉得是就是，但是我可以改成自己是Elysia，服务器还真以为是Elysia，这样子玩显然行不通，因为用户可以随便更改cookie的信息。</p>\n<p>因为篇幅限制，这里就不放太多的业务代码了，再然后提醒一下，本篇内容综合，需要先掌握系统的js知识才能继续往下看，包括不限于：SessionStorage，localstorage，cookie，crypto，JSON对象操作，nodejs</p>\n<h2 id=\"卡密激活场景\"><a href=\"#卡密激活场景\" class=\"headerlink\" title=\"卡密激活场景\"></a>卡密激活场景</h2><p>接下来就以网站最常见的一种卡密激活的请求的方式举例，某个服务器需要你激活，每次请求都需要携带这个卡密信息才能返回结果。</p>\n<p>目前常用的几种方式是<code>Session</code>和<code>JWT</code></p>\n<h3 id=\"Session\"><a href=\"#Session\" class=\"headerlink\" title=\"Session\"></a>Session</h3><p><code>Session</code>相当于一个缓存，当A用户请求服务器之后，服务器会暂时存储A的信息，并返回一个<code>Session token</code>，等到下次A携带这个<code>Session token</code>给服务器的时候，服务器就知道是A用户了，比如存储这个用户卡密到期日期，还有用户基本信息等等，这样服务器处理数据就依靠存储的信息。但是Session也有缺点，因为是存放在服务器端的，每次查找调用都会有点麻烦，而且在多服务器负载均衡的场景下，A用户请求A服务器没问题，但是B服务器有可能因为同步延迟没有同步A服务器的Session数据，导致B服务器不认识A用户了，这样一来服务器压力会变大；并且要实现多平台互通的时候，意味着Session也需要互通，这就需要不同服务器要同时使用一个数据库，加大了数据库的压力。</p>\n<h3 id=\"JWT\"><a href=\"#JWT\" class=\"headerlink\" title=\"JWT-\"></a>JWT-</h3><p><code>JWT</code>更为直接，把压力交给用户，直接把信息存在用户浏览器上，服务器只管解码，但是前面也提到了，直接存用户浏览器上非常不安全，很容易就篡改了，所以JWT在普通JSON数据的基础上，加入了<code>Token</code>这么一个玩意，保证了数据不被篡改。当用户确定开卡的时候，服务器签发一个JWT，上面标记了过期时间，用户ID和基本信息，当用户A请求的时候，就需要携带这个jwt请求服务器，服务器解码验证确定没问题，拿到基本信息处理就完毕，不再像Session那样还需要去找A用户那块Session存储，自然就方便快速很多。</p>\n<h1 id=\"JWT长什么样\"><a href=\"#JWT长什么样\" class=\"headerlink\" title=\"JWT长什么样\"></a>JWT长什么样</h1><h2 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h2><p>JWT，长这样</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs fundamental\">eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJ3aWZlIjoiRWx5c2lhIiwiaXNzIjoiQXItU3ItTmEiLCJzdWIiOiLku4DkuYjmmK9KV1QiLCJuYmYiOjE3MTE4MTQ0MDAsImlhdCI6MTcxMTgxNDQwMH0.dF5bnDx0y_OKMQrKkWYUpDjgW6oD0C1WR_fD4Q16ENJ1Hm7ahxbGcCdMLNJQxOrRMgr7xV0SaL3aoaiEhE_3Ug<br></code></pre></td></tr></table></figure>\n\n<p>这一眼看上去乱七八糟的，不过，数据里面有两个点，数据的部分就是由<code>.</code>来分开的，分别叫做<code>Header 头部</code>，<code>Payload 数据载荷</code>，<code>Signature 签名</code></p>\n<p>上面这段数据的三部分如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs fundamental\">Header<br>eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9<br><br>Payload<br>eyJ3aWZlIjoiRWx5c2lhIiwiaXNzIjoiQXItU3ItTmEiLCJzdWIiOiLku4DkuYjmmK9KV1QiLCJuYmYiOjE3MTE4MTQ0MDAsImlhdCI6MTcxMTgxNDQwMH0<br><br>Signature<br>dF5bnDx0y_OKMQrKkWYUpDjgW6oD0C1WR_fD4Q16ENJ1Hm7ahxbGcCdMLNJQxOrRMgr7xV0SaL3aoaiEhE_3Ug<br></code></pre></td></tr></table></figure>\n\n<p><code>Header</code>和<code>Payload</code>都是由原始数据Base64编码后得到的，但是由于Payload有可能出现base编码后的<code>=</code>符号，而为了兼容浏览器URL地址栏的位置防止被编码，可以描述为：&#x3D;被省略、+替换成-，&#x2F;替换成_，所以在编解码的时候需要用到Base64URL的算法。</p>\n<p>把它们分别解码就得到了如下数据：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs fundamental\">Header<br>&#123;&quot;alg&quot;:&quot;HS512&quot;,&quot;typ&quot;:&quot;JWT&quot;&#125;<br><br>Payload<br>&#123;&quot;wife&quot;:&quot;Elysia&quot;,&quot;iss&quot;:&quot;Ar-Sr-Na&quot;,&quot;sub&quot;:&quot;什么是JWT&quot;,&quot;nbf&quot;:1711814400,&quot;iat&quot;:1711814400&#125;<br></code></pre></td></tr></table></figure>\n\n<p>这下就明白了为什么JWT的<code>J</code>是JSON了吧</p>\n<h3 id=\"Header\"><a href=\"#Header\" class=\"headerlink\" title=\"Header\"></a>Header</h3><p>在标准的JWT中，Header包括Token的类型和算法名称。</p>\n<p>Token好理解，本文都是JWT，自然就是JWT</p>\n<p>而算法则是决定服务器那端如何解码的，例如这里使用HS512，则意味着签名是HS512得到的。</p>\n<h3 id=\"Payload\"><a href=\"#Payload\" class=\"headerlink\" title=\"Payload\"></a>Payload</h3><p>标准JWT中，Payload包含声明（要求）。声明是关于实体（通常是用户）和其他数据的声明。声明有三种类型: registered, public 和 private1。</p>\n<ul>\n<li>Registered claims : 这里有一组预定义的声明，它们不是强制的，但是推荐。比如：iss (issuer), exp (expiration time), sub (subject), aud (audience)等。</li>\n<li>Public claims : 可以随意定义。</li>\n<li>Private claims : 用于在同意使用它们的各方之间共享信息，并且不是注册的或公开的声明。</li>\n</ul>\n<p>标准文档比较难读懂，说白话，这里的Payload就是自定义信息，只不过携带一点标准信息罢了，比如上面这个</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;wife&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Elysia&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;iss&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Ar-Sr-Na&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;sub&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;什么是JWT&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;nbf&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1711814400</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;iat&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1711814400</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">字段</th>\n<th align=\"left\">内容</th>\n<th align=\"left\">用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">iss</td>\n<td align=\"left\">Issuer 签发人</td>\n<td align=\"left\">可以用来存用户id</td>\n</tr>\n<tr>\n<td align=\"left\">sub</td>\n<td align=\"left\">Subject 主题</td>\n<td align=\"left\">让服务器知道jwt用途</td>\n</tr>\n<tr>\n<td align=\"left\">aud</td>\n<td align=\"left\">Audience 观众?</td>\n<td align=\"left\">文档没看懂</td>\n</tr>\n<tr>\n<td align=\"left\">nbf</td>\n<td align=\"left\">Not Before 生效时间，unix秒级时间戳</td>\n<td align=\"left\">早于nbf的时间不给过</td>\n</tr>\n<tr>\n<td align=\"left\">iat</td>\n<td align=\"left\">Issued At 签发时间，unix秒级时间戳</td>\n<td align=\"left\">让服务器知道这条jwt是正常的</td>\n</tr>\n<tr>\n<td align=\"left\">exp</td>\n<td align=\"left\">Expiration Time 有效时间，unix秒级时间戳</td>\n<td align=\"left\">告诉服务器这段jwt何时过期</td>\n</tr>\n<tr>\n<td align=\"left\">jti</td>\n<td align=\"left\">JWT ID 字面意思</td>\n<td align=\"left\">让服务器判断这是哪个jwt</td>\n</tr>\n<tr>\n<td align=\"left\">其它</td>\n<td align=\"left\">用于存储其他自定义信息的字段</td>\n<td align=\"left\">自定义的信息，用途无穷大</td>\n</tr>\n</tbody></table>\n<p>也就是说，jwt的这个部分可以是任意信息，剩余的那些只是约定俗成的而已，上面举例的那条也没有包含完整的字段。而用途也不是我列出来的这些，这里只是一个举例，不一定按照字段用途来进行使用。</p>\n<h2 id=\"Signature\"><a href=\"#Signature\" class=\"headerlink\" title=\"Signature\"></a>Signature</h2><p>这部分是服务器确定jwt没被篡改的关键，根据<code>Header</code>的算法字段，签名生成的方式如下</p>\n<p><code>加密算法(base64(header).base64(payload), 秘钥)</code></p>\n<p>秘钥可以是普通字符串，加解密使用对称加密；也可以是密钥对的私钥，加密时使用私钥，解密时使用公钥，加解密是非对称加密。</p>\n<p>如果用户自行修改了Payload部分，服务器在使用前面的Header和Payload做一次签名的时候，发现新的签名和原始jwt签名不一样，则判定为假密钥</p>\n<p>要注意，Payload和Header里面的一切数据都是明文，只不过使用了base64进行编码了，而base64不是加密的方式，任何人，任何计算机都可以轻松地还原base64字符串，所以请不要将敏感信息直接存储在jwt之中</p>\n<p>所以jwt的数据结构就是这样的：base64(header).base64(payload).signature，使用<code>.</code>将三个部分连接起来就构成了jwt。</p>\n<h1 id=\"JWT使用\"><a href=\"#JWT使用\" class=\"headerlink\" title=\"JWT使用\"></a>JWT使用</h1><p>在这里，后端暂且使用nodejs来示范。</p>\n<p>在nodejs中有一个库<code>jsonwebtoken</code>可以让你快速生成和验证jwt</p>\n<p>在项目中安装该库 <code>npm i jsonwebtoken</code></p>\n<h2 id=\"签发\"><a href=\"#签发\" class=\"headerlink\" title=\"签发\"></a>签发</h2><p>JWT签发按照上文说的规范来进行，由base编码的Header，Payload与Signature签名算法用一个英文<code>.</code>符号拼接在一起得到。</p>\n<p>在nodejs使用库来写是这样</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> jwt = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;jsonwebtoken&#x27;</span>);<br><span class=\"hljs-keyword\">let</span> <span class=\"hljs-title class_\">Payload</span> = &#123;<br>    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;Fischl&quot;</span>,<br>    <span class=\"hljs-attr\">iss</span>: <span class=\"hljs-string\">&quot;Ar-Sr-Na&quot;</span>,<br>&#125;;<br><span class=\"hljs-keyword\">const</span> secret = <span class=\"hljs-string\">&#x27;Elysia&#x27;</span>;<br><span class=\"hljs-keyword\">let</span> token = jwt.<span class=\"hljs-title function_\">sign</span>(<span class=\"hljs-title class_\">Payload</span>, secret, &#123;<br>    <span class=\"hljs-attr\">algorithm</span>: <span class=\"hljs-string\">&quot;HS512&quot;</span>,<br>    <span class=\"hljs-comment\">// 有效期表达式请参考 https://github.com/vercel/ms 的用法</span><br>    <span class=\"hljs-attr\">expiresIn</span>: <span class=\"hljs-string\">&#x27;1d&#x27;</span><br>&#125;)<br><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(token);<br></code></pre></td></tr></table></figure>\n\n<p>成功后输出jwt：<code>eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiRmlzY2hsIiwiaXNzIjoiQXItU3ItTmEiLCJpYXQiOjE3MTE4Nzg3NDcsImV4cCI6MTcxMTk2NTE0N30._EWieqB-bRrWCKJFEANiItzCQODoc2IucjLwnpPmrd63clABXQhgz8w3hF-xDAGruIyq_INILw90r8Y19mGBxA</code></p>\n<p>不用过多解释了，很简单</p>\n<p>使用方法是这样：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">jwt.<span class=\"hljs-title function_\">sign</span>(<span class=\"hljs-title class_\">Payload</span>, 秘钥, 参数)<br></code></pre></td></tr></table></figure>\n\n<p>而参数这里可以指定算法，有效期等，当然这部分仍然可以自定义，这里只展示最简单的方法，可以参照官方文档：<a href=\"https://www.npmjs.com/package/jsonwebtoken\">https://www.npmjs.com/package/jsonwebtoken</a></p>\n<h2 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h2><p>由于HMAC无法反向解密，所以只能靠再使用签发时的流程来验证</p>\n<ul>\n<li>从传入的jwt中拿到Header，Payload</li>\n<li>解码Header得到算法</li>\n<li>使用Header中的算法，按照签发时的流程生成签名</li>\n<li>与传入的jwt中的签名进行对比，如果完全一致则通过</li>\n</ul>\n<p><img src=\"https://st2-res.arsrna.cn/2403534/20240331-d128631f.png\" alt=\"请在此添加图片描述\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> jwt = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;jsonwebtoken&#x27;</span>);<br><span class=\"hljs-keyword\">const</span> secret = <span class=\"hljs-string\">&#x27;Elysia&#x27;</span>;<br><span class=\"hljs-keyword\">let</span> res = jwt.<span class=\"hljs-title function_\">verify</span>(<span class=\"hljs-string\">&#x27;eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiRmlzY2hsIiwiaXNzIjoiQXItU3ItTmEiLCJpYXQiOjE3MTE4Nzg3NDcsImV4cCI6MTcxMTk2NTE0N30._EWieqB-bRrWCKJFEANiItzCQODoc2IucjLwnpPmrd63clABXQhgz8w3hF-xDAGruIyq_INILw90r8Y19mGBxA&#x27;</span>, secret)<br><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(res);<br></code></pre></td></tr></table></figure>\n\n<p>如果签名对得上，所有验证都通过之后输出Payload</p>\n<p>如果jwt已经超过有效期，签名无效，格式不正确，都会抛出的错误，只需要进行try catch捕获，或者使用回调函数捕获即可。</p>\n<h1 id=\"应用-卡密和登录的实现\"><a href=\"#应用-卡密和登录的实现\" class=\"headerlink\" title=\"应用-卡密和登录的实现\"></a>应用-卡密和登录的实现</h1><h2 id=\"后端\"><a href=\"#后端\" class=\"headerlink\" title=\"后端\"></a>后端</h2><p>我们依然以开头说的“卡密”为例子，讲一下这个jwt要怎么用，怎么签和怎么验。</p>\n<p>比如我有一个服务器接口，只有当用户的卡密在有效期内，且用户是管理员，没有被封禁时才能正常调用。</p>\n<p>分析一下需求：</p>\n<ul>\n<li>卡密的有效期就是jwt的<code>exp</code>字段</li>\n<li>为了标识用户，用户需要一个UUID，这个放在<code>name</code>字段</li>\n<li>用户身份<code>id</code></li>\n<li>是否封禁<code>block</code></li>\n</ul>\n<p>假设有这么两个用户：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">let</span> user1 = &#123;<br>    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;Elysia&quot;</span>,<br>    <span class=\"hljs-attr\">id</span>: <span class=\"hljs-string\">&#x27;admin&#x27;</span>,<br>    <span class=\"hljs-attr\">block</span>: <span class=\"hljs-literal\">false</span><br>&#125;;<br><span class=\"hljs-keyword\">let</span> user2 = &#123;<br>    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;Fischl&quot;</span>,<br>    <span class=\"hljs-attr\">id</span>: <span class=\"hljs-string\">&#x27;normal&#x27;</span>,<br>    <span class=\"hljs-attr\">block</span>: <span class=\"hljs-literal\">false</span><br>&#125;;<br></code></pre></td></tr></table></figure>\n\n<p>那么使用jsonwebtoken这个库签发的时候使用方法是这样</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">let</span> token = jwt.<span class=\"hljs-title function_\">sign</span>(user1, <span class=\"hljs-string\">&#x27;Elysia&#x27;</span>, &#123;<br>    <span class=\"hljs-attr\">algorithm</span>: <span class=\"hljs-string\">&quot;HS512&quot;</span>,<br>    <span class=\"hljs-attr\">expiresIn</span>: <span class=\"hljs-string\">&#x27;15d&#x27;</span>,<br>&#125;)<br></code></pre></td></tr></table></figure>\n\n<p>这样就可以获得用户的jwt，剩下的就交给前端来处理了</p>\n<p>在验证的时候，使用<code>jwt.verify</code>方法，验证基本信息（在有效期内，签名正确，格式正确）正确后进入自定义的认证，判断<code>!block &amp;&amp; id === &#39;normal&#39;</code>，两者均通过之后，则正常返回数据，也可以从payload中获得name，再执行其他的操作，例如从数据库获取用户的余额等。</p>\n<h2 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h2><p>jwt更多的是用在前端调用的，后端返回给前端后，需要一个地方来进行保存</p>\n<p>而所谓的“登录态”“已激活”等状态，就是判断是否存储有相应的jwt</p>\n<p>这里有几种方式，<code>localStorage</code>，<code>cookie</code>，<code>sessionStorage</code>，我比较推荐使用localStorage，虽然cookie更适合存储这些存在有效期的数据，但是jwt本身就有有效期的字段<code>exp</code>，只要每次请求先从前端判断exp是否有效，如果无效直接移除即可，而cookie的存储调用相对来说不是那么的方便，存储的大小也比localStorage小，还有保存上可能因为路径改变而丢失。</p>\n<p>在请求的时候，例如使用<code>fetch</code>，可以在请求头header部分携带这个jwt，也可以在body，不过由于GET在服务器是没法获取body的，所以就放在了header。而header的规范一般是这样：<code>Authorization: Bearer &#123;jwt&#125;</code>，至于怎么放，这个就得和后端协商协商了。</p>\n<h1 id=\"实际应用\"><a href=\"#实际应用\" class=\"headerlink\" title=\"实际应用\"></a>实际应用</h1><p>在我们公司的AI站上，登录的流程就采用了JWT，不过涉及到隐私的问题，不能够跟你讲太多，在前端部分，跟上面说的是一样的，只不过header没有这么规范，当然，你也可以自己打开F12，登录后看看请求，拿自己的token使用公钥进行解析，这里推荐一个工具用来解析jwt：<a href=\"https://jwt.io/\">https://jwt.io</a>，不过要注意，请不要泄露你的access_token，因为这条token是你用户的最高权力，一切后果自负。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2403534/20240331-261e0e4d.png\" alt=\"请在此添加图片描述\"></p>\n<p><img src=\"https://st2-res.arsrna.cn/2403534/20240331-305d255d.png\" alt=\"请在此添加图片描述\"></p>\n<p>由于涉及到一些隐私上的算法，我没法告诉你公钥是什么，而且应用有多对公私钥，会随机地使用其中一对进行加解密，但是背后的核心jwt是永恒不变的。</p>\n<p>当你请求登录的时候，经过一系列登录流程后就获得了你的<code>access_token</code>，<code>id_token</code>，它就是jwt，一个是专门用于给服务器请求的jwt，一个是个人基本信息展现在前端的jwt，我们的服务器会验证<code>access_token</code>上面的一切数据，确定用户是能够访问接口的，随后才会正式访问，与上一节的《【秒杀】前端网络-CORS》浏览器预检操作功能类似，都是检查用户是否有权访问服务器的前提条件。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>jwt就像你的个人档案，用人单位就是服务器，用人单位如何确定你档案里的信息是否有效，是否有篡改的可疑，就看封条是否被拆封。你的档案内容上面有姓名，身份证，国籍等等，这里就是jwt的Payload；而档案上面的档案号，就是Header，告诉阅档人员用什么样的方式去读取你的档案；封条则是JWT保护数据的核心，是否有篡改的嫌疑，就看封条是否完整，而jwt就是靠签名来判断是否篡改的。</p>\n<p>虽然现实不太可能让你保管你的档案，不过我也找不到更合适的例子了。</p>\n<p>Session就是让你的档案存在档案中心，你提供身份证号（Session Token），用人单位就从档案中心找你的档案，因为全国人的档案都在这里，找起来比较费时，而且这么多份存起来也麻烦。</p>\n<p>jwt则是让档案保管在每个人手中，为了防止个人篡改，加入了签名，来验证档案的数据是否更改，这样用人单位从个人手中拿到档案的时候只需要检查封条完整就行了，大大减少了检索的压力，而且数据在用户手上，一切后果都是用户承担，也减轻了一部分的压力。</p>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><p><a href=\"https://www.rfc-editor.org/rfc/rfc7519\">[1] RFC 7519, JSON Web Token (JWT)</a></p>\n<hr>\n<p>Powered by Ar-Sr-Na</p>\n"},{"title":"【秒杀】前端网络-CORS","author":"Ar-Sr-Na","authorLink":"https://www.arsrna.cn","authorAbout":"突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn","authorDesc":"突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn","comments":0,"date":"2024-03-28T16:00:00.000Z","keywords":"前端,网络,技术,全栈,CORS,js,ajax","description":"在别人网站正常请求的服务器地址，在你的网站里面就不行了，我用APIfox，postman或者vscode的rest client发送请求就一切正常，这是怎么回事？。","index_img":"https://st2-res.arsrna.cn/2403362/5f9c30bba347d10bf7ebb3e367b7edad.png","_content":"\n# 前言\n\n上一节介绍了前端网络的基础用法，已经秒杀了fetch与xhr用法，但是实际在前端发送这些请求的时候，难免会遇到一些莫名其妙的报错，在别人网站正常请求的服务器地址，在你的网站里面就不行了，我用APIfox，postman或者vscode的rest client发送请求就一切正常，这是怎么回事？\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2403362/5f9c30bba347d10bf7ebb3e367b7edad.png)\n\n其实这是来自于浏览器的安全策略“跨源资源共享”\n\n# 浏览器限制\n\n> 跨源资源共享（CORS，或通俗地译为跨域资源共享）是一种基于 HTTP 头的机制，该机制通过允许服务器标示除了它自己以外的其他源（域、协议或端口），使得浏览器允许这些源访问加载自己的资源。跨源资源共享还通过一种机制来检查服务器是否会允许要发送的真实请求，该机制通过浏览器发起一个到服务器托管的跨源资源的“预检”请求。在预检中，浏览器发送的头中标示有 HTTP 方法和真实请求中会用到的头。\n\n例如a.com发送一个POST请求到服务器，是正常的，而b.com发送却失败，这就是因为服务器有着一个“Access-Control-Allow-Origin”响应头，检测到b.com不在允许请求的范围内，故浏览器拦截了这一请求。但是有个例外，上述提到的APIFox，postman这些工具能正常请求的原因是他是从服务端进行请求的，不是浏览器的环境，自然没有这样的限制，你可以理解为浏览器是高中的学生，他不允许你使用手机，而postman是高中老师，自然不受校规对学生用手机的限制。\n\n## 何为跨源\n\n以下情况，都会引起跨源的情况\n\n- 端口不同：https://a.com和https://a.com:81\n- 主机不同：https://a.com和https://b.com和https://a.a.com\n- 协议不同：http://a.com和https://a.com\n\n检查两个域之间是否产生跨源问题，可以前往 [https://httptoolkit.com/will-it-cors/](https://httptoolkit.com/will-it-cors/) 进行测试\n\n## 浏览器产生CORS的场景\n\n- XHR或fetch发起的跨源 HTTP 请求。\n- Web 字体（CSS 中通过 @font-face 使用跨源字体资源）\n- WebGL 贴图。\n- 使用 drawImage() 将图片或视频画面绘制到 canvas。\n- 来自图像的 CSS 图形。\n\n本节重点关注http请求的部分，在http中，浏览器将 CORS 请求分成两类：简单请求（Simple request）和非简单请求（Not-so-simple request）\n\n## 简单请求\n\n如果以下三种类型都满足，则视为简单请求的类型\n\n- 请求方法为以下三种之一\n\n  - HEAD\n  - GET\n  - POST\n- HTTP 的头信息不超出以下字段\n\n  - Accept\n  - Accept-Language\n  - Content-Language\n  - Content-Type\n  - DPR\n  - Downlink\n  - Save-Data\n  - Viewport-Width\n  - Width\n- Content-Type 仅限于以下三种之一\n\n  - text/plain\n  - multipart/form-data\n  - application/x-www-form-urlencoded\n- 请求中的任意 XMLHttpRequestUpload 对象均没有注册任何事件监听器。\n- 请求中没有使用 ReadableStream 对象。\n\n满足简单请求的时候，浏览器会向服务器原 `封不`动地发送请求\n\n浏览器封装后的http请求类似下文\n\n```http\n\nGET /release/ HTTP/1.1\n\nHost: api-gz.arsrna.cn\n\naccept: */*\n\naccept-language: zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\n\ndnt: 1\n\norigin: https://www.arsrna.cn\n\nreferer: https://www.arsrna.cn/\n\nsec-ch-ua: \"Microsoft Edge\";v=\"123\", \"Not:A-Brand\";v=\"8\", \"Chromium\";v=\"123\"\n\nsec-ch-ua-mobile: ?0\n\nsec-ch-ua-platform: \"Windows\"\n\nsec-fetch-dest: empty\n\nsec-fetch-mode: cors\n\nsec-fetch-site: same-site\n\nuser-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36 Edg/123.0.0.0\n\n```\n\n随后获取服务器返回的 `Access-Control-Allow-Origin`响应头，确定是否进行跨源异常处理，例如上面的请求，服务器返回了如下请求头：\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2403362/0dca1a782e667f0f3831b9da8e758e79.png)\n\n可以看到，`Access-Control-Allow-Origin`为 `*`，说明允许所有域名跨源请求这个API。\n\n浏览器看到了觉得没问题，那就通过。\n\n## 非简单请求\n\n如果简单请求条件的其中一条不满足，则视为非简单请求。\n\n在进行非简单请求时，浏览器会按顺序一步步执行，比如这里我们做了一个GET请求，并且携带了一个自定义的 `Token`请求头\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2403362/b12fb253b56db13db5cc7eae3b8aeff0.png)\n\n由于 `Token`请求头超出了简单请求的范围，浏览器会进行下面的一系列操作。\n\n- 发出 `OPTIONS`的请求进行预检，在浏览器开发者工具网络面板里面可以看到\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2403362/94de88fbd411052aa2d22219ae83bf71.png)\n\n- 预先检测服务器是否允许此种请求头，请求方法，发送请求的源站点，如果发出请求的方法包含在 `Access-Control-Allow-Headers`，`Access-Control-Allow-Methods`，`Access-Control-Allow-Origin`响应内，则浏览器准许放行。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2403362/33f1c190ad6e9be3724544f749eb284a.png)\n\n- 正式发送请求。在预检完毕后，浏览器则最终会将原来的请求原xx动地发送到服务器，此时与前面简单请求的流程一致，最终拿到http请求结果。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2403362/45cc12905562473453922a9d8155d898.png)\n\n这样的请求就类似小区门口的保安，如果车牌，车主和手机号（请求头，方法，域）都登记在小区（服务器）内，保安检查（预检）觉得没问题，就准许放行，此时我们就可以正式访问，进到小区里面。\n\n# 前端背锅\n\n整套流程下来发现，其实是浏览器限制了我们这么操作，但是归根结底不是前端的问题，实际上CORS是服务器的锅。在上一节提到了，客户端和服务器发送请求是双方协商好的，不是因为前端有GET后端才能GET，也不是因为后端有 `Accept-Content`这个头，我就拿这个头传数据。\n\n前端请求，也只是遵循了写后端的程序员写的规则而已\n\n后端返回，也只是听从了前端程序员的建议而已\n\n他俩其实谁也不怪谁，如果真正发生CORS的错误，需要后端改动响应头的内容。而前端能做到的，就是什么也不做，因为问题的根源在浏览器本身，你当然可以通过修改浏览器配置使其不再检测，但是成千上万的用户，谁也不知道谁有没有这个限制。\n\n既然浏览器和前端没法变通，那么后端的人员就得精明一点了，老老实实按照规范把这些响应头加回去。\n\n# 前端网络，但是后端\n\n虽说这里讲的是前端网络，不过可以稍微点一下后端的内容\n\n因为后端百花齐放，千奇百怪，所有的语言，框架从a-Z，0-9可以给你列出几千万种。\n\n这里就以nodejs的express为例，讲一下如何解决前端跟你提的CORS的问题\n\n既然我们知道了这个是由响应头不对劲引起的，那么就可以再每次请求的时候给浏览器一个正确的回复\n\n**注意：以下是错误写法**\n\n```js\n\napp.get('/test',(req,res)=>{\n\n    res.header(\"Access-Control-Allow-Origin\",\"*\");\n\n})\n\n```\n\n如果在简单请求可能还不会出事，但是如果是非简单请求，打印网络日志，会发现浏览器先发送了OPTIONS请求后再发送GET请求，由于这里写的是 `app.get`，意味着只有在 `GET`请求的时候才会正确处理发送响应头的函数，所以OPTIONS就已经被拦截了，不会正式发送 `GET`请求。\n\n正确写法如下：\n\n```js\n\napp.all('*', function (req, res, next) {\n\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\n\n    next();\n\n});\n\n```\n\n对所有请求都做如上返回响应头的处理，这样能保证浏览器预检能够通过。\n\n# 总结\n\n其实这不是你的问题，是浏览器限制和后端不正确的响应共同导致的。对于前端来说只能提供一个思路，告诉前端人员这个错误造成的原因，要真修起来只能干瞪眼。前端能做的就是鞭策后端工程师赶紧修了，你的责任就是等他修好。\n\n到这里，关于在前端进行网络请求的内容就已经算是**入门+1**了，往后仍有更长的路要走，本章仅仅对HTTP的CORS进行讲解，以后还会遇到像上传文件，下载文件，跑通接口，跨域，认证，jwt token，session，登录注册，SSE（服务器主动发送事件），Websocket（服务器客户端双向通信）等等一系列更复杂的实战挑战，一切的前提，是学会HTTP，解决CORS的问题，成功在前端跑通服务器。（来自上一篇文章）\n","source":"_posts/2403362.md","raw":"---\ntitle: 【秒杀】前端网络-CORS\nauthor: Ar-Sr-Na\nauthorLink: https://www.arsrna.cn\nauthorAbout: 突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn\nauthorDesc: 突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn\ncomments: false\ndate: 2024-3-29\ncategories: 技术\ntags:  前端,网络,技术,全栈,CORS,js,ajax\nkeywords:  前端,网络,技术,全栈,CORS,js,ajax\ndescription: 在别人网站正常请求的服务器地址，在你的网站里面就不行了，我用APIfox，postman或者vscode的rest client发送请求就一切正常，这是怎么回事？。\nindex_img: https://st2-res.arsrna.cn/2403362/5f9c30bba347d10bf7ebb3e367b7edad.png\n---\n\n# 前言\n\n上一节介绍了前端网络的基础用法，已经秒杀了fetch与xhr用法，但是实际在前端发送这些请求的时候，难免会遇到一些莫名其妙的报错，在别人网站正常请求的服务器地址，在你的网站里面就不行了，我用APIfox，postman或者vscode的rest client发送请求就一切正常，这是怎么回事？\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2403362/5f9c30bba347d10bf7ebb3e367b7edad.png)\n\n其实这是来自于浏览器的安全策略“跨源资源共享”\n\n# 浏览器限制\n\n> 跨源资源共享（CORS，或通俗地译为跨域资源共享）是一种基于 HTTP 头的机制，该机制通过允许服务器标示除了它自己以外的其他源（域、协议或端口），使得浏览器允许这些源访问加载自己的资源。跨源资源共享还通过一种机制来检查服务器是否会允许要发送的真实请求，该机制通过浏览器发起一个到服务器托管的跨源资源的“预检”请求。在预检中，浏览器发送的头中标示有 HTTP 方法和真实请求中会用到的头。\n\n例如a.com发送一个POST请求到服务器，是正常的，而b.com发送却失败，这就是因为服务器有着一个“Access-Control-Allow-Origin”响应头，检测到b.com不在允许请求的范围内，故浏览器拦截了这一请求。但是有个例外，上述提到的APIFox，postman这些工具能正常请求的原因是他是从服务端进行请求的，不是浏览器的环境，自然没有这样的限制，你可以理解为浏览器是高中的学生，他不允许你使用手机，而postman是高中老师，自然不受校规对学生用手机的限制。\n\n## 何为跨源\n\n以下情况，都会引起跨源的情况\n\n- 端口不同：https://a.com和https://a.com:81\n- 主机不同：https://a.com和https://b.com和https://a.a.com\n- 协议不同：http://a.com和https://a.com\n\n检查两个域之间是否产生跨源问题，可以前往 [https://httptoolkit.com/will-it-cors/](https://httptoolkit.com/will-it-cors/) 进行测试\n\n## 浏览器产生CORS的场景\n\n- XHR或fetch发起的跨源 HTTP 请求。\n- Web 字体（CSS 中通过 @font-face 使用跨源字体资源）\n- WebGL 贴图。\n- 使用 drawImage() 将图片或视频画面绘制到 canvas。\n- 来自图像的 CSS 图形。\n\n本节重点关注http请求的部分，在http中，浏览器将 CORS 请求分成两类：简单请求（Simple request）和非简单请求（Not-so-simple request）\n\n## 简单请求\n\n如果以下三种类型都满足，则视为简单请求的类型\n\n- 请求方法为以下三种之一\n\n  - HEAD\n  - GET\n  - POST\n- HTTP 的头信息不超出以下字段\n\n  - Accept\n  - Accept-Language\n  - Content-Language\n  - Content-Type\n  - DPR\n  - Downlink\n  - Save-Data\n  - Viewport-Width\n  - Width\n- Content-Type 仅限于以下三种之一\n\n  - text/plain\n  - multipart/form-data\n  - application/x-www-form-urlencoded\n- 请求中的任意 XMLHttpRequestUpload 对象均没有注册任何事件监听器。\n- 请求中没有使用 ReadableStream 对象。\n\n满足简单请求的时候，浏览器会向服务器原 `封不`动地发送请求\n\n浏览器封装后的http请求类似下文\n\n```http\n\nGET /release/ HTTP/1.1\n\nHost: api-gz.arsrna.cn\n\naccept: */*\n\naccept-language: zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\n\ndnt: 1\n\norigin: https://www.arsrna.cn\n\nreferer: https://www.arsrna.cn/\n\nsec-ch-ua: \"Microsoft Edge\";v=\"123\", \"Not:A-Brand\";v=\"8\", \"Chromium\";v=\"123\"\n\nsec-ch-ua-mobile: ?0\n\nsec-ch-ua-platform: \"Windows\"\n\nsec-fetch-dest: empty\n\nsec-fetch-mode: cors\n\nsec-fetch-site: same-site\n\nuser-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36 Edg/123.0.0.0\n\n```\n\n随后获取服务器返回的 `Access-Control-Allow-Origin`响应头，确定是否进行跨源异常处理，例如上面的请求，服务器返回了如下请求头：\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2403362/0dca1a782e667f0f3831b9da8e758e79.png)\n\n可以看到，`Access-Control-Allow-Origin`为 `*`，说明允许所有域名跨源请求这个API。\n\n浏览器看到了觉得没问题，那就通过。\n\n## 非简单请求\n\n如果简单请求条件的其中一条不满足，则视为非简单请求。\n\n在进行非简单请求时，浏览器会按顺序一步步执行，比如这里我们做了一个GET请求，并且携带了一个自定义的 `Token`请求头\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2403362/b12fb253b56db13db5cc7eae3b8aeff0.png)\n\n由于 `Token`请求头超出了简单请求的范围，浏览器会进行下面的一系列操作。\n\n- 发出 `OPTIONS`的请求进行预检，在浏览器开发者工具网络面板里面可以看到\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2403362/94de88fbd411052aa2d22219ae83bf71.png)\n\n- 预先检测服务器是否允许此种请求头，请求方法，发送请求的源站点，如果发出请求的方法包含在 `Access-Control-Allow-Headers`，`Access-Control-Allow-Methods`，`Access-Control-Allow-Origin`响应内，则浏览器准许放行。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2403362/33f1c190ad6e9be3724544f749eb284a.png)\n\n- 正式发送请求。在预检完毕后，浏览器则最终会将原来的请求原xx动地发送到服务器，此时与前面简单请求的流程一致，最终拿到http请求结果。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2403362/45cc12905562473453922a9d8155d898.png)\n\n这样的请求就类似小区门口的保安，如果车牌，车主和手机号（请求头，方法，域）都登记在小区（服务器）内，保安检查（预检）觉得没问题，就准许放行，此时我们就可以正式访问，进到小区里面。\n\n# 前端背锅\n\n整套流程下来发现，其实是浏览器限制了我们这么操作，但是归根结底不是前端的问题，实际上CORS是服务器的锅。在上一节提到了，客户端和服务器发送请求是双方协商好的，不是因为前端有GET后端才能GET，也不是因为后端有 `Accept-Content`这个头，我就拿这个头传数据。\n\n前端请求，也只是遵循了写后端的程序员写的规则而已\n\n后端返回，也只是听从了前端程序员的建议而已\n\n他俩其实谁也不怪谁，如果真正发生CORS的错误，需要后端改动响应头的内容。而前端能做到的，就是什么也不做，因为问题的根源在浏览器本身，你当然可以通过修改浏览器配置使其不再检测，但是成千上万的用户，谁也不知道谁有没有这个限制。\n\n既然浏览器和前端没法变通，那么后端的人员就得精明一点了，老老实实按照规范把这些响应头加回去。\n\n# 前端网络，但是后端\n\n虽说这里讲的是前端网络，不过可以稍微点一下后端的内容\n\n因为后端百花齐放，千奇百怪，所有的语言，框架从a-Z，0-9可以给你列出几千万种。\n\n这里就以nodejs的express为例，讲一下如何解决前端跟你提的CORS的问题\n\n既然我们知道了这个是由响应头不对劲引起的，那么就可以再每次请求的时候给浏览器一个正确的回复\n\n**注意：以下是错误写法**\n\n```js\n\napp.get('/test',(req,res)=>{\n\n    res.header(\"Access-Control-Allow-Origin\",\"*\");\n\n})\n\n```\n\n如果在简单请求可能还不会出事，但是如果是非简单请求，打印网络日志，会发现浏览器先发送了OPTIONS请求后再发送GET请求，由于这里写的是 `app.get`，意味着只有在 `GET`请求的时候才会正确处理发送响应头的函数，所以OPTIONS就已经被拦截了，不会正式发送 `GET`请求。\n\n正确写法如下：\n\n```js\n\napp.all('*', function (req, res, next) {\n\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\n\n    next();\n\n});\n\n```\n\n对所有请求都做如上返回响应头的处理，这样能保证浏览器预检能够通过。\n\n# 总结\n\n其实这不是你的问题，是浏览器限制和后端不正确的响应共同导致的。对于前端来说只能提供一个思路，告诉前端人员这个错误造成的原因，要真修起来只能干瞪眼。前端能做的就是鞭策后端工程师赶紧修了，你的责任就是等他修好。\n\n到这里，关于在前端进行网络请求的内容就已经算是**入门+1**了，往后仍有更长的路要走，本章仅仅对HTTP的CORS进行讲解，以后还会遇到像上传文件，下载文件，跑通接口，跨域，认证，jwt token，session，登录注册，SSE（服务器主动发送事件），Websocket（服务器客户端双向通信）等等一系列更复杂的实战挑战，一切的前提，是学会HTTP，解决CORS的问题，成功在前端跑通服务器。（来自上一篇文章）\n","slug":"2403362","published":1,"updated":"2024-03-31T15:31:25.315Z","layout":"post","photos":[],"link":"","_id":"clufok5aq0001zknd1krp1zc4","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>上一节介绍了前端网络的基础用法，已经秒杀了fetch与xhr用法，但是实际在前端发送这些请求的时候，难免会遇到一些莫名其妙的报错，在别人网站正常请求的服务器地址，在你的网站里面就不行了，我用APIfox，postman或者vscode的rest client发送请求就一切正常，这是怎么回事？</p>\n<p><img src=\"https://st2-res.arsrna.cn/2403362/5f9c30bba347d10bf7ebb3e367b7edad.png\" alt=\"请在此添加图片描述\"></p>\n<p>其实这是来自于浏览器的安全策略“跨源资源共享”</p>\n<h1 id=\"浏览器限制\"><a href=\"#浏览器限制\" class=\"headerlink\" title=\"浏览器限制\"></a>浏览器限制</h1><blockquote>\n<p>跨源资源共享（CORS，或通俗地译为跨域资源共享）是一种基于 HTTP 头的机制，该机制通过允许服务器标示除了它自己以外的其他源（域、协议或端口），使得浏览器允许这些源访问加载自己的资源。跨源资源共享还通过一种机制来检查服务器是否会允许要发送的真实请求，该机制通过浏览器发起一个到服务器托管的跨源资源的“预检”请求。在预检中，浏览器发送的头中标示有 HTTP 方法和真实请求中会用到的头。</p>\n</blockquote>\n<p>例如a.com发送一个POST请求到服务器，是正常的，而b.com发送却失败，这就是因为服务器有着一个“Access-Control-Allow-Origin”响应头，检测到b.com不在允许请求的范围内，故浏览器拦截了这一请求。但是有个例外，上述提到的APIFox，postman这些工具能正常请求的原因是他是从服务端进行请求的，不是浏览器的环境，自然没有这样的限制，你可以理解为浏览器是高中的学生，他不允许你使用手机，而postman是高中老师，自然不受校规对学生用手机的限制。</p>\n<h2 id=\"何为跨源\"><a href=\"#何为跨源\" class=\"headerlink\" title=\"何为跨源\"></a>何为跨源</h2><p>以下情况，都会引起跨源的情况</p>\n<ul>\n<li>端口不同：<a href=\"https://a.com和https//a.com:81\">https://a.com和https://a.com:81</a></li>\n<li>主机不同：<a href=\"https://a.com和https//b.com%E5%92%8Chttps://a.a.com\">https://a.com和https://b.com和https://a.a.com</a></li>\n<li>协议不同：<a href=\"http://a.com和https//a.com\">http://a.com和https://a.com</a></li>\n</ul>\n<p>检查两个域之间是否产生跨源问题，可以前往 <a href=\"https://httptoolkit.com/will-it-cors/\">https://httptoolkit.com/will-it-cors/</a> 进行测试</p>\n<h2 id=\"浏览器产生CORS的场景\"><a href=\"#浏览器产生CORS的场景\" class=\"headerlink\" title=\"浏览器产生CORS的场景\"></a>浏览器产生CORS的场景</h2><ul>\n<li>XHR或fetch发起的跨源 HTTP 请求。</li>\n<li>Web 字体（CSS 中通过 @font-face 使用跨源字体资源）</li>\n<li>WebGL 贴图。</li>\n<li>使用 drawImage() 将图片或视频画面绘制到 canvas。</li>\n<li>来自图像的 CSS 图形。</li>\n</ul>\n<p>本节重点关注http请求的部分，在http中，浏览器将 CORS 请求分成两类：简单请求（Simple request）和非简单请求（Not-so-simple request）</p>\n<h2 id=\"简单请求\"><a href=\"#简单请求\" class=\"headerlink\" title=\"简单请求\"></a>简单请求</h2><p>如果以下三种类型都满足，则视为简单请求的类型</p>\n<ul>\n<li><p>请求方法为以下三种之一</p>\n<ul>\n<li>HEAD</li>\n<li>GET</li>\n<li>POST</li>\n</ul>\n</li>\n<li><p>HTTP 的头信息不超出以下字段</p>\n<ul>\n<li>Accept</li>\n<li>Accept-Language</li>\n<li>Content-Language</li>\n<li>Content-Type</li>\n<li>DPR</li>\n<li>Downlink</li>\n<li>Save-Data</li>\n<li>Viewport-Width</li>\n<li>Width</li>\n</ul>\n</li>\n<li><p>Content-Type 仅限于以下三种之一</p>\n<ul>\n<li>text&#x2F;plain</li>\n<li>multipart&#x2F;form-data</li>\n<li>application&#x2F;x-www-form-urlencoded</li>\n</ul>\n</li>\n<li><p>请求中的任意 XMLHttpRequestUpload 对象均没有注册任何事件监听器。</p>\n</li>\n<li><p>请求中没有使用 ReadableStream 对象。</p>\n</li>\n</ul>\n<p>满足简单请求的时候，浏览器会向服务器原 <code>封不</code>动地发送请求</p>\n<p>浏览器封装后的http请求类似下文</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs http\"><br><span class=\"hljs-keyword\">GET</span> <span class=\"hljs-string\">/release/</span> <span class=\"hljs-meta\">HTTP/1.1</span><br><br><span class=\"language-apache\"><span class=\"hljs-attribute\">Host</span>: api-gz.arsrna.cn</span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">accept</span>: */*</span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">accept</span>-language: zh-CN,zh;q=<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">9</span>,en;q=<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">8</span>,en-GB;q=<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">7</span>,en-US;q=<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">6</span></span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">dnt</span>: <span class=\"hljs-number\">1</span></span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">origin</span>: https://www.arsrna.cn</span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">referer</span>: https://www.arsrna.cn/</span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">sec</span>-ch-ua: <span class=\"hljs-string\">&quot;Microsoft Edge&quot;</span>;v=<span class=\"hljs-string\">&quot;123&quot;</span>, <span class=\"hljs-string\">&quot;Not:A-Brand&quot;</span>;v=<span class=\"hljs-string\">&quot;8&quot;</span>, <span class=\"hljs-string\">&quot;Chromium&quot;</span>;v=<span class=\"hljs-string\">&quot;123&quot;</span></span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">sec</span>-ch-ua-mobile: ?<span class=\"hljs-number\">0</span></span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">sec</span>-ch-ua-platform: <span class=\"hljs-string\">&quot;Windows&quot;</span></span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">sec</span>-fetch-dest: empty</span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">sec</span>-fetch-mode: cors</span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">sec</span>-fetch-site: same-site</span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">user</span>-agent: Mozilla/<span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">0</span> (Windows NT <span class=\"hljs-number\">10</span>.<span class=\"hljs-number\">0</span>; Win64; x64) AppleWebKit/<span class=\"hljs-number\">537</span>.<span class=\"hljs-number\">36</span> (KHTML, like Gecko) Chrome/<span class=\"hljs-number\">123.0.0.0</span> Safari/<span class=\"hljs-number\">537</span>.<span class=\"hljs-number\">36</span> Edg/<span class=\"hljs-number\">123.0.0.0</span></span><br><span class=\"language-apache\"></span><br></code></pre></td></tr></table></figure>\n\n<p>随后获取服务器返回的 <code>Access-Control-Allow-Origin</code>响应头，确定是否进行跨源异常处理，例如上面的请求，服务器返回了如下请求头：</p>\n<p><img src=\"https://st2-res.arsrna.cn/2403362/0dca1a782e667f0f3831b9da8e758e79.png\" alt=\"请在此添加图片描述\"></p>\n<p>可以看到，<code>Access-Control-Allow-Origin</code>为 <code>*</code>，说明允许所有域名跨源请求这个API。</p>\n<p>浏览器看到了觉得没问题，那就通过。</p>\n<h2 id=\"非简单请求\"><a href=\"#非简单请求\" class=\"headerlink\" title=\"非简单请求\"></a>非简单请求</h2><p>如果简单请求条件的其中一条不满足，则视为非简单请求。</p>\n<p>在进行非简单请求时，浏览器会按顺序一步步执行，比如这里我们做了一个GET请求，并且携带了一个自定义的 <code>Token</code>请求头</p>\n<p><img src=\"https://st2-res.arsrna.cn/2403362/b12fb253b56db13db5cc7eae3b8aeff0.png\" alt=\"请在此添加图片描述\"></p>\n<p>由于 <code>Token</code>请求头超出了简单请求的范围，浏览器会进行下面的一系列操作。</p>\n<ul>\n<li>发出 <code>OPTIONS</code>的请求进行预检，在浏览器开发者工具网络面板里面可以看到</li>\n</ul>\n<p><img src=\"https://st2-res.arsrna.cn/2403362/94de88fbd411052aa2d22219ae83bf71.png\" alt=\"请在此添加图片描述\"></p>\n<ul>\n<li>预先检测服务器是否允许此种请求头，请求方法，发送请求的源站点，如果发出请求的方法包含在 <code>Access-Control-Allow-Headers</code>，<code>Access-Control-Allow-Methods</code>，<code>Access-Control-Allow-Origin</code>响应内，则浏览器准许放行。</li>\n</ul>\n<p><img src=\"https://st2-res.arsrna.cn/2403362/33f1c190ad6e9be3724544f749eb284a.png\" alt=\"请在此添加图片描述\"></p>\n<ul>\n<li>正式发送请求。在预检完毕后，浏览器则最终会将原来的请求原xx动地发送到服务器，此时与前面简单请求的流程一致，最终拿到http请求结果。</li>\n</ul>\n<p><img src=\"https://st2-res.arsrna.cn/2403362/45cc12905562473453922a9d8155d898.png\" alt=\"请在此添加图片描述\"></p>\n<p>这样的请求就类似小区门口的保安，如果车牌，车主和手机号（请求头，方法，域）都登记在小区（服务器）内，保安检查（预检）觉得没问题，就准许放行，此时我们就可以正式访问，进到小区里面。</p>\n<h1 id=\"前端背锅\"><a href=\"#前端背锅\" class=\"headerlink\" title=\"前端背锅\"></a>前端背锅</h1><p>整套流程下来发现，其实是浏览器限制了我们这么操作，但是归根结底不是前端的问题，实际上CORS是服务器的锅。在上一节提到了，客户端和服务器发送请求是双方协商好的，不是因为前端有GET后端才能GET，也不是因为后端有 <code>Accept-Content</code>这个头，我就拿这个头传数据。</p>\n<p>前端请求，也只是遵循了写后端的程序员写的规则而已</p>\n<p>后端返回，也只是听从了前端程序员的建议而已</p>\n<p>他俩其实谁也不怪谁，如果真正发生CORS的错误，需要后端改动响应头的内容。而前端能做到的，就是什么也不做，因为问题的根源在浏览器本身，你当然可以通过修改浏览器配置使其不再检测，但是成千上万的用户，谁也不知道谁有没有这个限制。</p>\n<p>既然浏览器和前端没法变通，那么后端的人员就得精明一点了，老老实实按照规范把这些响应头加回去。</p>\n<h1 id=\"前端网络，但是后端\"><a href=\"#前端网络，但是后端\" class=\"headerlink\" title=\"前端网络，但是后端\"></a>前端网络，但是后端</h1><p>虽说这里讲的是前端网络，不过可以稍微点一下后端的内容</p>\n<p>因为后端百花齐放，千奇百怪，所有的语言，框架从a-Z，0-9可以给你列出几千万种。</p>\n<p>这里就以nodejs的express为例，讲一下如何解决前端跟你提的CORS的问题</p>\n<p>既然我们知道了这个是由响应头不对劲引起的，那么就可以再每次请求的时候给浏览器一个正确的回复</p>\n<p><strong>注意：以下是错误写法</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><br>app.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/test&#x27;</span>,<span class=\"hljs-function\">(<span class=\"hljs-params\">req,res</span>)=&gt;</span>&#123;<br><br>    res.<span class=\"hljs-title function_\">header</span>(<span class=\"hljs-string\">&quot;Access-Control-Allow-Origin&quot;</span>,<span class=\"hljs-string\">&quot;*&quot;</span>);<br><br>&#125;)<br><br></code></pre></td></tr></table></figure>\n\n<p>如果在简单请求可能还不会出事，但是如果是非简单请求，打印网络日志，会发现浏览器先发送了OPTIONS请求后再发送GET请求，由于这里写的是 <code>app.get</code>，意味着只有在 <code>GET</code>请求的时候才会正确处理发送响应头的函数，所以OPTIONS就已经被拦截了，不会正式发送 <code>GET</code>请求。</p>\n<p>正确写法如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><br>app.<span class=\"hljs-title function_\">all</span>(<span class=\"hljs-string\">&#x27;*&#x27;</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res, next</span>) &#123;<br><br>    res.<span class=\"hljs-title function_\">header</span>(<span class=\"hljs-string\">&quot;Access-Control-Allow-Origin&quot;</span>, <span class=\"hljs-string\">&quot;*&quot;</span>);<br><br>    <span class=\"hljs-title function_\">next</span>();<br><br>&#125;);<br><br></code></pre></td></tr></table></figure>\n\n<p>对所有请求都做如上返回响应头的处理，这样能保证浏览器预检能够通过。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>其实这不是你的问题，是浏览器限制和后端不正确的响应共同导致的。对于前端来说只能提供一个思路，告诉前端人员这个错误造成的原因，要真修起来只能干瞪眼。前端能做的就是鞭策后端工程师赶紧修了，你的责任就是等他修好。</p>\n<p>到这里，关于在前端进行网络请求的内容就已经算是<strong>入门+1</strong>了，往后仍有更长的路要走，本章仅仅对HTTP的CORS进行讲解，以后还会遇到像上传文件，下载文件，跑通接口，跨域，认证，jwt token，session，登录注册，SSE（服务器主动发送事件），Websocket（服务器客户端双向通信）等等一系列更复杂的实战挑战，一切的前提，是学会HTTP，解决CORS的问题，成功在前端跑通服务器。（来自上一篇文章）</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>上一节介绍了前端网络的基础用法，已经秒杀了fetch与xhr用法，但是实际在前端发送这些请求的时候，难免会遇到一些莫名其妙的报错，在别人网站正常请求的服务器地址，在你的网站里面就不行了，我用APIfox，postman或者vscode的rest client发送请求就一切正常，这是怎么回事？</p>\n<p><img src=\"https://st2-res.arsrna.cn/2403362/5f9c30bba347d10bf7ebb3e367b7edad.png\" alt=\"请在此添加图片描述\"></p>\n<p>其实这是来自于浏览器的安全策略“跨源资源共享”</p>\n<h1 id=\"浏览器限制\"><a href=\"#浏览器限制\" class=\"headerlink\" title=\"浏览器限制\"></a>浏览器限制</h1><blockquote>\n<p>跨源资源共享（CORS，或通俗地译为跨域资源共享）是一种基于 HTTP 头的机制，该机制通过允许服务器标示除了它自己以外的其他源（域、协议或端口），使得浏览器允许这些源访问加载自己的资源。跨源资源共享还通过一种机制来检查服务器是否会允许要发送的真实请求，该机制通过浏览器发起一个到服务器托管的跨源资源的“预检”请求。在预检中，浏览器发送的头中标示有 HTTP 方法和真实请求中会用到的头。</p>\n</blockquote>\n<p>例如a.com发送一个POST请求到服务器，是正常的，而b.com发送却失败，这就是因为服务器有着一个“Access-Control-Allow-Origin”响应头，检测到b.com不在允许请求的范围内，故浏览器拦截了这一请求。但是有个例外，上述提到的APIFox，postman这些工具能正常请求的原因是他是从服务端进行请求的，不是浏览器的环境，自然没有这样的限制，你可以理解为浏览器是高中的学生，他不允许你使用手机，而postman是高中老师，自然不受校规对学生用手机的限制。</p>\n<h2 id=\"何为跨源\"><a href=\"#何为跨源\" class=\"headerlink\" title=\"何为跨源\"></a>何为跨源</h2><p>以下情况，都会引起跨源的情况</p>\n<ul>\n<li>端口不同：<a href=\"https://a.com和https//a.com:81\">https://a.com和https://a.com:81</a></li>\n<li>主机不同：<a href=\"https://a.com和https//b.com%E5%92%8Chttps://a.a.com\">https://a.com和https://b.com和https://a.a.com</a></li>\n<li>协议不同：<a href=\"http://a.com和https//a.com\">http://a.com和https://a.com</a></li>\n</ul>\n<p>检查两个域之间是否产生跨源问题，可以前往 <a href=\"https://httptoolkit.com/will-it-cors/\">https://httptoolkit.com/will-it-cors/</a> 进行测试</p>\n<h2 id=\"浏览器产生CORS的场景\"><a href=\"#浏览器产生CORS的场景\" class=\"headerlink\" title=\"浏览器产生CORS的场景\"></a>浏览器产生CORS的场景</h2><ul>\n<li>XHR或fetch发起的跨源 HTTP 请求。</li>\n<li>Web 字体（CSS 中通过 @font-face 使用跨源字体资源）</li>\n<li>WebGL 贴图。</li>\n<li>使用 drawImage() 将图片或视频画面绘制到 canvas。</li>\n<li>来自图像的 CSS 图形。</li>\n</ul>\n<p>本节重点关注http请求的部分，在http中，浏览器将 CORS 请求分成两类：简单请求（Simple request）和非简单请求（Not-so-simple request）</p>\n<h2 id=\"简单请求\"><a href=\"#简单请求\" class=\"headerlink\" title=\"简单请求\"></a>简单请求</h2><p>如果以下三种类型都满足，则视为简单请求的类型</p>\n<ul>\n<li><p>请求方法为以下三种之一</p>\n<ul>\n<li>HEAD</li>\n<li>GET</li>\n<li>POST</li>\n</ul>\n</li>\n<li><p>HTTP 的头信息不超出以下字段</p>\n<ul>\n<li>Accept</li>\n<li>Accept-Language</li>\n<li>Content-Language</li>\n<li>Content-Type</li>\n<li>DPR</li>\n<li>Downlink</li>\n<li>Save-Data</li>\n<li>Viewport-Width</li>\n<li>Width</li>\n</ul>\n</li>\n<li><p>Content-Type 仅限于以下三种之一</p>\n<ul>\n<li>text&#x2F;plain</li>\n<li>multipart&#x2F;form-data</li>\n<li>application&#x2F;x-www-form-urlencoded</li>\n</ul>\n</li>\n<li><p>请求中的任意 XMLHttpRequestUpload 对象均没有注册任何事件监听器。</p>\n</li>\n<li><p>请求中没有使用 ReadableStream 对象。</p>\n</li>\n</ul>\n<p>满足简单请求的时候，浏览器会向服务器原 <code>封不</code>动地发送请求</p>\n<p>浏览器封装后的http请求类似下文</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs http\"><br><span class=\"hljs-keyword\">GET</span> <span class=\"hljs-string\">/release/</span> <span class=\"hljs-meta\">HTTP/1.1</span><br><br><span class=\"language-apache\"><span class=\"hljs-attribute\">Host</span>: api-gz.arsrna.cn</span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">accept</span>: */*</span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">accept</span>-language: zh-CN,zh;q=<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">9</span>,en;q=<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">8</span>,en-GB;q=<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">7</span>,en-US;q=<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">6</span></span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">dnt</span>: <span class=\"hljs-number\">1</span></span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">origin</span>: https://www.arsrna.cn</span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">referer</span>: https://www.arsrna.cn/</span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">sec</span>-ch-ua: <span class=\"hljs-string\">&quot;Microsoft Edge&quot;</span>;v=<span class=\"hljs-string\">&quot;123&quot;</span>, <span class=\"hljs-string\">&quot;Not:A-Brand&quot;</span>;v=<span class=\"hljs-string\">&quot;8&quot;</span>, <span class=\"hljs-string\">&quot;Chromium&quot;</span>;v=<span class=\"hljs-string\">&quot;123&quot;</span></span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">sec</span>-ch-ua-mobile: ?<span class=\"hljs-number\">0</span></span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">sec</span>-ch-ua-platform: <span class=\"hljs-string\">&quot;Windows&quot;</span></span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">sec</span>-fetch-dest: empty</span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">sec</span>-fetch-mode: cors</span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">sec</span>-fetch-site: same-site</span><br><span class=\"language-apache\"></span><br><span class=\"language-apache\"><span class=\"hljs-attribute\">user</span>-agent: Mozilla/<span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">0</span> (Windows NT <span class=\"hljs-number\">10</span>.<span class=\"hljs-number\">0</span>; Win64; x64) AppleWebKit/<span class=\"hljs-number\">537</span>.<span class=\"hljs-number\">36</span> (KHTML, like Gecko) Chrome/<span class=\"hljs-number\">123.0.0.0</span> Safari/<span class=\"hljs-number\">537</span>.<span class=\"hljs-number\">36</span> Edg/<span class=\"hljs-number\">123.0.0.0</span></span><br><span class=\"language-apache\"></span><br></code></pre></td></tr></table></figure>\n\n<p>随后获取服务器返回的 <code>Access-Control-Allow-Origin</code>响应头，确定是否进行跨源异常处理，例如上面的请求，服务器返回了如下请求头：</p>\n<p><img src=\"https://st2-res.arsrna.cn/2403362/0dca1a782e667f0f3831b9da8e758e79.png\" alt=\"请在此添加图片描述\"></p>\n<p>可以看到，<code>Access-Control-Allow-Origin</code>为 <code>*</code>，说明允许所有域名跨源请求这个API。</p>\n<p>浏览器看到了觉得没问题，那就通过。</p>\n<h2 id=\"非简单请求\"><a href=\"#非简单请求\" class=\"headerlink\" title=\"非简单请求\"></a>非简单请求</h2><p>如果简单请求条件的其中一条不满足，则视为非简单请求。</p>\n<p>在进行非简单请求时，浏览器会按顺序一步步执行，比如这里我们做了一个GET请求，并且携带了一个自定义的 <code>Token</code>请求头</p>\n<p><img src=\"https://st2-res.arsrna.cn/2403362/b12fb253b56db13db5cc7eae3b8aeff0.png\" alt=\"请在此添加图片描述\"></p>\n<p>由于 <code>Token</code>请求头超出了简单请求的范围，浏览器会进行下面的一系列操作。</p>\n<ul>\n<li>发出 <code>OPTIONS</code>的请求进行预检，在浏览器开发者工具网络面板里面可以看到</li>\n</ul>\n<p><img src=\"https://st2-res.arsrna.cn/2403362/94de88fbd411052aa2d22219ae83bf71.png\" alt=\"请在此添加图片描述\"></p>\n<ul>\n<li>预先检测服务器是否允许此种请求头，请求方法，发送请求的源站点，如果发出请求的方法包含在 <code>Access-Control-Allow-Headers</code>，<code>Access-Control-Allow-Methods</code>，<code>Access-Control-Allow-Origin</code>响应内，则浏览器准许放行。</li>\n</ul>\n<p><img src=\"https://st2-res.arsrna.cn/2403362/33f1c190ad6e9be3724544f749eb284a.png\" alt=\"请在此添加图片描述\"></p>\n<ul>\n<li>正式发送请求。在预检完毕后，浏览器则最终会将原来的请求原xx动地发送到服务器，此时与前面简单请求的流程一致，最终拿到http请求结果。</li>\n</ul>\n<p><img src=\"https://st2-res.arsrna.cn/2403362/45cc12905562473453922a9d8155d898.png\" alt=\"请在此添加图片描述\"></p>\n<p>这样的请求就类似小区门口的保安，如果车牌，车主和手机号（请求头，方法，域）都登记在小区（服务器）内，保安检查（预检）觉得没问题，就准许放行，此时我们就可以正式访问，进到小区里面。</p>\n<h1 id=\"前端背锅\"><a href=\"#前端背锅\" class=\"headerlink\" title=\"前端背锅\"></a>前端背锅</h1><p>整套流程下来发现，其实是浏览器限制了我们这么操作，但是归根结底不是前端的问题，实际上CORS是服务器的锅。在上一节提到了，客户端和服务器发送请求是双方协商好的，不是因为前端有GET后端才能GET，也不是因为后端有 <code>Accept-Content</code>这个头，我就拿这个头传数据。</p>\n<p>前端请求，也只是遵循了写后端的程序员写的规则而已</p>\n<p>后端返回，也只是听从了前端程序员的建议而已</p>\n<p>他俩其实谁也不怪谁，如果真正发生CORS的错误，需要后端改动响应头的内容。而前端能做到的，就是什么也不做，因为问题的根源在浏览器本身，你当然可以通过修改浏览器配置使其不再检测，但是成千上万的用户，谁也不知道谁有没有这个限制。</p>\n<p>既然浏览器和前端没法变通，那么后端的人员就得精明一点了，老老实实按照规范把这些响应头加回去。</p>\n<h1 id=\"前端网络，但是后端\"><a href=\"#前端网络，但是后端\" class=\"headerlink\" title=\"前端网络，但是后端\"></a>前端网络，但是后端</h1><p>虽说这里讲的是前端网络，不过可以稍微点一下后端的内容</p>\n<p>因为后端百花齐放，千奇百怪，所有的语言，框架从a-Z，0-9可以给你列出几千万种。</p>\n<p>这里就以nodejs的express为例，讲一下如何解决前端跟你提的CORS的问题</p>\n<p>既然我们知道了这个是由响应头不对劲引起的，那么就可以再每次请求的时候给浏览器一个正确的回复</p>\n<p><strong>注意：以下是错误写法</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><br>app.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/test&#x27;</span>,<span class=\"hljs-function\">(<span class=\"hljs-params\">req,res</span>)=&gt;</span>&#123;<br><br>    res.<span class=\"hljs-title function_\">header</span>(<span class=\"hljs-string\">&quot;Access-Control-Allow-Origin&quot;</span>,<span class=\"hljs-string\">&quot;*&quot;</span>);<br><br>&#125;)<br><br></code></pre></td></tr></table></figure>\n\n<p>如果在简单请求可能还不会出事，但是如果是非简单请求，打印网络日志，会发现浏览器先发送了OPTIONS请求后再发送GET请求，由于这里写的是 <code>app.get</code>，意味着只有在 <code>GET</code>请求的时候才会正确处理发送响应头的函数，所以OPTIONS就已经被拦截了，不会正式发送 <code>GET</code>请求。</p>\n<p>正确写法如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><br>app.<span class=\"hljs-title function_\">all</span>(<span class=\"hljs-string\">&#x27;*&#x27;</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res, next</span>) &#123;<br><br>    res.<span class=\"hljs-title function_\">header</span>(<span class=\"hljs-string\">&quot;Access-Control-Allow-Origin&quot;</span>, <span class=\"hljs-string\">&quot;*&quot;</span>);<br><br>    <span class=\"hljs-title function_\">next</span>();<br><br>&#125;);<br><br></code></pre></td></tr></table></figure>\n\n<p>对所有请求都做如上返回响应头的处理，这样能保证浏览器预检能够通过。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>其实这不是你的问题，是浏览器限制和后端不正确的响应共同导致的。对于前端来说只能提供一个思路，告诉前端人员这个错误造成的原因，要真修起来只能干瞪眼。前端能做的就是鞭策后端工程师赶紧修了，你的责任就是等他修好。</p>\n<p>到这里，关于在前端进行网络请求的内容就已经算是<strong>入门+1</strong>了，往后仍有更长的路要走，本章仅仅对HTTP的CORS进行讲解，以后还会遇到像上传文件，下载文件，跑通接口，跨域，认证，jwt token，session，登录注册，SSE（服务器主动发送事件），Websocket（服务器客户端双向通信）等等一系列更复杂的实战挑战，一切的前提，是学会HTTP，解决CORS的问题，成功在前端跑通服务器。（来自上一篇文章）</p>\n"},{"title":"【对象存储COS】使用COS自动数据备份，解放硬盘空间","author":"Ar-Sr-Na","authorLink":"https://www.arsrna.cn","authorAbout":"突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn","authorDesc":"突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn","comments":0,"date":"2024-06-02T16:00:00.000Z","keywords":"对象存储,备份,数据安全","description":"视频，照片，录音......诸如此类的文件在手机电脑里，不断占着巨大的空间。有没有一种工具，可以自动分类，自动上传，自动归档这些照片视频文件，而且要做到稳定性高，多端同步并且成本适中的呢？。","index_img":"https://st2-res.arsrna.cn/2424242/372f3919c9b97c94d10a239caa2bc32f.png","_content":"\n# 导言\n\n视频，照片，录音......诸如此类的文件在手机电脑里，永远是不断增多，不断占用的东西，每次空间告急时，都要花一大片时间去整理，删除照片释放这宝贵的空间，“这个删，这个删不删呢？可能以后要用......”，挑选照片还真是一个费时费力还费心的活。\n\n手机的照片传到电脑，又得下载一大堆软件传来传去，又得走网络，而且我手机拍了新照片，电脑又不能自动接收，我想放电脑上，手机就不留了，想要再拿回来，又得传来传去......\n\n有些陈年老照片，这辈子可能不会再翻看了，要翻估计未来10年也是一两次，但是又不能删，有没有一种东西可以解放这部分的空间，比如可以占用少一点，或者存储成本低一点的工具。\n\n所以，有没有一种工具，可以**自动分类，自动上传，自动归档**这些照片视频文件，而且要做到稳定性高，多端同步并且成本适中的呢？\n\n腾讯云的对象存储COS，提供海量分布式存储服务，作为基础的存储服务，扩展性巨强，是数据安全存放的不二之选。\n\n# 产品介绍\n\n腾讯云对象存储能做的，不只是存储，更包含了数据管理，异地容灾，访问加速和数据处理等一系列场景的功能，并且提供SDK等开发工具，帮助开发者快速接入对象存储产品，实现更多应用扩展。\n\n## 存储\n\n对象存储提供海量存储空间供用户使用，并且存储也分为多种类型，灵活使用降低成本。\n\n针对上述场景，例如存储备份视频，或者多端同步的照片、文件等频繁使用的内容，可以使用对象存储的标准存储，随时上传，随时下载。对于低频访问的，需要长期备份并且不希望占空间的数据，可以使用归档存储或低频存储，需要时再取出。\n\n## 数据管理\n\n数万张图片如果让用户自己分类，多少有些不现实，腾讯云的对象存储最近就有这么一个功能，叫做**智能检索**，根据业务场景实现图片元数据和信息的查询分类，这个功能完全可以实现上述提到的图片分类，智能分类和查找的功能。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/372f3919c9b97c94d10a239caa2bc32f.png)\n\n腾讯云也开放了控制台、SDK、cli等工具帮助用户快速检索和管理数据，只需要像操作文件管理器那样即可实现访问对象存储中的数据。\n\n## 数据处理\n\n一些照片、视频，原始的文件可能很大，我们并不需要太高分辨率或者太高画质的内容，一些人眼察觉不到的细节没必要进行保留，腾讯云对象存储与数据万象这两个产品相辅相成构成了数据处理生态圈。\n\n使用数据万象CI，可以对对象存储里面的数据进行处理，包括压缩图片，转码视频，甚至是音频降噪、人声分离、超分辨率、提取精彩锦集等丰富的功能，而且可以批量在云端一键处理，降低了操作门槛。\n\n# 如何使用\n\n## 产品价格和计划\n\n在开通之前，大家应该对价格更加敏感，腾讯云对象存储提供多样化的购买方式，这里以预付费（资源包）的形式，为大家介绍需要购买的类型。\n\n计费内容可参考此文档：[https://cloud.tencent.com/document/product/436/16871#.E8.AE.A1.E8.B4.B9.E9.A1.B9](https://cloud.tencent.com/document/product/436/16871#.E8.AE.A1.E8.B4.B9.E9.A1.B9)\n\n对于经常交换的数据，以标准存储来说，用到最多的是**标准存储容量包、外网下行流量包或CDN回源流量包**。如果是直接从COS下载的，则使用外网下行流量包，如果是通过CDN的，则使用CDN回源流量包，具体方案可以参考：[COS+CVM+CDN 实现低成本高效率往返传输数据](https://cloud.tencent.com/developer/article/2066053)。就以100G每个月来说，标准存储容量资源包是8.4元，一年大概100元，如果每个月下载20G流量，一年的资源包大概在41.4元左右\n\n对于长期存放不怎么使用的冷数据，使用的是归档存储，包括**深度归档存储 或 归档存储**两个类型的容量资源包，取决于存放的时间和取回的速度，如果只放个一两年，而且一年要读取十次以上，建议使用归档存储类的容量包，反之。数据取回也需要费用，采用的是后付费的模式，可参考：[https://cloud.tencent.com/document/product/436/53862](https://cloud.tencent.com/document/product/436/53862)。深度归档存储的容量包价格十分便宜，1TB的数据每个月只需要10.24元，非常适合长期和大量存储。\n\n数据处理方面，腾讯云每个月会免费发放10TB的基础图片处理包，例如对图片进行裁剪、缩放、水印、获取信息等基础处理。如果是AI功能，超分辨率等高级处理功能，则按照不同场景收取不同资源包的费用。\n\n要注意的是，开通时会附赠免费额度，可以用来体验产品。并且正值618时期，腾讯云的对象存储产品活动力度非常大，首单用户100GB容量包一年仅需29元，配合CDN产品进行加速是更好的选择，CDN产品流量1TB半年仅88元。老用户88元还可以选择200G容量包与外网下行流量包\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/8e9196ca83386bd9bdd9ed0c4f8a013d.png)\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/86e79fed3d96668e69a8d0886190a20b.png)\n\n## 开通使用\n\n初次使用对象存储，需要进入到对象存储控制台进行开通操作：[点此进入](https://console.cloud.tencent.com/cos/)\n\n开通完毕后将会发放对应的免费额度使用。\n\n## 新建存储桶\n\n存储桶相当于一块硬盘分的区，例如D盘E盘，用于存放文件。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/cb135611b992a79d08423da15c925d29.png)\n\n地域最好选择距离客户端近的地方，减少网络延迟。存储桶名称可以自定义，权限根据需要，这里默认设置为私有读写保证数据的安全。\n\n## 上传文件\n\n上传文件可以使用网页控制台，COSBrowser电脑端和手机端等方式\n\n### 控制台\n\n控制台只需要进入到存储桶，直接点击上传即可\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/98f9e408f48967d1d75a2241779bc95d.png)\n\n### COSBrowser\n\n进入[COSBrowser官网](https://cosbrowser.cloud.tencent.com/)，根据平台下载对应版本\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/71b7d554b0d64b2ce1b8be45ce81b8fe.png)\n\n打开后可以选择使用秘钥登录或直接使用腾讯云账号登录\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/a9cc69ce2e80e6d919f1ad9ef84a7e76.png)\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/7a2ab2a3c17fc04d186746cf9f30df51.png)\n\n文件操作与控制台类似，这里不再赘述。\n\n## 数据处理开通\n\n如果需要用到数据处理功能，需要在存储桶内数据处理模块进行开通；在控制台内打开存储桶，点击数据处理标签页，找到需要开通的功能后点击右侧“立即使用数据万象”，授权后即可开通\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/1d8a5533e75b9c4c8b668fd67fb42d1f.png)\n\n至此，对象存储基本的功能已经介绍完毕，接下来将针对片头提到的几个场景来做对应的配置。\n\n# 自动备份\n\n## 手机相册备份\n\n自动备份需要使用COSBrowser客户端，在手机上打开COSBrowser客户端，点击相册-去设置。\n\n将基本设置配置完毕后保存，在空闲时间将会自动上传相册到对应地域的存储桶中。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/d0066ce403e2c50e9dad3dbaf168a048.png)\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/0e7f892071f69394e8c7ad6fa556c218.png)\n\n同时电脑端也可以查看上传的相册，只需要点开对应的存储桶即可查看。\n\n## 电脑文件备份\n\n打开COSBrowser客户端，点击右上角的工具箱，选择文件同步\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/e3f9e5e56bca795e9d2044f20a131aff.png)\n\n本地文件夹选择需要上传的文件夹，存储桶根据自己的设置来选择，后面的路径设置表示存储到存储桶的哪个目录下。同步类型选择自动同步\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/c95c8178ac6a959d761040a782988c18.png)\n\n这样在文件夹里面新增或图片，对象存储就会自动上传以备份\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/e0ed8cbfe2572eb07ed00b2ed3a6db95.png)\n\n# 空间管理\n\n我们当然不希望保存的成本太高，比如上面说的要分类存储，在cos控制台和COSBrowser客户端都能直接进行设置\n\n## 存储类型\n\n在控制台，点击文件右侧的详情，找到存储类型，修改为指定类型即可\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/d06b1533e983ed512d63661a1c11d537.png)\n\nCOSBrowser方法类似，选中文件，点击上方的更多-修改存储类型即可。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/368f63e5476897ccd3b7b314446947ec.png)\n\n手机端无法进行设置，建议使用电脑。\n\n## 数据处理\n\n对于一些图片和视频，可以使用腾讯云数据万象的转码和压缩功能，在开通图片处理后，进入到存储桶内任务与工作流标签中，这里以图片处理为例，首先在图片处理部分新建任务\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/ea18dc859e3e1460e32e0358daf39a62.png)\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/a5a7de4d7f027f589334df986756618b.png)\n\n如果没有模板，需要先创建模板，在里面可以配置各种图片处理功能，这里就以压缩为例，图片画质压缩到最大宽度4096的分辨率，转为jpg，95%的质量，配置如图\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/81f509786c499a9d148cbb820ef6072e.png)\n\n模板名称自定。\n\n回到任务创建中，选择刚刚设置的模板，存储桶按需要任意选择，可以是本存储桶，也可以是其他的，包括存储的路径。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/c2f4553bd13b0a61d50602a74ba7d091.png)\n\n点击确定即可开始执行\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/1c45532b1db34557c5dd307364864869.png)\n\n## 批量处理\n\n批量处理则可以使用工作流，设置一个处理的工作流，例如对图片压缩的同时又对图片加水印，对视频压缩并且转码加水印等。\n\n在工作流的页面点击创建工作流，根据需要自行设置\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/217c462987e46c23066ae1b5a6748aff.png)\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/bd10095cc2207f20034f9462905f6edd.png)\n\n创建完毕后进入到批量数据处理面板，点击创建批量数据处理任务\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/f8cb6b6b8aab1aec5c691df3a396efdc.png)\n\n如图所示创建任务，确定后即可开始执行。\n\n# 数据管理\n\n要查看用了多少，还剩多少以及费用多少，可以进到使用统计面板中\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/7d38da0679ae81a19e31e1482fa39368.png)\n\n在这里能够直观地看到已经使用的数据量。在资源包管理面板可以看到资源包剩余量与新购资源包的入口。\n\n要注意，资源包快用满时建议升配或购买，避免产生不必要的账单。\n\n# 安全建议\n\n- 如果是个人备份使用，建议将存储桶均设置为**私有读写**，这样数据只有自己能够访问，其他人无法访问。\n- 如果需要分享出去的，建议使用腾讯云控制台对象详情内的生成临时链接，在有效期内才能下载，避免长期分享被人刷流量和盗取资源。\n- 不要分享账号或SecretId/SecretKey给陌生人，防止数据泄露。\n- 为了避免误删导致数据丢失，可以开启历史版本、多地域复制容灾等功能，不过会增加一定的费用，根据需要自己选择。\n\n到此，COS实现备份的功能介绍就到此结束，最后别忘了腾讯云在618推出了一系列促销活动，优惠力度巨大，尤其是刚入门腾讯云的“小白”们，这是一次不错的机会，用最低的价格体验腾讯云的产品。详情请戳[618活动页面](https://mc.tencent.com/1GbY1xxu)\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/a367cb4ca2cd169fec291adcc3a57077.png)","source":"_posts/2424242.md","raw":"---\ntitle: 【对象存储COS】使用COS自动数据备份，解放硬盘空间\nauthor: Ar-Sr-Na\nauthorLink: https://www.arsrna.cn\nauthorAbout: 突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn\nauthorDesc: 突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn\ncomments: false\ndate: 2024-6-3\ncategories: 技术\ntags:  对象存储,备份,数据安全\nkeywords:  对象存储,备份,数据安全\ndescription: 视频，照片，录音......诸如此类的文件在手机电脑里，不断占着巨大的空间。有没有一种工具，可以自动分类，自动上传，自动归档这些照片视频文件，而且要做到稳定性高，多端同步并且成本适中的呢？。\nindex_img: https://st2-res.arsrna.cn/2424242/372f3919c9b97c94d10a239caa2bc32f.png\n---\n\n# 导言\n\n视频，照片，录音......诸如此类的文件在手机电脑里，永远是不断增多，不断占用的东西，每次空间告急时，都要花一大片时间去整理，删除照片释放这宝贵的空间，“这个删，这个删不删呢？可能以后要用......”，挑选照片还真是一个费时费力还费心的活。\n\n手机的照片传到电脑，又得下载一大堆软件传来传去，又得走网络，而且我手机拍了新照片，电脑又不能自动接收，我想放电脑上，手机就不留了，想要再拿回来，又得传来传去......\n\n有些陈年老照片，这辈子可能不会再翻看了，要翻估计未来10年也是一两次，但是又不能删，有没有一种东西可以解放这部分的空间，比如可以占用少一点，或者存储成本低一点的工具。\n\n所以，有没有一种工具，可以**自动分类，自动上传，自动归档**这些照片视频文件，而且要做到稳定性高，多端同步并且成本适中的呢？\n\n腾讯云的对象存储COS，提供海量分布式存储服务，作为基础的存储服务，扩展性巨强，是数据安全存放的不二之选。\n\n# 产品介绍\n\n腾讯云对象存储能做的，不只是存储，更包含了数据管理，异地容灾，访问加速和数据处理等一系列场景的功能，并且提供SDK等开发工具，帮助开发者快速接入对象存储产品，实现更多应用扩展。\n\n## 存储\n\n对象存储提供海量存储空间供用户使用，并且存储也分为多种类型，灵活使用降低成本。\n\n针对上述场景，例如存储备份视频，或者多端同步的照片、文件等频繁使用的内容，可以使用对象存储的标准存储，随时上传，随时下载。对于低频访问的，需要长期备份并且不希望占空间的数据，可以使用归档存储或低频存储，需要时再取出。\n\n## 数据管理\n\n数万张图片如果让用户自己分类，多少有些不现实，腾讯云的对象存储最近就有这么一个功能，叫做**智能检索**，根据业务场景实现图片元数据和信息的查询分类，这个功能完全可以实现上述提到的图片分类，智能分类和查找的功能。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/372f3919c9b97c94d10a239caa2bc32f.png)\n\n腾讯云也开放了控制台、SDK、cli等工具帮助用户快速检索和管理数据，只需要像操作文件管理器那样即可实现访问对象存储中的数据。\n\n## 数据处理\n\n一些照片、视频，原始的文件可能很大，我们并不需要太高分辨率或者太高画质的内容，一些人眼察觉不到的细节没必要进行保留，腾讯云对象存储与数据万象这两个产品相辅相成构成了数据处理生态圈。\n\n使用数据万象CI，可以对对象存储里面的数据进行处理，包括压缩图片，转码视频，甚至是音频降噪、人声分离、超分辨率、提取精彩锦集等丰富的功能，而且可以批量在云端一键处理，降低了操作门槛。\n\n# 如何使用\n\n## 产品价格和计划\n\n在开通之前，大家应该对价格更加敏感，腾讯云对象存储提供多样化的购买方式，这里以预付费（资源包）的形式，为大家介绍需要购买的类型。\n\n计费内容可参考此文档：[https://cloud.tencent.com/document/product/436/16871#.E8.AE.A1.E8.B4.B9.E9.A1.B9](https://cloud.tencent.com/document/product/436/16871#.E8.AE.A1.E8.B4.B9.E9.A1.B9)\n\n对于经常交换的数据，以标准存储来说，用到最多的是**标准存储容量包、外网下行流量包或CDN回源流量包**。如果是直接从COS下载的，则使用外网下行流量包，如果是通过CDN的，则使用CDN回源流量包，具体方案可以参考：[COS+CVM+CDN 实现低成本高效率往返传输数据](https://cloud.tencent.com/developer/article/2066053)。就以100G每个月来说，标准存储容量资源包是8.4元，一年大概100元，如果每个月下载20G流量，一年的资源包大概在41.4元左右\n\n对于长期存放不怎么使用的冷数据，使用的是归档存储，包括**深度归档存储 或 归档存储**两个类型的容量资源包，取决于存放的时间和取回的速度，如果只放个一两年，而且一年要读取十次以上，建议使用归档存储类的容量包，反之。数据取回也需要费用，采用的是后付费的模式，可参考：[https://cloud.tencent.com/document/product/436/53862](https://cloud.tencent.com/document/product/436/53862)。深度归档存储的容量包价格十分便宜，1TB的数据每个月只需要10.24元，非常适合长期和大量存储。\n\n数据处理方面，腾讯云每个月会免费发放10TB的基础图片处理包，例如对图片进行裁剪、缩放、水印、获取信息等基础处理。如果是AI功能，超分辨率等高级处理功能，则按照不同场景收取不同资源包的费用。\n\n要注意的是，开通时会附赠免费额度，可以用来体验产品。并且正值618时期，腾讯云的对象存储产品活动力度非常大，首单用户100GB容量包一年仅需29元，配合CDN产品进行加速是更好的选择，CDN产品流量1TB半年仅88元。老用户88元还可以选择200G容量包与外网下行流量包\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/8e9196ca83386bd9bdd9ed0c4f8a013d.png)\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/86e79fed3d96668e69a8d0886190a20b.png)\n\n## 开通使用\n\n初次使用对象存储，需要进入到对象存储控制台进行开通操作：[点此进入](https://console.cloud.tencent.com/cos/)\n\n开通完毕后将会发放对应的免费额度使用。\n\n## 新建存储桶\n\n存储桶相当于一块硬盘分的区，例如D盘E盘，用于存放文件。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/cb135611b992a79d08423da15c925d29.png)\n\n地域最好选择距离客户端近的地方，减少网络延迟。存储桶名称可以自定义，权限根据需要，这里默认设置为私有读写保证数据的安全。\n\n## 上传文件\n\n上传文件可以使用网页控制台，COSBrowser电脑端和手机端等方式\n\n### 控制台\n\n控制台只需要进入到存储桶，直接点击上传即可\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/98f9e408f48967d1d75a2241779bc95d.png)\n\n### COSBrowser\n\n进入[COSBrowser官网](https://cosbrowser.cloud.tencent.com/)，根据平台下载对应版本\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/71b7d554b0d64b2ce1b8be45ce81b8fe.png)\n\n打开后可以选择使用秘钥登录或直接使用腾讯云账号登录\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/a9cc69ce2e80e6d919f1ad9ef84a7e76.png)\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/7a2ab2a3c17fc04d186746cf9f30df51.png)\n\n文件操作与控制台类似，这里不再赘述。\n\n## 数据处理开通\n\n如果需要用到数据处理功能，需要在存储桶内数据处理模块进行开通；在控制台内打开存储桶，点击数据处理标签页，找到需要开通的功能后点击右侧“立即使用数据万象”，授权后即可开通\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/1d8a5533e75b9c4c8b668fd67fb42d1f.png)\n\n至此，对象存储基本的功能已经介绍完毕，接下来将针对片头提到的几个场景来做对应的配置。\n\n# 自动备份\n\n## 手机相册备份\n\n自动备份需要使用COSBrowser客户端，在手机上打开COSBrowser客户端，点击相册-去设置。\n\n将基本设置配置完毕后保存，在空闲时间将会自动上传相册到对应地域的存储桶中。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/d0066ce403e2c50e9dad3dbaf168a048.png)\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/0e7f892071f69394e8c7ad6fa556c218.png)\n\n同时电脑端也可以查看上传的相册，只需要点开对应的存储桶即可查看。\n\n## 电脑文件备份\n\n打开COSBrowser客户端，点击右上角的工具箱，选择文件同步\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/e3f9e5e56bca795e9d2044f20a131aff.png)\n\n本地文件夹选择需要上传的文件夹，存储桶根据自己的设置来选择，后面的路径设置表示存储到存储桶的哪个目录下。同步类型选择自动同步\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/c95c8178ac6a959d761040a782988c18.png)\n\n这样在文件夹里面新增或图片，对象存储就会自动上传以备份\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/e0ed8cbfe2572eb07ed00b2ed3a6db95.png)\n\n# 空间管理\n\n我们当然不希望保存的成本太高，比如上面说的要分类存储，在cos控制台和COSBrowser客户端都能直接进行设置\n\n## 存储类型\n\n在控制台，点击文件右侧的详情，找到存储类型，修改为指定类型即可\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/d06b1533e983ed512d63661a1c11d537.png)\n\nCOSBrowser方法类似，选中文件，点击上方的更多-修改存储类型即可。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/368f63e5476897ccd3b7b314446947ec.png)\n\n手机端无法进行设置，建议使用电脑。\n\n## 数据处理\n\n对于一些图片和视频，可以使用腾讯云数据万象的转码和压缩功能，在开通图片处理后，进入到存储桶内任务与工作流标签中，这里以图片处理为例，首先在图片处理部分新建任务\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/ea18dc859e3e1460e32e0358daf39a62.png)\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/a5a7de4d7f027f589334df986756618b.png)\n\n如果没有模板，需要先创建模板，在里面可以配置各种图片处理功能，这里就以压缩为例，图片画质压缩到最大宽度4096的分辨率，转为jpg，95%的质量，配置如图\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/81f509786c499a9d148cbb820ef6072e.png)\n\n模板名称自定。\n\n回到任务创建中，选择刚刚设置的模板，存储桶按需要任意选择，可以是本存储桶，也可以是其他的，包括存储的路径。\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/c2f4553bd13b0a61d50602a74ba7d091.png)\n\n点击确定即可开始执行\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/1c45532b1db34557c5dd307364864869.png)\n\n## 批量处理\n\n批量处理则可以使用工作流，设置一个处理的工作流，例如对图片压缩的同时又对图片加水印，对视频压缩并且转码加水印等。\n\n在工作流的页面点击创建工作流，根据需要自行设置\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/217c462987e46c23066ae1b5a6748aff.png)\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/bd10095cc2207f20034f9462905f6edd.png)\n\n创建完毕后进入到批量数据处理面板，点击创建批量数据处理任务\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/f8cb6b6b8aab1aec5c691df3a396efdc.png)\n\n如图所示创建任务，确定后即可开始执行。\n\n# 数据管理\n\n要查看用了多少，还剩多少以及费用多少，可以进到使用统计面板中\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/7d38da0679ae81a19e31e1482fa39368.png)\n\n在这里能够直观地看到已经使用的数据量。在资源包管理面板可以看到资源包剩余量与新购资源包的入口。\n\n要注意，资源包快用满时建议升配或购买，避免产生不必要的账单。\n\n# 安全建议\n\n- 如果是个人备份使用，建议将存储桶均设置为**私有读写**，这样数据只有自己能够访问，其他人无法访问。\n- 如果需要分享出去的，建议使用腾讯云控制台对象详情内的生成临时链接，在有效期内才能下载，避免长期分享被人刷流量和盗取资源。\n- 不要分享账号或SecretId/SecretKey给陌生人，防止数据泄露。\n- 为了避免误删导致数据丢失，可以开启历史版本、多地域复制容灾等功能，不过会增加一定的费用，根据需要自己选择。\n\n到此，COS实现备份的功能介绍就到此结束，最后别忘了腾讯云在618推出了一系列促销活动，优惠力度巨大，尤其是刚入门腾讯云的“小白”们，这是一次不错的机会，用最低的价格体验腾讯云的产品。详情请戳[618活动页面](https://mc.tencent.com/1GbY1xxu)\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2424242/a367cb4ca2cd169fec291adcc3a57077.png)","slug":"2424242","published":1,"updated":"2024-09-07T10:04:22.921Z","_id":"cm0rvcooh0000z8ndatzr9x6q","layout":"post","photos":[],"link":"","content":"<h1 id=\"导言\"><a href=\"#导言\" class=\"headerlink\" title=\"导言\"></a>导言</h1><p>视频，照片，录音……诸如此类的文件在手机电脑里，永远是不断增多，不断占用的东西，每次空间告急时，都要花一大片时间去整理，删除照片释放这宝贵的空间，“这个删，这个删不删呢？可能以后要用……”，挑选照片还真是一个费时费力还费心的活。</p>\n<p>手机的照片传到电脑，又得下载一大堆软件传来传去，又得走网络，而且我手机拍了新照片，电脑又不能自动接收，我想放电脑上，手机就不留了，想要再拿回来，又得传来传去……</p>\n<p>有些陈年老照片，这辈子可能不会再翻看了，要翻估计未来10年也是一两次，但是又不能删，有没有一种东西可以解放这部分的空间，比如可以占用少一点，或者存储成本低一点的工具。</p>\n<p>所以，有没有一种工具，可以<strong>自动分类，自动上传，自动归档</strong>这些照片视频文件，而且要做到稳定性高，多端同步并且成本适中的呢？</p>\n<p>腾讯云的对象存储COS，提供海量分布式存储服务，作为基础的存储服务，扩展性巨强，是数据安全存放的不二之选。</p>\n<h1 id=\"产品介绍\"><a href=\"#产品介绍\" class=\"headerlink\" title=\"产品介绍\"></a>产品介绍</h1><p>腾讯云对象存储能做的，不只是存储，更包含了数据管理，异地容灾，访问加速和数据处理等一系列场景的功能，并且提供SDK等开发工具，帮助开发者快速接入对象存储产品，实现更多应用扩展。</p>\n<h2 id=\"存储\"><a href=\"#存储\" class=\"headerlink\" title=\"存储\"></a>存储</h2><p>对象存储提供海量存储空间供用户使用，并且存储也分为多种类型，灵活使用降低成本。</p>\n<p>针对上述场景，例如存储备份视频，或者多端同步的照片、文件等频繁使用的内容，可以使用对象存储的标准存储，随时上传，随时下载。对于低频访问的，需要长期备份并且不希望占空间的数据，可以使用归档存储或低频存储，需要时再取出。</p>\n<h2 id=\"数据管理\"><a href=\"#数据管理\" class=\"headerlink\" title=\"数据管理\"></a>数据管理</h2><p>数万张图片如果让用户自己分类，多少有些不现实，腾讯云的对象存储最近就有这么一个功能，叫做<strong>智能检索</strong>，根据业务场景实现图片元数据和信息的查询分类，这个功能完全可以实现上述提到的图片分类，智能分类和查找的功能。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/372f3919c9b97c94d10a239caa2bc32f.png\" alt=\"请在此添加图片描述\"></p>\n<p>腾讯云也开放了控制台、SDK、cli等工具帮助用户快速检索和管理数据，只需要像操作文件管理器那样即可实现访问对象存储中的数据。</p>\n<h2 id=\"数据处理\"><a href=\"#数据处理\" class=\"headerlink\" title=\"数据处理\"></a>数据处理</h2><p>一些照片、视频，原始的文件可能很大，我们并不需要太高分辨率或者太高画质的内容，一些人眼察觉不到的细节没必要进行保留，腾讯云对象存储与数据万象这两个产品相辅相成构成了数据处理生态圈。</p>\n<p>使用数据万象CI，可以对对象存储里面的数据进行处理，包括压缩图片，转码视频，甚至是音频降噪、人声分离、超分辨率、提取精彩锦集等丰富的功能，而且可以批量在云端一键处理，降低了操作门槛。</p>\n<h1 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h1><h2 id=\"产品价格和计划\"><a href=\"#产品价格和计划\" class=\"headerlink\" title=\"产品价格和计划\"></a>产品价格和计划</h2><p>在开通之前，大家应该对价格更加敏感，腾讯云对象存储提供多样化的购买方式，这里以预付费（资源包）的形式，为大家介绍需要购买的类型。</p>\n<p>计费内容可参考此文档：<a href=\"https://cloud.tencent.com/document/product/436/16871#.E8.AE.A1.E8.B4.B9.E9.A1.B9\">https://cloud.tencent.com/document/product/436/16871#.E8.AE.A1.E8.B4.B9.E9.A1.B9</a></p>\n<p>对于经常交换的数据，以标准存储来说，用到最多的是<strong>标准存储容量包、外网下行流量包或CDN回源流量包</strong>。如果是直接从COS下载的，则使用外网下行流量包，如果是通过CDN的，则使用CDN回源流量包，具体方案可以参考：<a href=\"https://cloud.tencent.com/developer/article/2066053\">COS+CVM+CDN 实现低成本高效率往返传输数据</a>。就以100G每个月来说，标准存储容量资源包是8.4元，一年大概100元，如果每个月下载20G流量，一年的资源包大概在41.4元左右</p>\n<p>对于长期存放不怎么使用的冷数据，使用的是归档存储，包括<strong>深度归档存储 或 归档存储</strong>两个类型的容量资源包，取决于存放的时间和取回的速度，如果只放个一两年，而且一年要读取十次以上，建议使用归档存储类的容量包，反之。数据取回也需要费用，采用的是后付费的模式，可参考：<a href=\"https://cloud.tencent.com/document/product/436/53862\">https://cloud.tencent.com/document/product/436/53862</a>。深度归档存储的容量包价格十分便宜，1TB的数据每个月只需要10.24元，非常适合长期和大量存储。</p>\n<p>数据处理方面，腾讯云每个月会免费发放10TB的基础图片处理包，例如对图片进行裁剪、缩放、水印、获取信息等基础处理。如果是AI功能，超分辨率等高级处理功能，则按照不同场景收取不同资源包的费用。</p>\n<p>要注意的是，开通时会附赠免费额度，可以用来体验产品。并且正值618时期，腾讯云的对象存储产品活动力度非常大，首单用户100GB容量包一年仅需29元，配合CDN产品进行加速是更好的选择，CDN产品流量1TB半年仅88元。老用户88元还可以选择200G容量包与外网下行流量包</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/8e9196ca83386bd9bdd9ed0c4f8a013d.png\" alt=\"请在此添加图片描述\"></p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/86e79fed3d96668e69a8d0886190a20b.png\" alt=\"请在此添加图片描述\"></p>\n<h2 id=\"开通使用\"><a href=\"#开通使用\" class=\"headerlink\" title=\"开通使用\"></a>开通使用</h2><p>初次使用对象存储，需要进入到对象存储控制台进行开通操作：<a href=\"https://console.cloud.tencent.com/cos/\">点此进入</a></p>\n<p>开通完毕后将会发放对应的免费额度使用。</p>\n<h2 id=\"新建存储桶\"><a href=\"#新建存储桶\" class=\"headerlink\" title=\"新建存储桶\"></a>新建存储桶</h2><p>存储桶相当于一块硬盘分的区，例如D盘E盘，用于存放文件。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/cb135611b992a79d08423da15c925d29.png\" alt=\"请在此添加图片描述\"></p>\n<p>地域最好选择距离客户端近的地方，减少网络延迟。存储桶名称可以自定义，权限根据需要，这里默认设置为私有读写保证数据的安全。</p>\n<h2 id=\"上传文件\"><a href=\"#上传文件\" class=\"headerlink\" title=\"上传文件\"></a>上传文件</h2><p>上传文件可以使用网页控制台，COSBrowser电脑端和手机端等方式</p>\n<h3 id=\"控制台\"><a href=\"#控制台\" class=\"headerlink\" title=\"控制台\"></a>控制台</h3><p>控制台只需要进入到存储桶，直接点击上传即可</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/98f9e408f48967d1d75a2241779bc95d.png\" alt=\"请在此添加图片描述\"></p>\n<h3 id=\"COSBrowser\"><a href=\"#COSBrowser\" class=\"headerlink\" title=\"COSBrowser\"></a>COSBrowser</h3><p>进入<a href=\"https://cosbrowser.cloud.tencent.com/\">COSBrowser官网</a>，根据平台下载对应版本</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/71b7d554b0d64b2ce1b8be45ce81b8fe.png\" alt=\"请在此添加图片描述\"></p>\n<p>打开后可以选择使用秘钥登录或直接使用腾讯云账号登录</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/a9cc69ce2e80e6d919f1ad9ef84a7e76.png\" alt=\"请在此添加图片描述\"></p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/7a2ab2a3c17fc04d186746cf9f30df51.png\" alt=\"请在此添加图片描述\"></p>\n<p>文件操作与控制台类似，这里不再赘述。</p>\n<h2 id=\"数据处理开通\"><a href=\"#数据处理开通\" class=\"headerlink\" title=\"数据处理开通\"></a>数据处理开通</h2><p>如果需要用到数据处理功能，需要在存储桶内数据处理模块进行开通；在控制台内打开存储桶，点击数据处理标签页，找到需要开通的功能后点击右侧“立即使用数据万象”，授权后即可开通</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/1d8a5533e75b9c4c8b668fd67fb42d1f.png\" alt=\"请在此添加图片描述\"></p>\n<p>至此，对象存储基本的功能已经介绍完毕，接下来将针对片头提到的几个场景来做对应的配置。</p>\n<h1 id=\"自动备份\"><a href=\"#自动备份\" class=\"headerlink\" title=\"自动备份\"></a>自动备份</h1><h2 id=\"手机相册备份\"><a href=\"#手机相册备份\" class=\"headerlink\" title=\"手机相册备份\"></a>手机相册备份</h2><p>自动备份需要使用COSBrowser客户端，在手机上打开COSBrowser客户端，点击相册-去设置。</p>\n<p>将基本设置配置完毕后保存，在空闲时间将会自动上传相册到对应地域的存储桶中。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/d0066ce403e2c50e9dad3dbaf168a048.png\" alt=\"请在此添加图片描述\"></p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/0e7f892071f69394e8c7ad6fa556c218.png\" alt=\"请在此添加图片描述\"></p>\n<p>同时电脑端也可以查看上传的相册，只需要点开对应的存储桶即可查看。</p>\n<h2 id=\"电脑文件备份\"><a href=\"#电脑文件备份\" class=\"headerlink\" title=\"电脑文件备份\"></a>电脑文件备份</h2><p>打开COSBrowser客户端，点击右上角的工具箱，选择文件同步</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/e3f9e5e56bca795e9d2044f20a131aff.png\" alt=\"请在此添加图片描述\"></p>\n<p>本地文件夹选择需要上传的文件夹，存储桶根据自己的设置来选择，后面的路径设置表示存储到存储桶的哪个目录下。同步类型选择自动同步</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/c95c8178ac6a959d761040a782988c18.png\" alt=\"请在此添加图片描述\"></p>\n<p>这样在文件夹里面新增或图片，对象存储就会自动上传以备份</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/e0ed8cbfe2572eb07ed00b2ed3a6db95.png\" alt=\"请在此添加图片描述\"></p>\n<h1 id=\"空间管理\"><a href=\"#空间管理\" class=\"headerlink\" title=\"空间管理\"></a>空间管理</h1><p>我们当然不希望保存的成本太高，比如上面说的要分类存储，在cos控制台和COSBrowser客户端都能直接进行设置</p>\n<h2 id=\"存储类型\"><a href=\"#存储类型\" class=\"headerlink\" title=\"存储类型\"></a>存储类型</h2><p>在控制台，点击文件右侧的详情，找到存储类型，修改为指定类型即可</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/d06b1533e983ed512d63661a1c11d537.png\" alt=\"请在此添加图片描述\"></p>\n<p>COSBrowser方法类似，选中文件，点击上方的更多-修改存储类型即可。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/368f63e5476897ccd3b7b314446947ec.png\" alt=\"请在此添加图片描述\"></p>\n<p>手机端无法进行设置，建议使用电脑。</p>\n<h2 id=\"数据处理-1\"><a href=\"#数据处理-1\" class=\"headerlink\" title=\"数据处理\"></a>数据处理</h2><p>对于一些图片和视频，可以使用腾讯云数据万象的转码和压缩功能，在开通图片处理后，进入到存储桶内任务与工作流标签中，这里以图片处理为例，首先在图片处理部分新建任务</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/ea18dc859e3e1460e32e0358daf39a62.png\" alt=\"请在此添加图片描述\"></p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/a5a7de4d7f027f589334df986756618b.png\" alt=\"请在此添加图片描述\"></p>\n<p>如果没有模板，需要先创建模板，在里面可以配置各种图片处理功能，这里就以压缩为例，图片画质压缩到最大宽度4096的分辨率，转为jpg，95%的质量，配置如图</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/81f509786c499a9d148cbb820ef6072e.png\" alt=\"请在此添加图片描述\"></p>\n<p>模板名称自定。</p>\n<p>回到任务创建中，选择刚刚设置的模板，存储桶按需要任意选择，可以是本存储桶，也可以是其他的，包括存储的路径。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/c2f4553bd13b0a61d50602a74ba7d091.png\" alt=\"请在此添加图片描述\"></p>\n<p>点击确定即可开始执行</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/1c45532b1db34557c5dd307364864869.png\" alt=\"请在此添加图片描述\"></p>\n<h2 id=\"批量处理\"><a href=\"#批量处理\" class=\"headerlink\" title=\"批量处理\"></a>批量处理</h2><p>批量处理则可以使用工作流，设置一个处理的工作流，例如对图片压缩的同时又对图片加水印，对视频压缩并且转码加水印等。</p>\n<p>在工作流的页面点击创建工作流，根据需要自行设置</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/217c462987e46c23066ae1b5a6748aff.png\" alt=\"请在此添加图片描述\"></p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/bd10095cc2207f20034f9462905f6edd.png\" alt=\"请在此添加图片描述\"></p>\n<p>创建完毕后进入到批量数据处理面板，点击创建批量数据处理任务</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/f8cb6b6b8aab1aec5c691df3a396efdc.png\" alt=\"请在此添加图片描述\"></p>\n<p>如图所示创建任务，确定后即可开始执行。</p>\n<h1 id=\"数据管理-1\"><a href=\"#数据管理-1\" class=\"headerlink\" title=\"数据管理\"></a>数据管理</h1><p>要查看用了多少，还剩多少以及费用多少，可以进到使用统计面板中</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/7d38da0679ae81a19e31e1482fa39368.png\" alt=\"请在此添加图片描述\"></p>\n<p>在这里能够直观地看到已经使用的数据量。在资源包管理面板可以看到资源包剩余量与新购资源包的入口。</p>\n<p>要注意，资源包快用满时建议升配或购买，避免产生不必要的账单。</p>\n<h1 id=\"安全建议\"><a href=\"#安全建议\" class=\"headerlink\" title=\"安全建议\"></a>安全建议</h1><ul>\n<li>如果是个人备份使用，建议将存储桶均设置为<strong>私有读写</strong>，这样数据只有自己能够访问，其他人无法访问。</li>\n<li>如果需要分享出去的，建议使用腾讯云控制台对象详情内的生成临时链接，在有效期内才能下载，避免长期分享被人刷流量和盗取资源。</li>\n<li>不要分享账号或SecretId&#x2F;SecretKey给陌生人，防止数据泄露。</li>\n<li>为了避免误删导致数据丢失，可以开启历史版本、多地域复制容灾等功能，不过会增加一定的费用，根据需要自己选择。</li>\n</ul>\n<p>到此，COS实现备份的功能介绍就到此结束，最后别忘了腾讯云在618推出了一系列促销活动，优惠力度巨大，尤其是刚入门腾讯云的“小白”们，这是一次不错的机会，用最低的价格体验腾讯云的产品。详情请戳<a href=\"https://mc.tencent.com/1GbY1xxu\">618活动页面</a></p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/a367cb4ca2cd169fec291adcc3a57077.png\" alt=\"请在此添加图片描述\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"导言\"><a href=\"#导言\" class=\"headerlink\" title=\"导言\"></a>导言</h1><p>视频，照片，录音……诸如此类的文件在手机电脑里，永远是不断增多，不断占用的东西，每次空间告急时，都要花一大片时间去整理，删除照片释放这宝贵的空间，“这个删，这个删不删呢？可能以后要用……”，挑选照片还真是一个费时费力还费心的活。</p>\n<p>手机的照片传到电脑，又得下载一大堆软件传来传去，又得走网络，而且我手机拍了新照片，电脑又不能自动接收，我想放电脑上，手机就不留了，想要再拿回来，又得传来传去……</p>\n<p>有些陈年老照片，这辈子可能不会再翻看了，要翻估计未来10年也是一两次，但是又不能删，有没有一种东西可以解放这部分的空间，比如可以占用少一点，或者存储成本低一点的工具。</p>\n<p>所以，有没有一种工具，可以<strong>自动分类，自动上传，自动归档</strong>这些照片视频文件，而且要做到稳定性高，多端同步并且成本适中的呢？</p>\n<p>腾讯云的对象存储COS，提供海量分布式存储服务，作为基础的存储服务，扩展性巨强，是数据安全存放的不二之选。</p>\n<h1 id=\"产品介绍\"><a href=\"#产品介绍\" class=\"headerlink\" title=\"产品介绍\"></a>产品介绍</h1><p>腾讯云对象存储能做的，不只是存储，更包含了数据管理，异地容灾，访问加速和数据处理等一系列场景的功能，并且提供SDK等开发工具，帮助开发者快速接入对象存储产品，实现更多应用扩展。</p>\n<h2 id=\"存储\"><a href=\"#存储\" class=\"headerlink\" title=\"存储\"></a>存储</h2><p>对象存储提供海量存储空间供用户使用，并且存储也分为多种类型，灵活使用降低成本。</p>\n<p>针对上述场景，例如存储备份视频，或者多端同步的照片、文件等频繁使用的内容，可以使用对象存储的标准存储，随时上传，随时下载。对于低频访问的，需要长期备份并且不希望占空间的数据，可以使用归档存储或低频存储，需要时再取出。</p>\n<h2 id=\"数据管理\"><a href=\"#数据管理\" class=\"headerlink\" title=\"数据管理\"></a>数据管理</h2><p>数万张图片如果让用户自己分类，多少有些不现实，腾讯云的对象存储最近就有这么一个功能，叫做<strong>智能检索</strong>，根据业务场景实现图片元数据和信息的查询分类，这个功能完全可以实现上述提到的图片分类，智能分类和查找的功能。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/372f3919c9b97c94d10a239caa2bc32f.png\" alt=\"请在此添加图片描述\"></p>\n<p>腾讯云也开放了控制台、SDK、cli等工具帮助用户快速检索和管理数据，只需要像操作文件管理器那样即可实现访问对象存储中的数据。</p>\n<h2 id=\"数据处理\"><a href=\"#数据处理\" class=\"headerlink\" title=\"数据处理\"></a>数据处理</h2><p>一些照片、视频，原始的文件可能很大，我们并不需要太高分辨率或者太高画质的内容，一些人眼察觉不到的细节没必要进行保留，腾讯云对象存储与数据万象这两个产品相辅相成构成了数据处理生态圈。</p>\n<p>使用数据万象CI，可以对对象存储里面的数据进行处理，包括压缩图片，转码视频，甚至是音频降噪、人声分离、超分辨率、提取精彩锦集等丰富的功能，而且可以批量在云端一键处理，降低了操作门槛。</p>\n<h1 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h1><h2 id=\"产品价格和计划\"><a href=\"#产品价格和计划\" class=\"headerlink\" title=\"产品价格和计划\"></a>产品价格和计划</h2><p>在开通之前，大家应该对价格更加敏感，腾讯云对象存储提供多样化的购买方式，这里以预付费（资源包）的形式，为大家介绍需要购买的类型。</p>\n<p>计费内容可参考此文档：<a href=\"https://cloud.tencent.com/document/product/436/16871#.E8.AE.A1.E8.B4.B9.E9.A1.B9\">https://cloud.tencent.com/document/product/436/16871#.E8.AE.A1.E8.B4.B9.E9.A1.B9</a></p>\n<p>对于经常交换的数据，以标准存储来说，用到最多的是<strong>标准存储容量包、外网下行流量包或CDN回源流量包</strong>。如果是直接从COS下载的，则使用外网下行流量包，如果是通过CDN的，则使用CDN回源流量包，具体方案可以参考：<a href=\"https://cloud.tencent.com/developer/article/2066053\">COS+CVM+CDN 实现低成本高效率往返传输数据</a>。就以100G每个月来说，标准存储容量资源包是8.4元，一年大概100元，如果每个月下载20G流量，一年的资源包大概在41.4元左右</p>\n<p>对于长期存放不怎么使用的冷数据，使用的是归档存储，包括<strong>深度归档存储 或 归档存储</strong>两个类型的容量资源包，取决于存放的时间和取回的速度，如果只放个一两年，而且一年要读取十次以上，建议使用归档存储类的容量包，反之。数据取回也需要费用，采用的是后付费的模式，可参考：<a href=\"https://cloud.tencent.com/document/product/436/53862\">https://cloud.tencent.com/document/product/436/53862</a>。深度归档存储的容量包价格十分便宜，1TB的数据每个月只需要10.24元，非常适合长期和大量存储。</p>\n<p>数据处理方面，腾讯云每个月会免费发放10TB的基础图片处理包，例如对图片进行裁剪、缩放、水印、获取信息等基础处理。如果是AI功能，超分辨率等高级处理功能，则按照不同场景收取不同资源包的费用。</p>\n<p>要注意的是，开通时会附赠免费额度，可以用来体验产品。并且正值618时期，腾讯云的对象存储产品活动力度非常大，首单用户100GB容量包一年仅需29元，配合CDN产品进行加速是更好的选择，CDN产品流量1TB半年仅88元。老用户88元还可以选择200G容量包与外网下行流量包</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/8e9196ca83386bd9bdd9ed0c4f8a013d.png\" alt=\"请在此添加图片描述\"></p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/86e79fed3d96668e69a8d0886190a20b.png\" alt=\"请在此添加图片描述\"></p>\n<h2 id=\"开通使用\"><a href=\"#开通使用\" class=\"headerlink\" title=\"开通使用\"></a>开通使用</h2><p>初次使用对象存储，需要进入到对象存储控制台进行开通操作：<a href=\"https://console.cloud.tencent.com/cos/\">点此进入</a></p>\n<p>开通完毕后将会发放对应的免费额度使用。</p>\n<h2 id=\"新建存储桶\"><a href=\"#新建存储桶\" class=\"headerlink\" title=\"新建存储桶\"></a>新建存储桶</h2><p>存储桶相当于一块硬盘分的区，例如D盘E盘，用于存放文件。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/cb135611b992a79d08423da15c925d29.png\" alt=\"请在此添加图片描述\"></p>\n<p>地域最好选择距离客户端近的地方，减少网络延迟。存储桶名称可以自定义，权限根据需要，这里默认设置为私有读写保证数据的安全。</p>\n<h2 id=\"上传文件\"><a href=\"#上传文件\" class=\"headerlink\" title=\"上传文件\"></a>上传文件</h2><p>上传文件可以使用网页控制台，COSBrowser电脑端和手机端等方式</p>\n<h3 id=\"控制台\"><a href=\"#控制台\" class=\"headerlink\" title=\"控制台\"></a>控制台</h3><p>控制台只需要进入到存储桶，直接点击上传即可</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/98f9e408f48967d1d75a2241779bc95d.png\" alt=\"请在此添加图片描述\"></p>\n<h3 id=\"COSBrowser\"><a href=\"#COSBrowser\" class=\"headerlink\" title=\"COSBrowser\"></a>COSBrowser</h3><p>进入<a href=\"https://cosbrowser.cloud.tencent.com/\">COSBrowser官网</a>，根据平台下载对应版本</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/71b7d554b0d64b2ce1b8be45ce81b8fe.png\" alt=\"请在此添加图片描述\"></p>\n<p>打开后可以选择使用秘钥登录或直接使用腾讯云账号登录</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/a9cc69ce2e80e6d919f1ad9ef84a7e76.png\" alt=\"请在此添加图片描述\"></p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/7a2ab2a3c17fc04d186746cf9f30df51.png\" alt=\"请在此添加图片描述\"></p>\n<p>文件操作与控制台类似，这里不再赘述。</p>\n<h2 id=\"数据处理开通\"><a href=\"#数据处理开通\" class=\"headerlink\" title=\"数据处理开通\"></a>数据处理开通</h2><p>如果需要用到数据处理功能，需要在存储桶内数据处理模块进行开通；在控制台内打开存储桶，点击数据处理标签页，找到需要开通的功能后点击右侧“立即使用数据万象”，授权后即可开通</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/1d8a5533e75b9c4c8b668fd67fb42d1f.png\" alt=\"请在此添加图片描述\"></p>\n<p>至此，对象存储基本的功能已经介绍完毕，接下来将针对片头提到的几个场景来做对应的配置。</p>\n<h1 id=\"自动备份\"><a href=\"#自动备份\" class=\"headerlink\" title=\"自动备份\"></a>自动备份</h1><h2 id=\"手机相册备份\"><a href=\"#手机相册备份\" class=\"headerlink\" title=\"手机相册备份\"></a>手机相册备份</h2><p>自动备份需要使用COSBrowser客户端，在手机上打开COSBrowser客户端，点击相册-去设置。</p>\n<p>将基本设置配置完毕后保存，在空闲时间将会自动上传相册到对应地域的存储桶中。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/d0066ce403e2c50e9dad3dbaf168a048.png\" alt=\"请在此添加图片描述\"></p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/0e7f892071f69394e8c7ad6fa556c218.png\" alt=\"请在此添加图片描述\"></p>\n<p>同时电脑端也可以查看上传的相册，只需要点开对应的存储桶即可查看。</p>\n<h2 id=\"电脑文件备份\"><a href=\"#电脑文件备份\" class=\"headerlink\" title=\"电脑文件备份\"></a>电脑文件备份</h2><p>打开COSBrowser客户端，点击右上角的工具箱，选择文件同步</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/e3f9e5e56bca795e9d2044f20a131aff.png\" alt=\"请在此添加图片描述\"></p>\n<p>本地文件夹选择需要上传的文件夹，存储桶根据自己的设置来选择，后面的路径设置表示存储到存储桶的哪个目录下。同步类型选择自动同步</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/c95c8178ac6a959d761040a782988c18.png\" alt=\"请在此添加图片描述\"></p>\n<p>这样在文件夹里面新增或图片，对象存储就会自动上传以备份</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/e0ed8cbfe2572eb07ed00b2ed3a6db95.png\" alt=\"请在此添加图片描述\"></p>\n<h1 id=\"空间管理\"><a href=\"#空间管理\" class=\"headerlink\" title=\"空间管理\"></a>空间管理</h1><p>我们当然不希望保存的成本太高，比如上面说的要分类存储，在cos控制台和COSBrowser客户端都能直接进行设置</p>\n<h2 id=\"存储类型\"><a href=\"#存储类型\" class=\"headerlink\" title=\"存储类型\"></a>存储类型</h2><p>在控制台，点击文件右侧的详情，找到存储类型，修改为指定类型即可</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/d06b1533e983ed512d63661a1c11d537.png\" alt=\"请在此添加图片描述\"></p>\n<p>COSBrowser方法类似，选中文件，点击上方的更多-修改存储类型即可。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/368f63e5476897ccd3b7b314446947ec.png\" alt=\"请在此添加图片描述\"></p>\n<p>手机端无法进行设置，建议使用电脑。</p>\n<h2 id=\"数据处理-1\"><a href=\"#数据处理-1\" class=\"headerlink\" title=\"数据处理\"></a>数据处理</h2><p>对于一些图片和视频，可以使用腾讯云数据万象的转码和压缩功能，在开通图片处理后，进入到存储桶内任务与工作流标签中，这里以图片处理为例，首先在图片处理部分新建任务</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/ea18dc859e3e1460e32e0358daf39a62.png\" alt=\"请在此添加图片描述\"></p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/a5a7de4d7f027f589334df986756618b.png\" alt=\"请在此添加图片描述\"></p>\n<p>如果没有模板，需要先创建模板，在里面可以配置各种图片处理功能，这里就以压缩为例，图片画质压缩到最大宽度4096的分辨率，转为jpg，95%的质量，配置如图</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/81f509786c499a9d148cbb820ef6072e.png\" alt=\"请在此添加图片描述\"></p>\n<p>模板名称自定。</p>\n<p>回到任务创建中，选择刚刚设置的模板，存储桶按需要任意选择，可以是本存储桶，也可以是其他的，包括存储的路径。</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/c2f4553bd13b0a61d50602a74ba7d091.png\" alt=\"请在此添加图片描述\"></p>\n<p>点击确定即可开始执行</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/1c45532b1db34557c5dd307364864869.png\" alt=\"请在此添加图片描述\"></p>\n<h2 id=\"批量处理\"><a href=\"#批量处理\" class=\"headerlink\" title=\"批量处理\"></a>批量处理</h2><p>批量处理则可以使用工作流，设置一个处理的工作流，例如对图片压缩的同时又对图片加水印，对视频压缩并且转码加水印等。</p>\n<p>在工作流的页面点击创建工作流，根据需要自行设置</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/217c462987e46c23066ae1b5a6748aff.png\" alt=\"请在此添加图片描述\"></p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/bd10095cc2207f20034f9462905f6edd.png\" alt=\"请在此添加图片描述\"></p>\n<p>创建完毕后进入到批量数据处理面板，点击创建批量数据处理任务</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/f8cb6b6b8aab1aec5c691df3a396efdc.png\" alt=\"请在此添加图片描述\"></p>\n<p>如图所示创建任务，确定后即可开始执行。</p>\n<h1 id=\"数据管理-1\"><a href=\"#数据管理-1\" class=\"headerlink\" title=\"数据管理\"></a>数据管理</h1><p>要查看用了多少，还剩多少以及费用多少，可以进到使用统计面板中</p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/7d38da0679ae81a19e31e1482fa39368.png\" alt=\"请在此添加图片描述\"></p>\n<p>在这里能够直观地看到已经使用的数据量。在资源包管理面板可以看到资源包剩余量与新购资源包的入口。</p>\n<p>要注意，资源包快用满时建议升配或购买，避免产生不必要的账单。</p>\n<h1 id=\"安全建议\"><a href=\"#安全建议\" class=\"headerlink\" title=\"安全建议\"></a>安全建议</h1><ul>\n<li>如果是个人备份使用，建议将存储桶均设置为<strong>私有读写</strong>，这样数据只有自己能够访问，其他人无法访问。</li>\n<li>如果需要分享出去的，建议使用腾讯云控制台对象详情内的生成临时链接，在有效期内才能下载，避免长期分享被人刷流量和盗取资源。</li>\n<li>不要分享账号或SecretId&#x2F;SecretKey给陌生人，防止数据泄露。</li>\n<li>为了避免误删导致数据丢失，可以开启历史版本、多地域复制容灾等功能，不过会增加一定的费用，根据需要自己选择。</li>\n</ul>\n<p>到此，COS实现备份的功能介绍就到此结束，最后别忘了腾讯云在618推出了一系列促销活动，优惠力度巨大，尤其是刚入门腾讯云的“小白”们，这是一次不错的机会，用最低的价格体验腾讯云的产品。详情请戳<a href=\"https://mc.tencent.com/1GbY1xxu\">618活动页面</a></p>\n<p><img src=\"https://st2-res.arsrna.cn/2424242/a367cb4ca2cd169fec291adcc3a57077.png\" alt=\"请在此添加图片描述\"></p>\n"},{"title":"【云函数SCF】浏览器请求函数URL，实现CORS","author":"Ar-Sr-Na","authorLink":"https://www.arsrna.cn","authorAbout":"突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn","authorDesc":"突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn","comments":0,"date":"2024-08-30T16:00:00.000Z","keywords":"云函数,CORS,跨域,后端","description":"云函数可以让业务部署更快速更轻松，但作为HTTP触发器的API网关下架了，取而代之的是成本更高的TSE，如何使用函数自带URL，实现API网关的CORS功能。","index_img":"https://st2-res.arsrna.cn/2448677/3a6b3081a078d552e76df74f0c6ada1a.png","_content":"\n# 前言\n​\n\n云函数可以让业务部署更快速更轻松，对于我来说，部署API非常方便，在以前API网关就担任了HTTP触发器的功能，不过在今年7月，API网关宣布了下架的消息，转而使用TSE云原生网关，不过对于我们业务量不大的用户来说，TSE的价格实在承担不起，而且很多功能也用不上\n\n我们使用API网关的场景也就是路径，自定义域名，透传body，header，query等http参数，以及自定义验证等等功能，实际上，这些可以直接在业务函数里面集成。\n\n函数本身自带一个触发URL，更多的还是纯为API设计的，因为不支持浏览器预览，而且唯一的作用就是触发函数仅此而已。\n\n# 踩坑\n\n函数的内容仅仅是返回event对象\n\n```js\nexports.main_handler =async (event, context) => {\n      return event;\n}\n```\n\n使用APIFox，能够正常返回响应\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2448677/7a99b0f971d2b0b1b89ae2fc830d16e8.png)\n\n```json\n{\n    \"body\": \"\",\n    \"headers\": {\n        \"accept\": \"*/*\",\n        \"accept-encoding\": \"gzip, deflate, br\",\n        \"connection\": \"keep-alive\",\n        \"token\": \"xxxxxxxxx\",\n        \"user-agent\": \"Apifox/1.0.0 (https://apifox.com)\",\n        \"x-scf-request-id\": \"52a7f5b2-xxxxxxx-xxxx-xxxxxxxx-525400df965c\"\n    },\n    \"httpMethod\": \"GET\",\n    \"path\": \"/\",\n    \"queryString\": {}\n}\n```\n\n但当使用浏览器发起`fetch/XHR`时，就出现错误了：\n\nAccess to fetch xxxxxxxxxxxxx from origin 'http://127.0.0.1:3000\" has been blocked by CORS policy: Response to preflight request doesn't pass access control check: NoAccess-Control-Allow-Origin\" header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2448677/3a6b3081a078d552e76df74f0c6ada1a.png)\n\n意思就是浏览器被CORS拦了\n\n# 问题和解决\n\n## 产生的原因\n\n具体产生的原因可以参考：[跨源资源共享（CORS）](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS)，[【秒杀】前端网络-CORS](https://cloud.tencent.com/developer/article/2403362)\n\n简言之，浏览器判断CORS能否通过，就靠那几个靠响应头，简单请求时看`Access-Control-Allow-Origin`是否存在发送请求时的域，非简单请求时检查`Access-Control-Allow-Headers`，`Access-Control-Allow-Methods`，`Access-Control-Allow-Origin`等。\n\n所以要能让浏览器正常请求，就需要函数返回能够让浏览器通过CORS检查的响应头。\n\n## 云函数侧解决\n\n云函数部分可以通过返回类似下图结构的内容，实现自定义参数的设置。\n\n主要关注header部分\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2448677/108dbd139096e42c848605eb65d46523.png)\n\n在返回时，带上这几个header，即可让浏览器通过CORS\n\n这是一个示例，例如我想从`https://a.com`和`https://b.com`，给我的函数URL发送带有请求头`token`的，支持POST、PUT、GET的请求\n\n```js\n......\nreturn {\n   \"statusCode\": 200,\n    \"headers\": {\n        \"Content-Type\": \"application/json\",\n        // CORS所需响应头\n        \"Access-Control-Allow-Origin\": \"https://a.com,https://b.com\",\n        \"Access-Control-Allow-Methods\": \"POST,PUT,GET\",\n        \"Access-Control-Allow-Headers\": \"token\",\n        // 其他需要响应回去的头\n        \"My-Header\": \"MyValue\"\n    },\n    \"body\": JSON.stringify({\n        \"message\": \"Hello, world!\"\n    })\n}\n```\n\n整个event函数如下：\n\n```js\nexports.main_handler = async (event, context) => {\n    return {\n        \"statusCode\": 200,\n        \"headers\": {\n            \"Content-Type\": \"application/json\",\n            // CORS所需响应头\n            \"Access-Control-Allow-Origin\": \"https://a.com,https://b.com\",\n            \"Access-Control-Allow-Methods\": \"POST,PUT,GET\",\n            \"Access-Control-Allow-Headers\": \"token\",\n            // 其他需要响应回去的头\n            \"My-Header\": \"MyValue\"\n        },\n        \"body\": JSON.stringify({\n            message: \"Hello World\"\n        })\n    }\n}\n```\n\n这时，从浏览器侧调用fetch/XHR云函数的URL，就可以正常访问了\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2448677/5a404384ac2a595be869a2639a2a2b10.png)\n\n关于响应头更多设置，可参考[HTTP 响应标头字段(MDN)](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS#http_%25E5%2593%258D%25E5%25BA%2594%25E6%25A0%2587%25E5%25A4%25B4%25E5%25AD%2597%25E6%25AE%25B5)\n\n# 归纳总结\n\n出现浏览器CORS报错的问题，十有八九是因为响应头出问题了，如果你是前端，看看发送的参数有没有问题，是否遵循公司内接口文档的规范；如果你是后端，看看给回去的响应头有没有给前端配置对应的CORS头。\n\n# Reference\n\n- [1] 跨源资源共享（CORS） [https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS)\n- [2] 云函数URL概述 [https://cloud.tencent.com/document/product/583/96099](https://cloud.tencent.com/document/product/583/96099)","source":"_posts/2448677.md","raw":"---\ntitle: 【云函数SCF】浏览器请求函数URL，实现CORS\nauthor: Ar-Sr-Na\nauthorLink: https://www.arsrna.cn\nauthorAbout: 突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn\nauthorDesc: 突破计算边界，连接数字世界，计算赋能无限 www.arsrna.cn\ncomments: false\ndate: 2024-8-31\ncategories: 技术\ntags:  云函数,CORS,跨域,后端\nkeywords:  云函数,CORS,跨域,后端\ndescription: 云函数可以让业务部署更快速更轻松，但作为HTTP触发器的API网关下架了，取而代之的是成本更高的TSE，如何使用函数自带URL，实现API网关的CORS功能。\nindex_img: https://st2-res.arsrna.cn/2448677/3a6b3081a078d552e76df74f0c6ada1a.png\n---\n\n# 前言\n​\n\n云函数可以让业务部署更快速更轻松，对于我来说，部署API非常方便，在以前API网关就担任了HTTP触发器的功能，不过在今年7月，API网关宣布了下架的消息，转而使用TSE云原生网关，不过对于我们业务量不大的用户来说，TSE的价格实在承担不起，而且很多功能也用不上\n\n我们使用API网关的场景也就是路径，自定义域名，透传body，header，query等http参数，以及自定义验证等等功能，实际上，这些可以直接在业务函数里面集成。\n\n函数本身自带一个触发URL，更多的还是纯为API设计的，因为不支持浏览器预览，而且唯一的作用就是触发函数仅此而已。\n\n# 踩坑\n\n函数的内容仅仅是返回event对象\n\n```js\nexports.main_handler =async (event, context) => {\n      return event;\n}\n```\n\n使用APIFox，能够正常返回响应\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2448677/7a99b0f971d2b0b1b89ae2fc830d16e8.png)\n\n```json\n{\n    \"body\": \"\",\n    \"headers\": {\n        \"accept\": \"*/*\",\n        \"accept-encoding\": \"gzip, deflate, br\",\n        \"connection\": \"keep-alive\",\n        \"token\": \"xxxxxxxxx\",\n        \"user-agent\": \"Apifox/1.0.0 (https://apifox.com)\",\n        \"x-scf-request-id\": \"52a7f5b2-xxxxxxx-xxxx-xxxxxxxx-525400df965c\"\n    },\n    \"httpMethod\": \"GET\",\n    \"path\": \"/\",\n    \"queryString\": {}\n}\n```\n\n但当使用浏览器发起`fetch/XHR`时，就出现错误了：\n\nAccess to fetch xxxxxxxxxxxxx from origin 'http://127.0.0.1:3000\" has been blocked by CORS policy: Response to preflight request doesn't pass access control check: NoAccess-Control-Allow-Origin\" header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2448677/3a6b3081a078d552e76df74f0c6ada1a.png)\n\n意思就是浏览器被CORS拦了\n\n# 问题和解决\n\n## 产生的原因\n\n具体产生的原因可以参考：[跨源资源共享（CORS）](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS)，[【秒杀】前端网络-CORS](https://cloud.tencent.com/developer/article/2403362)\n\n简言之，浏览器判断CORS能否通过，就靠那几个靠响应头，简单请求时看`Access-Control-Allow-Origin`是否存在发送请求时的域，非简单请求时检查`Access-Control-Allow-Headers`，`Access-Control-Allow-Methods`，`Access-Control-Allow-Origin`等。\n\n所以要能让浏览器正常请求，就需要函数返回能够让浏览器通过CORS检查的响应头。\n\n## 云函数侧解决\n\n云函数部分可以通过返回类似下图结构的内容，实现自定义参数的设置。\n\n主要关注header部分\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2448677/108dbd139096e42c848605eb65d46523.png)\n\n在返回时，带上这几个header，即可让浏览器通过CORS\n\n这是一个示例，例如我想从`https://a.com`和`https://b.com`，给我的函数URL发送带有请求头`token`的，支持POST、PUT、GET的请求\n\n```js\n......\nreturn {\n   \"statusCode\": 200,\n    \"headers\": {\n        \"Content-Type\": \"application/json\",\n        // CORS所需响应头\n        \"Access-Control-Allow-Origin\": \"https://a.com,https://b.com\",\n        \"Access-Control-Allow-Methods\": \"POST,PUT,GET\",\n        \"Access-Control-Allow-Headers\": \"token\",\n        // 其他需要响应回去的头\n        \"My-Header\": \"MyValue\"\n    },\n    \"body\": JSON.stringify({\n        \"message\": \"Hello, world!\"\n    })\n}\n```\n\n整个event函数如下：\n\n```js\nexports.main_handler = async (event, context) => {\n    return {\n        \"statusCode\": 200,\n        \"headers\": {\n            \"Content-Type\": \"application/json\",\n            // CORS所需响应头\n            \"Access-Control-Allow-Origin\": \"https://a.com,https://b.com\",\n            \"Access-Control-Allow-Methods\": \"POST,PUT,GET\",\n            \"Access-Control-Allow-Headers\": \"token\",\n            // 其他需要响应回去的头\n            \"My-Header\": \"MyValue\"\n        },\n        \"body\": JSON.stringify({\n            message: \"Hello World\"\n        })\n    }\n}\n```\n\n这时，从浏览器侧调用fetch/XHR云函数的URL，就可以正常访问了\n\n![请在此添加图片描述](https://st2-res.arsrna.cn/2448677/5a404384ac2a595be869a2639a2a2b10.png)\n\n关于响应头更多设置，可参考[HTTP 响应标头字段(MDN)](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS#http_%25E5%2593%258D%25E5%25BA%2594%25E6%25A0%2587%25E5%25A4%25B4%25E5%25AD%2597%25E6%25AE%25B5)\n\n# 归纳总结\n\n出现浏览器CORS报错的问题，十有八九是因为响应头出问题了，如果你是前端，看看发送的参数有没有问题，是否遵循公司内接口文档的规范；如果你是后端，看看给回去的响应头有没有给前端配置对应的CORS头。\n\n# Reference\n\n- [1] 跨源资源共享（CORS） [https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS)\n- [2] 云函数URL概述 [https://cloud.tencent.com/document/product/583/96099](https://cloud.tencent.com/document/product/583/96099)","slug":"2448677","published":1,"updated":"2024-09-07T10:06:27.867Z","layout":"post","photos":[],"link":"","_id":"cm0rzd37v0000u8nd52cl5b82","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>​</p>\n<p>云函数可以让业务部署更快速更轻松，对于我来说，部署API非常方便，在以前API网关就担任了HTTP触发器的功能，不过在今年7月，API网关宣布了下架的消息，转而使用TSE云原生网关，不过对于我们业务量不大的用户来说，TSE的价格实在承担不起，而且很多功能也用不上</p>\n<p>我们使用API网关的场景也就是路径，自定义域名，透传body，header，query等http参数，以及自定义验证等等功能，实际上，这些可以直接在业务函数里面集成。</p>\n<p>函数本身自带一个触发URL，更多的还是纯为API设计的，因为不支持浏览器预览，而且唯一的作用就是触发函数仅此而已。</p>\n<h1 id=\"踩坑\"><a href=\"#踩坑\" class=\"headerlink\" title=\"踩坑\"></a>踩坑</h1><p>函数的内容仅仅是返回event对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-built_in\">exports</span>.<span class=\"hljs-property\">main_handler</span> =<span class=\"hljs-keyword\">async</span> (event, context) =&gt; &#123;<br>      <span class=\"hljs-keyword\">return</span> event;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>使用APIFox，能够正常返回响应</p>\n<p><img src=\"https://st2-res.arsrna.cn/2448677/7a99b0f971d2b0b1b89ae2fc830d16e8.png\" alt=\"请在此添加图片描述\"></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-attr\">&quot;body&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;headers&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-attr\">&quot;accept&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;*/*&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-attr\">&quot;accept-encoding&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;gzip, deflate, br&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-attr\">&quot;connection&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;keep-alive&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;xxxxxxxxx&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-attr\">&quot;user-agent&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Apifox/1.0.0 (https://apifox.com)&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-attr\">&quot;x-scf-request-id&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;52a7f5b2-xxxxxxx-xxxx-xxxxxxxx-525400df965c&quot;</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;httpMethod&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;GET&quot;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;path&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;/&quot;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;queryString&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<p>但当使用浏览器发起<code>fetch/XHR</code>时，就出现错误了：</p>\n<p>Access to fetch xxxxxxxxxxxxx from origin ‘<a href=\"http://127.0.0.1:3000&quot;\">http://127.0.0.1:3000&quot;</a> has been blocked by CORS policy: Response to preflight request doesn’t pass access control check: NoAccess-Control-Allow-Origin” header is present on the requested resource. If an opaque response serves your needs, set the request’s mode to ‘no-cors’ to fetch the resource with CORS disabled.</p>\n<p><img src=\"https://st2-res.arsrna.cn/2448677/3a6b3081a078d552e76df74f0c6ada1a.png\" alt=\"请在此添加图片描述\"></p>\n<p>意思就是浏览器被CORS拦了</p>\n<h1 id=\"问题和解决\"><a href=\"#问题和解决\" class=\"headerlink\" title=\"问题和解决\"></a>问题和解决</h1><h2 id=\"产生的原因\"><a href=\"#产生的原因\" class=\"headerlink\" title=\"产生的原因\"></a>产生的原因</h2><p>具体产生的原因可以参考：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS\">跨源资源共享（CORS）</a>，<a href=\"https://cloud.tencent.com/developer/article/2403362\">【秒杀】前端网络-CORS</a></p>\n<p>简言之，浏览器判断CORS能否通过，就靠那几个靠响应头，简单请求时看<code>Access-Control-Allow-Origin</code>是否存在发送请求时的域，非简单请求时检查<code>Access-Control-Allow-Headers</code>，<code>Access-Control-Allow-Methods</code>，<code>Access-Control-Allow-Origin</code>等。</p>\n<p>所以要能让浏览器正常请求，就需要函数返回能够让浏览器通过CORS检查的响应头。</p>\n<h2 id=\"云函数侧解决\"><a href=\"#云函数侧解决\" class=\"headerlink\" title=\"云函数侧解决\"></a>云函数侧解决</h2><p>云函数部分可以通过返回类似下图结构的内容，实现自定义参数的设置。</p>\n<p>主要关注header部分</p>\n<p><img src=\"https://st2-res.arsrna.cn/2448677/108dbd139096e42c848605eb65d46523.png\" alt=\"请在此添加图片描述\"></p>\n<p>在返回时，带上这几个header，即可让浏览器通过CORS</p>\n<p>这是一个示例，例如我想从<code>https://a.com</code>和<code>https://b.com</code>，给我的函数URL发送带有请求头<code>token</code>的，支持POST、PUT、GET的请求</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">......<br><span class=\"hljs-keyword\">return</span> &#123;<br>   <span class=\"hljs-string\">&quot;statusCode&quot;</span>: <span class=\"hljs-number\">200</span>,<br>    <span class=\"hljs-string\">&quot;headers&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;Content-Type&quot;</span>: <span class=\"hljs-string\">&quot;application/json&quot;</span>,<br>        <span class=\"hljs-comment\">// CORS所需响应头</span><br>        <span class=\"hljs-string\">&quot;Access-Control-Allow-Origin&quot;</span>: <span class=\"hljs-string\">&quot;https://a.com,https://b.com&quot;</span>,<br>        <span class=\"hljs-string\">&quot;Access-Control-Allow-Methods&quot;</span>: <span class=\"hljs-string\">&quot;POST,PUT,GET&quot;</span>,<br>        <span class=\"hljs-string\">&quot;Access-Control-Allow-Headers&quot;</span>: <span class=\"hljs-string\">&quot;token&quot;</span>,<br>        <span class=\"hljs-comment\">// 其他需要响应回去的头</span><br>        <span class=\"hljs-string\">&quot;My-Header&quot;</span>: <span class=\"hljs-string\">&quot;MyValue&quot;</span><br>    &#125;,<br>    <span class=\"hljs-string\">&quot;body&quot;</span>: <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(&#123;<br>        <span class=\"hljs-string\">&quot;message&quot;</span>: <span class=\"hljs-string\">&quot;Hello, world!&quot;</span><br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>整个event函数如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-built_in\">exports</span>.<span class=\"hljs-property\">main_handler</span> = <span class=\"hljs-keyword\">async</span> (event, context) =&gt; &#123;<br>    <span class=\"hljs-keyword\">return</span> &#123;<br>        <span class=\"hljs-string\">&quot;statusCode&quot;</span>: <span class=\"hljs-number\">200</span>,<br>        <span class=\"hljs-string\">&quot;headers&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;Content-Type&quot;</span>: <span class=\"hljs-string\">&quot;application/json&quot;</span>,<br>            <span class=\"hljs-comment\">// CORS所需响应头</span><br>            <span class=\"hljs-string\">&quot;Access-Control-Allow-Origin&quot;</span>: <span class=\"hljs-string\">&quot;https://a.com,https://b.com&quot;</span>,<br>            <span class=\"hljs-string\">&quot;Access-Control-Allow-Methods&quot;</span>: <span class=\"hljs-string\">&quot;POST,PUT,GET&quot;</span>,<br>            <span class=\"hljs-string\">&quot;Access-Control-Allow-Headers&quot;</span>: <span class=\"hljs-string\">&quot;token&quot;</span>,<br>            <span class=\"hljs-comment\">// 其他需要响应回去的头</span><br>            <span class=\"hljs-string\">&quot;My-Header&quot;</span>: <span class=\"hljs-string\">&quot;MyValue&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;body&quot;</span>: <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(&#123;<br>            <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Hello World&quot;</span><br>        &#125;)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>这时，从浏览器侧调用fetch&#x2F;XHR云函数的URL，就可以正常访问了</p>\n<p><img src=\"https://st2-res.arsrna.cn/2448677/5a404384ac2a595be869a2639a2a2b10.png\" alt=\"请在此添加图片描述\"></p>\n<p>关于响应头更多设置，可参考<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS#http_%25E5%2593%258D%25E5%25BA%2594%25E6%25A0%2587%25E5%25A4%25B4%25E5%25AD%2597%25E6%25AE%25B5\">HTTP 响应标头字段(MDN)</a></p>\n<h1 id=\"归纳总结\"><a href=\"#归纳总结\" class=\"headerlink\" title=\"归纳总结\"></a>归纳总结</h1><p>出现浏览器CORS报错的问题，十有八九是因为响应头出问题了，如果你是前端，看看发送的参数有没有问题，是否遵循公司内接口文档的规范；如果你是后端，看看给回去的响应头有没有给前端配置对应的CORS头。</p>\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><ul>\n<li>[1] 跨源资源共享（CORS） <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS\">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS</a></li>\n<li>[2] 云函数URL概述 <a href=\"https://cloud.tencent.com/document/product/583/96099\">https://cloud.tencent.com/document/product/583/96099</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>​</p>\n<p>云函数可以让业务部署更快速更轻松，对于我来说，部署API非常方便，在以前API网关就担任了HTTP触发器的功能，不过在今年7月，API网关宣布了下架的消息，转而使用TSE云原生网关，不过对于我们业务量不大的用户来说，TSE的价格实在承担不起，而且很多功能也用不上</p>\n<p>我们使用API网关的场景也就是路径，自定义域名，透传body，header，query等http参数，以及自定义验证等等功能，实际上，这些可以直接在业务函数里面集成。</p>\n<p>函数本身自带一个触发URL，更多的还是纯为API设计的，因为不支持浏览器预览，而且唯一的作用就是触发函数仅此而已。</p>\n<h1 id=\"踩坑\"><a href=\"#踩坑\" class=\"headerlink\" title=\"踩坑\"></a>踩坑</h1><p>函数的内容仅仅是返回event对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-built_in\">exports</span>.<span class=\"hljs-property\">main_handler</span> =<span class=\"hljs-keyword\">async</span> (event, context) =&gt; &#123;<br>      <span class=\"hljs-keyword\">return</span> event;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>使用APIFox，能够正常返回响应</p>\n<p><img src=\"https://st2-res.arsrna.cn/2448677/7a99b0f971d2b0b1b89ae2fc830d16e8.png\" alt=\"请在此添加图片描述\"></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-attr\">&quot;body&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;headers&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-attr\">&quot;accept&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;*/*&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-attr\">&quot;accept-encoding&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;gzip, deflate, br&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-attr\">&quot;connection&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;keep-alive&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;xxxxxxxxx&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-attr\">&quot;user-agent&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Apifox/1.0.0 (https://apifox.com)&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-attr\">&quot;x-scf-request-id&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;52a7f5b2-xxxxxxx-xxxx-xxxxxxxx-525400df965c&quot;</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;httpMethod&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;GET&quot;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;path&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;/&quot;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;queryString&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<p>但当使用浏览器发起<code>fetch/XHR</code>时，就出现错误了：</p>\n<p>Access to fetch xxxxxxxxxxxxx from origin ‘<a href=\"http://127.0.0.1:3000&quot;\">http://127.0.0.1:3000&quot;</a> has been blocked by CORS policy: Response to preflight request doesn’t pass access control check: NoAccess-Control-Allow-Origin” header is present on the requested resource. If an opaque response serves your needs, set the request’s mode to ‘no-cors’ to fetch the resource with CORS disabled.</p>\n<p><img src=\"https://st2-res.arsrna.cn/2448677/3a6b3081a078d552e76df74f0c6ada1a.png\" alt=\"请在此添加图片描述\"></p>\n<p>意思就是浏览器被CORS拦了</p>\n<h1 id=\"问题和解决\"><a href=\"#问题和解决\" class=\"headerlink\" title=\"问题和解决\"></a>问题和解决</h1><h2 id=\"产生的原因\"><a href=\"#产生的原因\" class=\"headerlink\" title=\"产生的原因\"></a>产生的原因</h2><p>具体产生的原因可以参考：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS\">跨源资源共享（CORS）</a>，<a href=\"https://cloud.tencent.com/developer/article/2403362\">【秒杀】前端网络-CORS</a></p>\n<p>简言之，浏览器判断CORS能否通过，就靠那几个靠响应头，简单请求时看<code>Access-Control-Allow-Origin</code>是否存在发送请求时的域，非简单请求时检查<code>Access-Control-Allow-Headers</code>，<code>Access-Control-Allow-Methods</code>，<code>Access-Control-Allow-Origin</code>等。</p>\n<p>所以要能让浏览器正常请求，就需要函数返回能够让浏览器通过CORS检查的响应头。</p>\n<h2 id=\"云函数侧解决\"><a href=\"#云函数侧解决\" class=\"headerlink\" title=\"云函数侧解决\"></a>云函数侧解决</h2><p>云函数部分可以通过返回类似下图结构的内容，实现自定义参数的设置。</p>\n<p>主要关注header部分</p>\n<p><img src=\"https://st2-res.arsrna.cn/2448677/108dbd139096e42c848605eb65d46523.png\" alt=\"请在此添加图片描述\"></p>\n<p>在返回时，带上这几个header，即可让浏览器通过CORS</p>\n<p>这是一个示例，例如我想从<code>https://a.com</code>和<code>https://b.com</code>，给我的函数URL发送带有请求头<code>token</code>的，支持POST、PUT、GET的请求</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">......<br><span class=\"hljs-keyword\">return</span> &#123;<br>   <span class=\"hljs-string\">&quot;statusCode&quot;</span>: <span class=\"hljs-number\">200</span>,<br>    <span class=\"hljs-string\">&quot;headers&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;Content-Type&quot;</span>: <span class=\"hljs-string\">&quot;application/json&quot;</span>,<br>        <span class=\"hljs-comment\">// CORS所需响应头</span><br>        <span class=\"hljs-string\">&quot;Access-Control-Allow-Origin&quot;</span>: <span class=\"hljs-string\">&quot;https://a.com,https://b.com&quot;</span>,<br>        <span class=\"hljs-string\">&quot;Access-Control-Allow-Methods&quot;</span>: <span class=\"hljs-string\">&quot;POST,PUT,GET&quot;</span>,<br>        <span class=\"hljs-string\">&quot;Access-Control-Allow-Headers&quot;</span>: <span class=\"hljs-string\">&quot;token&quot;</span>,<br>        <span class=\"hljs-comment\">// 其他需要响应回去的头</span><br>        <span class=\"hljs-string\">&quot;My-Header&quot;</span>: <span class=\"hljs-string\">&quot;MyValue&quot;</span><br>    &#125;,<br>    <span class=\"hljs-string\">&quot;body&quot;</span>: <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(&#123;<br>        <span class=\"hljs-string\">&quot;message&quot;</span>: <span class=\"hljs-string\">&quot;Hello, world!&quot;</span><br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>整个event函数如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-built_in\">exports</span>.<span class=\"hljs-property\">main_handler</span> = <span class=\"hljs-keyword\">async</span> (event, context) =&gt; &#123;<br>    <span class=\"hljs-keyword\">return</span> &#123;<br>        <span class=\"hljs-string\">&quot;statusCode&quot;</span>: <span class=\"hljs-number\">200</span>,<br>        <span class=\"hljs-string\">&quot;headers&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;Content-Type&quot;</span>: <span class=\"hljs-string\">&quot;application/json&quot;</span>,<br>            <span class=\"hljs-comment\">// CORS所需响应头</span><br>            <span class=\"hljs-string\">&quot;Access-Control-Allow-Origin&quot;</span>: <span class=\"hljs-string\">&quot;https://a.com,https://b.com&quot;</span>,<br>            <span class=\"hljs-string\">&quot;Access-Control-Allow-Methods&quot;</span>: <span class=\"hljs-string\">&quot;POST,PUT,GET&quot;</span>,<br>            <span class=\"hljs-string\">&quot;Access-Control-Allow-Headers&quot;</span>: <span class=\"hljs-string\">&quot;token&quot;</span>,<br>            <span class=\"hljs-comment\">// 其他需要响应回去的头</span><br>            <span class=\"hljs-string\">&quot;My-Header&quot;</span>: <span class=\"hljs-string\">&quot;MyValue&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;body&quot;</span>: <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(&#123;<br>            <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Hello World&quot;</span><br>        &#125;)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>这时，从浏览器侧调用fetch&#x2F;XHR云函数的URL，就可以正常访问了</p>\n<p><img src=\"https://st2-res.arsrna.cn/2448677/5a404384ac2a595be869a2639a2a2b10.png\" alt=\"请在此添加图片描述\"></p>\n<p>关于响应头更多设置，可参考<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS#http_%25E5%2593%258D%25E5%25BA%2594%25E6%25A0%2587%25E5%25A4%25B4%25E5%25AD%2597%25E6%25AE%25B5\">HTTP 响应标头字段(MDN)</a></p>\n<h1 id=\"归纳总结\"><a href=\"#归纳总结\" class=\"headerlink\" title=\"归纳总结\"></a>归纳总结</h1><p>出现浏览器CORS报错的问题，十有八九是因为响应头出问题了，如果你是前端，看看发送的参数有没有问题，是否遵循公司内接口文档的规范；如果你是后端，看看给回去的响应头有没有给前端配置对应的CORS头。</p>\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><ul>\n<li>[1] 跨源资源共享（CORS） <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS\">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS</a></li>\n<li>[2] 云函数URL概述 <a href=\"https://cloud.tencent.com/document/product/583/96099\">https://cloud.tencent.com/document/product/583/96099</a></li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clod0d6wt0009c0nd6gvb0fhf","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6wz000jc0nd5zjl352j"},{"post_id":"clod0d6wk0001c0nd4yqohhw1","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6x1000mc0nd6v050pnx"},{"post_id":"clod0d6ww000ec0ndfx7j44d0","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6x2000rc0nd1omqa147"},{"post_id":"clod0d6wr0006c0nd1po6hu56","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6x3000uc0ndew4l9oau"},{"post_id":"clod0d6x0000lc0ndeo9lbx7i","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6x4000wc0nd104baidi"},{"post_id":"clod0d6x2000pc0nddksq1tfw","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6x40010c0ndbpqlbydu"},{"post_id":"clod0d6wz000ic0nda0gcedjf","category_id":"clod0d6x1000nc0nd0hvb6szv","_id":"clod0d6x50013c0nd95kd0xan"},{"post_id":"clod0d6x50012c0nd691c6ukq","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6x7001ac0nd008h9mry"},{"post_id":"clod0d6x3000tc0nd1yls81iv","category_id":"clod0d6x4000xc0nd2tsdeqb8","_id":"clod0d6x7001dc0nddnujh8oh"},{"post_id":"clod0d6x60016c0nd9jw64ndf","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6x8001gc0ndgklgerzg"},{"post_id":"clod0d6xc001xc0nddn172kyc","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6xf0024c0nd203t2ysl"},{"post_id":"clod0d6xf0026c0nd8wvf4w08","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6xi002cc0ndec6a3p8s"},{"post_id":"clod0d6xi002bc0nd66r7gz6z","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6xk002kc0nd86821ptn"},{"post_id":"clod0d6xg0027c0nd087afpr8","category_id":"clod0d6xi002ac0nd0wp538k7","_id":"clod0d6xl002oc0nd6g8mh3rq"},{"post_id":"clod0d6xk002jc0nd36pk0ecv","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6xm002rc0nd58uxb0kk"},{"post_id":"clod0d6xl002nc0nd24dd5o1g","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6xm002tc0ndeaca803h"},{"post_id":"clod0d6xq002xc0nd3no1arao","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6xs0031c0nddv33310b"},{"post_id":"clod0d6xr002yc0nd040ddvli","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6xs0034c0nd9l8j3hks"},{"post_id":"clod0d6xr002zc0nd3ooy4evh","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6xt0037c0ndhabb0kds"},{"post_id":"clod0d6xr0030c0ndbn0shjbl","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6xu003ac0ndbkw79u4h"},{"post_id":"clod0d6xt0036c0nd8ogf176e","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6xv003ec0nda5sufqkt"},{"post_id":"clod0d6xt0038c0nd3avkeelb","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6xw003hc0ndfb9m7fa0"},{"post_id":"clod0d6xu003cc0nddck34o26","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6xw003kc0nd5l6tc608"},{"post_id":"clod0d6xv003gc0nd62mbauv6","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6xy003pc0nddo4s9w19"},{"post_id":"clod0d6xw003jc0ndgphqg8y4","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6xz003sc0nd3f1a6h34"},{"post_id":"clod0d6xx003mc0nd05jrbnxo","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6xz003vc0ndb5xv2qpg"},{"post_id":"clod0d6xx003oc0nd21j1cfe8","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6y0003yc0nd3v707tyc"},{"post_id":"clod0d6y00041c0nd7ukp3fpi","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clod0d6y10047c0ndauy7bevj"},{"post_id":"clsr3p3mf0000x4ndgojg1tqd","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clsr3p3mm0002x4ndek19dhvg"},{"post_id":"clufok5an0000zknd0j9phzzo","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clufok5av0003zkndbrlpg8dn"},{"post_id":"clufok5aq0001zknd1krp1zc4","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"clufok5aw0004zknde8nw17le"},{"post_id":"cm0rvcooh0000z8ndatzr9x6q","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"cm0rvfz520002z8nde7qk3s0q"},{"post_id":"cm0rzd37v0000u8nd52cl5b82","category_id":"clod0d6wq0004c0nd6qychgb9","_id":"cm0rzd38b0002u8nde5fnh1ck"}],"PostTag":[{"post_id":"clod0d6wo0003c0nd67gseag9","tag_id":"clod0d6ws0007c0nd31seenpu","_id":"clod0d6wy000gc0nd1ht162se"},{"post_id":"clod0d6wu000bc0ndbwyj0rjc","tag_id":"clod0d6wy000fc0nddx5n0uxy","_id":"clod0d6x3000sc0nd9b9bgc9s"},{"post_id":"clod0d6wz000ic0nda0gcedjf","tag_id":"clod0d6x2000qc0nd00bzgiky","_id":"clod0d6x4000zc0ndezkrbtxr"},{"post_id":"clod0d6x4000yc0ndc2zm5nv7","tag_id":"clod0d6wy000fc0nddx5n0uxy","_id":"clod0d6x50014c0nd9hx2ey5g"},{"post_id":"clod0d6x50015c0nddoblfru7","tag_id":"clod0d6x50011c0nd3sg0bhql","_id":"clod0d6x60018c0ndefyceqy2"},{"post_id":"clod0d6x3000vc0nd3nm55ldz","tag_id":"clod0d6x50011c0nd3sg0bhql","_id":"clod0d6x7001bc0nd20w7g6h6"},{"post_id":"clod0d6x60019c0ndhsf753ar","tag_id":"clod0d6wy000fc0nddx5n0uxy","_id":"clod0d6x7001ec0ndcphldp1e"},{"post_id":"clod0d6x50012c0nd691c6ukq","tag_id":"clod0d6x60017c0nd35laaphc","_id":"clod0d6x8001hc0ndcx972ddy"},{"post_id":"clod0d6x7001cc0ndfg3u1qg4","tag_id":"clod0d6wy000fc0nddx5n0uxy","_id":"clod0d6x8001jc0ndhfcx6kq0"},{"post_id":"clod0d6x8001fc0nda6cudcmf","tag_id":"clod0d6wy000fc0nddx5n0uxy","_id":"clod0d6x9001mc0nd98plf3jo"},{"post_id":"clod0d6x9001kc0nd15cn6gi0","tag_id":"clod0d6wy000fc0nddx5n0uxy","_id":"clod0d6xa001oc0nd36258nzx"},{"post_id":"clod0d6x9001nc0nd0l1d0tjr","tag_id":"clod0d6wy000fc0nddx5n0uxy","_id":"clod0d6xa001qc0nde11aeade"},{"post_id":"clod0d6xa001pc0ndcdqm4nhp","tag_id":"clod0d6wy000fc0nddx5n0uxy","_id":"clod0d6xb001sc0ndf9uab9dq"},{"post_id":"clod0d6x8001ic0nd7h0y7hhs","tag_id":"clod0d6x9001lc0nd3ijh0sxd","_id":"clod0d6xb001uc0nd6e4re6qe"},{"post_id":"clod0d6xa001rc0nd45hq93mx","tag_id":"clod0d6wy000fc0nddx5n0uxy","_id":"clod0d6xb001wc0ndbx0sfukg"},{"post_id":"clod0d6xb001tc0nd3ztdgcxd","tag_id":"clod0d6wy000fc0nddx5n0uxy","_id":"clod0d6xc001yc0ndg0ysd8wf"},{"post_id":"clod0d6xb001vc0nd08fjgris","tag_id":"clod0d6wy000fc0nddx5n0uxy","_id":"clod0d6xd0020c0nd5mthgds8"},{"post_id":"clod0d6xc001zc0nd77kz08qz","tag_id":"clod0d6wy000fc0nddx5n0uxy","_id":"clod0d6xd0022c0ndhr8zeguu"},{"post_id":"clod0d6xd0021c0ndgi568cmo","tag_id":"clod0d6wy000fc0nddx5n0uxy","_id":"clod0d6xf0025c0nd4bgf90n5"},{"post_id":"clod0d6xh0029c0nd2b94fqlg","tag_id":"clod0d6wy000fc0nddx5n0uxy","_id":"clod0d6xi002dc0ndfvm59fg6"},{"post_id":"clod0d6xf0026c0nd8wvf4w08","tag_id":"clod0d6xh0028c0nde7n92evq","_id":"clod0d6xj002gc0ndas1p7zkl"},{"post_id":"clod0d6xj002ec0nd6kv4264o","tag_id":"clod0d6wy000fc0nddx5n0uxy","_id":"clod0d6xk002ic0ndh3g97knr"},{"post_id":"clod0d6xj002hc0nd1yfg94pj","tag_id":"clod0d6wy000fc0nddx5n0uxy","_id":"clod0d6xl002mc0nd1cvi9wpj"},{"post_id":"clod0d6xg0027c0nd087afpr8","tag_id":"clod0d6xj002fc0nddtss21tv","_id":"clod0d6xl002pc0nd7y0xcteb"},{"post_id":"clod0d6xi002bc0nd66r7gz6z","tag_id":"clod0d6xk002lc0ndgfys1uly","_id":"clod0d6xm002sc0ndcimx8shu"},{"post_id":"clod0d6xk002jc0nd36pk0ecv","tag_id":"clod0d6xl002qc0ndaanehhko","_id":"clod0d6xm002vc0ndebqlgsts"},{"post_id":"clod0d6xl002nc0nd24dd5o1g","tag_id":"clod0d6xm002uc0ndb4qy8lwh","_id":"clod0d6xm002wc0nd8e5pgeo3"},{"post_id":"clod0d6xr0030c0ndbn0shjbl","tag_id":"clod0d6xl002qc0ndaanehhko","_id":"clod0d6xt0035c0nd6y9afmmh"},{"post_id":"clod0d6xr002zc0nd3ooy4evh","tag_id":"clod0d6xs0032c0ndgdv2dnl4","_id":"clod0d6xu003bc0nd1915931n"},{"post_id":"clod0d6xs0033c0nd53habxiy","tag_id":"clod0d6xu0039c0nd8db6c5q7","_id":"clod0d6xw003ic0nddhc437b7"},{"post_id":"clod0d6xt0036c0nd8ogf176e","tag_id":"clod0d6xv003fc0nda64ge3dl","_id":"clod0d6xx003nc0nd34vrfnmx"},{"post_id":"clod0d6xt0038c0nd3avkeelb","tag_id":"clod0d6xw003lc0nd5jee7y6x","_id":"clod0d6xz003tc0nd5z204b5y"},{"post_id":"clod0d6xy003rc0nd6a1c43ed","tag_id":"clod0d6wy000fc0nddx5n0uxy","_id":"clod0d6xz003wc0ndg2hygzaq"},{"post_id":"clod0d6xz003uc0nd7lvhge20","tag_id":"clod0d6wy000fc0nddx5n0uxy","_id":"clod0d6y00040c0nd0ghuh6v3"},{"post_id":"clod0d6xu003cc0nddck34o26","tag_id":"clod0d6xy003qc0nd76yc5r8m","_id":"clod0d6y10042c0nd0gi580jo"},{"post_id":"clod0d6y0003xc0ndapmj9pbe","tag_id":"clod0d6wy000fc0nddx5n0uxy","_id":"clod0d6y10045c0nd5xldhx0o"},{"post_id":"clod0d6xv003dc0ndgy90eiz3","tag_id":"clod0d6y0003zc0ndf9lcdupv","_id":"clod0d6y10046c0ndb1pwak3b"},{"post_id":"clod0d6y10043c0nd8bnkcuof","tag_id":"clod0d6wy000fc0nddx5n0uxy","_id":"clod0d6y10049c0nd1byvga46"},{"post_id":"clod0d6xv003gc0nd62mbauv6","tag_id":"clod0d6y10044c0nd8lz0fxd6","_id":"clod0d6y2004ac0ndds545f5c"},{"post_id":"clod0d6xx003mc0nd05jrbnxo","tag_id":"clod0d6y10048c0nddqwzhcq2","_id":"clod0d6y2004cc0nd23zh9nhz"},{"post_id":"clod0d6xx003oc0nd21j1cfe8","tag_id":"clod0d6y2004bc0ndgi5uc50j","_id":"clod0d6y2004dc0nda8rh11o7"},{"post_id":"clsr3p3mf0000x4ndgojg1tqd","tag_id":"clsr3p3mj0001x4ndbmii9r41","_id":"clsr3p3mm0003x4ndh6lm13sw"},{"post_id":"clufok5an0000zknd0j9phzzo","tag_id":"clufok5as0002zknd1jqpe0mh","_id":"clufok5aw0006zknddcnj4spy"},{"post_id":"clufok5aq0001zknd1krp1zc4","tag_id":"clufok5aw0005zknd4mcedwkr","_id":"clufok5ax0007zknd35896hiu"},{"post_id":"cm0rvcooh0000z8ndatzr9x6q","tag_id":"cm0rvfz510001z8ndfrrra8v4","_id":"cm0rvfz530003z8ndbymhb08y"},{"post_id":"cm0rzd37v0000u8nd52cl5b82","tag_id":"cm0rzd3810001u8ndfbmd1uhs","_id":"cm0rzd38c0003u8nd3o04bq61"}],"Tag":[{"name":"电子,科技","_id":"clod0d6ws0007c0nd31seenpu"},{"name":"未分类","_id":"clod0d6wy000fc0nddx5n0uxy"},{"name":"年度总结","_id":"clod0d6x2000qc0nd00bzgiky"},{"name":"学习中心-影视后期","_id":"clod0d6x50011c0nd3sg0bhql"},{"name":"渲染,shader,blender,原神,三渲二,NPR","_id":"clod0d6x60017c0nd35laaphc"},{"name":"素材归档","_id":"clod0d6x9001lc0nd3ijh0sxd"},{"name":"电子,设计,前级,HiFi","_id":"clod0d6xh0028c0nde7n92evq"},{"name":"杂谈","_id":"clod0d6xj002fc0nddtss21tv"},{"name":"硬件,电子,EDA,EDA软件,科技,二值化,技术","_id":"clod0d6xk002lc0ndgfys1uly"},{"name":"摄影,渲染,跟踪,对焦,3d,blender,焦距","_id":"clod0d6xl002qc0ndaanehhko"},{"name":"数据万象,对象存储,图像处理,大数据解决方案","_id":"clod0d6xm002uc0ndb4qy8lwh"},{"name":"GPU,云服务器渲染,blender","_id":"clod0d6xs0032c0ndgdv2dnl4"},{"name":"DNS 解析,Node.js,JavaScript,我永远喜欢布洛妮娅,DDNS,动态DNS,编程,公网,DNSPod,categories:,技术","_id":"clod0d6xu0039c0nd8db6c5q7"},{"name":"总结","_id":"clod0d6xv003fc0nda64ge3dl"},{"name":"AI,人工智能,GPU服务器,渲染,图像放大,加速,分布式,我永远喜欢布洛妮娅","_id":"clod0d6xw003lc0nd5jee7y6x"},{"name":"无缝加载,技术,websocket,前端,js","_id":"clod0d6xy003qc0nd76yc5r8m"},{"name":"CDN,COS,CVM,传输,成本优化","_id":"clod0d6y0003zc0ndf9lcdupv"},{"name":"js,cos,scf,edgeone,缓存,自动化,刷新,加速,静态网站","_id":"clod0d6y10044c0nd8lz0fxd6"},{"name":"Java,学习,Serverless,技术","_id":"clod0d6y10048c0nddqwzhcq2"},{"name":"MMD,3D,教程,物理,C4D,Blender","_id":"clod0d6y2004bc0ndgi5uc50j"},{"name":"前端,网络,技术,xhr,ajax,js","_id":"clsr3p3mj0001x4ndbmii9r41"},{"name":"前端,网络,技术,全栈,jwt,后端,js","_id":"clufok5as0002zknd1jqpe0mh"},{"name":"前端,网络,技术,全栈,CORS,js,ajax","_id":"clufok5aw0005zknd4mcedwkr"},{"name":"对象存储,备份,数据安全","_id":"cm0rvfz510001z8ndfrrra8v4"},{"name":"云函数,CORS,跨域,后端","_id":"cm0rzd3810001u8ndfbmd1uhs"}]}}